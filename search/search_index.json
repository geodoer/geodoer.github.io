{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Home","text":"<p>\u7b14\u8005\u5c31\u4e1a\u4e8e\u67d0GIS\u516c\u53f8\uff0c\u53c2\u4e0e\u51e0\u4f55\u7b97\u6cd5\u3001\u4e09\u7ef4GIS\u6e32\u67d3\u5f15\u64ce\u7b49\u76f8\u5173\u7814\u53d1\uff0c\u4e50\u4e8e\u8bb0\u5f55\u4e0e\u5206\u4eab\u77e5\u8bc6\u3002\u6709\u4e8b\u53ef\u90ae\u4ef6\u8054\u7cfb\uff1a geodoer@163.com\u3002</p>"},{"location":"#_1","title":"\u8054\u7cfb\u65b9\u5f0f","text":"<p>\u90ae\u4ef6\uff1a geodoer@163.com \u5fae\u4fe1\u516c\u4f17\u53f7\uff1a \u963f\u68cb\u6742\u8c08 \u3002\u6b22\u8fce\u5173\u6ce8\uff0c\u4e0d\u5b9a\u671f\u53d1\u5e03\u4f18\u8d28\u79d1\u666e\u6587\u7ae0\u3002</p> <p></p>"},{"location":"#_2","title":"\u7533\u660e","text":"<ol> <li>\u672c\u77e5\u8bc6\u5e93\u5185\u6587\u7ae0\u7686\u53ef\u8f6c\u53d1\uff0c\u4f46\u52a1\u5fc5\u52a0\u4e0a \u539f\u6587\u94fe\u63a5\u3002\u6587\u4e2d\u6807\u660e<code>todo</code>\u7684\u5185\u5bb9\u6682\u672a\u6574\u7406\uff0c\u82e5\u60f3\u52a0\u6025\uff0c\u53ef\u79c1\u4fe1\u50ac\u66f4\u3002</li> <li>\u7b14\u8005\u6c34\u5e73\u6709\u9650\uff0c\u82e5\u60a8\u53d1\u73b0\u95ee\u9898\uff0c\u6073\u8bf7\u6279\u8bc4\u6307\u6b63\u3002</li> <li>\u672c\u77e5\u8bc6\u5e93\u5b8c\u5168\u5f00\u6e90\uff0c\u5982\u679c\u5b83\u6709\u5e2e\u52a9\u5230\u60a8\uff0c\u53ef\u957f\u671f\u5173\u6ce8\u6211\u7684\u516c\u4f17\u53f7\uff0c\u6216\u8005\u8bf7\u6211\u559d\u676f\u5496\u5561\uff0c\u60a8\u7684\u652f\u6301\u5c06\u662f\u6211\u524d\u884c\u7684\u6700\u5927\u52a8\u529b\uff0c\u6211\u5c06\u5c3d\u529b\u7ef4\u6301\u77e5\u8bc6\u5e93\u7684\u5f00\u6e90\u3002</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/","title":"\u5750\u6807\u7cfb","text":"<p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>\u7a7a\u95f4\u53c2\u8003\u5927\u5168\uff08\u5305\u542b\u5404\u79cd\u7f16\u7801\uff09</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/#_1","title":"\u5750\u6807\u7cfb\u7f16\u7801","text":"<p>\u5750\u6807\u7cfb\u7684\u7f16\u7801\u6709\u597d\u51e0\u79cd\uff0c\u4f8b\u5982\uff1aWGS 84</p> \u540d\u79f0 \u8bf4\u660e Well Known Text(WKT) Proj4 EPSG GML"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/EPSG%E7%BC%96%E7%A0%81/","title":"EPSG\u7f16\u7801","text":"<p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>\u67e5\u770bepsg\u7f16\u7801</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/EPSG%E7%BC%96%E7%A0%81/#what","title":"What","text":"<p>EPSP</p> <ul> <li>\u82f1\u6587\u5168\u79f0\u662f\uff1aEuropean Petroleum Survey Group</li> <li>\u4e2d\u6587\u540d\u79f0\u662f\uff1a\u6b27\u6d32\u77f3\u6cb9\u8c03\u67e5\u7ec4\u7ec7</li> <li>\u8fd9\u4e2a\u7ec4\u7ec7\u6210\u7acb\u4e8e1986\u5e74\uff0c2005\u5e74\u5e76\u5165IOGP(International Association of Oil &amp; Gas Producers)\uff0c\u4e2d\u6587\u540d\u79f0\u4e3a\u56fd\u9645\u6cb9\u6c14\u751f\u4ea7\u8005\u534f\u4f1a</li> <li>EPSG\u5bf9\u4e16\u754c\u7684\u6bcf\u4e00\u4e2a\u5730\u65b9\u90fd\u5236\u5b9a\u4e86\u5730\u56fe\uff0c\u4f46\u662f\u7531\u4e8e\u5750\u6807\u6807\u7cfb\u4e0d\u540c\uff0c\u6240\u4ee5\u5730\u56fe\u4e5f\u5404\u4e0d\u76f8\u540c\u3002</li> </ul>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/EPSG%E7%BC%96%E7%A0%81/#epsg","title":"\u5e38\u7528\u7684EPSG","text":"EPSG \u5750\u6807\u7cfb \u8bf4\u660e 4326 WGS84\u7684\u7ecf\u7eac\u5ea6\u5750\u6807\u7cfb \u7531\u7f8e\u56fd\u4e3b\u5bfc\u7684GPS\u7cfb\u7edf\u5c31\u662f\u5728\u7528\u5b83\u3002WGS(World Geodetic System)\u662f\u4e16\u754c\u5927\u5730\u6d4b\u91cf\u7cfb\u7edf\u7684\u610f\u601d\uff0c\u7531\u4e8e\u662f1984\u5e74\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u53ebWGS84 3857 WGS 84 / Pseudo-Mercator \u5404\u5927\u4e92\u8054\u7f51\u5730\u56fe\u516c\u53f8\u4ee5\u5b83\u4e3a\u57fa\u51c6\uff0c\u4f8b\u5982Google\u5730\u56fe\uff0cMicrosoft\u5730\u56fe\u90fd\u5728\u7528\u5b83 32650 WGS 84 / UTM zone 50N \u53a6\u95e8\u533a\u57df\u7684\u6295\u5f71\u5750\u6807\u7cfb\uff08\u7b14\u8005\u8bfb\u4e66\u65f6\u7ecf\u5e38\u7528\uff09 4978 WGS84\u7684\u7a7a\u95f4\u76f4\u63a5\u5750\u6807\u7cfb \u7528\u7ecf\u7eac\u5ea6\u8bb0\u5f55\u6570\u636e\u7684WGS84\u5750\u6807\u7cfb\uff0cWKID\u662f4326\u3002\u7528\u5730\u5fc3\u4e3a\u5750\u6807\u539f\u70b9\u7684**\u7a7a\u95f4\u76f4\u89d2\u5750\u6807**\u6765\u8bb0\u5f55\u6570\u636e\u7684\u5750\u6807\u7cfb\uff0cWKID\u662f4979\u3002"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/EPSG%E7%BC%96%E7%A0%81/#_1","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>EPSG\u662f\u4ec0\u4e48\uff1f</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%BF%83%E5%9D%90%E6%A0%87%E7%B3%BBECEF/","title":"\u5730\u5fc3\u5750\u6807\u7cfbECEF","text":"<p>\u5730\u5fc3\u5730\u56fa\u5750\u6807\u7cfb\uff08E**arth-**C**entered,\u00a0**E**arth-**F**ixed\uff0c\u7b80\u79f0**ECEF\uff09\u7b80\u79f0**\u5730\u5fc3\u5750\u6807\u7cfb**</p> <ul> <li>\u662f\u4e00\u79cd\u4ee5\u5730\u5fc3\u4e3a\u539f\u70b9\u7684\u5730\u56fa\u5750\u6807\u7cfb\uff08\u4e5f\u79f0\u5730\u7403\u5750\u6807\u7cfb\uff09\uff0c\u662f\u4e00\u79cd\u7b1b\u5361\u513f\u5750\u6807\u7cfb</li> <li>\u539f\u70b9 O (0,0,0)\u4e3a\u5730\u7403\u8d28\u5fc3</li> <li>z \u8f74\u4e0e\u5730\u8f74\u5e73\u884c\u6307\u5411\u5317\u6781\u70b9</li> <li>x \u8f74\u6307\u5411\u672c\u521d\u5b50\u5348\u7ebf\u4e0e\u8d64\u9053\u7684\u4ea4\u70b9</li> <li>y \u8f74\u5782\u76f4\u4e8exOz\u5e73\u9762(\u5373\u4e1c\u7ecf90\u5ea6\u4e0e\u8d64\u9053\u7684\u4ea4\u70b9)\u6784\u6210\u53f3\u624b\u5750\u6807\u7cfb</li> </ul> <p></p>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/","title":"\u5730\u56fe\u6295\u5f71","text":""},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/#_1","title":"\u6211\u56fd\u5e38\u89c1\u7684\u5730\u56fe\u6295\u5f71","text":"\u6295\u5f71\u540d\u79f0 \u6295\u5f71\u7c7b\u578b \u4ecb\u7ecd \u7279\u5f81 \u7528\u9014 \u58a8\u5361\u6258\u6295\u5f71 \u6b63\u8f74\u7b49\u89d2\u5706\u67f1\u6295\u5f71 \u5706\u67f1\u5272\u4e8e\u5730\u7403\uff0c\u6295\u5f71\u5230\u5706\u67f1\u9762\u4e0a\uff0c\u5c55\u5f00 1. \u7b49\u89d2\u3002\u957f\u5ea6\u548c\u9762\u79ef\u53d8\u5f62\u660e\u663e\uff0c\u57fa\u51c6\u7eac\u7ebf\u65e0\u53d8\u5f622. \u7ecf\u7eac\u7ebf\u5e73\u884c\u6210\u76f4\u89d2\uff0c\u7ecf\u7ebf\u95f4\u9694\u76f8\u7b49\u3001\u7eac\u7ebf\u4e0d\u7b49 \u822a\u6d77\u56fe\u3001\u822a\u7a7a\u56fe \u901a\u7528\u6a2a\u8f74\u58a8\u5361\u6258UTM \u6a2a\u8f74\u5272\u5706\u67f1\u7b49\u89d2\u6295\u5f71 \u4f7f\u7528\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\uff0c\u6807\u8bb0\u5357\u7eac80\u00b0-\u5317\u7eac84\u00b0\u7684\u5730\u533a 1. \u6bcf6\u00b0\u4e00\u5e26\uff0c\u7531\u897f\u5411\u4e1c01-60\uff0c\u4e2d\u592e\u7ecf\u7ebf\u4e3a\u76f4\u7ebf\u4e14\u4e3a\u6295\u5f71\u5bf9\u79f0\u8f742. \u4e24\u6761\u5272\u7ebf\u6ca1\u6709\u53d8\u5f62 1. \u7f8e\u56fd\u4e16\u754c\u519b\u7528\u5730\u56fe\u3001\u5730\u7403\u8d44\u6e90\u536b\u661f\u50cf\u72472. \u67d0\u4e9b\u56fd\u5bb6\u5c40\u90e8\u91c7\u7528UTM\u4f5c\u4e3a\u5730\u56fe\u6570\u5b66\u57fa\u7840\uff0c\u6211\u56fd\u536b\u661f\u5f71\u50cf\u8d44\u6599\u5e38\u91c7\u7528 \u9ad8\u65af\u514b\u91cc\u683c\u6295\u5f71 \u6a2a\u8f74\u5207\u5706\u67f1\u7b49\u89d2\u6295\u5f71 1. 6\u00b0\u5e26\uff1a0\u00b0\u5f00\u59cb\uff08\u4e2d\u56fd72E-136E\uff0c13-23\u5e26\uff092. 3\u00b0\u5e26\uff1a\u4ece1\u00b030\u2032\u5f00\u59cb 1. \u4e2d\u592e\u7cbe\u5ea6\u548c\u8d64\u9053\u6295\u5f71\u540e\u4e92\u4e3a\u5782\u76f4\u7684\u76f4\u7ebf\u4e14\u4e3a\u6295\u5f71\u5bf9\u79f0\u8f742. \u7b49\u89d2\uff0c\u4e2d\u592e\u7ecf\u5ea6\u4e0d\u53d8\u5f62\uff0c\u8d64\u9053\u53d8\u5f62\u6700\u5389\u5bb3 \u9002\u5408\u5e45\u5458\u5e7f\u5927\u5730\u533a\uff0c\u6309\u7ecf\u7ebf\u5206\u5e26\u8fdb\u884c\u6295\u5f71\uff0c\u5404\u5e26\u53d8\u5f62\u60c5\u51b5\u76f8\u4f3c\uff0c\u5229\u4e8e\u5168\u7403\u5730\u56fe\u62fc\u63a5 \u5170\u52c3\u7279\u7b49\u89d2\u6295\u5f71 \u7b49\u89d2\u6b63\u8f74\u5272\u5706\u9525\u6295\u5f71 \u5fb7\u56fd\u6570\u5b66\u5bb6\u5170\u52c3\u7279 1. \u5c0f\u800c\u5747\u53002. \u7b49\u89d23. \u4e24\u6761\u6807\u51c6\u7eac\u7ebf\u65e0\u53d8\u5f62\uff0c\u540c\u4e00\u7eac\u7ebf\u53d8\u5f62\u5904\u5904\u76f8\u540c\uff0c\u53d8\u5f62\u5747\u5300\u3001\u4e24\u6761\u7eac\u7ebf\u95f4\u7ecf\u7eac\u7ebf\u957f\u5ea6\u5904\u5904\u76f8\u7b49 1. \u5236\u4f5c\u6cbf\u7eac\u7ebf\u5206\u5e03\u7684\u4e2d\u7eac\u5ea6\u5730\u533a\u4e2d\u3001\u5c0f\u6bd4\u4f8b\u5c3a\u5730\u56fe2. 1:100\u4e07\u5730\u5f62\u56fe\u548c\u822a\u7a7a\u56fe\uff08\u6211\u56fd1:100\u4e07\u91c7\u7528\u5170\u52c3\u7279\u6295\u5f71\uff093. \u4e1c\u897f\u534a\u7403\u56fe\u548c\u5206\u6d32\u56fe\u591a\u7528\u6b64\u6295\u5f71"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E5%85%B0%E5%8B%83%E7%89%B9%E7%AD%89%E8%A7%92%E6%8A%95%E5%BD%B1/","title":"\u5170\u52c3\u7279\u7b49\u89d2\u6295\u5f71","text":"<p>Lambert conformal conic\uff08\u5fb7\u56fd\u6570\u5b66\u5bb6\u5170\u52c3\u7279\uff09</p> <ul> <li>\u7b49\u89d2\u6b63\u8f74\u5272\u5706\u9525\u6295\u5f71</li> </ul> <p></p>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E5%85%B0%E5%8B%83%E7%89%B9%E7%AD%89%E8%A7%92%E6%8A%95%E5%BD%B1/#_1","title":"\u7279\u70b9","text":"<ol> <li>\u5c0f\u800c\u5747\u5300</li> <li>\u6ca1\u6709\u89d2\u5ea6\u53d8\u5f62</li> <li>\u4e24\u6761\u6807\u51c6\u7eac\u7ebf\u65e0\u53d8\u5f62</li> <li>\u540c\u4e00\u7eac\u7ebf\u4e0a\u53d8\u5f62\u5904\u5904\u76f8\u540c\u3001\u53d8\u5f62\u5747\u5300\u3001\u4e24\u6761\u7eac\u7ebf\u95f4\u7ecf\u7eac\u7ebf\u957f\u5ea6\u5904\u5904\u76f8\u7b49</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E5%85%B0%E5%8B%83%E7%89%B9%E7%AD%89%E8%A7%92%E6%8A%95%E5%BD%B1/#_2","title":"\u9002\u7528","text":"<ol> <li>\u5236\u4f5c\u6cbf\u7eac\u7ebf\u5206\u5e03\u7684\u4e2d\u7eac\u5ea6\u5730\u533a\u4e2d\u3001\u5c0f\u6bd4\u4f8b\u5c3a\u5730\u56fe</li> <li>1:100\u4e07\u5730\u5f62\u56fe\u548c\u822a\u7a7a\u56fe\uff08\u6211\u56fd1:100\u4e07\u91c7\u7528\u5170\u52c3\u7279\u6295\u5f71\uff09</li> <li>\u4e1c\u897f\u534a\u7403\u56fe\u548c\u5206\u6d32\u56fe\u591a\u7528\u6b64\u6295\u5f71</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E5%A2%A8%E5%8D%A1%E6%89%98%E6%8A%95%E5%BD%B1/","title":"\u58a8\u5361\u6258\u6295\u5f71","text":"<p>1569\u8377\u5170\u5730\u56fe\u5b66\u5bb6\u58a8\u5361\u6258 \u6b63\u8f74\u7b49\u89d2\u5706\u67f1\u6295\u5f71</p> <ol> <li>\u6b63\u8f74\uff0c\u7b49\u89d2\u6761\u4ef6\uff0c\u5706\u67f1\u5272\u4e8e\u5730\u7403</li> <li>\u6295\u5f71\u5230\u5706\u67f1\u9762\u4e0a\uff0c\u5c55\u5f00</li> <li>\u6700\u65e9\u6700\u5e38\u7528\u7684\u5207\u5706\u67f1\u6295\u5f71</li> </ol> <p></p>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E5%A2%A8%E5%8D%A1%E6%89%98%E6%8A%95%E5%BD%B1/#_1","title":"\u7279\u5f81","text":"<ol> <li>\u6ca1\u6709\u89d2\u5ea6\u53d8\u5f62-&gt;\u5404\u65b9\u5411\u957f\u5ea6\u6bd4\u76f8\u7b49</li> <li>\u7ecf\u7eac\u7ebf\u90fd\u662f\u5e73\u884c\u76f4\u7ebf\uff0c\u4e14\u76f8\u4ea4\u6210\u76f4\u89d2<ol> <li>\u7ecf\u7ebf\u95f4\u9694\u76f8\u7b49</li> <li>\u7eac\u7ebf\u95f4\u9694\u4ece\u57fa\u51c6\u7eac\u7ebf\u5904\u5411\u4e24\u6781\u9010\u6e10\u589e\u5927</li> </ol> </li> <li>\u957f\u5ea6\u548c\u9762\u79ef\u53d8\u5f62\u660e\u663e\uff0c\u57fa\u51c6\u7eac\u7ebf\u65e0\u53d8\u5f62\uff0c\u4ece\u57fa\u51c6\u7eac\u7ebf\u5904\u5411\u4e24\u6781\u53d8\u5f62\u9010\u6e10\u589e\u5927\u3002\u4f46\u5b83\u5177\u6709\u5404\u4e2a\u65b9\u5411\u5747\u7b49\u6269\u5927\u7684\u7279\u6027\uff0c\u4fdd\u6301\u4e86\u65b9\u5411\u548c\u76f8\u4e92\u4f4d\u7f6e\u5173\u7cfb\u7684\u6b63\u786e</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E5%A2%A8%E5%8D%A1%E6%89%98%E6%8A%95%E5%BD%B1/#_2","title":"\u9002\u7528","text":"<p>\u822a\u6d77\u56fe\u548c\u822a\u7a7a\u56fe\uff1a\u5faa\u7740\u58a8\u5361\u6258\u6295\u5f71\u56fe\u4e0a\u4e24\u70b9\u95f4\u7684\u76f4\u7ebf\u822a\u884c\uff0c\u65b9\u5411\u4e0d\u53d8\u53ef\u4ee5\u4e00\u76f4\u5230\u8fbe\u76ee\u7684\u5730</p>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E9%80%9A%E7%94%A8%E6%A8%AA%E8%BD%B4%E5%A2%A8%E5%8D%A1%E6%89%98%E6%8A%95%E5%BD%B1UTM/","title":"\u901a\u7528\u6a2a\u8f74\u58a8\u5361\u6258\u6295\u5f71UTM","text":"<p>\u3010\u4ecb\u7ecd\u3011\u5b83\u4f7f\u7528\u7b1b\u5361\u513f\u5ea7\u6807\u7cfb\uff0c\u6807\u8bb0\u5357\u7eac80\u00b0\u81f3\u5317\u7eac84\u00b0\u4e4b\u95f4\u7684\u6240\u6709\u4f4d\u7f6e</p>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E9%80%9A%E7%94%A8%E6%A8%AA%E8%BD%B4%E5%A2%A8%E5%8D%A1%E6%89%98%E6%8A%95%E5%BD%B1UTM/#_1","title":"\u7528\u9014","text":"<ol> <li>\u7f8e\u56fd\u7f16\u5236\u4e16\u754c\u5404\u5730\u519b\u7528\u5730\u56fe\u548c\u5730\u7403\u8d44\u6e90\u536b\u661f\u50cf\u7247\u6240\u91c7\u7528\u7684\u6295\u5f71\u7cfb\u7edf</li> <li>\u67d0\u4e9b\u56fd\u5bb6\u5c40\u90e8\u91c7\u7528UTM\u4f5c\u4e3a\u5730\u56fe\u6570\u5b66\u57fa\u7840</li> <li>\u6211\u56fd\u7684\u536b\u661f\u5f71\u50cf\u8d44\u6599\u5e38\u91c7\u7528UTM</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E9%80%9A%E7%94%A8%E6%A8%AA%E8%BD%B4%E5%A2%A8%E5%8D%A1%E6%89%98%E6%8A%95%E5%BD%B1UTM/#_2","title":"\u7c7b\u578b","text":"<p>\u6a2a\u8f74\u5272\u5706\u67f1\u7b49\u89d2\u6295\u5f71</p> <ol> <li>\u5706\u67f1\u5272\u4e8e\u5357\u7eac80\u00b0\u3001\u5317\u7eac84\u00b0\u4e24\u6761\u7b49\u9ad8\u5708\u4e0a</li> <li>\u4e24\u6761\u5272\u7ebf\u6ca1\u6709\u53d8\u5f62\uff0c\u79bb\u8fd9\u4e24\u6761\u5272\u7ebf\u8d8a\u8fdc\u53d8\u5f62\u8d8a\u5927</li> <li>\u5272\u7ebf\u4ee5\u5185\uff0c\u957f\u5ea6\u53d8\u5f62\u4e3a\u8d1f\u503c\uff0c\u4ee5\u5916\u4e3a\u6b63\u503c</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E9%80%9A%E7%94%A8%E6%A8%AA%E8%BD%B4%E5%A2%A8%E5%8D%A1%E6%89%98%E6%8A%95%E5%BD%B1UTM/#_3","title":"\u7279\u70b9","text":"<ol> <li>\u548c\u9ad8\u65af\u76f8\u4f3c\uff0c\u89d2\u5ea6\u6ca1\u6709\u53d8\u5f62\uff0c\u4e2d\u592e\u7ecf\u7ebf\u4e3a\u76f4\u7ebf\uff0c\u4e14\u4e3a\u6295\u5f71\u7684\u5bf9\u79f0\u8f74</li> <li>\u4e2d\u592e\u7ecf\u7ebf\u7684\u6bd4\u4f8b\u56e0\u5b50\u53d60.9996\u662f\u4e3a\u4e86\u4fdd\u8bc1\u79bb\u4e2d\u592e\u7ecf\u7ebf\u7ea6330km\u5904\u6709\u4e24\u6761\u4e0d\u5931\u771f\u7684\u6807\u51c6\u7ecf\u7ebf</li> <li>6\u00b0\u6807\u51c6\uff0c\u4ece\u897f\u7ecf180\u81ea\u897f\u5411\u4e1c\u8fdb\u884c\u6295\u5f71\u5e26\u5206\u7c7b\uff0c\u5171\u520660\u4e2a\u6295\u5f71\u5e26\u30026\u00b0\u5e26\u5185\u957f\u5ea6\u53d8\u5f62\u8f83\u5c0f</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E9%80%9A%E7%94%A8%E6%A8%AA%E8%BD%B4%E5%A2%A8%E5%8D%A1%E6%89%98%E6%8A%95%E5%BD%B1UTM/#_4","title":"\u5ea7\u6807\u7f16\u6392","text":"<p>\u3010\u683c\u5f0f\u3011<code>[\u7ecf\u5ea6\u533a\u95f4][\u7eac\u5ea6\u533a\u95f4] [\u65b9\u683c\u5ea7\u6807]</code></p> <ul> <li>\u4f8b\u5b50\uff1a50Q 1947 3910</li> <li>\u542b\u4e49\uff1a\u7ecf\u7eac \u5317\u8ddd \u4e1c\u8ddd</li> </ul> <p>\u3010\u7eac\u5ea6\u533a\u95f4\u3011\u4ece\u5357\u7eac80\u00b0\u5f00\u59cb\uff0c\u6bcf8\u00b0\u88ab\u7f16\u6392\u4e3a\u4e00\u4e2a\u7eac\u5ea6\u533a\u95f4\uff0c\"C\"\u81f3\"X\"\u7f16\u6392</p> <p></p> <p>\u3010\u7ecf\u5ea6\u533a\u95f4\u3011</p> <ol> <li>\u6bcf6\u00b0\u88ab\u7f16\u6392\u4e3a\u4e00\u7ecf\u5ea6\u533a\u95f4\uff08\u6bcf\u4e00\u4e2a\u7ecf\u5ea6\u533a\u95f4\u5747\u4ee5\u4e00\u4e2a\u6570\u5b57\u8868\u793a\uff0c\u7531\u897f\u5411\u4e1c\u6570\u4ee501\u81f360\u7f16\u6392\uff09</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E9%AB%98%E6%96%AF%E5%85%8B%E5%90%95%E6%A0%BC%E6%8A%95%E5%BD%B1/","title":"\u9ad8\u65af\u514b\u5415\u683c\u6295\u5f71","text":"<p>\u9ad8\u65af-\u514b\u5415\u683c\u6295\u5f71</p> <ul> <li>\u7531\u9ad8\u65af\u63d0\u51fa\uff0c\u514b\u5415\u683c\u8865\u5145</li> <li>\u6a2a\u8f74\u5207\u5706\u67f1\u7b49\u89d2\u6295\u5f71</li> <li>\u4e3a\u4e86\u51cf\u5c11\u957f\u5ea6\u53d8\u5f62\u7684\u8bef\u5dee\uff0c\u8fdb\u884c\u5206\u5e26</li> </ul> <p></p>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E9%AB%98%E6%96%AF%E5%85%8B%E5%90%95%E6%A0%BC%E6%8A%95%E5%BD%B1/#_1","title":"\u5f62\u6210\u6761\u4ef6","text":"<ol> <li>\u4e2d\u592e\u7ecf\u7ebf\u548c\u8d64\u9053\u6295\u5f71\u540e\u4e3a\u4e92\u76f8\u5782\u76f4\u7684\u76f4\u7ebf\uff0c\u4e14\u4e3a\u6295\u5f71\u7684\u5bf9\u79f0\u8f74</li> <li>\u7b49\u89d2\u6027\u8d28</li> <li>\u4e2d\u592e\u7ecf\u7ebf\u6295\u5f71\u540e\u957f\u5ea6\u4e0d\u53d8</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E9%AB%98%E6%96%AF%E5%85%8B%E5%90%95%E6%A0%BC%E6%8A%95%E5%BD%B1/#_2","title":"\u7279\u70b9","text":"<ol> <li>\u4e2d\u592e\u7ecf\u7ebf\u6ca1\u6709\u53d8\u5f62\uff0c\u5176\u4ed6\u5730\u65b9\u957f\u5ea6\u6bd4\u90fd\u5927\u4e8e1\uff08\u6295\u5f71\u540e\u66f4\u957f\u4e86\uff09</li> <li>\u53ea\u6709\u4e2d\u592e\u7ecf\u5ea6\u4e0d\u53d8\u5f62\uff0c\u79bb\u4e2d\u592e\u7ecf\u7ebf\u8d8a\u8fdc\uff0c\u53d8\u5f62\u8d8a\u5927</li> <li>\u79bb\u8d64\u9053\u8d8a\u8fd1\uff0c\u53d8\u5f62\u8d8a\u5927</li> <li>\u7b49\u89d2\u6295\u5f71\uff0c\u9762\u79ef\u6bd4\u4e3a\u957f\u5ea6\u6bd4\u7684\u5e73\u65b9</li> <li>\u957f\u5ea6\u6bd4\u7684\u7b49\u53d8\u5f62\u7ebf\u5e73\u884c\u4e8e\u4e2d\u592e\u5b50\u5348\u7ebf</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E9%AB%98%E6%96%AF%E5%85%8B%E5%90%95%E6%A0%BC%E6%8A%95%E5%BD%B1/#_3","title":"\u9002\u7528","text":"<p>\u9002\u5408\u5e45\u5458\u5e7f\u5927\u7684\u5730\u533a\uff0c\u6309\u7ecf\u7ebf\u5206\u5e26\u8fdb\u884c\u6295\u5f71\uff0c\u5404\u5e26\u53d8\u5f62\u60c5\u51b5\u76f8\u4f3c\uff0c\u5229\u4e8e\u5168\u7403\u5730\u56fe\u62fc\u63a5</p>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E9%AB%98%E6%96%AF%E5%85%8B%E5%90%95%E6%A0%BC%E6%8A%95%E5%BD%B1/#_4","title":"\u5206\u5e26","text":""},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E9%AB%98%E6%96%AF%E5%85%8B%E5%90%95%E6%A0%BC%E6%8A%95%E5%BD%B1/#6","title":"6\u5ea6\u5e26","text":"<ul> <li>\u4ece0\u00b0\u5f00\u59cb</li> <li>\u4e2d\u56fd72E-136E\uff0c\u8de8\u8d8a\u4e861323\u517111\u4e2a\u5e26</li> </ul>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E9%AB%98%E6%96%AF%E5%85%8B%E5%90%95%E6%A0%BC%E6%8A%95%E5%BD%B1/#3","title":"3\u5ea6\u5e26","text":"<ul> <li>\u4ece1\u00b030\u2032\u5f00\u59cb</li> </ul>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E5%9F%BA%E7%A1%80/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1/%E9%AB%98%E6%96%AF%E6%8A%95%E5%BD%B1%E5%92%8CUTM%E7%9A%84%E6%AF%94%E8%BE%83/","title":"\u9ad8\u65af\u6295\u5f71\u548cUTM\u7684\u6bd4\u8f83","text":"\u65b9\u9762 \u9ad8\u65af\u6295\u5f71 UTM \u6295\u5f71\u65b9\u5f0f \u7b49\u89d2\u6a2a\u8f74\u5207\u5706\u67f1 \u7b49\u89d2\u6a2a\u8f74\u5272\u5706\u67f1\u6295\u5f71 \u8ba1\u7b97\u7ed3\u679c \u6295\u5f71\u540e\u4e2d\u592e\u7ecf\u7ebf\u4fdd\u6301\u957f\u5ea6\u4e0d\u53d8\uff0c\u6bd4\u4f8b\u7cfb\u6570\u4e3a1 \u5706\u67f1\u5272\u4e8e\u5730\u7403\u5357\u7eac80\u00b0\u3001\u5317\u7eac84\u00b0\uff0c\u5272\u7ebf\u4e0a\u6ca1\u6709\u53d8\u5f62\u4e2d\u592e\u7ecf\u7ebf\u957f\u5ea6\u6bd40.996 \u5206\u5e26\u65b9\u5f0f 0\u00b0\u5b50\u5348\u7ebf\u8d77\uff0c\u95f4\u96946\u00b0\uff0c\u81ea\u897f\u5411\u4e1c\uff0c\u7b2c\u4e00\u5e26\u4e2d\u592e\u7ecf\u7ebf3\u00b0 \u81ea\u897f\u7ecf180\u00b0\u8d77\uff0c\u6bcf\u96946\u00b0\uff0c\u81ea\u897f\u5411\u4e1c\uff0c\u7b2c1\u5e26\u7684\u4e2d\u592e\u7ecf\u5ea6\u4e3a-177\u00b0 \u5750\u6807\u504f\u79fb \u4e1c\u4f2a\u504f\u79fb500\u516c\u91cc\uff1b\u5317\u4f2a\u504f\u79fb\u4e3a0 \u4e1c\u4f2a\u504f\u79fb500\u516c\u91ccUTM\u5317\u534a\u7403\u6295\u5f71\u5317\u4f2a\u504f\u79fb\u4e3a0\uff0c\u5357\u534a\u7403\u4e3a10000\u516c\u91cc \u7cbe\u5ea6 1. \u7b49\u89d22. \u4e2d\u592e\u5b50\u5348\u7ebf\u957f\u5ea6\u4e0d\u53d8\uff0c\u5176\u4ed6\u66f2\u7ebf\u7684\u957f\u5ea6\u5747\u53d8\u957f\uff08\u6295\u5f71\u6bd4&gt;1\uff093. \u8d64\u9053\u53d8\u5f62\u6700\u5927 \u7b49\u89d2\u4e2d\u592e\u5b50\u5348\u7ebf0.9996\uff0c\u5206\u5e26\u5b50\u5348\u7ebf\u6295\u5f71\u6bd4\u5927\u4e8e1\uff0c\u957f\u5ea6\u53d8\u5f62\u5927\u5e45\u5ea6\u7f29\u5c0f \u5e94\u7528 \u6211\u56fd\u57fa\u672c\u6bd4\u4f8b\u5c3a\u5730\u5f62\u56fe1:2.5W\u30011:5w\u30011:10w\u30011:25w\u30011:50w\u91c7\u7528\u9ad8\u65af6\u00b0\u5206\u5e26\uff1b1:5000\u30011:1w\u5730\u5f62\u56fe\u91c7\u7528\u9ad8\u65af3\u00b0\u5206\u5e26 1. \u4e3b\u8981\u7528\u4e8e\u7f8e\u56fd\u7684\u519b\u7528\u5730\u56fe\u53ca\u5730\u7403\u8d44\u6e90\u536b\u661f\u6240\u7528\u9065\u611f\u6570\u636e2. \u67d0\u4e9b\u56fd\u5bb6\u5c40\u90e8\u91c7\u7528UTM\u4f5c\u4e3a\u5730\u56fe\u6570\u5b66\u57fa\u78403. \u6211\u56fd\u536b\u661f\u5f71\u50cf\u8d44\u6599\u91c7\u7528UTM\u6295\u5f714. \u76ee\u524d\u56fd\u5916\u8f6f\u4ef6\u6216\u56fd\u5916\u8fdb\u53e3\u4eea\u5668\u914d\u5957\u8f6f\u4ef6\u5f80\u5f80\u4e0d\u652f\u6301\u9ad8\u65af\uff0c\u4f46\u652f\u6301UTM\uff0c\u56e0\u6b64\u5e38\u6709\u628aUTM\u6295\u5f71\u5f53\u505a\u9ad8\u65af\u6295\u5f71\u7684\u73b0\u8c61"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E8%BD%AC%E6%8D%A2/","title":"Index","text":"<p>\u5750\u6807\u7cfb\u53d8\u6362\u5c31\u662f\u5728\u76f8\u540c\u7a7a\u95f4\u70b9\uff0c\u5728\u4e0d\u540c\u692d\u7403\u4f53\u4e0b\u7684\u4e0d\u540c\u5750\u6807\u8868\u8fbe\u5f62\u5f0f\u7684\u6570\u503c\u6362\u7b97\uff0c\u4e3b\u8981\u5206\u4e3a\u4e09\u79cd\uff1a</p> <ul> <li>\u5927\u5730\u5750\u6807\u7cfb\u4e0e\u7a7a\u95f4\u76f4\u89d2\u5750\u6807\u7cfb\u7684\u76f8\u4e92\u8f6c\u6362(\u7ecf\u7eac\u5ea6\u8f6cECEF)</li> <li>\u7a7a\u95f4\u76f4\u89d2\u5750\u6807\u7cfb\u4e0e\u7ad9\u5fc3\u5750\u6807\u7cfb\u7684\u8f6c\u6362(ECEF\u8f6c\u5de5\u7a0b)\u3002</li> <li>\u5927\u5730\u5750\u6807\u7cfb\u4e0e\u5e73\u9762\u5750\u6807\u7cfb\u7684\u8f6c\u6362(\u7ecf\u7eac\u5ea6\u8f6c\u6295\u5f71\u5750\u6807)</li> </ul> <p>\u5750\u6807\u8f6c\u6362\u5728\u7ebf\u5de5\u5177</p> <ol> <li>Transform coordinates - GPS online converter (epsg.io)</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E8%BD%AC%E6%8D%A2/Python%E4%B8%8E%E5%9D%90%E6%A0%87%E7%B3%BB%E8%BD%AC%E6%8D%A2/","title":"Python\u4e0e\u5750\u6807\u7cfb\u8f6c\u6362","text":""},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E8%BD%AC%E6%8D%A2/Python%E4%B8%8E%E5%9D%90%E6%A0%87%E7%B3%BB%E8%BD%AC%E6%8D%A2/#_1","title":"\u793a\u4f8b","text":""},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E8%BD%AC%E6%8D%A2/Python%E4%B8%8E%E5%9D%90%E6%A0%87%E7%B3%BB%E8%BD%AC%E6%8D%A2/#43264978","title":"4326\u8f6c4978","text":"<p>\u4ee3\u7801\uff1a <pre><code>import pyproj\nlon = -74.6604194 \nlat = 40.3450248\nalt = 50\ntransformer = pyproj.Transformer.from_crs(\"EPSG:4326\", \"EPSG:4978\", always_xy = True)\nprint(transformer)\nxyz = transformer.transform(lon, lat, alt)\nprint('Projected XY', xyz)\nlonlat = transformer.transform(xyz[0], xyz[1], xyz[2], direction='INVERSE')\nprint('Lon Lat', lonlat)\n</code></pre></p> <p>\u8f93\u51fa\uff1a <pre><code>proj=pipeline step proj=unitconvert xy_in=deg xy_out=rad step proj=cart ellps=WGS84\nProjected XY (1287785.7839034656, -4694607.645412987, 4107291.4290166595)\nLon Lat (-74.6604194, 40.3450248, 50.0)\n</code></pre></p>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%9D%90%E6%A0%87%E7%B3%BB%E8%BD%AC%E6%8D%A2/%E5%9D%90%E6%A0%87%E7%B3%BB%E4%B8%8Enumpy%E7%9F%A9%E9%98%B5%E7%9A%84%E5%85%B3%E7%B3%BB/","title":"\u5750\u6807\u7cfb\u4e0enumpy\u77e9\u9635\u7684\u5173\u7cfb","text":"<p>\u3010XY\u4e0e\u7ecf\u7eac\u5ea6\u3011</p> <ul> <li>X \u7eac\u5ea6 lat \u5c0f</li> <li>Y \u7ecf\u5ea6 lon \u5927</li> </ul> <p>\u3010XY\u7ecf\u7eac\u5ea6\u5750\u6807\u7cfband\u77e9\u9635\u884c\u5217\u5750\u6807\u7cfb\u3011  </p> <p></p>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%B8%B8%E8%A7%81%E5%9D%90%E6%A0%87%E7%B3%BB/WGS84%E6%A4%AD%E7%90%83%E4%BD%93/","title":"WGS84\u692d\u7403\u4f53","text":"<p>WGS84\u692d\u7403\u4f53\uff0c\u56fd\u9645\u5927\u5730\u6d4b\u91cf\u4e0e\u5730\u7403\u7269\u7406\u8054\u5408\u4f1a\u7b2c17\u5c4a\u5927\u4f1a\u6d4b\u91cf\u5e38\u6570\u63a8\u8350\u503c</p> <ul> <li>\u957f\u8f746378137.000m</li> <li>\u77ed\u8f746356752.314</li> <li>\u6241\u73871/298.257223563</li> </ul>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%B8%B8%E8%A7%81%E5%9D%90%E6%A0%87%E7%B3%BB/WGS84%E6%A4%AD%E7%90%83%E4%BD%93/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>GIS\u57fa\u7840\u77e5\u8bc6\u8bb0\u5f55</li> </ol>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%B8%B8%E8%A7%81%E5%9D%90%E6%A0%87%E7%B3%BB/WGS84%E6%A4%AD%E7%90%83%E4%BD%93/EPSG3857/","title":"EPSG3857","text":"<p>\u672a\u6574\u7406</p> <p>\u6765\u6e90\uff1aGIS\u57fa\u7840\u77e5\u8bc6\u8bb0\u5f55</p> <p>\u4f2a\u58a8\u5361\u6258\u6295\u5f71\uff0c\u4e5f\u88ab\u79f0\u4e3a\u7403\u4f53\u58a8\u5361\u6258\uff0cWeb Mercator\u3002</p> <p>\u5b83\u662f\u57fa\u4e8e\u58a8\u5361\u6258\u6295\u5f71\u7684\uff0c\u628a WGS84\u5750\u6807\u7cfb\u6295\u5f71\u5230\u6b63\u65b9\u5f62\u3002\u6211\u4eec\u524d\u9762\u5df2\u7ecf\u77e5\u9053 WGS84 \u662f\u57fa\u4e8e\u692d\u7403\u4f53\u7684\uff0c\u4f46\u662f\u4f2a\u58a8\u5361\u6258\u6295\u5f71\u628a\u5750\u6807\u6295\u5f71\u5230\u7403\u4f53\u4e0a\uff0c\u8fd9\u5bfc\u81f4\u4e24\u6781\u7684\u5931\u771f\u53d8\u5927\uff0c\u4f46\u662f\u5374\u66f4\u5bb9\u6613\u8ba1\u7b97\u3002\u8fd9\u4e5f\u8bb8\u662f\u4e3a\u4ec0\u4e48\u88ab\u79f0\u4e3a\u201d\u4f2a\u201c\u58a8\u5361\u6258\u5427\u3002\u53e6\u5916\uff0c\u4f2a\u58a8\u5361\u6258\u6295\u5f71\u8fd8\u5207\u6389\u4e86\u5357\u531785.051129\u00b0\u7eac\u5ea6\u4ee5\u4e0a\u7684\u5730\u533a\uff0c\u4ee5\u4fdd\u8bc1\u6574\u4e2a\u6295\u5f71\u662f\u6b63\u65b9\u5f62\u7684\u3002\u56e0\u4e3a\u58a8\u5361\u6258\u6295\u5f71\u7b49\u6b63\u5f62\u6027\u7684\u7279\u70b9\uff0c\u5728\u4e0d\u540c\u5c42\u7ea7\u7684\u56fe\u5c42\u4e0a\u7269\u4f53\u7684\u5f62\u72b6\u4fdd\u6301\u4e0d\u53d8\uff0c\u4e00\u4e2a\u6b63\u65b9\u5f62\u53ef\u4ee5\u4e0d\u65ad\u88ab\u5212\u5206\u4e3a\u66f4\u591a\u66f4\u5c0f\u7684\u6b63\u65b9\u5f62\u4ee5\u663e\u793a\u66f4\u6e05\u6670\u7684\u7ec6\u8282\u3002\u5f88\u660e\u663e\uff0c\u4f2a\u58a8\u5361\u6258\u5750\u6807\u7cfb\u662f\u975e\u5e38\u663e\u793a\u6570\u636e\uff0c\u4f46\u662f\u4e0d\u9002\u5408\u5b58\u50a8\u6570\u636e\u7684\uff0c\u901a\u5e38\u6211\u4eec\u4f7f\u7528WGS84 \u5b58\u50a8\u6570\u636e\uff0c\u4f7f\u7528\u4f2a\u58a8\u5361\u6258\u663e\u793a\u6570\u636e\u3002</p> <p>Web Mercator \u6700\u65e9\u662f\u7531 Google \u63d0\u51fa\u7684\uff0c\u5f53\u524d\u5df2\u7ecf\u6210\u4e3a Web Map \u7684\u4e8b\u5b9e\u6807\u51c6\u3002\u4f46\u662f\u4e5f\u8bb8\u662f\u7531\u4e8e\u4e0a\u9762\u201d\u4f2a\u201c\u7684\u539f\u56e0\uff0c\u6700\u521d Web Mercator \u88ab\u62d2\u7edd\u5206\u914dEPSG \u4ee3\u7801\u3002\u4e8e\u662f\u5927\u5bb6\u666e\u904d\u4f7f\u7528 EPSG:900913\uff08Google\u7684\u6570\u5b57\u53d8\u5f62\uff09 \u7684\u975e\u5b98\u65b9\u4ee3\u7801\u6765\u4ee3\u8868\u5b83\u3002\u76f4\u52302008\u5e74\uff0c\u624d\u88ab\u5206\u914d\u4e86EPSG:3785\u7684\u4ee3\u7801\uff0c\u4f46\u5728\u540c\u4e00\u5e74\u6ca1\u591a\u4e45\uff0c\u53c8\u88ab\u5f03\u7528\uff0c\u91cd\u65b0\u5206\u914d\u4e86 EPSG:3857 \u7684\u6b63\u5f0f\u4ee3\u7801\uff0c\u4f7f\u7528\u81f3\u4eca\u3002</p>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%B8%B8%E8%A7%81%E5%9D%90%E6%A0%87%E7%B3%BB/WGS84%E6%A4%AD%E7%90%83%E4%BD%93/EPSG4978/","title":"EPSG4978","text":"<p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>WGS 84 - EPSG:4978</li> <li>WGS 84: EPSG Projection -- Spatial Reference</li> </ol> <p>EPSG 4978</p> <ul> <li>\u539f\u70b9\u4f4d\u4e8e\u5730\u7403\u8d28\u5fc3</li> <li>z\u8f74\u6cbf\u7740\u5730\u8f74\u6307\u5411\u5317\u6781</li> <li>y\u8f74\u6cbf\u7740\u8d64\u9053\u5e73\u9762\u4e0e\u683c\u6797\u5a01\u6cbb\u5b50\u5348\u9762\u7684\u4ea4\u7ebf\u4e0a</li> <li>y\u8f74\u5728\u8d64\u9053\u5e73\u9762\u4e0ex\u8f74z\u8f74\u6ee1\u8db3\u53f3\u624b\u6cd5\u5219</li> <li>\u8be5\u5750\u6807\u7cfb\u4e00\u822c\u548cWGS84\u5750\u6807\u7cfb\u76f8\u4e92\u8f6c\u6362\uff0c\u5c5e\u4e8e\u540c\u4e00\u57fa\u51c6\u4e0b\u4e0d\u540c\u8868\u8fbe\u3002</li> </ul> <p></p>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%B8%B8%E8%A7%81%E5%9D%90%E6%A0%87%E7%B3%BB/WGS84%E6%A4%AD%E7%90%83%E4%BD%93/EPSG4978/#_1","title":"\u793a\u4f8b","text":""},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%B8%B8%E8%A7%81%E5%9D%90%E6%A0%87%E7%B3%BB/WGS84%E6%A4%AD%E7%90%83%E4%BD%93/EPSG4978/#43264978","title":"4326\u4e0e4978","text":"<ul> <li>4326\uff1a<code>-74.6604194, 40.3450248, 50.0</code></li> <li>4978\uff1a<code>1287785.7839034656, -4694607.645412987, 4107291.4290166595</code></li> </ul>"},{"location":"A-GIS/1-GIS%E5%9F%BA%E7%A1%80/%E5%9D%90%E6%A0%87%E7%B3%BB/%E5%B8%B8%E8%A7%81%E5%9D%90%E6%A0%87%E7%B3%BB/WGS84%E6%A4%AD%E7%90%83%E4%BD%93/WGS84%28EPSG4326%29/","title":"WGS84(EPSG4326)","text":"<p>EPSG4326\u5373\u662fWGS84\uff0c\u662f\u76ee\u524d\u6700\u6d41\u884c\u7684\u5730\u7406\u5750\u6807\u7cfb\u7edf\u3002</p> <ul> <li>GPS\u662f\u57fa\u4e8eWGS84\u7684\uff0c\u6240\u4ee5\u901a\u5e38\u6211\u4eec\u5f97\u5230\u7684\u5750\u6807\u6570\u636e\u90fd\u662fWGS84\u7684</li> <li>\u4e00\u822c\u6211\u4eec\u5728\u5b58\u50a8\u6570\u636e\u65f6\uff0c\u4ecd\u7136\u6309WGS84\u5b58\u50a8</li> </ul> <p>WGS84\u60c5\u51b5</p> <ul> <li>\u539f\u70b9\uff1a\u5730\u7403\u8d28\u5fc3</li> <li>Z\u8f74\uff1aBIH\uff081984.0\uff09\u5b9a\u4e49\u7684\u5730\u6781\uff08CTP\uff09\u65b9\u5411\uff0c\u5373\u56fd\u9645\u534f\u8bae\u539f\u70b9CIO\uff0c\u5b83\u7531IAU\u548cIUGG\u5171\u540c\u63a8\u8350\u3002</li> <li>X\u8f74\uff1a\u6307\u5411BIH\u5b9a\u4e49\u7684\u96f6\u5ea6(\u672c\u521d)\u5b50\u5348\u9762\u548cCTP\u8d64\u9053\u7684\u4ea4\u70b9\u3002</li> <li>Y\u8f74\uff1a\u548cZ\uff0cX\u8f74\u6784\u6210\u53f3\u624b\u5750\u6807\u7cfb\u3002</li> <li>WGS84\u692d\u7403\u4f53</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/","title":"\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/#_1","title":"\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u7684\u65b9\u5411","text":"<p>\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u53ef\u4ee5\u7b3c\u7edf\u7684\u5206\u4e3a\u4e09\u4e2a\u5927\u65b9\u5411</p> <ol> <li>rendering\uff08\u6e32\u67d3\uff09\uff1a\u5149\u6805\u56fe\u5f62\u663e\u793a</li> <li>geometry\uff08\u51e0\u4f55\uff09\uff1a\u51e0\u4f55\u9020\u578b\u6280\u672f</li> <li>simulation\uff08\u4eff\u771f\u3001\u6a21\u62df\uff09\uff1a\u771f\u5b9e\u611f\u56fe\u5f62\u663e\u793a</li> </ol> <p>\u9664\u6389\u4e09\u4e2a\u5927\u65b9\u5411\u4ee5\u5916\u8fd8\u6709</p> <ol> <li>3D printing\uff083D\u6253\u5370\uff09,</li> <li>visualization\uff08\u6570\u636e\u53ef\u89c6\u5316\uff09</li> <li>GPGPU\uff08\u901a\u7528GPU\u7f16\u7a0b\uff09</li> <li>\u4eba\u673a\u4ea4\u4e92</li> <li>\u7b49\u7b49\u2026\u2026</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/#_2","title":"\u76f8\u5173\u8d44\u6599","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/#_3","title":"\u7f51\u4e0a\u7684\u5b66\u4e60\u8d44\u6e90","text":"<ol> <li>douysu3D\u9886\u57df\u5b66\u4e60\u7b14\u8bb0</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9B%BE%E5%BD%A2%E5%AD%A6%E6%A6%82%E8%BF%B0/%E8%BD%BB%E9%87%8F%E5%8C%96/","title":"\u8f7b\u91cf\u5316","text":"<p>\u8fd9\u91cc\u6240\u6307\u7684\u8f7b\u91cf\u5316\u662f\u201c\u4e09\u7ef4\u6a21\u578b\u8f7b\u91cf\u5316\u201d\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9B%BE%E5%BD%A2%E5%AD%A6%E6%A6%82%E8%BF%B0/%E8%BD%BB%E9%87%8F%E5%8C%96/#_1","title":"\u76f8\u5173\u6587\u7ae0","text":"<ol> <li>\u4e00\u62db\u63d0\u9ad8\u4e09\u7ef4\u6a21\u578b\u6e32\u67d3\u6548\u7387</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9B%BE%E5%BD%A2%E5%AD%A6%E6%A6%82%E8%BF%B0/%E8%BD%BB%E9%87%8F%E5%8C%96/#_2","title":"\u4ea7\u54c1","text":"<ol> <li>\u8001\u5b50\u4e91API</li> <li></li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9B%BE%E5%BD%A2%E5%AD%A6%E6%A6%82%E8%BF%B0/%E8%BD%BB%E9%87%8F%E5%8C%96/HLOD/","title":"HLOD","text":"<p>HLOD\uff0cHierarchical Level of Detail\uff0c\u5206\u5c42\u7ec6\u8282\u6a21\u578b\u3002</p> <ul> <li>\u7528\u4e00\u4e2a\u7f51\u683c\u4ee3\u66ff\u591a\u4e2a\u7f51\u683c\uff0c\u5f62\u6210\u7684LOD\u6811\u72b6\u7ed3\u6784</li> <li>\u5f53\u8ddd\u79bb\u8db3\u591f\u8fdc\u7684\u65f6\u5019\u5408\u5e76\u7f51\u683c\u6210\u4e00\u4e2a\uff0c\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u51cf\u5c11\u573a\u666f\u6e32\u67d3\u7684drawcall\u6570\u91cf\uff0c\u63d0\u9ad8\u6027\u80fd</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9B%BE%E5%BD%A2%E5%AD%A6%E6%A6%82%E8%BF%B0/%E8%BD%BB%E9%87%8F%E5%8C%96/HLOD/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>HLOD(Hierarchical Level of Detail) - \u77e5\u4e4e (zhihu.com)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9B%BE%E5%BD%A2%E5%AD%A6%E6%A6%82%E8%BF%B0/%E8%BD%BB%E9%87%8F%E5%8C%96/LOD/","title":"LOD","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9B%BE%E5%BD%A2%E5%AD%A6%E6%A6%82%E8%BF%B0/%E8%BD%BB%E9%87%8F%E5%8C%96/LOD/#_1","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>19.9 \u7ec6\u8282\u5c42\u6b21(LOD) - \u77e5\u4e4e (zhihu.com)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/Bresenham%E7%94%BB%E7%BA%BF%E7%AE%97%E6%B3%95/","title":"Bresenham\u753b\u7ebf\u7b97\u6cd5","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/Bresenham%E7%94%BB%E7%BA%BF%E7%AE%97%E6%B3%95/#_1","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>[\u4ece\u96f6\u6784\u5efa\u5149\u6805\u6e32\u67d3\u5668] 1.Bresenham \u753b\u7ebf\u7b97\u6cd5 - \u77e5\u4e4e (zhihu.com)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/","title":"2D\u56fe\u5143\u4e09\u89d2\u5316","text":"<p>\u76f8\u5173\u7b97\u6cd5</p> <ol> <li>\u5fb7\u52b3\u5185\u4e09\u89d2\u5316</li> <li>\u8033\u5207\u6cd5\u4e09\u89d2\u5316</li> </ol> <p>\u76f8\u5173\u5f00\u6e90\u5e93</p> <ol> <li>libtess2</li> <li>CGAL 5.5.1 - 2D Triangulations: User Manual</li> <li>VTK: vtkDelaunay2D Class Reference</li> <li>About the Constrained Delaunay Triangulation \u00b7 gwlucastrig/Tinfour Wiki (github.com)</li> <li>greenm01/poly2tri: Automatically exported from code.google.com/p/poly2tri (github.com)</li> <li>NMO13/earclipper: 3D triangulation library (github.com)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E5%BE%B7%E5%8A%B3%E5%86%85%E4%B8%89%E8%A7%92%E5%8C%96/","title":"\u5fb7\u52b3\u5185\u4e09\u89d2\u5316","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E5%BE%B7%E5%8A%B3%E5%86%85%E4%B8%89%E8%A7%92%E5%8C%96/#_1","title":"\u5f00\u6e90\u5e93","text":"<ol> <li>About the Constrained Delaunay Triangulation \u00b7 gwlucastrig/Tinfour Wiki (github.com)</li> <li>bl4ckb0ne/delaunay-triangulation: C++ version the delaunay triangulation (github.com)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E5%BE%B7%E5%8A%B3%E5%86%85%E4%B8%89%E8%A7%92%E5%8C%96/#_2","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>Triangulate: Pan Pacific Computer Conference, Beijing, China (paulbourke.net)</li> <li>\u4e09\u89d2\u5256\u5206\u7b97\u6cd5(delaunay) - \u7eb8\u5f02\u517d - \u535a\u5ba2\u56ed (cnblogs.com)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E5%BE%B7%E5%8A%B3%E5%86%85%E4%B8%89%E8%A7%92%E5%8C%96/Triangle/","title":"Triangle(2D\u4e09\u89d2\u5316)","text":"<p>\u76f8\u5173\u94fe\u63a5 1. https://www.cs.cmu.edu/~quake/triangle.html\uff1b\u4ee3\u7801 2. Triangle\u7684\u5c01\u88c5\uff1awo80/Triangle</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E5%BE%B7%E5%8A%B3%E5%86%85%E4%B8%89%E8%A7%92%E5%8C%96/Triangle/#_1","title":"\u547d\u4ee4\u884c\u53c2\u6570","text":"<p>\u6587\u6863\uff1aTriangle: Command line switches (cmu.edu)</p> <pre><code>-p Triangulates a Planar Straight Line Graph (.poly file).\n    \u8f93\u5165\u4e00\u4e2a.poly\uff08\u5e73\u9762\u76f4\u7ebf\u56fe\uff09\u6587\u4ef6\uff0c\u5bf9\u5b83\u8fdb\u884c\u4e09\u89d2\u5316\n\n-r Refines a previously generated mesh.\n    \u4f18\u5148\u4e4b\u524d\u751f\u6210\u7684\u7f51\u683c\n\n-q Quality mesh generation with no angles smaller than 20 degrees. An alternate minimum angle may be specified after the `q'.\n    \u751f\u6210\u4e0d\u5c0f\u4e8e20\u00b0\u89d2\u5ea6\u7684\u9ad8\u8d28\u91cf\u7f51\u683c\u3002\u53ef\u4ee5\u5728\"q\"\u4e4b\u540e\u6307\u5b9a\u6700\u5c0f\u89d2\u5ea6\n\n-a Imposes a maximum triangle area constraint. A fixed area constraint (that applies to every triangle) may be specified after the `a', or varying area constraints may be read from a .poly file or .area file.\n    \u5bf9\u4e09\u89d2\u5f62\u6700\u5927\u9762\u79ef\u505a\u7ea6\u675f\n\n-u Imposes a user-defined constraint on triangle size.\n    \u5bf9\u4e09\u89d2\u5f62\u4e2a\u6570\u505a\u7ea6\u675f\n\n-A Assigns a regional attribute to each triangle that identifies what segment-bounded region it belongs to.\n    \u4e3a\u6bcf\u4e2a\u4e09\u89d2\u5f62\u5206\u914d\u4e00\u4e2a\u533a\u57df\u5c5e\u6027\n\n-c Encloses the convex hull with segments.\n    \u7528\u7ebf\u6bb5\u96c6\u5305\u56f4\u51f9\u5305\n\n-D Conforming Delaunay: use this switch if you want all triangles in the mesh to be Delaunay, and not just constrained Delaunay; or if you want to ensure that all Voronoi vertices lie within the triangulation.\n    \u7b26\u5408\u5fb7\u52b3\u5185\n\n-j Jettisons vertices that are not part of the final triangulation from the output .node file (including duplicate input vertices and vertices ``eaten'' by holes).\n    \u653e\u5f03\u4e0d\u5c5e\u4e8e\u7ed3\u679c\u4e2d\u7684\u9876\u70b9\uff08\u5982\u91cd\u590d\u8f93\u5165\u7684\u9876\u70b9\u3001\u5728\u6d1e\u5185\u7684\u9876\u70b9\uff09\n\n-e Outputs (to an .edge file) a list of edges of the triangulation.\n    \u5c06\u4e09\u89d2\u7f51\u7684\u8fb9\u8f93\u51fa\u5230.edge\u6587\u4ef6\u4e2d\n\n-v Outputs the Voronoi diagram associated with the triangulation. Does not attempt to detect degeneracies, so some Voronoi vertices may be duplicated.\n    \u8f93\u51fa\u4e0e\u4e09\u89d2\u5316\u76f8\u5173\u7684Voronoi\u56fe\n\n-n Outputs (to a .neigh file) a list of triangles neighboring each triangle.\n    \u5c06\u4e0e\u6bcf\u4e2a\u4e09\u89d2\u5f62\u76f8\u90bb\u7684\u4e09\u89d2\u5f62\u8f93\u51fa\u5230.neigh\u6587\u4ef6\u5f53\u4e2d\n\n-g Outputs the mesh to an Object File Format (.off) file, suitable for viewing with the Geometry Center's Geomview package.\n    \u5c06\u4e09\u89d2\u7f51\u8f93\u51fa\u5230off\u6587\u4ef6\u5f53\u4e2d\n\n-B Suppresses boundary markers in the output .node, .poly, and .edge output files.\n    \u7981\u6b62\u5c06 \u8fb9\u754c\u6807\u8bb0 \u8f93\u51fa\u5230node\u3001poly\u3001edge\u6587\u4ef6\u5f53\u4e2d\n\n-P Suppresses the output .poly file. Saves disk space, but you lose the ability to maintain constraining segments on later refinements of the mesh.\n    \u7981\u6b62\u8f93\u51fapoly\u6587\u4ef6\n\n-N Suppresses the output .node file.\n    \u7981\u6b62\u8f93\u51fanode\u6587\u4ef6\n\n-E Suppresses the output .ele file.\n    \u7981\u6b62\u8f93\u51faele\u6587\u4ef6\n\n-I Suppresses mesh iteration numbers.\n    \u7981\u6b62\u7f51\u683c\u8fed\u4ee3\n\n-O Suppresses holes: ignores the holes in the .poly file.\n    \u7981\u6b62\u5c06\u5b54\u6d1e\u8f93\u51fa\u5230Poly\u6587\u4ef6\u5f53\u4e2d\n\n-X Suppresses exact arithmetic.\n    \u7981\u6b62\u7cbe\u786e\u7b97\u672f\n\n-z Numbers all items starting from zero (rather than one). Note that this switch is normally overrided by the value used to number the first vertex of the input .node or .poly file. However, this switch is useful when calling Triangle from another program.\n    \u5bf9\u6240\u6709\u4ece0\u5f00\u59cb\uff08\u800c\u4e0d\u662f\u4ece1\u5f00\u59cb\uff09\u7684\u9879\u8fdb\u884c\u7f16\u7801\u3002\n\n-o2 Generates second-order subparametric elements with six nodes each.\n    \u751f\u6210\u4e8c\u9636\u5b50\u53c2\u6570\uff0c\u6bcf\u4e2a\u5143\u7d20\u6709\u516d\u4e2a\u8282\u70b9\n\n-Y Prohibits the insertion of Steiner points on the mesh boundary. If specified twice (-YY), it prohibits the insertion of Steiner points on any segment, including internal segments.\n    \u7981\u6b62\u5728\u7f51\u683c\u8fb9\u754c\u4e0a\u63d2\u5165Steiner\u70b9\u3002\u82e5\u6307\u5b9a\u4e24\u4e2aY\uff08-YY\uff09\uff0c\u5219\u7981\u6b62\u63d2\u5165Steiner\u70b9\u5728\u4efb\u4f55\u7ebf\u6bb5\u4e0a\uff0c\u5305\u62ec\u5185\u90e8\u7684\u7ebf\u6bb5\u3002\n\n-S Specifies the maximum number of added Steiner points.\n    \u6307\u5b9a\u6dfb\u52a0Steiner\u70b9\u7684\u6700\u5927\u6570\u91cf\n\n-i Uses the incremental algorithm for Delaunay triangulation, rather than the divide-and-conquer algorithm.\n    \u4f7f\u7528\u589e\u91cf\u7b97\u6cd5\u8fdb\u884cDelaunay\u4e09\u89d2\u5316\uff0c\u800c\u4e0d\u662f\u5206\u800c\u6cbb\u4e4b\u7684\u7b97\u6cd5\n\n-F Uses Steven Fortune's sweepline algorithm for Delaunay triangulation, rather than the divide-and-conquer algorithm.\n    \u4f7f\u7528Steven Fortune\u7684\u626b\u63cf\u7b97\u6cd5\u8fdb\u884cDelaunay\u4e09\u89d2\u5316\uff0c\u800c\u4e0d\u662f\u5206\u800c\u6cbb\u4e4b\u7684\u7b97\u6cd5\n\n-l Uses only vertical cuts in the divide-and-conquer algorithm. By default, Triangle uses alternating vertical and horizontal cuts, which usually improve the speed except with vertex sets that are small or short and wide. This switch is primarily of theoretical interest.\n    \u5728\u5206\u800c\u6cbb\u4e4b\u7b97\u6cd5\u4e2d\uff0c\u4ec5\u4f7f\u7528\u5782\u76f4\u5207\u5272\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e09\u89d2\u5f62\u4ea4\u66ff\u4f7f\u7528\u5782\u76f4\u3001\u6c34\u5e73\u5207\u5272\uff0c\u8fd9\u901a\u5e38\u4f1a\u63d0\u9ad8\u901f\u5ea6\uff0c\u9664\u4e86\u9876\u70b9\u96c6\u5c0f\u3001\u77ed\u548c\u5bbd\u7684\u60c5\u51b5\n\n-s Specifies that segments should be forced into the triangulation by recursively splitting them at their midpoints, rather than by generating a constrained Delaunay triangulation. Segment splitting is true to Ruppert's original algorithm, but can create needlessly small triangles. This switch is primarily of theoretical interest.\n    \u4f7f\u7528 \u9012\u5f52\u62c6\u5206\u5b83\u4eec\u4e2d\u70b9 \u7684\u65b9\u6cd5\u8fdb\u884c\u5f3a\u5236\u4e09\u89d2\u5316\uff0c\u800c\u4e0d\u662f\u751f\u6210\u53d7\u7ea6\u675f\u7684\u5fb7\u52b3\u5185\u4e09\u89d2\u5316\n\n-C Check the consistency of the final mesh. Uses exact arithmetic for checking, even if the -X switch is used. Useful if you suspect Triangle is buggy.\n    \u68c0\u67e5\u6700\u7ec8\u7f51\u683c\u7684\u4e00\u81f4\u6027\n\n-Q Quiet: Suppresses all explanation of what Triangle is doing, unless an error occurs.\n    \u7981\u6b62\u8f93\u51fa\u4e09\u89d2\u5f62\u6b63\u5728\u505a\u4ec0\u4e48\u7684\u4fe1\u606f\uff0c\u9664\u975e\u9047\u5230\u9519\u8bef\n\n-V Verbose: Gives detailed information about what Triangle is doing. Add more `V's for increasing amount of detail. `-V' gives information on algorithmic progress and detailed statistics.\n    \u8be6\u7ec6\u8f93\u51fa\uff0c\u5305\u62ec\u6bcf\u4e2a\u4e09\u89d2\u5f62\u5728\u505a\u4ec0\u4e48\u7684\u8f93\u51fa\n\n-h Help: Displays complete instructions.\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/","title":"\u8033\u5207\u6cd5\u4e09\u89d2\u5316","text":"<p>\u8033\u5207\u6cd5\u652f\u6301\u590d\u6742\u591a\u8fb9\u5f62\uff08\u5e26\u5c9b\u4e14\u5d4c\u5957\uff09\u7684\u4e09\u89d2\u5316\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/#_1","title":"\u539f\u7406\u7b80\u4ecb","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/#_2","title":"\u591a\u8fb9\u5f62\u7684\u8033\u6735","text":"<p>\u53d6\u591a\u8fb9\u5f62\u8fde\u7eed\u7684\u4e09\u4e2a\u9876\u70b9A\u3001B\u3001C\uff0c\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6</p> <ol> <li>B\u662f\u51f8\u9876\u70b9\uff08\u5185\u89d2\u5c0f\u4e8e180\u00b0\uff09</li> <li>\u7ebf\u6bb5AC\u5728\u591a\u8fb9\u5f62\u5185</li> <li>\u6ca1\u6709\u5176\u4ed6\u9876\u70b9\u843d\u5728\u4e09\u89d2\u5f62ABC\u91cc\u9762</li> </ol> <p>\u5219\u79f0</p> <ol> <li>A\u3001B\u3001C\u662f\u8be5\u591a\u8fb9\u5f62\u7684\u4e00\u4e2a\u8033\u6735</li> <li>B\u53eb\u505a\u8033\u5c16</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/#_3","title":"\u8033\u5207\u6cd5","text":"<p>\u8033\u5207\u6cd5\u7684\u601d\u8def\u5c31\u662f\uff1a\u4e0d\u65ad\u8fed\u4ee3\u627e\u5230\u8033\u6735\uff0c\u7136\u800c\u79fb\u9664\u8033\u6735\uff0c\u76f4\u5230\u53ea\u5269\u4e0b\u4e00\u4e2a\u8033\u6735\uff08\u4e09\u89d2\u5f62\uff09</p> <p>\u793a\u4f8b\uff1a\u7b80\u5355Polygon</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/#_4","title":"\u76f8\u5173\u8d44\u6599","text":"<ol> <li>Triangulation by Ear Clipping (geometrictools.com)\uff1b\u4e2d\u6587\u7ffb\u8bd1</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/earcut/","title":"earcut(\u4e09\u89d2\u5316\u5e93)","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/earcut/#_1","title":"\u76f8\u5173\u5730\u5740","text":"<ol> <li>https://github.com/mapbox/earcut.hpp</li> <li>Earcut: \u6700\u5feb\u548c\u6700\u5c0f\u7684JavaScript\u591a\u8fb9\u5f62\u4e09\u89d2\u5256\u5206\u5e93</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/earcut/#_2","title":"\u7b80\u4ecb","text":"<p>\u8be5\u5e93\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6539\u8fdb\u7684\u8033\u6735\u5207\u7247\u7b97\u6cd5\uff0c\u901a\u8fc7z-order\u66f2\u7ebf\u54c8\u5e0c\u4f18\u5316\uff0c\u5e76\u6269\u5c55\u5230\u5904\u7406\u5b54\u3001\u626d\u66f2\u591a\u8fb9\u5f62\u3001\u9000\u5316\u548cself-intersections\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u4fdd\u8bc1\u4e09\u89d2\u5256\u5206\u7684\u6b63\u786e\u6027\uff0c\u4f46\u59cb\u7ec8\u5c1d\u8bd5\u4e3a\u5b9e\u9645\u6570\u636e\u751f\u6210\u53ef\u63a5\u53d7\u7684\u7ed3\u679c\u3002</p> <p>\u5b83\u57fa\u4e8eFIST\u7684\u601d\u60f3\uff1aMartin Hold\u7684\u5feb\u901fIndustrial-Strength\u591a\u8fb9\u5f62\u4e09\u89d2\u5256\u5206\u548cDavid Eberly\u7684\u8033\u6735\u88c1\u526a\u4e09\u89d2\u5256\u5206\u3002</p> <p>\u8be5\u9879\u76ee\u7684\u76ee\u6807\u662f\u521b\u5efa\u4e00\u4e2aJS\u4e09\u89d2\u5256\u5206\u5e93\uff0c\u8be5\u5e93\u8db3\u591f\u5feb\u901f\u5730\u5728\u6d4f\u89c8\u5668\u4e2d\u8fdb\u884creal-time\u4e09\u89d2\u5256\u5206\uff0c\u727a\u7272\u4e09\u89d2\u5256\u5206\u8d28\u91cf\u4ee5\u83b7\u5f97\u539f\u59cb\u901f\u5ea6\u548c\u7b80\u5355\u6027\uff0c\u540c\u65f6\u5177\u6709\u8db3\u591f\u7684\u5065\u58ee\u6027\u6765\u5904\u7406\u5927\u591a\u6570\u5b9e\u9645\u6570\u636e\u96c6\uff0c\u800c\u4e0d\u4f1a\u5d29\u6e83\u6216\u4ea7\u751f\u5783\u573e\u3002</p> <p>\u5b83\u6700\u521d\u521b\u5efa\u7684\u7528\u4f8b\u662fmapboxgl\uff0cWebGL-based\u4ea4\u4e92\u5f0f\u5730\u56fe\u3002 \u5982\u679c\u4f60\u60f3\u5f97\u5230\u6b63\u786e\u7684\u4e09\u89d2\u5256\u5206\uff0c\u5373\u4f7f\u5728\u975e\u5e38\u7cdf\u7cd5\u7684\u6570\u636e\u4e0a\u6709\u5927\u91cf\u7684self-intersections\uff0c\u90a3\u4e48\u770b\u770blibtess.js\uff08earcut\u662f\u4e0d\u591f\u7cbe\u786e\uff09\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/earcut/#_3","title":"\u793a\u4f8b\u4ee3\u7801","text":"<pre><code>// The number type to use for tessellation\nusing Coord = double;\n// The index type. Defaults to uint32_t, but you can also pass uint16_t if you know that your\n// data won't have more than 65536 vertices.\nusing N = uint32_t;\n// Create array\nusing Point = std::array&lt;Coord, 2&gt;;\nstd::vector&lt;std::vector&lt;Point&gt;&gt; polygon;\n// Fill polygon structure with actual data. Any winding order works.\n// The first polyline defines the main polygon.\npolygon.push_back({{100, 0}, {100, 100}, {0, 100}, {0, 0}});\n// Following polylines define holes.\npolygon.push_back({{75, 25}, {75, 75}, {25, 75}, {25, 25}});\n// Run tessellation\n// Returns array of indices that refer to the vertices of the input polygon.\n// e.g: the index 6 would refer to {25, 75} in this example.\n// Three subsequent indices form a triangle. Output triangles are clockwise.\nstd::vector&lt;N&gt; indices = mapbox::earcut&lt;N&gt;(polygon);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/earcut/earcut%E5%AF%B9%E7%BA%A6%E6%9D%9F%E7%BA%BF%E6%AE%B5%E7%9A%84%E6%94%AF%E6%8C%81/","title":"Earcut\u5bf9\u7ea6\u675f\u7ebf\u6bb5\u7684\u652f\u6301","text":"<p>\u6d4b\u8bd5\u6570\u636e</p> <ol> <li>\u4e00\u4e2a\u6b63\u65b9\u5f62</li> <li>\u4e00\u4e2a\u80fd\u591f\u5207\u65ad\u6b63\u65b9\u5f62\u7684\u7ebf\u6bb5\uff0c\u4f5c\u4e3a\u7ea6\u675f\u4e09\u89d2\u5316\u7684\u7ebf\u6bb5</li> </ol> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/earcut/earcut%E5%AF%B9%E7%BA%A6%E6%9D%9F%E7%BA%BF%E6%AE%B5%E7%9A%84%E6%94%AF%E6%8C%81/#_1","title":"\u5c06\u7ea6\u675f\u7ebf\u6bb5\u4f5c\u4e3a\u5185\u73af\u4f20\u5165\uff08\u5931\u8d25\uff09","text":"<pre><code>{\nusing collector = mapbox::fixtures::Collector&lt;mapbox::fixtures::FixtureTester *&gt;;\ncollector::collection().clear(); //\u6e05\u7a7a\u539f\u6765\u7684\u793a\u4f8b\n{\nstatic mapbox::fixtures::Fixture&lt;short&gt; mytest(\"my_test\", 7, 1e-14, 0.000001, { //Polygon\n{ { 2, 2 }, { -2, 2 },{ -2, -2 },{ 2, -2 }, {2,2,} }, //\u5916\u73af\n{ { 1, 2 }, { -1, -2 } } //\u7ea6\u675f\u7ebf\u6bb5\u4f5c\u4e3a\u5185\u73af\u4f20\u5165\n});\ncollector::add(&amp;mytest);\n}\n}\n</code></pre> <p>\u6839\u636e\u4e09\u89d2\u5316\u7ed3\u679c\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u6ca1\u6709\u57fa\u4e8e\u7ea6\u675f\u7ebf\u6bb5\u6765\u8fdb\u884c\u4e09\u89d2\u5316</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/earcut/earcut%E5%AF%B9%E7%BA%A6%E6%9D%9F%E7%BA%BF%E6%AE%B5%E7%9A%84%E6%94%AF%E6%8C%81/#_2","title":"\u5c06\u7ea6\u675f\u7ebf\u6bb5\u4e0e\u5916\u73af\u6784\u6210\u6536\u5c3e\u76f8\u8fde\u7684\u73af\uff08\u6210\u529f\uff09","text":"<p>\u7ea6\u675f\u7ebf\u6bb5\u4e0e\u5916\u73af\u6784\u6210\u4e00\u4e2a\u6536\u5c3e\u76f8\u8fde\u7684\u73af\uff0c\u7136\u540e\u4f20\u5165</p> <pre><code>static mapbox::fixtures::Fixture&lt;short&gt; mytest(\"my_test\", 7, 1e-14, 0.000001, { { { 1, 2 }, { -1, -2 }, { -2, -2 }, { -2, 2 }, { 2, 2 }, { 2, -2 }, {-1,-2} }\n});\n</code></pre> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/earcut/earcut%E5%AF%B9%E7%BA%A6%E6%9D%9F%E7%BA%BF%E6%AE%B5%E7%9A%84%E6%94%AF%E6%8C%81/#_3","title":"\u603b\u7ed3","text":"<ol> <li>earcut\u4e0d\u652f\u6301\u5e26\u7ea6\u675f\u7ebf\u6bb5\u7684\u4e09\u89d2\u5256\u5206</li> <li>\u5982\u679c\u5b9e\u5728\u8981\u4f7f\u7528earcut\u505a\u8fd9\u4ef6\u4e8b\uff0c\u53ef\u4ee5\u5c06\u7ea6\u675f\u7ebf\u6bb5\u4e0e\u5916\u73af\u6784\u6210\u4e00\u4e2a\u9996\u4f4d\u76f8\u8fde\u7684\u73af\uff0c\u8fdb\u884c\u4e09\u89d2\u5316</li> <li>\u5176\u5b9e\uff0c\u4ece\u8033\u5207\u6cd5\u7684\u539f\u7406\u4e0a\u770b\uff0c\u662f\u4e0d\u652f\u6301\u7ea6\u675f\u7ebf\u6bb5\u7684</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/earcut/viz%28%E7%94%A8OpenGL%E7%AE%80%E5%8D%95%E7%BB%98%E5%88%B62D%E5%9B%BE%E5%BD%A2%29/","title":"viz(\u7528OpenGL\u7b80\u5355\u7ed8\u52362D\u56fe\u5f62)","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/earcut/viz%28%E7%94%A8OpenGL%E7%AE%80%E5%8D%95%E7%BB%98%E5%88%B62D%E5%9B%BE%E5%BD%A2%29/#_1","title":"\u7b80\u4ecb","text":"<p>viz\u662fearcut\u4e2d\u4e00\u4e2a\u7b80\u6613\u7684\u67e5\u770b\u5668\uff0c\u5185\u7f6e\u6709\u5f88\u591a\u6d4b\u8bd5\u7528\u4f8b\u3002</p> <ol> <li>\u901a\u8fc7\u65b9\u5411\u952e\u5de6\u53f3\uff0c\u5207\u6362\u793a\u4f8b</li> <li>\u901a\u8fc7\u4e0a\u4e0b\uff0c\u5207\u6362<code>earcut</code>\u3001<code>libtess2</code>\u7684\u4e09\u89d2\u5316\u7ed3\u679c</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/earcut/viz%28%E7%94%A8OpenGL%E7%AE%80%E5%8D%95%E7%BB%98%E5%88%B62D%E5%9B%BE%E5%BD%A2%29/#_2","title":"\u6dfb\u52a0\u81ea\u5df1\u7684\u793a\u4f8b","text":"<p>\u53ef\u4ee5\u5728\u521b\u5efa\u7a97\u53e3\u540e\uff0c\u5411\u6d4b\u8bd5\u7528\u4f8b\u5bb9\u5668\u4e2d\uff0c\u6dfb\u52a0\u81ea\u5df1\u7684\u793a\u4f8b</p> <pre><code>int main() {\n//...\nif (!window) {\nglfwTerminate();\nreturn 1;\n}\n//\u6dfb\u81ea\u5df1\u7684\u52a0\u6d4b\u8bd5\u7528\u4f8b\n{\nusing collector = mapbox::fixtures::Collector&lt;mapbox::fixtures::FixtureTester *&gt;;\ncollector::collection().clear(); //\u6e05\u7a7a\u539f\u6765\u7684\u793a\u4f8b\n//\u6dfb\u52a0\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\n{\nstatic mapbox::fixtures::Fixture&lt;short&gt; my_test(\n\"mytest\", //\u540d\u79f0 \n7, //\u671f\u671b\u5f97\u5230\u51e0\u4e2a\u4e09\u89d2\u5f62\n1e-14,    //\u5bf9earcut\u5e93\u8ba1\u7b97\u7ed3\u679c\uff0c\u671f\u671b\u7684\u504f\u5dee(Deviation)\n0.000001, //\u5bf9libtess\u5e93\u8ba1\u7b97\u7ed3\u679c\uff0c\u671f\u671b\u7684\u504f\u5dee\n//\u4ec5\u7ed8\u5236\u7684\u8bdd\uff0c\u524d\u9762\u7684\u53c2\u6570\u53ef\u4ee5\u5ffd\u7565\uff0c\u4e71\u8bbe\u7f6e\u90fd\u884c\n{ //\u4e00\u4e2aPolygon\n{ { 2, 2 }, { -2, 2 },{ -2, -2 },{ 2, -2 }, {2,2,} }, //\u5916\u73af\n{ { 1, 0 }, { 0, 1 }, { -1, 0 } } //\u5185\u73af\n//\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u52a0\u5185\u73af\n});\ncollector::add(&amp;my_test);\n}\n}\n//...\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/earcut/viz%28%E7%94%A8OpenGL%E7%AE%80%E5%8D%95%E7%BB%98%E5%88%B62D%E5%9B%BE%E5%BD%A2%29/#_3","title":"\u6e90\u7801\u9605\u8bfb","text":"<p>\u8981\u70b9</p> <ol> <li>\u53ea\u4f9d\u8d56\u4e86glfw\uff0c\u7528\u4e8e\u521b\u5efa\u8de8\u5e73\u53f0\u7a97\u53e3</li> <li>\u7528earcut\u3001libtess2\u505a\u4e86\u4e09\u89d2\u5316\uff0c\u80fd\u591f\u5bf9\u6bd4\u4e24\u8005\u7684\u6548\u679c</li> <li>mvp\u77e9\u9635\u90fd\u4e3a\u5355\u4f4d\u77e9\u9635\uff0c\u907f\u514d\u4e86\u5f15\u5165\u6570\u636e\u5e93\u3002\u4e8c\u7ef4\u7a7a\u95f4\u4e0b\u7684\u5750\u6807\u8f6c\u6362\u7528\u52a0\u51cf\u4e58\u9664\u5373\u53ef\u89e3\u51b3\uff0c\u65e0\u9700\u7528\u77e9\u9635</li> </ol> <p>\u603b\u7ed3\uff1a\u4ee3\u7801\u7ed3\u6784\u3001\u903b\u8f91\u6e05\u6670</p> <pre><code>#include \"comparison/earcut.hpp\"\n#include \"comparison/libtess2.hpp\"\n#include \"fixtures/geometries.hpp\"\n#if _MSC_VER &gt;= 1900\n#pragma comment(lib, \"legacy_stdio_definitions.lib\")\n#endif\n#include &lt;GLFW/glfw3.h&gt;\n#include &lt;cstdlib&gt;\n#include &lt;cmath&gt;\n#include &lt;vector&gt;\n#include &lt;memory&gt;\nstatic GLFWwindow *window = nullptr;\nstatic const int width = 1024;\nstatic const int height = 1024;\nstatic bool drawFill = true, drawMesh = true, drawOutline = true;\nstatic bool dirtyViewport = true, dirtyShape = true, dirtyTessellator = true;\nstatic float colorBackground[4] = {1.f, 1.f, 1.f, 1.f};\nstatic float colorMesh[4] = {1.f, 0.f, 0.f, 0.2f}, colorFill[4] = {1.f, 1.f, 0.f, 0.2f};\nstatic float colorOutline[4] = {0.2f, 0.2f, 0.2f, 0.9f}, colorInline[4] = {0.7f, 0.6f, .2f, 0.9f};\nstatic bool mouseDrag = false;  //\u9f20\u6807\u62d6\u62fd\u72b6\u6001\nstatic std::size_t shapeIndex = 0;  //\u5f53\u524d\u4f7f\u7528\u7684shape\u3002\u4e0b\u6807\nstatic std::size_t tessellator = 0; //\u5f53\u524d\u4f7f\u7528\u54ea\u4e2a\u4e09\u89d2\u5316\u5de5\u5177\u3002\u4e0b\u6807\n// 2D\u7684\u6444\u50cf\u673a\nstruct Camera2D {\ndouble left = .0, right = .0, bottom = .0, top = .0;//Polygon\u7684Box\ndouble translateX = .0, translateY = .0;            //\u5e73\u79fb\u503c\nint viewWidth = 0, viewHeight = 0;                  //\u89c6\u53e3\u5927\u5c0f\uff08\u50cf\u7d20\u5355\u4f4d\uff09\ndouble zoom = -1.;                                  //\u7f29\u653e\u7cfb\u6570\ndouble mx = .0, my = .0;    //\u4e16\u754c\u5750\u6807\u6570\u503c * mx = \u5c4f\u5e55\u5750\u6807\u6570\u503c\uff08\u5c4f\u5e55\u5750\u6807[-1,1]\uff09\ndouble cx = .0, cy = .0;    //\u89c6\u53e3\u4e2d\u5fc3\u70b9\u7684\u5750\u6807\uff08\u4e16\u754c\u5750\u6807\u5230\u5c4f\u5e55\u5750\u6807\u4e0b\u4e4b\u540e\u7684\u504f\u79fb\u503c\uff09\uff0c\u7684\u8d1f\u6570\ninline float dpi() { return float(viewHeight) / height; }\ninline double scaling() { return std::pow(1.1, zoom); }\nvoid setView(int width, int height) {\nviewWidth = width;\nviewHeight = height;\n}\nvoid limits(double l, double r, double b, double t) {\nleft = l;\nright = r;\nbottom = b;\ntop = t;\n}\nbool scale(double z) {\nif (z == 0) return false;\nzoom += z;\nreturn true;\n}\n/*\n     \\param x,y: \u50cf\u7d20\u5355\u4f4d\u3002\u539f\u70b9\u5728\u5de6\u4e0a\u89d2\u7684\u5c4f\u5e55\u5750\u6807\u7cfb\n     */\nbool move(double x, double y) {\nconst double s = scaling();\nconst double dx = x / double(viewWidth) * (right - left) / s;\nconst double dy = y / double(viewHeight) * (bottom - top) / s;\nif (dx == 0 &amp;&amp; dy == 0) {\nreturn false;\n}\ntranslateX += dx;\ntranslateY += dy;\nreturn true;\n}\n/* apply current transform to opengl context */\nvoid apply() {\nglViewport(0, 0, viewWidth, viewHeight);\n//\u6295\u5f71\u3001\u6a21\u578b\u89c6\u56fe\u77e9\u9635\u90fd\u4e3a\u5355\u4f4d\u77e9\u9635\n//\u7ed8\u5236\u65f6\uff0c\u6539\u53d8\u5750\u6807\u503c\u5373\u53ef\n//\u5982\u6b64\u5c31\u4e0d\u7528\u4f9d\u8d56\u4e00\u4e2a\u77e9\u9635\u5e93\nglMatrixMode(GL_PROJECTION);\nglLoadIdentity();\nglMatrixMode(GL_MODELVIEW);\nglLoadIdentity();\n//\u8ba1\u7b97 \u4e16\u754c\u5750\u6807-&gt;\u5c4f\u5e55\u5750\u6807 \u7684\u53d8\u6362\u53c2\u6570\nconst double s = scaling();\nconst double w2 = .5 * (right - left);  //\u5bbd\u5ea6\u7684\u4e00\u534a \nconst double h2 = .5 * (top - bottom);  //\u9ad8\u5ea6\u7684\u4e00\u534a\nmx = s / w2;                            //\u5c06\u4e16\u754c\u5750\u6807\u5355\u4f4d\u6620\u5c04\u5230\u5c4f\u5e55\u5750\u6807\u7684\u5355\u4f4d\u4e0a\uff08mx=1/w2\uff09\uff0c\u591a\u4e58\u4ee5\u4e86\u4e00\u4e2as\uff0c\u662f\u56e0\u4e3a\u8981\u505a\u4e00\u4e2a\u7f29\u653e\ncx = (-left - w2 + translateX) * mx;    //(left+w2)*mx \u4e2d\u5fc3\u70b9\u7684x\u5750\u6807\u503c\uff08\u5c4f\u5e55\u5750\u6807\u7cfb\uff09\u3002\u8fd9\u91cc\u591a\u586b\u4e86\u4e00\u4e2a\u8d1f\u53f7\uff0c\u5219toScreen()\u65b9\u6cd5\u4e2d\uff0c\u5c31\u662f+cx\nmy = s / h2;\ncy = (-bottom - h2 + translateY) * my;\n/* todo: cx, cy\u8fd9\u91cc\u53d6\u4e86\u8d1f\u53f7\uff0c\u4e0d\u65b9\u4fbf\u7406\u89e3\n            \u6539\u8fdb\u65b9\u6848\uff1a\u8fd9\u91cc\u4e0d\u4e58-1\uff0c\u5728\u8ba1\u7b97\u65f6\u4e58-1\n                cx = (left + w2 - translateX) * mx;\n                x = x * mx - cx;  //\u7136\u540e\u5728toScreen\u4e2d\u7528\u51cf\u6cd5\n         */\n/* todo: \u7f29\u653e\u903b\u8f91\u653e\u5728\u8fd9\u91cc\u4e00\u8d77\u8ba1\u7b97\uff0c\u4e0d\u65b9\u4fbf\u7406\u89e3\u3002\u53ef\u4ee5\u63d0\u5230toScene\u4e2d\n                mx = 1 / w2;            //\u4e0d\u5728\u8fd9\u91cc\u8ba1\u7b97s\n                x = (x * mx + cx) * s;  //\u5728toScreen\u4e2d\u505a\u7edf\u4e00\u8ba1\u7b97\n         */ }\nvoid setDefaults() {\nzoom = -1.;\ntranslateX = .0;\ntranslateY = .0;\n}\n//\u8f6c\u5230\u5c4f\u5e55\u5750\u6807\u7a7a\u95f4\uff0c\u5373\u6620\u5c04\u5230[-1, 1]\u8303\u56f4\n/* transforms world coordinate to screen range [-1,1] with double precision */\ninline void toScreen(double *x, double *y) {\n*x = *x * mx + cx;  //*mx\u5c06\u4e16\u754c\u5750\u6807\u5355\u4f4d\u6620\u5c04\u5230\u5c4f\u5e55\u5750\u6807\u7684\u5355\u4f4d; +cx\u5373\u628a\u5750\u6807\u7cfb\u539f\u70b9\u79fb\u52a8\u5230\u89c6\u53e3\u4e2d\u5fc3\u4e0a\n*y = *y * my + cy;\n}\n/* transforms screen coordinates in range [-1,1] to world coordinates with double precision */\ninline void toWorld(double *x, double *y) {\n*x = (*x - cx) / mx;\n*y = (*y - cy) / my;\n}\n//\u4e16\u754c\u5750\u6807\u7cfb -&gt; \u5c4f\u5e55\u5750\u6807\u7cfb\uff0c\u5e76\u7ed8\u5236\ninline void vec2(double x, double y) {\ntoScreen(&amp;x, &amp;y);\nglVertex2d(x, y); //todo: \u6444\u50cf\u673a\u4e2d\u8026\u5408\u4e86\u7ed8\u5236\u903b\u8f91\n}\n};\nstatic Camera2D cam;\n// \u7ed8\u5236Polygon\nclass DrawablePolygon {\npublic:\nstatic std::unique_ptr&lt;DrawablePolygon&gt; makeDrawable(std::size_t index, mapbox::fixtures::FixtureTester* fixture);\nDrawablePolygon() = default;\nvirtual ~DrawablePolygon() = default;\n//title\nvirtual const char* name() = 0;\n//\u7ed8\u5236\u4e09\u89d2\u5316\u7ed3\u679c\nvirtual void drawMesh() = 0;\n//\u7ed8\u5236\u8fb9\u6846\u7ebf\nvirtual void drawOutline() = 0;\n//\u7ed8\u5236Polygon\u7684\u586b\u5145\nvirtual void drawFill() = 0;\n};\n// \u7ed8\u5236\u4e09\u89d2\u5316\u7ed3\u679c\nclass DrawableTesselator : public DrawablePolygon {\n//\u4e09\u89d2\u5316\u7ed3\u679c\nmapbox::fixtures::FixtureTester::TesselatorResult shape;\n//Polygon\nmapbox::fixtures::DoublePolygon const&amp; polygon;\npublic:\nexplicit DrawableTesselator(mapbox::fixtures::FixtureTester::TesselatorResult tessellation,\nmapbox::fixtures::DoublePolygon const&amp; poly) : shape(tessellation), polygon(poly) { }\n//\u7ed8\u5236Mesh\uff08\u4e09\u89d2\u5316\u7ed3\u679c\u7684\u7ebf\u6846\uff09\nvoid drawMesh() override {\nconst auto &amp;v = shape.vertices; //\u9876\u70b9\nconst auto &amp;x = shape.indices;  //\u7d22\u5f15\nglBegin(GL_LINES); //\u7ebf\u6bb5\u96c6\nglColor4fv(colorMesh);\nfor (size_t i = 0; i &lt; x.size(); i += 3) {\n//A-&gt;B\ncam.vec2(v[x[i]][0], v[x[i]][1]);\ncam.vec2(v[x[i + 1]][0], v[x[i + 1]][1]);\n//B-&gt;C\ncam.vec2(v[x[i + 1]][0], v[x[i + 1]][1]);\ncam.vec2(v[x[i + 2]][0], v[x[i + 2]][1]);\n//C-&gt;A\ncam.vec2(v[x[i + 2]][0], v[x[i + 2]][1]);\ncam.vec2(v[x[i]][0], v[x[i]][1]);\n}\nglEnd();\n}\n//\u7ed8\u5236\u7ebf\u6846\nvoid drawOutline() override {\nglBegin(GL_LINES);\nfor (std::size_t i = 0; i &lt; polygon.size(); i++) {\nauto&amp; ring = polygon[i];\nglColor4fv(i == 0 ? colorOutline : colorInline); //\u7b2c\u4e00\u6761\u662f\u5916\u73af\uff1b\u5176\u4ed6\u662f\u5185\u73af\nfor (std::size_t j = 0; j &lt; ring.size(); j++) {\nauto&amp; p0 = ring[j];\nauto&amp; p1 = ring[(j+1) % ring.size()];\ncam.vec2(std::get&lt;0&gt;(p0), std::get&lt;1&gt;(p0));\ncam.vec2(std::get&lt;0&gt;(p1), std::get&lt;1&gt;(p1));\n}\n}\nglEnd();\n}\n//\u7ed8\u5236\u586b\u5145\uff08\u4e09\u89d2\u5316\u7ed3\u679c\u7684\u4e09\u89d2\u9762\uff09\nvoid drawFill() override {\nconst auto &amp;v = shape.vertices;\nconst auto &amp;x = shape.indices;\nglBegin(GL_TRIANGLES);\nglColor4fv(colorFill);\nfor (const auto pt : x) {\ncam.vec2(v[pt][0], v[pt][1]);\n}\nglEnd();\n}\n};\n// Earcut\u4e09\u89d2\u5316\nclass DrawableEarcut : public DrawableTesselator {\npublic:\nexplicit DrawableEarcut(mapbox::fixtures::FixtureTester* fixture)\n: DrawableTesselator(fixture-&gt;earcut(), fixture-&gt;polygon()) { }\nconst char *name() override { return \"earcut\"; };\n};\n// libtess2\u4e09\u89d2\u5316\nclass DrawableLibtess : public DrawableTesselator {\npublic:\nexplicit DrawableLibtess(mapbox::fixtures::FixtureTester* fixture)\n: DrawableTesselator(fixture-&gt;libtess(), fixture-&gt;polygon()) { }\nconst char *name() override { return \"libtess2\"; };\n};\n// \u626b\u63cf\u7ebf\nclass DrawableScanLineFill : public DrawablePolygon {\nstruct Edge {\nfloat yMin;\nfloat yMax;\nfloat scale;\nfloat offset;\nEdge* next = nullptr;\nEdge(double x1, double y1, double x2, double y2)\n: yMin((float)std::min&lt;double&gt;(y1, y2)),\nyMax((float)std::max&lt;double&gt;(y1, y2))\n{\nconst double dx = x1 - x2;\nconst double dy = y1 - y2;\nscale = (float)(dx / dy);\noffset = (float)((y1 * x2 - x1 * y2) / dy);\n}\ninline double intersection(double scanline) const {\n// horizontal scan-line intersection from the left\n// double precision for the calculation is required to avoid artifacts\nreturn scanline * scale + offset;\n}\n};\nmapbox::fixtures::FixtureTester* shape;\nstd::vector&lt;Edge*&gt; activeList; /* contains current sorted intersections */\nstd::vector&lt;std::vector&lt;Edge&gt;&gt; edgeTables; /* contains all edges sorted by yMin */\npublic:\nexplicit DrawableScanLineFill(mapbox::fixtures::FixtureTester* fixture) : shape(fixture) {\nauto&amp; polygon = shape-&gt;polygon();\nedgeTables.reserve(polygon.size());\nfor (const auto &amp;ring : polygon) {\nstd::vector&lt;Edge&gt; edgeTable;\nedgeTable.reserve(ring.size());\nfor (std::size_t i = 1; i &lt;= ring.size(); i++) {\nconst auto &amp;p0 = ring[i - 1], p1 = i == ring.size() ? ring[0] : ring[i];\nconst double x1 = std::get&lt;0&gt;(p0), y1 = std::get&lt;1&gt;(p0), x2 = std::get&lt;0&gt;(p1), y2 = std::get&lt;1&gt;(p1);\nif (y1 != y2) { edgeTable.emplace_back(x1, y1, x2, y2); }\n}\nstd::sort(edgeTable.begin(), edgeTable.end(), [&amp;](Edge const &amp;a, Edge const &amp;b) {\nreturn a.yMin &lt; b.yMin;\n});\nedgeTables.push_back(std::move(edgeTable));\n}\n}\nvoid scanLineFill(std::vector&lt;Edge&gt;&amp; edgeTable, double top, double bottom, double lineWidth) {\nassert(top &lt; bottom);\nassert(lineWidth &gt; 0);\n// create intrusive sorted edge list\nfor (std::size_t i = 1; i &lt; edgeTable.size(); i++) {\nedgeTable[i-1].next = &amp;edgeTable[i];\n}\nEdge* edgeList = edgeTable.empty() ? nullptr : &amp;edgeTable[0];\nconst double halfWidth = lineWidth * 0.5;\ntop -= lineWidth;\nbottom += lineWidth;\ndouble y0 = top;\nwhile(y0 &lt; bottom &amp;&amp; edgeList) {\ndouble y1 = y0 + lineWidth;\nif (y1 == y0) { y1 = std::nextafter(y1, bottom); }\nconst double y = y0 + halfWidth;\nactiveList.clear();\nEdge* prevEdge = nullptr;\nfor (auto edge = edgeList; edge != nullptr; edge = edge-&gt;next) {\nconst auto min = edge-&gt;yMin, max = edge-&gt;yMax;\nif (min &lt;= y &amp;&amp; y &lt; max) {\nactiveList.push_back(edge);\n}\nif (min &gt; y)  {\nbreak;\n} else if (y &gt;= max) {\n// unlink edge\nEdge** next = prevEdge ? &amp;prevEdge-&gt;next : &amp;edgeList;\n*next = edge-&gt;next;\n} else {\nprevEdge = edge;\n}\n}\nstd::sort(activeList.begin(), activeList.end(), [&amp;](Edge *a, Edge *b) {\nreturn a-&gt;intersection(y) &lt; b-&gt;intersection(y);\n});\ndouble x1y0 = 0, x1y1 = 0;\nfor (std::size_t i = 0; i &lt; activeList.size(); i++) {\nEdge *edge = activeList[i];\n// use slope to make MSAA possible\nconst double x2y0 = edge-&gt;intersection(std::max&lt;double&gt;(edge-&gt;yMin, y0));\nconst double x2y1 = edge-&gt;intersection(std::min&lt;double&gt;(edge-&gt;yMax, y1));\nif ((i % 2) != 0) {\ncam.vec2(x1y0, y0);\ncam.vec2(x1y1, y1);\ncam.vec2(x2y1, y1);\ncam.vec2(x2y0, y0);\n}\nx1y0 = x2y0;\nx1y1 = x2y1;\n}\ny0 = y1;\n}\n}\nvoid drawFill() override {\nfor (std::size_t i = 0; i &lt; edgeTables.size(); i++) {\nauto&amp; edgeTable = edgeTables[i];\nglBegin(GL_QUADS);\nglColor4fv(i == 0 ? colorFill : colorBackground);\ndouble x0 = 1;\ndouble y0 = 1;\ncam.toWorld(&amp;x0, &amp;y0);\ndouble x1 = -1;\ndouble y1 = -1;\ncam.toWorld(&amp;x1, &amp;y1);\nscanLineFill(edgeTable, y0, y1, (y1 - y0) / cam.viewHeight);\nglEnd();\n}\n}\nvoid drawOutline() override {\nauto&amp; polygon = shape-&gt;polygon();\nglBegin(GL_LINES);\nfor (std::size_t i = 0; i &lt; polygon.size(); i++) {\nauto&amp; ring = polygon[i];\nglColor4fv(i == 0 ? colorOutline : colorInline);\nfor (std::size_t j = 0; j &lt; ring.size(); j++) {\nauto&amp; p0 = ring[j];\nauto&amp; p1 = ring[(j+1) % ring.size()];\ncam.vec2(std::get&lt;0&gt;(p0), std::get&lt;1&gt;(p0));\ncam.vec2(std::get&lt;0&gt;(p1), std::get&lt;1&gt;(p1));\n}\n}\nglEnd();\n}\nvoid drawMesh() override { }\nconst char *name() override { return \"scanline-fill\"; }\n};\nstd::unique_ptr&lt;DrawablePolygon&gt; DrawablePolygon::makeDrawable(std::size_t index, mapbox::fixtures::FixtureTester* fixture) {\nif (index == 0) {\nreturn std::unique_ptr&lt;DrawablePolygon&gt;(new DrawableEarcut(fixture));\n} else if (index == 1) {\nreturn std::unique_ptr&lt;DrawablePolygon&gt;(new DrawableLibtess(fixture));\n} else {\nreturn std::unique_ptr&lt;DrawablePolygon&gt;(new DrawableScanLineFill(fixture));\n}\n}\n// \u4e09\u89d2\u5316\u5de5\u5177\nstatic std::array&lt;std::unique_ptr&lt;DrawablePolygon&gt;, 3&gt; tessellators;\n// \u83b7\u5f97\u6d4b\u8bd5\u6570\u636e\nmapbox::fixtures::FixtureTester *getFixture(std::size_t i) {\nauto&amp; fixtures = mapbox::fixtures::FixtureTester::collection();\nif (fixtures.empty()) {\nassert(false);\nexit(1);\n}\nreturn fixtures[i % fixtures.size()];\n}\nint main() {\nif (!glfwInit()) {\nreturn 1;\n}\nglfwWindowHint(GLFW_RESIZABLE, 0);\nglfwWindowHint(GLFW_SAMPLES, 4);\nwindow = glfwCreateWindow(width, height, \"Tessellation\", nullptr, nullptr);\nif (!window) {\nglfwTerminate();\nreturn 1;\n}\n// \u952e\u76d8\u6309\u4e0b\u56de\u8c03\nglfwSetKeyCallback(window,\n[](GLFWwindow *win, int key, int /*scancode*/, int action, int /*mods*/) {\nif (action != GLFW_PRESS &amp;&amp; action != GLFW_REPEAT) {\nreturn;\n}\nif (key == GLFW_KEY_ESCAPE || key == GLFW_KEY_Q) {\n//ESC, Q    \u9000\u51fa\nglfwSetWindowShouldClose(win, 1);\n} else if (key == GLFW_KEY_F) {\n//F         \u7ed8\u5236\u586b\u5145\u7684\u5f00\u5173\ndrawFill = !drawFill;\ndirtyViewport = true;\n} else if (key == GLFW_KEY_M) {\n//M         \u7ed8\u5236Mesh\u7684\u5f00\u5173\ndrawMesh = !drawMesh;\ndirtyViewport = true;\n} else if (key == GLFW_KEY_O) {\n//O         \u7ed8\u5236\u8f6e\u5ed3\u7684\u8fb9\u6846\ndrawOutline = !drawOutline;\ndirtyViewport = true;\n} else if (key == GLFW_KEY_RIGHT) {\n//\u65b9\u5411\u952e-\u53f3     \u5207\u6362shape\nif (shapeIndex + 1 &lt; mapbox::fixtures::FixtureTester::collection().size()) {\nshapeIndex++;\ndirtyShape = true;\n}\n} else if (key == GLFW_KEY_LEFT) {\n//\u65b9\u5411\u952e-\u5de6     \u5207\u6362shape\nif (shapeIndex &gt;= 1) {\nshapeIndex--;\ndirtyShape = true;\n}\n} else if (key == GLFW_KEY_T || key == GLFW_KEY_UP) {\n//\u65b9\u5411\u952e-\u4e0a     \u5207\u6362\u4e09\u89d2\u5316\u5de5\u5177\ntessellator = (tessellator + 1) % tessellators.size();\ndirtyTessellator = true;\n} else if (key == GLFW_KEY_DOWN) {\n//\u65b9\u5411\u952e-\u4e0b     \u5207\u6362\u4e09\u89d2\u5316\u5de5\u5177\ntessellator = (tessellator + tessellators.size() - 1) % tessellators.size();\ndirtyTessellator = true;\n} else if (key == GLFW_KEY_KP_ADD) {\n//\u53f3\u4fa7\u5c0f\u952e\u76d8+\u53f7   \u7f29\u653e\ndirtyViewport |= cam.scale(1.);\n} else if (key == GLFW_KEY_KP_SUBTRACT) {\n//\u53f3\u4fa7\u5c0f\u952e\u76d8-\u53f7   \u7f29\u653e\ndirtyViewport |= cam.scale(-1.);\n} else if (key == GLFW_KEY_R) {\n//R             \u91cd\u7f6e\uff0c\u6240\u6709\u90fd\u7ed8\u5236\ndirtyTessellator = dirtyViewport = dirtyShape = true;\n} else if (key == GLFW_KEY_W) {\n//w a s d       \u4e0a\u4e0b\u5de6\u53f3\u79fb\u52a8\uff0c\u63a7\u5236\u6444\u50cf\u673a\ndirtyViewport |= cam.move(.0, cam.viewHeight / 50.);\n} else if (key == GLFW_KEY_A) {\ndirtyViewport |= cam.move(cam.viewWidth / 50., .0);\n} else if (key == GLFW_KEY_S) {\ndirtyViewport |= cam.move(.0, -cam.viewHeight / 50.);\n} else if (key == GLFW_KEY_D) {\ndirtyViewport |= cam.move(-cam.viewWidth / 50., .0);\n}\n});\n// \u9f20\u6807\u4e2d\u952e\u6eda\u52a8\u56de\u8c03\nglfwSetScrollCallback(window, [](GLFWwindow* /* window */, double /* xoffset */, double yoffset) {\ndirtyViewport |= cam.scale(yoffset);\n});\n// \u9f20\u6807\u6309\u952e\u56de\u8c03\nglfwSetMouseButtonCallback(window, [](GLFWwindow* /* window */, int button, int action, int /* mods */){\nif (button == GLFW_MOUSE_BUTTON_LEFT) {\n//\u9f20\u6807\u5de6\u952e\nmouseDrag = action != GLFW_RELEASE; //\u6ca1\u6709\u653e\u5f00\uff0c\u5219drag=true\n}\n});\n// \u7a97\u53e3\u5927\u5c0f\u6539\u53d8\u56de\u8c03\nglfwSetFramebufferSizeCallback(window, [](GLFWwindow * /*win*/, int w, int h) {\ncam.setView(w, h);\n});\n// \u83b7\u5f97\u7a97\u53e3\u5927\u5c0f\uff0c\u5e76\u8d4b\u503c\u7ed9\u7167\u76f8\u673a\nint fbWidth, fbHeight;\nglfwGetFramebufferSize(window, &amp;fbWidth, &amp;fbHeight);\ncam.setView(fbWidth, fbHeight);\n// \u6fc0\u6d3bwindow\u4e3a\u5f53\u524d\u4e0a\u4e0b\u6587\nglfwMakeContextCurrent(window);\nglfwSwapInterval(1);\nglClearColor(colorBackground[0], colorBackground[1], colorBackground[2], colorBackground[3]);\nglEnable(GL_BLEND);\nglBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);\nglEnable(GL_LINE_SMOOTH);\nglHint(GL_LINE_SMOOTH_HINT, GL_NICEST);\nwhile (!glfwWindowShouldClose(window)) {\nstatic double mouseX = 0, mouseY = 0;               //\u9f20\u6807\u4f4d\u7f6e\ndouble mousePrevX = mouseX, mousePrevY = mouseY;    //\u4e0a\u4e00\u4e2a\u9f20\u6807\u4f4d\u7f6e\nglfwGetCursorPos(window, &amp;mouseX, &amp;mouseY);         //\u83b7\u53d6\u5f53\u524d\u9f20\u6807\u4f4d\u7f6e\uff08\u539f\u70b9\u5728\u5de6\u4e0a\u89d2\u7684\u5c4f\u5e55\u5750\u6807\u7cfb\uff09\ndouble mouseDeltaX = mouseX - mousePrevX, mouseDeltaY = mouseY - mousePrevY;    //\u9f20\u6807\u4f4d\u79fb\u91cf\nif (mouseDrag) {\n//\u9f20\u6807\u5de6\u952e\u6309\u4e0b + \u9f20\u6807\u4f4d\u7f6e\u66f4\u6539 =&gt; \u79fb\u52a8\u6444\u50cf\u673a\ndirtyViewport |= cam.move(mouseDeltaX, mouseDeltaY);\n}\n//shape\u5f04\u810f =&gt; \u91cd\u65b0\u7ed8\u5236\nif (dirtyShape) {\n//\u5c06\u4e09\u89d2\u5316\u5de5\u5177\u7f6e\u7a7a\nfor (auto &amp;tessellator : tessellators) {\ntessellator.reset(nullptr);\n}\n//\u751f\u6210\u6570\u636e\uff0c\u5e76\u83b7\u53d6polygon\nconst auto&amp; polygon = getFixture(shapeIndex)-&gt;polygon();\n//\u83b7\u5f97polygon\u7684box\nauto minX = std::numeric_limits&lt;double&gt;::max();\nauto maxX = std::numeric_limits&lt;double&gt;::min();\nauto minY = std::numeric_limits&lt;double&gt;::max();\nauto maxY = std::numeric_limits&lt;double&gt;::min();\nif (!polygon.empty()) {\nfor (const auto &amp;pt : polygon[0]) {\nminX = std::min&lt;double&gt;(minX, std::get&lt;0&gt;(pt));\nminY = std::min&lt;double&gt;(minY, std::get&lt;1&gt;(pt));\nmaxX = std::max&lt;double&gt;(maxX, std::get&lt;0&gt;(pt));\nmaxY = std::max&lt;double&gt;(maxY, std::get&lt;1&gt;(pt));\n}\n}\nconst auto dimX = minX &lt; maxX ? maxX - minX : 0;\nconst auto dimY = minY &lt; maxY ? maxY - minY : 0;\n//\u4e2d\u5fc3\u70b9\nauto midX = minX + dimX / 2;\nauto midY = minY + dimY / 2;\n//box\u6700\u5927\u534a\u5f84\nauto ext = std::max&lt;double&gt;(dimX, dimY) / 2;\n//\u8bbe\u7f6e\u6444\u50cf\u673a\ncam.setDefaults();\ncam.limits(midX - ext, midX + ext, midY + ext, midY - ext);\n}\nif (dirtyViewport || dirtyShape || dirtyTessellator) {\nglClear(GL_COLOR_BUFFER_BIT);\ncam.apply();\n//\u7ebf\u7684\u5bbd\u5ea6\nglLineWidth(cam.dpi() * std::sqrt(2.f));\n//\u4e09\u89d2\u5316\u5de5\u5177\nauto&amp; drawable = tessellators[tessellator];\nif (!drawable) {\n//\u83b7\u5f97\u4e09\u89d2\u5316\u5de5\u5177\ndrawable = DrawablePolygon::makeDrawable(tessellator, getFixture(shapeIndex));\n}\nif (dirtyTessellator || dirtyShape) {\n//\u4e0d\u540c\u4e09\u89d2\u5316\u5de5\u5177\u7684title\u4e0d\u540c\uff0c\u56e0\u6b64\u8981\u91cd\u65b0\u8bbe\u7f6e\nglfwSetWindowTitle(window, (std::string(drawable-&gt;name()) + \": \"\n+ getFixture(shapeIndex)-&gt;name).c_str());\n}\nif (!drawMesh &amp;&amp; !drawFill &amp;&amp; !drawOutline) {\ndrawMesh = drawFill = drawOutline = true;\n}\n//\u7ed8\u5236\nif (drawFill) {\ndrawable-&gt;drawFill();\n}\nif (drawMesh) {\ndrawable-&gt;drawMesh();\n}\nif (drawOutline) { //\u5916\u8fb9\u6846\u6700\u540e\u7ed8\u5236\uff0c\u4ee5\u538b\u76d6\u4e09\u89d2\u5316\u7ed3\u679c\u7684\u8fb9\u6846\ndrawable-&gt;drawOutline();\n}\nglFlush(); /* required for Mesa 3D driver */\nglfwSwapBuffers(window);\n}\ndirtyTessellator = dirtyShape = dirtyViewport = false;\nglfwWaitEvents();\n}\nglfwTerminate();\nreturn 0;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%B8%89%E8%A7%92%E5%8C%96/%E8%80%B3%E5%88%87%E6%B3%95%E4%B8%89%E8%A7%92%E5%8C%96/earcut/%E8%AE%A1%E7%AE%97%E4%B8%89%E8%A7%92%E5%BD%A2%E3%80%81%E5%A4%9A%E8%BE%B9%E5%BD%A2%28%E5%B8%A6%E5%B2%9B%29%E7%9A%84%E9%9D%A2%E7%A7%AF/","title":"\u8ba1\u7b97\u4e09\u89d2\u5f62\u3001\u591a\u8fb9\u5f62(\u5e26\u5c9b)\u7684\u9762\u79ef","text":"<p>\u4ee3\u7801\u6765\u6e90\uff1a<code>earcut</code> <code>test.cpp</code></p> <pre><code>template &lt;typename Point&gt;\ndouble triangleArea(const Point &amp;a, const Point &amp;b, const Point &amp;c) {\nusing namespace mapbox::util;\nreturn double(std::abs((nth&lt;0, Point&gt;::get(a) - nth&lt;0, Point&gt;::get(c)) * (nth&lt;1, Point&gt;::get(b) - nth&lt;1, Point&gt;::get(a)) -\n(nth&lt;0, Point&gt;::get(a) - nth&lt;0, Point&gt;::get(b)) * (nth&lt;1, Point&gt;::get(c) - nth&lt;1, Point&gt;::get(a)))) / 2;\n}\ntemplate &lt;typename Vertices, typename Indices&gt;\ndouble trianglesArea(const Vertices &amp;vertices, const Indices &amp;indices) {\ndouble area = 0;\nfor (size_t i = 0; i &lt; indices.size(); i += 3) {\narea += triangleArea(\nvertices[indices[i]],\nvertices[indices[i + 1]],\nvertices[indices[i + 2]]\n);\n}\nreturn area;\n}\ntemplate &lt;typename Ring&gt;\ndouble ringArea(const Ring &amp;points) {\nusing namespace mapbox::util;\nusing Point = typename Ring::value_type;\ndouble sum = 0;\nfor (size_t i = 0, len = points.size(), j = len - 1; i &lt; len; j = i++) {\nsum += (nth&lt;0, Point&gt;::get(points[i]) - nth&lt;0, Point&gt;::get(points[j])) *\n(nth&lt;1, Point&gt;::get(points[i]) + nth&lt;1, Point&gt;::get(points[j]));\n}\nreturn std::abs(sum) / 2;\n}\ntemplate &lt;typename Polygon&gt;\ndouble polygonArea(const Polygon &amp;rings) {\nif (rings.empty()) return .0;\ndouble sum = ringArea(rings[0]);\nfor (size_t i = 1; i &lt; rings.size(); i++) {\nsum -= ringArea(rings[i]);\n}\nreturn std::max(sum, .0);\n}\nstd::string formatPercent(double num) {\nstd::stringstream ss;\nss.imbue(std::locale(\"\"));\nss &lt;&lt; std::fixed &lt;&lt; std::setprecision(6) &lt;&lt; num * 100 &lt;&lt; \"%\";\nreturn ss.str();\n}\n</code></pre>","tags":["triangle","polygon","\u9762\u79ef"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%B0%84%E7%BA%BF/","title":"\u5c04\u7ebf","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%B0%84%E7%BA%BF/#_1","title":"\u5c04\u7ebf\u7684\u53c2\u6570\u65b9\u7a0b","text":"<p>\u5c04\u7ebf\u7684\u53c2\u6570\u65b9\u7a0b</p> <ol> <li>R\u4e3a\u5c04\u7ebf\u7ec8\u70b9</li> <li>O\u662f\u5c04\u7ebf\u7684\u8d77\u70b9</li> <li>D\u662f\u5c04\u7ebf\u7684\u65b9\u5411</li> </ol> \\[ R = O + Dt \\] <p>\u8bf4\u660e</p> <ul> <li>\u4e00\u4e2a\u70b9\u4ece\u8d77\u70b9O\u5f00\u59cb\uff0c\u6cbf\u7740\u65b9\u5411D\u79fb\u52a8\u4efb\u610f\u957f\u5ea6\uff0c\u5f97\u5230\u7ec8\u70b9R</li> <li>\u6839\u636et\u503c\u7684\u4e0d\u540c\uff0c\u5f97\u5230\u7684R\u503c\u4e5f\u4e0d\u540c\uff0c\u6240\u6709\u8fd9\u4e9b\u4e0d\u540c\u7684R\u503c\u4fbf\u6784\u6210\u4e86\u6574\u6761\u5c04\u7ebf</li> <li>\u6bd4\u5982\u4e0b\u9762\u7684\u5c04\u7ebf\uff0c\u8d77\u70b9\u662fp0\uff0c\u65b9\u5411\u662fu\uff0cp0 + tu\u4e5f\u5c31\u6784\u6210\u4e86\u6574\u6761\u5c04\u7ebf</li> </ul> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%B0%84%E7%BA%BF/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4%E7%AE%97%E6%B3%95%28%E5%B8%B8%E8%A7%84%E7%AE%97%E6%B3%95%29/","title":"\u5c04\u7ebf\u4e0e\u4e09\u89d2\u5f62\u76f8\u4ea4\u7b97\u6cd5(\u5e38\u89c4\u7b97\u6cd5)","text":"<p>\u5e38\u89c4\u8ba1\u7b97\u65b9\u6cd5</p> <ol> <li>\u9996\u5148\u5224\u65ad\u5c04\u7ebf\u662f\u5426\u4e0e\u4e09\u89d2\u5f62\u6240\u5728\u7684\u5e73\u9762\u76f8\u4ea4</li> <li>\u5982\u679c\u76f8\u4ea4\uff0c\u518d\u5224\u65ad\u4ea4\u70b9\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185</li> </ol> <p>\u6548\u7387\u3001\u7cbe\u5ea6\u90fd\u4e0d\u9ad8\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%B0%84%E7%BA%BF/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4%E7%AE%97%E6%B3%95%28%E6%BA%90%E4%BA%8EDirectX%20SDK%29/","title":"\u5c04\u7ebf\u4e0e\u4e09\u89d2\u5f62\u76f8\u4ea4\u7b97\u6cd5(\u6e90\u4e8eDirectX SDK)","text":"<p>\u7b97\u6cd5\u6765\u81ea\uff1aDirectX SDK, Picking\u7a0b\u5e8f\u793a\u4f8b, Pick.cpp\u6587\u4ef6\u3002 \u6b64\u7b97\u6cd5\u901f\u5ea6\u5feb\u3001\u7cbe\u5ea6\u4e5f\u9ad8\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%B0%84%E7%BA%BF/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4%E7%AE%97%E6%B3%95%28%E6%BA%90%E4%BA%8EDirectX%20SDK%29/#_1","title":"\u7b97\u6cd5\u539f\u7406","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%B0%84%E7%BA%BF/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4%E7%AE%97%E6%B3%95%28%E6%BA%90%E4%BA%8EDirectX%20SDK%29/#_2","title":"\u5c04\u7ebf\u53c2\u6570\u65b9\u7a0b","text":"<p>\u5c04\u7ebf\u7684\u53c2\u6570\u65b9\u7a0b\u5982\u4e0b\uff0c\u5176\u4e2d\uff0cR\u4e3a\u5c04\u7ebf\u7ec8\u70b9\uff0cO\u662f\u5c04\u7ebf\u7684\u8d77\u70b9\uff0cD\u662f\u5c04\u7ebf\u7684\u65b9\u5411\uff1a</p> \\[ R = O + Dt \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%B0%84%E7%BA%BF/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4%E7%AE%97%E6%B3%95%28%E6%BA%90%E4%BA%8EDirectX%20SDK%29/#_3","title":"\u4e09\u89d2\u5f62\u53c2\u6570\u65b9\u7a0b","text":"<p>\u4e09\u89d2\u5f62\u7684\u53c2\u6570\u65b9\u7a0b\u5982\u4e0b\uff0c\u5176\u4e2d</p> <ol> <li>\\(P\\)\u8868\u793a\u4e09\u89d2\u5f62\u4e0a\u7684\u4efb\u610f\u4e00\u70b9</li> <li>\\(V_0\\)\uff0c\\(V_1\\)\u548c\\(V_2\\)\u662f\u4e09\u89d2\u5f62\u7684\u4e09\u4e2a\u70b9</li> <li>\\(u\\)\uff0c\\(v\\)\u662f\\(V_1\\)\u548c\\(V_2\\)\u7684\u6743\u91cd\uff0c\\(1-u-v\\)\u662f\\(V_0\\)\u7684\u6743\u91cd</li> <li>\u6ee1\u8db3\\(u&gt;=0,v&gt;=0,v+v&lt;=1\\)</li> </ol> <p>\\(P = (1-u-v)V_0+uV_1+vV_2\\)</p> <p>\u786e\u5207\u7684\u8bf4\uff0c\u4e0a\u9762\u7684\u65b9\u7a0b\u662f\u4e09\u89d2\u5f62\u53ca\u5176\u5185\u90e8\u6240\u6709\u70b9\u7684\u65b9\u7a0b</p> <ul> <li>\u56e0\u4e3a\u4e09\u89d2\u5f62\u5185\u4efb\u610f\u4e00\u70b9\u90fd\u53ef\u4ee5\u7406\u89e3\u4e3a\u4ece\u9876\u70b9\\(V_0\\)\u5f00\u59cb</li> <li>\u6cbf\u7740\u8fb9\\(V_1V_2\\)\u79fb\u52a8\u4e00\u6bb5\u8ddd\u79bb</li> <li>\u7136\u540e\u518d\u6cbf\u7740\u8fb9\\(V_0V_2\\)\u79fb\u52a8\u4e00\u6bb5\u8ddd\u79bb</li> <li>\u7136\u540e\u6c42\u4ed6\u4eec\u7684\u548c\u5411\u91cf</li> <li>\u81f3\u4e8e\u79fb\u52a8\u591a\u5927\u8ddd\u79bb\uff0c\u5c31\u662f\u7531\u53c2\u6570\\(u\\)\u548c\\(v\\)\u63a7\u5236\u7684</li> </ul> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%B0%84%E7%BA%BF/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4%E7%AE%97%E6%B3%95%28%E6%BA%90%E4%BA%8EDirectX%20SDK%29/#_4","title":"\u8054\u7acb\u65b9\u7a0b\u7ec4","text":"<p>\u4e8e\u662f\uff0c\u6c42\u5c04\u7ebf\u4e0e\u4e09\u89d2\u5f62\u7684\u4ea4\u70b9\u4e5f\u5c31\u53d8\u6210\u4e86\u89e3\u4e0b\u9762\u8fd9\u4e2a\u65b9\u7a0b</p> <ul> <li>\u5176\u4e2d\\(t\\)\uff0c\\(u\\)\uff0c\\(v\\)\u662f\u672a\u77e5\u6570\uff0c\u5176\u4ed6\u90fd\u662f\u5df2\u77e5\u7684</li> </ul> <p>\\(O+Dt=(1-u-v)V_0+uV_1+vV_2\\)</p> <p>\u79fb\u9879\u5e76\u6574\u7406\uff0c\u5c06t,u,v\u63d0\u53d6\u51fa\u6765\u4f5c\u4e3a\u672a\u77e5\u6570\uff0c\u5f97\u5230\u4e0b\u9762\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4</p> \\[\\begin{bmatrix} -D&amp;V_1-V_0&amp;V_2-V_0 \\end{bmatrix} \\begin{bmatrix} t\\\\u\\\\v \\end{bmatrix} = O-V_0 \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%B0%84%E7%BA%BF/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4%E7%AE%97%E6%B3%95%28%E6%BA%90%E4%BA%8EDirectX%20SDK%29/#_5","title":"\u89e3\u65b9\u7a0b\u7ec4","text":"<p>\u73b0\u5728\u5f00\u59cb\u89e3\u8fd9\u4e2a\u65b9\u7a0b\u7ec4\uff0c\u8fd9\u91cc\u8981\u7528\u5230\u4e24\u4e2a\u77e5\u8bc6\u70b9\uff0c\u4e00\u662f\u514b\u83b1\u59c6\u6cd5\u5219\uff0c\u4e8c\u662f\u5411\u91cf\u7684\u6df7\u5408\u79ef\u3002</p> <p>\u4ee4E1 = V1 - V0\uff0cE2 = V2 - V0\uff0cT = O - V0\u4e0a\u5f0f\u53ef\u4ee5\u6539\u5199\u6210</p> \\[ \\begin{bmatrix} -D&amp;E_1&amp;E_2 \\end{bmatrix} \\begin{bmatrix} t\\\\u\\\\v \\end{bmatrix} = T \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%B0%84%E7%BA%BF/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4%E7%AE%97%E6%B3%95%28%E6%BA%90%E4%BA%8EDirectX%20SDK%29/#_6","title":"\u514b\u83b1\u59c6\u6cd5\u5219","text":"<p>\u6839\u636e\u514b\u83b1\u59c6\u6cd5\u5219\uff0c\u53ef\u5f97\u5230t,u,v\u7684\u89e3\u5206\u522b\u662f</p> \\[t= \\cfrac{1}{\\begin{vmatrix}-D&amp;E_1&amp;E_2\\end{vmatrix}} \\begin{vmatrix} T&amp;E_1&amp;E_2 \\end{vmatrix} \\] \\[u= \\cfrac{1}{\\begin{vmatrix} -D&amp;E_1&amp;E_2 \\end{vmatrix}} \\begin{vmatrix} -D&amp;T&amp;E_2 \\end{vmatrix} \\] \\[v= \\cfrac{1}{\\begin{vmatrix} -D&amp;E_1&amp;E_2 \\end{vmatrix}} \\begin{vmatrix} -D&amp;E_1&amp;T \\end{vmatrix} \\] <p>\u5c06\u8fd9\u4e09\u4e2a\u89e3\u8054\u5408\u8d77\u6765\u5199\u5c31\u662f</p> \\[\\begin{bmatrix} t\\\\u\\\\v \\end{bmatrix} = \\cfrac{1}{\\begin{vmatrix} -D&amp;E_1&amp;E_2 \\end{vmatrix}} \\begin{vmatrix} T &amp;E_1 &amp;E_2 \\\\ -D &amp;T &amp;E_2 \\\\ -D &amp;E_1 &amp;T \\\\ \\end{vmatrix} \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%B0%84%E7%BA%BF/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4%E7%AE%97%E6%B3%95%28%E6%BA%90%E4%BA%8EDirectX%20SDK%29/#_7","title":"\u5411\u91cf\u6df7\u5408\u79ef","text":"<p>\u6839\u636e\u6df7\u5408\u79ef\u516c\u5f0f</p> \\[\\begin{vmatrix} a&amp;b&amp;c \\end{vmatrix} =a \\times b \\bullet c =-a \\times c \\bullet b \\] <p>\u4e0a\u5f0f\u53ef\u4ee5\u6539\u5199\u6210</p> \\[\\begin{bmatrix} t\\\\u\\\\v \\end{bmatrix} = \\cfrac{1}{\\begin{bmatrix} D \\times E_2 \\bullet E_1 \\end{bmatrix}} \\begin{bmatrix} T \u00a0\\times E_1 \u00a0\\bullet E_2 \\\\ D \\times E_2 \u00a0\\bullet T \\\\ T \\times E_1 \\bullet D \\\\ \\end{bmatrix} \\] <p>\u4ee4</p> \\[ P=D \\times E_2 \\\\ Q=T \\times E_1 \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%B0%84%E7%BA%BF/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4%E7%AE%97%E6%B3%95%28%E6%BA%90%E4%BA%8EDirectX%20SDK%29/#_8","title":"\u6700\u7ec8\u7684\u8ba1\u7b97\u516c\u5f0f","text":"<p>\u5f97\u5230\u6700\u7ec8\u7684\u516c\u5f0f\uff0c\u8fd9\u4fbf\u662f\u4e0b\u9762\u4ee3\u7801\u4e2d\u7528\u5230\u7684\u6700\u7ec8\u516c\u5f0f\u4e86\uff0c\u4e4b\u6240\u4ee5\u63d0\u70bc\u51faP\u548cQ\u662f\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u8ba1\u7b97</p> \\[\\begin{bmatrix} t\\\\u\\\\v \\end{bmatrix} = \\cfrac{1}{\\begin{vmatrix} P \\bullet E_1 \\end{vmatrix}} \\begin{vmatrix} Q \u00a0\\bullet E_2 \\\\ P \u00a0\\bullet T \\\\ Q \\bullet D \\\\ \\end{vmatrix} \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%B0%84%E7%BA%BF/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4%E7%AE%97%E6%B3%95%28%E6%BA%90%E4%BA%8EDirectX%20SDK%29/#_9","title":"\u4ee3\u7801","text":"<pre><code>bool intersects(const Ray&amp; ray, const Triangle&amp; triangle, Vector3D* intersectionPnt = nullptr)\n{\nconst auto&amp; O = ray.getStart();       const auto&amp; dir = ray.getDirection(); const auto&amp; A = triangle.A();         const auto&amp; B = triangle.B();         const auto&amp; C = triangle.C();         // E1\nauto E1_AB = B - A;\n// E2\nauto E2_AC = C - A;\n// P\nauto P = dir ^ E2_AC;\n// determinant\nauto det = E1_AB * P;\n// keep det &gt; 0, modify T accordingly\nVector3D T;\nif (det &gt; 0)\n{\nT = O - A;\n}\nelse\n{\nT = A - O;\ndet = -det;\n}\n// If determinant is near zero, ray lies in plane of triangle\n//\u5c04\u7ebf\u4e0e\u4e09\u89d2\u5f62\u6240\u5728\u5e73\u9762\u5e73\u884c\nif (det &lt; 0.0001f)\n{\nreturn false;\n}\n// Calculate u and make sure u &lt;= 1\nauto u = T * P; // barycentric coordinate of intersection\nif (u &lt; 0.0 || u &gt; det)\n{\nreturn false;\n}\n// Q\nauto Q = T ^ E1_AB;\n// Calculate v and make sure u + v &lt;= 1\nauto v = dir * Q; // barycentric coordinate of intersection\nif (v &lt; 0.0 || u + v &gt; det)\n{\nreturn false;\n}\n// Calculate t, scale parameters, ray intersects triangle\nauto t = E2_AC * Q; // weight of the intersection for the ray\ndouble inv_det = 1.0f / det;\nt *= inv_det;\nu *= inv_det;\nv *= inv_det;\nif (t &lt; 0)\n{\n//\u5c04\u7ebf\u53cd\u65b9\u5411\u4e0a\u7684\u4ea4\u70b9\nreturn false;\n}\nif (intersectionPnt)\n{\n*intersectionPnt = O + dir * t;\n}\nreturn true;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E5%B0%84%E7%BA%BF/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4/%E5%B0%84%E7%BA%BF%E4%B8%8E%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9B%B8%E4%BA%A4%E7%AE%97%E6%B3%95%28%E6%BA%90%E4%BA%8EDirectX%20SDK%29/#_10","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>\u5c04\u7ebf\u4e0e\u4e09\u89d2\u9762\u76f8\u4ea4\u5224\u65ad (yuque.com)</li> <li>\u5c04\u7ebf\u548c\u4e09\u89d2\u5f62\u7684\u76f8\u4ea4\u68c0\u6d4b\uff08ray triangle intersection test\uff09 - \u7ff0\u58a8\u5c0f\u751f - \u535a\u5ba2\u56ed (cnblogs.com)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E7%9B%B4%E7%BA%BF%E4%B8%8E%E7%BA%BF%E6%AE%B5/%E7%82%B9%E5%88%B0%E7%BA%BF%E6%AE%B5%28%E6%88%96%E7%9B%B4%E7%BA%BF%29%E7%9A%84%E6%9C%80%E8%BF%91%E7%82%B9/","title":"\u70b9\u5230\u7ebf\u6bb5(\u6216\u76f4\u7ebf)\u7684\u6700\u8fd1\u70b9","text":"","tags":["\u5782\u8db3"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E7%9B%B4%E7%BA%BF%E4%B8%8E%E7%BA%BF%E6%AE%B5/%E7%82%B9%E5%88%B0%E7%BA%BF%E6%AE%B5%28%E6%88%96%E7%9B%B4%E7%BA%BF%29%E7%9A%84%E6%9C%80%E8%BF%91%E7%82%B9/#2d","title":"2D\u76f4\u89d2\u5750\u6807\u7cfb","text":"<pre><code>// \u70b9\u5230\u7ebf\u6bb5(\u6216\u76f4\u7ebf)\u7684\u6700\u8fd1\u70b9\nPoint2D calNearestPoint(\nconst Point2D&amp; P,  //[in] \u5f53\u524d\u70b9\nconst Point2D&amp; A, const Point2D&amp; B, //[in] \u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\uff0cA-&gt;B\nbool isSegment     //[in] true\u7ebf\u6bb5\uff1bfalse\u76f4\u7ebf \n)\n{\nauto AB_vector = B - A; //\u5411\u91cfAB=B-A\ndouble AB_length2 = AB_vector.dot(AB_vector); //|AB|\u7684\u5e73\u65b9\nif(AB_length2 &lt; 1.0e-16)\n{\n//\u7ebf\u6bb5\u9000\u5316\u6210\u70b9\nreturn A; }\n//\u8bb0P\u5230\u76f4\u7ebfAB\u7684\u5782\u8db3\u4e3aQ\nauto AP_vector = P - A;                             //\u5411\u91cfAP=P-A\ndouble k = AB_vector.dot(AP_vector) / AB_length2;   //\u5411\u91cfAQ = k * \u5411\u91cfAB\nif(isSegment)\n{\nif(k &gt; 1) {\n//Q\u5728\u7ebf\u6bb5AB\u7684\u5ef6\u957f\u7ebf\u4e0a\nreturn B; }\nelse if(k &lt; 0) {\n//Q\u5728\u7ebf\u6bb5BA\u7684\u5ef6\u957f\u7ebf\u4e0a\nreturn A; }\n}\nreturn A + AB_vector * k; //\u5782\u70b9\n}\n</code></pre>","tags":["\u5782\u8db3"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E7%9B%B4%E7%BA%BF%E4%B8%8E%E7%BA%BF%E6%AE%B5/%E7%82%B9%E5%88%B0%E7%BA%BF%E6%AE%B5%28%E6%88%96%E7%9B%B4%E7%BA%BF%29%E7%9A%84%E6%9C%80%E8%BF%91%E7%82%B9/#3d","title":"3D\u7a7a\u95f4\u76f4\u89d2\u5750\u6807\u7cfb","text":"<p>todo:</p>","tags":["\u5782\u8db3"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E7%9B%B4%E7%BA%BF%E4%B8%8E%E7%BA%BF%E6%AE%B5/%E7%82%B9%E5%88%B0%E7%BA%BF%E6%AE%B5%28%E6%88%96%E7%9B%B4%E7%BA%BF%29%E7%9A%84%E6%9C%80%E8%BF%91%E7%82%B9/#_1","title":"\u5b8c\u6574\u4ee3\u7801","text":"","tags":["\u5782\u8db3"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E7%9B%B4%E7%BA%BF%E4%B8%8E%E7%BA%BF%E6%AE%B5/%E7%82%B9%E5%88%B0%E7%BA%BF%E6%AE%B5%28%E6%88%96%E7%9B%B4%E7%BA%BF%29%E7%9A%84%E6%9C%80%E8%BF%91%E7%82%B9/#2d_1","title":"2D\u76f4\u89d2\u5750\u6807\u7cfb","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n#include &lt;cmath&gt;    //sqrt\nclass Point2D\n{\npublic:\nPoint2D() = default;\nPoint2D(double x, double y) :m_Value{x,y} {}\ndouble x() const { return m_Value[0]; }\ndouble y() const { return m_Value[1]; }\ndouble length() const  { return sqrt(x() * x() + y() * y()); }\nPoint2D operator+(const Point2D&amp; rhs) const { return Point2D(x() + rhs.x(), y() + rhs.y()); }\nPoint2D operator-(const Point2D&amp; rhs) const { return Point2D(x() - rhs.x(), y() - rhs.y()); }\nPoint2D operator*(double value) const { return Point2D(x() * value, y() * value); }\ndouble dot(const Point2D&amp; rhs) { return x() * rhs.x() + y()* rhs.y(); }\nfriend std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const Point2D&amp; p) { out &lt;&lt; p.x() &lt;&lt; \" \" &lt;&lt; p.y(); return out; }\nprotected:\ndouble m_Value[2];\n};\n// \u70b9\u5230\u7ebf\u6bb5(\u6216\u76f4\u7ebf)\u7684\u6700\u8fd1\u70b9\nPoint2D calNearestPoint(\nconst Point2D&amp; P,  //[in] \u5f53\u524d\u70b9\nconst Point2D&amp; A, const Point2D&amp; B, //[in] \u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\uff0cA-&gt;B\nbool isSegment     //[in] true\u7ebf\u6bb5\uff1bfalse\u76f4\u7ebf \n)\n{\nauto AB_vector = B - A; //\u5411\u91cfAB=B-A\ndouble AB_length2 = AB_vector.dot(AB_vector); //|AB|\u7684\u5e73\u65b9\nif(AB_length2 &lt; 1.0e-16)\n{\n//\u7ebf\u6bb5\u9000\u5316\u6210\u70b9\nreturn A; }\n//\u8bb0P\u5230\u76f4\u7ebfAB\u7684\u5782\u8db3\u4e3aQ\nauto AP_vector = P - A;                             //\u5411\u91cfAP=P-A\ndouble k = AB_vector.dot(AP_vector) / AB_length2;   //\u5411\u91cfAQ = k * \u5411\u91cfAB\nif(isSegment)\n{\nif(k &gt; 1) {\n//Q\u5728\u7ebf\u6bb5AB\u7684\u5ef6\u957f\u7ebf\u4e0a\nreturn B; }\nelse if(k &lt; 0) {\n//Q\u5728\u7ebf\u6bb5BA\u7684\u5ef6\u957f\u7ebf\u4e0a\nreturn A; }\n}\nreturn A + AB_vector * k; //\u5782\u70b9\n}\nint main()\n{\nPoint2D A(0,0), B(3,0);\n{\nPoint2D p(-1, 1);\nstd::cout &lt;&lt; calNearestPoint(p, A, B, true) &lt;&lt; std::endl;   //0 0\nstd::cout &lt;&lt; calNearestPoint(p, A, B, false) &lt;&lt; std::endl;  //-1 0\n}\n{\nPoint2D p(1, 1);\nstd::cout &lt;&lt; calNearestPoint(p, A, B, true) &lt;&lt; std::endl;   //1 0\nstd::cout &lt;&lt; calNearestPoint(p, A, B, false) &lt;&lt; std::endl;  //1 0\n}\nreturn 0;\n}\n</code></pre>","tags":["\u5782\u8db3"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E8%B5%84%E6%96%99/","title":"\u56fe\u5f62\u57fa\u7840\u7b97\u6cd5","text":"<p>\u53c2\u8003\u8d44\u6599</p> <ol> <li>Geometric Tools: Samples - Intersection</li> <li>OPCODE - small collision detection library</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/","title":"\u6cd5\u5411\u91cf\u7684\u5750\u6807\u7cfb\u53d8\u6362","text":"<p>\u5728\u672c\u6587\u4e2d 1. \u77e9\u9635\u662f\u884c\u4f18\u5148\u5b58\u50a8 2. \u5411\u91cf\u662f\u5217\u5411\u91cf 3. \u5411\u91cf = \u77e9\u9635 * \u5411\u91cf\u3002\u5176\u4e2d\uff0c\u4e58\u6cd5\u662f\u884c\u5217\u5f0f\u7684\u4e58\u6cd5\u89c4\u5219  </p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#_1","title":"\u77e5\u8bc6\u56de\u987e","text":"<p>\u56de\u987e\u4e00\u4e2a\u77e5\u8bc6</p> <ol> <li>\u4e09\u7ef4\u5411\u91cf\\(\\vec{n} = (x,y,z)\\)\u7684\u9f50\u6b21\u5750\u6807\u4e3a\\((x,y,z,0)\\)\uff0c\u5176\u4e2d\u7b2c\u56db\u7ef4\u4e3a0</li> <li>\u4e09\u7ef4\u70b9\\(p=(x,y,z)\\)\u7684\u9f50\u6b21\u5750\u6807\u4e3a\\((x,y,z,1)\\)\uff0c\u5176\u4e2d\u7b2c\u56db\u7ef4\u4e3a1</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#_2","title":"\u5f15\u8a00","text":"<p>\u6cd5\u5411\u91cf\u7684\u5750\u6807\u7cfb\u53d8\u6362\uff0c\u4e0e\u9876\u70b9\u4f4d\u7f6e\u7684\u5750\u6807\u7cfb\u53d8\u6362\uff0c\u6709\u6240\u4e0d\u540c\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6cd5\u5411\u91cf(1,0,0)\u3001\u9876\u70b9\u5750\u6807(0,0,0)\uff0c\u505a\u4e00\u4e2a(0,2,0)\u7684\u5e73\u79fb\u53d8\u6362</p> <p>\u6309\u7167\u6211\u4eec\u7684\u76f4\u89c2\u611f\u53d7</p> <ol> <li>\\((0,0,0) + (0,2,0)\\)\uff0c\u56e0\u6b64\u9876\u70b9\u5750\u6807\u5c31\u53d8\u6210(0,2,0)</li> <li>\u800c\u6cd5\u5411\u91cf\uff0c\\((1,0,0)+(0,2,0)\\)\uff0c\u53d8\u6210(1,2,0)\u3002\u8fd9\u5f53\u7136\u662f\u9519\u7684\uff0c\u5e73\u79fb\u4e4b\u540e\uff0c\u6cd5\u5411\u91cf\u5e94\u8be5\u8fd8\u662f\u4e3a(1,0,0)\uff0c\u56e0\u4e3a\u5411\u91cf\u6ca1\u6709\u4f4d\u7f6e\uff0c\u53ea\u6709\u65b9\u5411</li> </ol> <p>\u90a3\u4e3a\u4ec0\u4e48\u4f1a\u9519\u5462\uff1f\u672c\u8d28\u4e0a\uff0c\u4e0a\u6587\u662f\u5c06\u5411\u91cf\u5f53\u6210\u4e86\u70b9\uff08\u5373\u7b2c\u56db\u7ef4\u662f1\uff09\uff0c\u518d\u53bb\u4e58\u4e0a\u5e73\u79fb\u77e9\u9635\u7684\uff1a</p> \\[ n_{new} = M * n_{old} = \\begin{pmatrix} 1 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 1 &amp;&amp; 0 &amp;&amp; 2 \\\\ 0 &amp;&amp; 0 &amp;&amp; 1 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} * \\begin{pmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} 1 \\\\ 2 \\\\ 0 \\\\ 1 \\end{pmatrix} \\] <p>\u5b9e\u9645\u4e0a\uff0c\u5411\u91cf\u7684\u9f50\u6b21\u5750\u6807\uff0c\u7684\u7b2c\u56db\u7ef4\u5176\u5b9e\u662f0\uff0c\u5373</p> \\[ n_{new} = M * n_{old} = \\begin{pmatrix} 1 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 1 &amp;&amp; 0 &amp;&amp; 2 \\\\ 0 &amp;&amp; 0 &amp;&amp; 1 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} * \\begin{pmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 0 \\end{pmatrix} \\] <p>\u6b64\u65f6\u5c31\u80fd\u5f97\u5230\u6b63\u786e\u7684\u7b54\u6848\u3002\u4f46\u662f\uff0c\u6cd5\u5411\u91cf\u7684\u5750\u6807\u7cfb\u53d8\u6362 \u6ca1\u6709\u8fd9\u4e48\u7b80\u5355 \uff0c\u8fd9\u91cc\u53ea\u8ba8\u8bba\u4e86Translation Only\uff0c\u8fd8\u6709\u5176\u4ed6\u60c5\u51b5\u3002\u90a3\u4e48\uff0c\u5e94\u8be5\u5982\u4f55\u5bf9\u6cd5\u5411\u91cf\u505a\u5750\u6807\u7cfb\u53d8\u6362\u5462\uff1f</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#_3","title":"\u65b9\u6cd5\u4e00\uff1a\u901a\u7528\u516c\u5f0f","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#_4","title":"\u516c\u5f0f","text":"<p>\u76f4\u63a5\u7ed9\u51fa\u4e00\u4e2a\u901a\u7528\u516c\u5f0f\uff0c\u5b83\u80fd\u591f\u8ba1\u7b97\u6240\u6709\u60c5\u51b5\u4e0b\u7684\u5750\u6807\u7cfb\u53d8\u6362\u3002</p> <p>\u8bb0</p> <ol> <li>\u65e7\u5750\u6807\u7cfb\u4e0b\u7684\u9876\u70b9\u5750\u6807\u4e3a\\(v_{old}\\)</li> <li>\u65b0\u5750\u6807\u7cfb\u4e0b\u7684\u9876\u70b9\u5750\u6807\u4e3a\\(v_{new}\\)</li> <li>\u65e7\u5750\u6807\u7cfb\u4e0b\u7684\u6cd5\u5411\u91cf\u4e3a\\(n_{old}\\)</li> <li>\u65b0\u5750\u6807\u7cfb\u4e0b\u7684\u6cd5\u5411\u91cf\u4e3a\\(n_{new}\\)</li> </ol> <p>\u5df2\u77e5\uff0c\u5750\u6807\u7cfb\u53d8\u6362\u77e9\u9635\u4e3a\\(M\\)\uff0c\u90a3\u4e48\u6709\\(M * v_{old} = v_{new}\\) </p> <p>\u90a3\u4e48\uff0c\u6cd5\u5411\u91cf\u7684\u5750\u6807\u7cfb\u53d8\u6362\uff0c\u5982\u4e0b</p> \\[ \\begin{pmatrix} nx_{new} \\\\ ny_{new} \\\\ nz_{new} \\\\ nw_{new} \\end{pmatrix} = (M^{-1})^{T} * \\begin{pmatrix} nx_{old} \\\\ ny_{old} \\\\ nz_{old} \\\\ nw_{old} \\end{pmatrix} \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#_5","title":"\u63a8\u5bfc\u8fc7\u7a0b","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#1","title":"1. \u5411\u91cf\u4e58\u6cd5\u8f6c\u4e3a\u77e9\u9635\u4e58\u6cd5","text":"<p>\u8bb0\u5e73\u9762\u4e0a\u7684\u4e00\u70b9\\(\\vec{v} = (x,y,z,w)\\)\u3001\u5e73\u9762\u6cd5\u5411\u91cf\\(\\vec{n}=(n_x, n_y, n_z, n_w)\\)\u3002\u56e0\u6b64\u6709\u5411\u91cf\u4e58\u6cd5\uff1a</p> \\[ \\vec{n} * \\vec{v} = 0 \\] \\[ (n_x, n_y, n_z, n_w) * (x, y, z, w) = 0 \\] \\[ n_x*x + n_y*y + n_z*z + n_w*w = 0 \\] <p>\u5e73\u9762\u4e0a\u6709\u5f88\u591a\u4e2a\u9876\u70b9\uff0c\u5373\u53ef\u5f52\u7eb3\u51fa\u77e9\u9635\u76f8\u4e58\u7684\u5f62\u5f0f</p> \\[ \\begin{pmatrix} n_x &amp;&amp; n_y &amp;&amp; n_z &amp;&amp; n_w \\end{pmatrix} * \\begin{pmatrix} x \\\\ y \\\\ z \\\\ w \\end{pmatrix} =  0 \\] <p>\u5373\uff08\u56e0\u4e3a\uff0c\u5728\u672c\u6587\u4e2d\u5411\u91cf\u88ab\u89c6\u4e3a\u5217\u5411\u91cf\uff09</p> \\[ n^{T} * v = 0 \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#2","title":"2. \u5728\u7b49\u5f0f\u4e0a\u4e58\u4e0a\u77e9\u9635","text":"<p>\u8bb0\u5750\u6807\u7cfb\u53d8\u6362\u7684\u77e9\u9635\u4e3a\\(M\\)</p> <ol> <li>\u90a3\u4e48\u5bf9\u9876\u70b9\u505a\u53d8\u6362\u7684\u8bdd\uff0c\u5c31\u8981\u4e58\u4e0a\\(M\\)</li> <li>\u4e3a\u4e86\u7b49\u5f0f\u4f9d\u65e7\u6210\u7acb\uff08\u4e8b\u5b9e\u4e0a\uff0c\u5750\u6807\u7cfb\u53d8\u6362\u540e\u7b49\u5f0f\u4f9d\u65e7\u6210\u7acb\uff09\uff0c\u6cd5\u5411\u91cf\u5c31\u8981\u4e58\u4e0a\\(M^{-1}\\)\u3002\u56e0\u4e3a\\(M^{-1} *M\\)\u662f\u5355\u4f4d\u77e9\u9635</li> </ol> <p></p> \\[ n_{old}^T * M^{-1} * M * v_{old} = 0 \\] <p>\u53c8\u56e0\u4e3a</p> \\[ M * v_{old} = v_{new} \\] <p>\u56e0\u6b64\uff0c\u4e0a\u9762\u7684\u5f0f\u5b50\u53ef\u7b80\u5316\u4e3a\u3002\u5c06\u6b64\u5f0f\u5b50\u8bb0\u4e3a\u3010\u5f0f\u5b501\u3011</p> \\[ n^T_{old} * M^{-1} * v_{new} = 0 \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#3","title":"3. \u8054\u7acb\uff0c\u89e3\u7b97\u51fa\u77e9\u9635","text":"<p>\u6839\u636e\u300a1 \u5411\u91cf\u4e58\u6cd5\u8f6c\u4e3a\u77e9\u9635\u4e58\u6cd5\u300b\u4e00\u8282\u7684\u7ed3\u8bba\uff0c\u6709</p> \\[ n^{T} * v = 0 \\] <p>\u90a3\u4e48\u5f53\u5b8c\u6210\u5750\u6807\u7cfb\u53d8\u6362\u540e\uff0c\u6211\u4eec\u4e5f\u6709</p> \\[ n_{new}^T * v_{new} = 0 \\] <p>\u4e0e\u3010\u5f0f\u5b501\u3011\u8054\u7acb\uff0c\u5373\u53ef\u83b7\u5f97</p> \\[ n^T_{old} * M^{-1} = n_{new}^T \\] <p>\u901a\u8fc7\u524d\u4e58\u6cd5\u8f6c\u6362\u4e3a\u540e\u4e58\u6cd5\uff0c\u5f97\u5230</p> \\[ (M^{-1})^T * n_{old} = n_{new} \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#_6","title":"\u6848\u4f8b","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#_7","title":"\u4ec5\u5e73\u79fb","text":"<ol> <li>\u6cd5\u5411\u91cf\\(\\vec{n_{old}} = (0,0,1)\\)</li> <li>\u53d8\u6362\u77e9\u9635\uff1a\u53ea\u6709\u5e73\u79fb\u90e8\u5206\uff0cx\u8f74\u5e73\u79fb2\uff0cy\u8f74\u5e73\u79fb3\uff0cz\u8f74\u5e73\u79fb4</li> </ol> \\[ M = \\begin{pmatrix} 1 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 2 \\\\ 0 &amp;&amp; 1 &amp;&amp; 0 &amp;&amp; 3 \\\\ 0 &amp;&amp; 0 &amp;&amp; 1 &amp;&amp; 4 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} \\] <p>\u8ba1\u7b97</p> \\[ M^{-1} = \\begin{pmatrix} 1 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; -2 \\\\ 0 &amp;&amp; 1 &amp;&amp; 0 &amp;&amp; -3 \\\\ 0 &amp;&amp; 0 &amp;&amp; 1 &amp;&amp; -4 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} \\] \\[ (M^{-1})^T = \\begin{pmatrix} 1 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 1 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 1 &amp;&amp; 0 \\\\ -2 &amp;&amp; -3 &amp;&amp; -4 &amp;&amp; 1 \\end{pmatrix} \\] <p>\u6839\u636e\u516c\u5f0f</p> \\[ n_{new} = (M^{-1})^T * n_{old} = \\begin{pmatrix} 1 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 1 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 1 &amp;&amp; 0 \\\\ -2 &amp;&amp; -3 &amp;&amp; -4 &amp;&amp; 1 \\end{pmatrix} * \\begin{pmatrix} 0 \\\\ 0 \\\\ 1 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0 \\\\ 1 \\\\ -4 \\end{pmatrix} \\] <p>\u8bf7\u6ce8\u610f\uff0c\u867d\u7136\\(nw_{new}=-4\\)\uff0c\u4f46\u5b83\u4e0d\u4f1a\u5f71\u54cd\u6cd5\u5411\u91cf\u7684\u65b9\u5411\u548c\u957f\u5ea6\u3002\u56e0\u6b64\uff0c\u5e73\u79fb\u540e\uff0c\u6cd5\u5411\u91cf\u4ecd\u7136\u4e3a\\((0,0,1)\\)</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#_8","title":"\u4ec5\u65cb\u8f6c","text":"<ol> <li>\u6cd5\u5411\u91cf\\(\\vec{n_{old}} = (0,0,1)\\)</li> <li>\u53d8\u6362\u77e9\u9635\uff1a\u53ea\u6709\u65cb\u8f6c\u7684\u90e8\u5206\uff0c\u6cbfX\u8f74\u65cb\u8f6c30\u00b0</li> </ol> \\[ M = \\begin{pmatrix} 1 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0.866 &amp;&amp; -0.5 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0.5 &amp;&amp; 0.866 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} \\] <p>\u8ba1\u7b97</p> \\[ M^{-1} = \\begin{pmatrix} 1 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0.866 &amp;&amp; 0.5 &amp;&amp; 0 \\\\ 0 &amp;&amp; -0.5 &amp;&amp; 0.866 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} \\] \\[ (M^{-1})^T = \\begin{pmatrix} 1 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0.866 &amp;&amp; -0.5 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0.5 &amp;&amp; 0.866 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} \\] <p>\u6839\u636e\u516c\u5f0f</p> \\[ n_{new} = (M^{-1})^T * n_{old} = \\begin{pmatrix} 1 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0.866 &amp;&amp; -0.5 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0.5 &amp;&amp; 0.866 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} * \\begin{pmatrix} 0 \\\\ 0 \\\\ 1 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ -0.5 \\\\ 0.866 \\\\ 0 \\end{pmatrix} \\] <p>\u4e0d\u96be\u53d1\u73b0\uff0c\u53d8\u6362\u77e9\u9635\u53ea\u6709\u65cb\u8f6c\u65f6\uff0c\\(M = (M^{-1})^T\\)\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u65cb\u8f6c\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e58\u4ee5\u539f\u5148\u7684\u53d8\u6362\u77e9\u9635</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#_9","title":"\u4ec5\u7f29\u653e","text":"<ol> <li>\u6cd5\u5411\u91cf\\(\\vec{n_{old}} = (0,0.6,0.8)\\)</li> <li>\u53d8\u6362\u77e9\u9635\uff1a\u7f29\u653e\u56e0\u5b50\\((2,4,5)\\)</li> </ol> \\[ M = \\begin{pmatrix} 2 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 4 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 5 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} \\] <p>\u8ba1\u7b97</p> \\[ M^{-1} = \\begin{pmatrix} 0.5 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0.25 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0.2 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} \\] \\[ (M^{-1})^T = \\begin{pmatrix} 0.5 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0.25 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0.2 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} \\] <p>\u6839\u636e\u516c\u5f0f\u8ba1\u7b97</p> \\[ n_{new} = (M^{-1})^T * n_{old} = \\begin{pmatrix} 0.5 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0.25 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0.2 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} * \\begin{pmatrix} 0 \\\\ 0.6 \\\\ 0.8 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0.15 \\\\ 0.16 \\\\ 0 \\end{pmatrix} \\overset{\u5f52\u4e00\u5316}{=} \\begin{pmatrix} 0 \\\\ 0.683941129 \\\\ 0.729537204\\\\ 0 \\end{pmatrix} \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#_10","title":"\u65b9\u6cd5\u4e8c\uff1a\u5411\u91cf\u7684\u9f50\u6b21\u5750\u6807\u4e58\u4ee5\u53d8\u6362\u77e9\u9635","text":"<p>\u56de\u987e</p> <ol> <li>\u5728\u201c\u524d\u8a00\u201d\u5f53\u4e2d\uff0c\u6211\u4eec\u8c08\u5230\uff0c\u5982\u679c\u53d8\u6362\u77e9\u9635\u53ea\u6709\u5e73\u79fb\u7684\u8bdd\uff0c\u7528\u5411\u91cf\u7684\u9f50\u6b21\u5750\u6807\u4e58\u4e0a\u77e9\u9635\uff0c\u4e5f\u80fd\u5f97\u5230\u6b63\u786e\u7b54\u6848</li> <li>\u5728\u201c\u4ec5\u65cb\u8f6c\u201d\u5f53\u4e2d\uff0c\u6211\u4eec\u4e5f\u53d1\u73b0\uff0c\u5982\u679c\u53d8\u6362\u77e9\u9635\u53ea\u6709\u65cb\u8f6c\u7684\u8bdd\uff0c\u90a3\u5411\u91cf\u7684\u9f50\u6b21\u5750\u6807\u4e58\u4e0a\u77e9\u9635\u4e5f\u884c</li> </ol> <p>\u90a3\u4e48\uff0c\u8fd9\u91cc\u5c31\u5f15\u51fa\u4e00\u4e2a\u95ee\u9898\uff0c\u662f\u5426\u53d8\u6362\u77e9\u9635\u53ea\u6709\u7f29\u653e\u7684\u65f6\u5019\uff0c\u7528\u5411\u91cf\u9f50\u6b21\u5750\u6807\u4e58\u4e0a\u77e9\u9635\u4e5f\u884c\uff1f\u63a5\u4e0b\u6765\uff0c\u5c31\u8ba8\u8bba\u201c\u5f15\u8a00\u201d\u4e2d\uff0c\u201c\u6ca1\u6709\u8fd9\u4e48\u7b80\u5355\u201d\u7684\u539f\u56e0</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#xyz","title":"\u6848\u4f8b\u4e00\uff1aXYZ\u7f29\u653e\u56e0\u5b50\u4e0d\u540c","text":"<p>\u793a\u4f8b</p> <ol> <li>\u6cd5\u5411\u91cf\\(\\vec{n_{old}} = (0,0.6,0.8)\\)</li> <li>\u53d8\u6362\u77e9\u9635\uff1a\u7f29\u653e\u56e0\u5b50\\((2,4,5)\\)\uff0cXYZ\u7f29\u653e\u56e0\u5b50\u4e0d\u540c</li> </ol> <p>\u7528\u901a\u7528\u516c\u5f0f\u6765\u8ba1\u7b97\uff08\u5373\u65b9\u6cd5\u4e00\uff09</p> \\[ n_{new} = (M^{-1})^T * n_{old} = \\begin{pmatrix} 0.5 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0.25 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0.2 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} * \\begin{pmatrix} 0 \\\\ 0.6 \\\\ 0.8 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0.15 \\\\ 0.16 \\\\ 0 \\end{pmatrix} \\overset{\u5f52\u4e00\u5316}{=} \\begin{pmatrix} 0 \\\\ 0.683941129 \\\\ 0.729537204\\\\ 0 \\end{pmatrix} \\] <p>\u7528\u5411\u91cf\u9f50\u6b21\u5750\u6807\u4e58\u4e0a\u77e9\u9635\u6765\u8ba1\u7b97\uff08\u5373\u65b9\u6cd5\u4e8c\uff09</p> \\[ M * n_{old} =  \\begin{pmatrix} 2 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 4 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 5 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} * \\begin{pmatrix} 0 \\\\ 0.6 \\\\ 0.8 \\\\ 0 \\end{pmatrix} =  \\begin{pmatrix} 0 \\\\ 2.4 \\\\ 4 \\\\ 0 \\end{pmatrix} \\overset{\u5f52\u4e00\u5316}{=} \\begin{pmatrix} 0 \\\\ 0.51449575542752651213595466566578 \\\\ 0.85749292571254418689325777610964 \\\\ 0 \\end{pmatrix} \\] <p>\u8fd9\u91cc\u53d1\u73b0\uff0c\u4e24\u4e2a\u8ba1\u7b97\u7ed3\u679c\u4e0d\u540c\u3002\u90a3\u54ea\u4e2a\u662f\u5bf9\u7684\u5462\uff1f</p> <ul> <li>\u5f53\u7136\u662f\u201c\u4ec5\u7f29\u653e\u201d\u4e2d\u8ba1\u7b97\u7684\u662f\u5bf9\u7684\uff0c\u56e0\u4e3a\u5b83\u7528\u7684\u662f\u201c\u63a8\u5bfc\u8fc7\u7a0b\u201d\u5f97\u51fa\u7684\u516c\u5f0f</li> <li>\u56e0\u6b64\uff0c\u65b9\u6cd5\u4e8c\u4e0d\u9002\u7528\u4e8eXYZ\u7f29\u653e\u56e0\u5b50\u4e0d\u540c\u7684\u573a\u666f</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#xyz_1","title":"\u6848\u4f8b\u4e8c\uff1aXYZ\u7f29\u653e\u56e0\u5b50\u76f8\u540c","text":"<p>\u793a\u4f8b</p> <ol> <li>\u6cd5\u5411\u91cf\\(\\vec{n_{old}} = (0,0.6,0.8)\\)</li> <li>\u53d8\u6362\u77e9\u9635\uff1a\u7f29\u653e\u56e0\u5b50\\((2,2,2)\\)\uff0cXYZ\u7f29\u653e\u56e0\u5b50\u76f8\u540c</li> </ol> <p>\u7528\u901a\u7528\u516c\u5f0f\u6765\u8ba1\u7b97\uff08\u5373\u65b9\u6cd5\u4e00\uff09</p> \\[ n_{new} = (M^{-1})^T * n_{old} = (\\begin{pmatrix} 2 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 2 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 2 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix}^{-1})^T * \\begin{pmatrix} 0 \\\\ 0.6 \\\\ 0.8 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 0.5 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0.5 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0.5 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} = \\begin{pmatrix} 0 \\\\ 0.3 \\\\ 0.4 \\\\ 0 \\end{pmatrix} \\overset{\u5f52\u4e00\u5316}{=} \\begin{pmatrix} 0 \\\\ 0.6 \\\\ 0.8\\\\ 0 \\end{pmatrix} \\] <p>\u7528\u5411\u91cf\u9f50\u6b21\u5750\u6807\u4e58\u4e0a\u77e9\u9635\u6765\u8ba1\u7b97\uff08\u5373\u65b9\u6cd5\u4e8c\uff09</p> \\[ M * n_{old} =  \\begin{pmatrix} 2 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 2 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 2 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} * \\begin{pmatrix} 0 \\\\ 0.6 \\\\ 0.8 \\\\ 0 \\end{pmatrix} =  \\begin{pmatrix} 0 \\\\ 1.2 \\\\ 1.6 \\\\ 0 \\end{pmatrix} \\overset{\u5f52\u4e00\u5316}{=} \\begin{pmatrix} 0 \\\\ 0.6 \\\\ 0.8 \\\\ 0 \\end{pmatrix} \\] <p>\u53ef\u4ee5\u770b\u5230\uff0c\u4e24\u79cd\u65b9\u6cd5\u8ba1\u7b97\u7ed3\u679c\u4e00\u6837\uff0c\u800c\u4e14\u6cd5\u5411\u91cf\u5728\u53d8\u6362\u524d\u540e\u4e5f\u65e0\u53d8\u6362\u3002\u8fd9\u5f88\u597d\u7406\u89e3\uff0c\u56e0\u4e3aXYZ\u7f29\u653e\u56e0\u5b50\u76f8\u540c\uff0c\u4e09\u89d2\u5f62\u6240\u5728\u5e73\u9762\u5176\u5b9e\u6ca1\u6709\u6539\u53d8\uff0c\u56e0\u6b64\u6cd5\u5411\u91cf\u4e5f\u6ca1\u6709\u6539\u53d8\u3002</p> <p>\u56e0\u6b64\uff0cXYZ\u7f29\u653e\u56e0\u5b50\u76f8\u540c\u65f6\uff0c\u4e5f\u53ef\u4ee5\u7528\u65b9\u6cd5\u4e8c\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#_11","title":"\u7ed3\u8bba","text":"<p>\u6cd5\u5411\u91cf\u7684\u5750\u6807\u7cfb\u53d8\u6362\uff0c\u4e0e\u9876\u70b9\u7684\u5750\u6807\u7cfb\u53d8\u6362\u6709\u6240\u4e0d\u540c</p> <ol> <li>\u65b9\u6cd5\u4e00\uff1a\u901a\u7528\u516c\u5f0f\u3002\u5176\u4e2d\uff0c\\(\\vec{n_{new}}=(nx_{new}, ny_{new}, nz_{new})\\)\uff0c\\(nw_{new}\\)\u53ef\u5ffd\u7565</li> </ol> \\[ \\begin{pmatrix} nx_{new} \\\\ ny_{new} \\\\ nz_{new} \\\\ nw_{new} \\end{pmatrix} = (M^{-1})^{T} * \\begin{pmatrix} nx_{old} \\\\ ny_{old} \\\\ nz_{old} \\\\ 0 \\end{pmatrix} \\] <ol> <li>\u65b9\u6cd5\u4e8c\uff1a\u9f50\u6b21\u5750\u6807\u4e58\u4e0a\u53d8\u6362\u77e9\u9635</li> </ol> \\[ \\begin{pmatrix} nx_{new} \\\\ ny_{new} \\\\ nz_{new} \\\\ nw_{new} \\end{pmatrix} = M * \\begin{pmatrix} nx_{old} \\\\ ny_{old} \\\\ nz_{old} \\\\ 0 \\end{pmatrix} \\] <p>\u4e24\u79cd\u60c5\u51b5\u4e0b\u7684\u6cd5\u5411\u91cf\u90fd\u8981\u505a\u5f52\u4e00\u5316</p> \u65b9\u6cd5\u4e00\uff1a\u901a\u7528\u516c\u5f0f \u65b9\u6cd5\u4e8c\uff1a\u9f50\u6b21\u5750\u6807\u76f4\u63a5\u4e58\u4ee5\u53d8\u6362\u77e9\u9635 \u4ec5\u5e73\u79fb \u221a \u221a \u4ec5\u65cb\u8f6c \u221a \u221a \u4ec5\u7f29\u653e\uff08XYZ\u7f29\u653e\u56e0\u5b50\u76f8\u540c\uff09 \u221a \u221a \u4ec5\u7f29\u653e\uff08XYZ\u7f29\u653e\u56e0\u5b50\u4e0d\u540c\uff09 \u221a \u00d7"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#_12","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>OpenGL Normal Vector Transformation (songho.ca)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E6%B3%95%E5%90%91%E9%87%8F%E7%9A%84%E5%9D%90%E6%A0%87%E7%B3%BB%E5%8F%98%E6%8D%A2/#_13","title":"\u76f8\u5173\u5de5\u5177","text":"<ol> <li>\u7f51\u9875\u77e9\u9635\u8ba1\u7b97\u5668 - Reshish</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E9%94%99%E5%88%87shear/","title":"\u9519\u5207","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/%E9%94%99%E5%88%87shear/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u6570\u636e\u589e\u5f3a\u4e2d\u7684\u4eff\u5c04\u53d8\u6362\uff1a\u65cb\u8f6c\uff0c\u7f29\u653e\uff0c\u5e73\u79fb\u4ee5\u53ca\u9519\u5207(shear)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%97%B5%E5%8F%AF%E5%A4%AB%E6%96%AF%E5%9F%BA%E5%92%8C%28Mincowsky%20sum%29/","title":"\u95f5\u53ef\u592b\u65af\u57fa\u548c(Mincowsky sum)","text":"<p>\u610f\u4e49\uff1a\u8ba1\u7b97\u4e00\u4e2a\u591a\u9762\u4f53\uff0c\u6cbf\u7740\u591a\u8fb9\u5f62\u7ebf\u626b\u8fc7\u7684\u533a\u57df</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%97%B5%E5%8F%AF%E5%A4%AB%E6%96%AF%E5%9F%BA%E5%92%8C%28Mincowsky%20sum%29/#_1","title":"\u8ba1\u7b97\u793a\u4f8b","text":"<p>\u793a\u4f8b</p> <pre><code>A = {\n    (1,0),\n    (0,1),\n    (0,-1)\n}\n\nB= {\n    (0, 0), \n    (1, 1), \n    (1, \u22121)\n}\n\nA +\u00a0B\u00a0= {\n    (1, 0), \n    (2, 1), \n    (2, \u22121),\n    (0, 1), \n    (1, 2), \n    (1, 0), \n    (0, \u22121), \n    (1, 0), \n    (1, \u22122)\n}\n</code></pre> <p>\u793a\u4f8b</p> <pre><code>A = {\n    (0, 0),\n    (2, 3),\n    (-3, 1)\n};\n\nB = {\n    (0, 0),\n    (1, 1),\n    (0, 4),\n    (-2, 3) \n}\n\n//1. A\u96c6\u5408\u6cbfB\u7684\u8fb9\u9645\u8fde\u7eed\u8fd0\u52a8\u4e00\u5468\u626b\u8fc7\u7684\u533a\u57df\n//2. B\u96c6\u5408\u672c\u8eab\n//1\u548c2\u7684\u5e76\u96c6\nA + B = {\n    (0, 0),\n    (1, 1),\n    (3, 4),\n    (2, 7),\n    (-3, 5),\n    (-5, 4),\n    (-3, 1)\n}\n</code></pre> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%97%B5%E5%8F%AF%E5%A4%AB%E6%96%AF%E5%9F%BA%E5%92%8C%28Mincowsky%20sum%29/#_2","title":"\u5e94\u7528","text":"<ul> <li>\u8ba1\u7b97\u5e73\u79fb\u673a\u5668\u4eba\u7684\u4f4d\u79fb\u7a7a\u95f4</li> <li>\u8ba1\u7b97\u4e00\u4e9b\u56fe\u5f62\u64cd\u4f5c\uff0c\u4f8b\u5982\u6ed1\u7fd4\u64cd\u4f5c</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%97%B5%E5%8F%AF%E5%A4%AB%E6%96%AF%E5%9F%BA%E5%92%8C%28Mincowsky%20sum%29/#_3","title":"\u673a\u5668\u4eba\u79fb\u52a8","text":"<p>\u673a\u5668\u4eba\u53ef\u4ee5\u8fdb\u5165\u623f\u95f4\u5417\uff1f</p> <ul> <li>\u95f5\u53ef\u592b\u65af\u57fa\u548c\u63cf\u8ff0\u4e86\u673a\u5668\u4eba\u76f8\u5bf9\u4e8e\u623f\u95f4\u7684\u975e\u6cd5\u4f4d\u7f6e\uff08\u7ea2\u8272\u533a\u57df\uff09</li> <li>\u7531\u95f5\u53ef\u592b\u65af\u57fa\u548c\u53ef\u4ee5\u8ba1\u7b97\u51fa\u673a\u5668\u4eba\u80fd\u591f\u8fd0\u52a8\u5230\u7684\u533a\u57df\uff0c\u6839\u636e\u533a\u57df\u7684\u8fde\u901a\u6027\uff0c\u53ef\u5224\u65ad\u673a\u5668\u4eba\u662f\u5426\u80fd\u591f\u8fdb\u5165\u67d0\u4e2a\u533a\u57df</li> </ul> <p>\u56fe\uff1a\u6765\u6e90CGAL Figure 33.2 </p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%97%B5%E5%8F%AF%E5%A4%AB%E6%96%AF%E5%9F%BA%E5%92%8C%28Mincowsky%20sum%29/#_4","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u95f5\u53ef\u592b\u65af\u57fa\u548c\uff08Mincowsky sum\uff09</li> <li>CGAL 5.5.1 - 3D Minkowski Sum of Polyhedra</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%BD%90%E6%AC%A1%E5%9D%90%E6%A0%87/","title":"\u9f50\u6b21\u5750\u6807","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%BD%90%E6%AC%A1%E5%9D%90%E6%A0%87/#_1","title":"\u5f15\u8a00\uff1a\u4e24\u4e2a\u5e73\u884c\u7ebf\u53ef\u4ee5\u76f8\u4ea4\uff1f","text":"<p>\u5728\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\u4e2d\uff0c\u540c\u4e00\u5e73\u9762\u4e0a\u7684\u4e24\u6761\u5e73\u884c\u7ebf\u6c38\u4e0d\u76f8\u4ea4\u3002\u7136\u800c\uff0c\u5728\u5c04\u5f71\u7a7a\u95f4\uff08projective space\uff09\u4e2d\u5e76\u4e0d\u662f\u8fd9\u6837\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4e24\u6761\u5e73\u884c\u7684\u94c1\u8f68\u5728\u5730\u5e73\u7ebf\u4e0a\u76f8\u9047\uff0c\u4ea4\u70b9\u662f\u4e00\u4e2a\u65e0\u7a77\u8fdc\u7684\u70b9\u3002</p> <p></p> <p>\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\uff08\u6216\u8005\u7b1b\u5361\u5c14\u7a7a\u95f4\uff09\u80fd\u591f\u5f88\u597d\u5730\u63cf\u8ff02D/3D\u51e0\u4f55\uff0c\u4f46\u5b83\u4e0d\u8db3\u4ee5\u5904\u7406\u5c04\u5f71\u7a7a\u95f4\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6b27\u51e0\u91cc\u5f97\u51e0\u4f55\uff08Euclidean geometry\uff09\u662f\u5c04\u5f71\u51e0\u4f55\uff08projective geometry\uff09\u7684\u5b50\u96c6\u3002</p> <ul> <li>\u4e8c\u7ef4\u70b9\u7684\u7b1b\u5361\u5c14\u5750\u6807\u53ef\u4ee5\u8868\u793a\u4e3a\\((x,y)\\)</li> <li>\u5982\u679c\u662f\u65e0\u7a77\u5927\u7684\u70b9\uff0c\u7b1b\u5361\u5c14\u5750\u6807\u7528\\((\\infty, \\infty)\\)\u8868\u793a\u3002\u4f46\u5b83\u5728\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\u4e2d\u53d8\u5f97\u6beb\u65e0\u610f\u4e49\uff0c\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u7528\\((\\infty, \\infty)\\)\u505a\u6570\u5b66\u8ba1\u7b97</li> </ul> <p>\u56e0\u6b64\uff0c\u5e73\u884c\u7ebf\u5728\u5c04\u5f71\u7a7a\u95f4\u4e2d\u5e94\u8be5\u5728\u65e0\u7a77\u8fdc\u5904\u76f8\u4ea4\uff0c\u4f46\u5728\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\u4e2d\u4e0d\u80fd\u76f8\u4ea4\u3002August Ferdinand M\u00f6bius\u5f15\u5165\u9f50\u6b21\u5750\u6807\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u9f50\u6b21\u5750\u6807\u662f\u7528\\(N+1\\)\u4e2a\u6570\u5b57\u8868\u793aN\u7ef4\u5750\u6807\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u4e8c\u7ef4\u7b1b\u5361\u5c14\u5750\u6807\u4e3a\\((x,y)\\)\uff0c\u800c\u4e8c\u7ef4\u9f50\u6b21\u5750\u6807\u5373\u662f\\((x,y,w)\\)</p> <p>\u4f8b\u5982</p> <ul> <li>\u7b1b\u5361\u5c14\u5750\u6807\\((1,2)\\)\uff0c\u5728\u9f50\u6b21\u5750\u6807\u4e2d\u662f\\((1,2,1)\\)</li> <li>\u5982\u679c\u70b9\\((1,2)\\)\u79fb\u52a8\u5230\u65e0\u7a77\u8fdc\uff0c\u90a3\u4e48\u79fb\u52a8\u4e4b\u540e\u7684\u9f50\u6b21\u5750\u6807\u662f\\((1,2,0)\\)\u3002\u8fd9\u662f\u56e0\u4e3a\\((1/0, 2/0)\u2248(\\infty, \\infty)\\)</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%BD%90%E6%AC%A1%E5%9D%90%E6%A0%87/#_2","title":"\u9f50\u6b21\u5750\u6807","text":"<p>\u9f50\u6b21\u5750\u6807\uff08Homogeneous coordinates\uff09\u662f\u7528\\(N+1\\)\u4e2a\u6570\u5b57\u8868\u793a\\(N\\)\u7ef4\u5750\u6807\u7684\u4e00\u79cd\u65b9\u6cd5\u3002</p> <p>\u4f8b\u5982\uff0c\u4e8c\u7ef4\u9f50\u6b21\u5750\u6807\u4e0e\u4e8c\u7ef4\u7b1b\u5361\u5c14\u5750\u6807</p> <ul> <li>\u4e24\u8005\u8f6c\u6362\u53ea\u9700\u9664\u4ee5\\(w\\)\uff08\\(w=1\\)\u65f6\uff0c\u5373\u662f\u7b1b\u5361\u5c14\u5750\u6807\uff09</li> </ul> <p></p> <p>\u7528\u9f50\u6b21\u5750\u6807\uff0c\u5982\u4f55\u8868\u793a\u70b9\u548c\u77e2\u91cf\u3002\u4ee5\u4e8c\u7ef4\u9f50\u6b21\u5750\u6807\u4e3a\u4f8b</p> <ol> <li>\\(Point_{2d} = (x,y,w), w\u22600\\)</li> <li>\\(Vector_{2d} = (x,y,0),\u5373w\uff1d0\\)</li> </ol> <p>\u9f50\u6b21\u5750\u6807\u7684\u8fd0\u7b97</p> <ol> <li>\\(vector + vector = vector\\)</li> <li>\\(point - point = vector\\)</li> <li>\\(point +vector = point\\)</li> <li>\\(point + point = \u4e24\u4e2a\u70b9\u7684\u4e2d\u70b9\\)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%BD%90%E6%AC%A1%E5%9D%90%E6%A0%87/#_3","title":"\u6269\u5c55","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%BD%90%E6%AC%A1%E5%9D%90%E6%A0%87/#_4","title":"\u4e3a\u4ec0\u4e48\u53eb\u201c\u9f50\u6b21\u201c","text":"<p>\u5c06\u4e8c\u7ef4\u9f50\u6b21\u5750\u6807\u8f6c\u6210\u4e8c\u7ef4\u7b1b\u5361\u5c14\u5750\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u91cd\u8981\u4e8b\u5b9e</p> <p></p> <p>\u4e0d\u96be\u53d1\u73b0\uff0c\u4ee5\u4e0a\u4f8b\u5b50\u7684\u4e8c\u7ef4\u9f50\u6b21\u5750\u6807\u90fd\u7b49\u540c\u4e8e\\((1/3, 2/3)\\)\u7684\u7b1b\u5361\u5c14\u5750\u6807\u3002 \u56e0\u6b64\uff0c\u8fd9\u4e9b\u70b9\u662f\u201c\u9f50\u6b21\u7684\u201d\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\uff08\u7b1b\u5361\u5c14\u7a7a\u95f4\uff09\u4e2d\u8868\u793a\u7684\u662f\u540c\u4e00\u4e2a\u70b9\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u9f50\u6b21\u5750\u6807\u662f\u5c3a\u5ea6\u4e0d\u53d8\u7684\uff08scale invariant\uff09\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%BD%90%E6%AC%A1%E5%9D%90%E6%A0%87/#w0","title":"\u4e3a\u4ec0\u4e48\u5411\u91cfw\u5206\u91cf\u4e3a0","text":"<p>\u5411\u91cf\u4f53\u73b0\u7684\u662f\u65b9\u5411\u6027\uff0c\u5373\u5177\u6709\u5e73\u79fb\u4e0d\u53d8\u6027\u7684\u7279\u5f81\u3002\u5373\uff0c\u82e5\u5411\u91cf\u7684\u9f50\u6b21\u5750\u6807\u5728\u53c2\u4e0e\u5e73\u79fb\u77e9\u9635\u53d8\u6362\u4e4b\u540e\uff0c\u6240\u5f97\u7684\u7ed3\u679c\u4e0d\u53d8\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e09\u7ef4\u5411\u91cf(1,0,0)\u3001\u4e09\u7ef4\u70b9(0,0,0)\uff0c\u505a\u4e00\u4e2a(0,2,0)\u7684\u5e73\u79fb\u53d8\u6362</p> <p>\u6309\u7167\u6211\u4eec\u7684\u76f4\u89c2\u611f\u53d7</p> <ol> <li>\\((0,0,0) + (0,2,0)\\)\uff0c\u56e0\u6b64\u9876\u70b9\u5750\u6807\u5c31\u53d8\u6210\\((0,2,0)\\)</li> <li>\u800c\u6cd5\u5411\u91cf\uff0c\\((1,0,0)+(0,2,0)\\)\uff0c\u53d8\u6210\\((1,2,0)\\)\u3002\u8fd9\u5f53\u7136\u662f\u9519\u7684\uff0c\u5e73\u79fb\u4e4b\u540e\uff0c\u5411\u91cf\u5e94\u8be5\u8fd8\u662f\u4e3a\\((1,0,0)\\)\uff0c\u56e0\u4e3a\u5411\u91cf\u6ca1\u6709\u4f4d\u7f6e\uff0c\u53ea\u6709\u65b9\u5411</li> </ol> <p>\u90a3\u4e3a\u4ec0\u4e48\u4f1a\u9519\u5462\uff1f\u672c\u8d28\u4e0a\uff0c\u8fd8\u662f\u5c06\u5411\u91cf\u9f50\u6b21\u5750\u6807\u4e2d\u7684w\u5f53\u6210\u4e861\uff0c\u56e0\u6b64\u7ed3\u679c\u9519\u4e86</p> \\[ n_{new} = M * n_{old} = \\begin{pmatrix} 1 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 1 &amp;&amp; 0 &amp;&amp; 2 \\\\ 0 &amp;&amp; 0 &amp;&amp; 1 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} * \\begin{pmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} 1 \\\\ 2 \\\\ 0 \\\\ 1 \\end{pmatrix} \\] <p>\u5b9e\u9645\u4e0a\uff0c\u5411\u91cf\u9f50\u6b21\u5750\u6807\u4e2d\u7684w\u5176\u5b9e\u662f0\uff0c\u5982\u4e0b\u6240\u793a\uff0c\u8ba1\u7b97\u7ed3\u679c\u8fd8\u662f\\((1,0,0,0)\\)</p> \\[ n_{new} = M * n_{old} = \\begin{pmatrix} 1 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 0 \\\\ 0 &amp;&amp; 1 &amp;&amp; 0 &amp;&amp; 2 \\\\ 0 &amp;&amp; 0 &amp;&amp; 1 &amp;&amp; 0 \\\\ 0 &amp;&amp; 0 &amp;&amp; 0 &amp;&amp; 1 \\end{pmatrix} * \\begin{pmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 0 \\end{pmatrix} = \\begin{pmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 0 \\end{pmatrix} \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%BD%90%E6%AC%A1%E5%9D%90%E6%A0%87/#_5","title":"\u4f5c\u7528","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%BD%90%E6%AC%A1%E5%9D%90%E6%A0%87/#_6","title":"\u8bc1\u660e\uff1a\u4e24\u4e2a\u5e73\u884c\u7ebf\u53ef\u4ee5\u76f8\u4ea4","text":"<p>\u8003\u8651\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\u4e2d\u7684\u4e24\u6761\u5e73\u884c\u7ebf</p> <p></p> <ol> <li>\u82e5\\(C\u2260D\\)\uff0c\u4e0a\u8ff0\u65b9\u7a0b\u65e0\u89e3\uff0c\u5373\u6ca1\u6709\u4e24\u6761\u5e73\u884c\u7ebf\u6ca1\u6709\u4ea4\u70b9</li> <li>\u82e5\\(C =D\\)\uff0c\u5219\u4e24\u6761\u5e73\u884c\u7ebf\u91cd\u53e0</li> </ol> <p>\u82e5\u6211\u4eec\u5c06\u7b1b\u5361\u5c14\u5750\u6807\u6539\u4e3a\u9f50\u6b21\u5750\u6807\uff0c\u5373\u83b7\u5f97\u5c04\u5f71\u7a7a\u95f4\u4e2d\u4e24\u6761\u5e73\u884c\u7ebf\u7684\u65b9\u7a0b</p> <ul> <li>\u5373\uff0c\u5c06\\(x\\)\u3001\\(y\\)\u5206\u522b\u66ff\u6362\u4e3a\\(x/w\\)\u3001\\(y/w\\)\uff08\u5f15\u5165\u4e86\u65b0\u7684\u81ea\u53d8\u91cf\\(w\\)\uff09</li> </ul> <p></p> <ul> <li>\u8054\u7acb\u65b9\u7a0b\u7ec4\uff0c\u53ef\u83b7\u5f97\\((C-D)w = 0\\)\uff0c\u89e3\u9664\\(w=0\\)</li> <li>\u56e0\u6b64\uff0c\u5728\u5c04\u5f71\u7a7a\u95f4\u4e2d\uff0c\u4e24\u6761\u5e73\u884c\u7ebf\u5c06\u76f8\u4ea4\u4e8e\\((x, y, 0)\\)\u70b9</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%BD%90%E6%AC%A1%E5%9D%90%E6%A0%87/#_7","title":"\u7edf\u4e00\u6240\u6709\u53d8\u6362","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%BD%90%E6%AC%A1%E5%9D%90%E6%A0%87/#_8","title":"\u5e73\u79fb\u53d8\u6362\u4e0d\u80fd\u5199\u6210\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f","text":"<p>\u4e0b\u56fe\u5c55\u793a\u7684\u662f\u4e8c\u7ef4\u7b1b\u5361\u5c14\u7a7a\u95f4\u4e0b\u7684\u5e73\u79fb\u53d8\u6362\u3002\u5982\u6b64\u770b\u6765\uff0c\u4e8c\u7ef4\u5e73\u79fb\u53d8\u6362\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u5bf9\u5750\u6807\u503c\u52a0\u4e0a\u4e00\u4e2a\u5e73\u79fb\u91cf\u5373\u53ef\u3002</p> <p></p> <p>\u4e0b\u56fe\u5c55\u793a\u7684\u662f\u4e8c\u7ef4\u7b1b\u5361\u5c14\u7a7a\u95f4\u4e2d\u7ebf\u6027\u53d8\u6362\u7684\u77e9\u9635\uff0c\u5b83\u53ef\u4ee5\u6db5\u76d6\u7f29\u653e\u53d8\u6362\u3001\u955c\u50cf\u53d8\u6362\u3001\u5207\u53d8\u53d8\u6362\u548c\u65cb\u8f6c\u53d8\u6362\uff0c\u53ea\u9700\u8981\u4e00\u4e2a2x2\u7684\u77e9\u9635\u4e0e\u70b9\u5750\u6807\u76f8\u4e58\u3002</p> <p></p> <p>\u503c\u5f97\u8003\u8651\u7684\u662f\uff0c\u80fd\u5426\u628a\u5e73\u79fb\\((tx, ty)\\)\u4e5f\u5bb9\u7eb3\u5230\u4e0a\u56fe\u4e2d\u7684\\(M\\)\u5f53\u4e2d\u5462\uff1f\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u5e73\u79fb\u53d8\u6362\u5c31\u53ef\u4ee5\u548c\u7ebf\u6027\u53d8\u6362\u505a\u7edf\u4e00\u4e86\uff0c\u5982\u6b64\u8ba1\u7b97\u4e5f\u5f88\u65b9\u4fbf\u3002</p> <p>\u6839\u636e\u77e9\u9635\u4e58\u6cd5\uff0c\u6211\u4eec\u53d1\u73b0\u4e0d\u53ef\u4ee5\u3002\u6211\u4eec\u53ea\u80fd\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff0c\u4e0d\u80fd\u5199\u6210\\(x' = M * x\\)\u7684\u5f62\u5f0f\u3002\u5373\uff0c\u5e73\u79fb\u53d8\u6362\u53ea\u80fd\u5199\u6210\u77e9\u9635\u52a0\u6cd5\u7684\u5f62\u5f0f\uff0c\u4e0d\u80fd\u5199\u6210\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f\u3002</p> <p></p> <p>\u56e0\u6b64\uff0c\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c\u5e73\u79fb\u53d8\u6362\u4e0d\u5c5e\u4e8e\u7ebf\u6027\u53d8\u6362\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%BD%90%E6%AC%A1%E5%9D%90%E6%A0%87/#_9","title":"\u89e3\u51b3\u65b9\u6848","text":"<p>\u5f15\u5165\u9f50\u6b21\u5750\u6807\uff0c\u5373\u53ef\u201c\u7edf\u4e00\u6240\u6709\u53d8\u6362\u201d\u3002\u5177\u4f53\u505a\u6cd5\u662f\uff1a\u7ed9\u5411\u91cf\u548c\u77e9\u9635\u5347\u4e00\u4e2a\u7ef4\u5ea6</p> <ul> <li>\u7ed9\u4e8c\u7ef4\u70b9\u589e\u52a0\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u7b2c\u4e09\u7ef4\u5ea6\u4e3a1\u3002\u5373\u628a\u7b1b\u5361\u5c14\u4e8c\u7ef4\u70b9\u8868\u793a\u6210\\((x,y,1)\\)</li> <li>\u7ed9\u4e8c\u7ef4\u5411\u91cf\u589e\u52a0\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u7b2c\u4e09\u7ef4\u5ea6\u4e3a0\u3002\u5373\u628a\u7b1b\u5361\u5c14\u4e8c\u7ef4\u5411\u91cf\u8868\u793a\u6210\\((x,y,0)\\)</li> </ul> <p>\u5982\u6b64\uff0c\u5e73\u79fb\u53d8\u6362\u5c31\u53ef\u4ee5\u5199\u6210\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f\u4e86</p> <p></p> <p>\u5982\u4e0a\uff0c\u6211\u4eec\u7528\u9f50\u6b21\u5750\u6807\u5c31\u53ef\u4ee5\u628a\u5404\u5f0f\u5404\u6837\u7684\u53d8\u6362\u90fd\u7edf\u4e00\u8868\u793a\u6210\u77e9\u9635\u7684\u5f62\u5f0f\u3002 \u5b83\u7684\u4ee3\u4ef7\u5c31\u662f\u5411\u91cf\u548c\u77e9\u9635\u90fd\u5347\u4e86\u7ef4\uff0c\u5e26\u6765\u7684\u4fbf\u662f\u5b58\u50a8\u548c\u8ba1\u7b97\u591a\u4e86\u3002 \u4f46\u8fd9\u4e2a\u4ee3\u4ef7\u8fd8\u7b97\u86ee\u5c0f\u7684\u3002\u8fd9\u6b63\u662f\u4eba\u4eec\u5728\u505a\u53d6\u820d\uff08trade off\uff09\uff0c\u5b81\u613f\u591a\u70b9\u8ba1\u7b97\u548c\u5b58\u50a8\uff0c\u4e5f\u8981\u7edf\u4e00\u6240\u6709\u53d8\u6362\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/%E9%BD%90%E6%AC%A1%E5%9D%90%E6%A0%87/#_10","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>Homogeneous Coordinates (songho.ca)</li> <li>\u300aGAMES101\u300b</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%9B%B8%E5%85%B3%E5%BA%93/glm/glm%E7%9F%A9%E9%98%B5%E4%B8%8E%E5%90%91%E9%87%8F%E4%B9%98%E6%B3%95/","title":"Glm\u77e9\u9635\u4e0e\u5411\u91cf\u4e58\u6cd5","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%9B%B8%E5%85%B3%E5%BA%93/glm/glm%E7%9F%A9%E9%98%B5%E4%B8%8E%E5%90%91%E9%87%8F%E4%B9%98%E6%B3%95/#_1","title":"\u793a\u4f8b","text":"<pre><code>auto mat = glm::translate(glm::mat4(1.0f), glm::vec3(-0.5, 0.5, 1)); //\u6309\u5217\u5f0f\u5b58\u50a8\nauto v = glm::vec4(1.0, 1.0, 1.0, 1.0); //\u5217\u5f0f\u5b58\u50a8\u3002\u6ca1\u6709\u91cd\u5199\u4e00\u4e2avec3\uff0c\u91cd\u7528matrix\nauto tmp = mat * v; //\u4e3a\u4e86\u548cglsl\u7edf\u4e00\n</code></pre> <p>\u8f93\u51fa</p> <pre><code>matrix: mat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (-0.500000, 0.500000, 1.000000, 1.000000))\nvector: vec4(1.000000, 1.000000, 1.000000, 1.000000)\nresult: vec4(0.500000, 1.500000, 2.000000, 1.000000)\n</code></pre> <p>\u6574\u7406\u6210\u884c\u5217\u5f0f\uff0c\u65b9\u4fbf\u67e5\u770b</p> <ul> <li>\u6839\u636e\u8d44\u6599\u663e\u793a\uff0cglm\u7684\u5411\u91cf\u662f\u5217\u5411\u91cf</li> <li>\u800c\u4e14\uff0c<code>\u5411\u91cf = \u77e9\u9635 * \u5411\u91cf</code></li> <li>\u56e0\u6b64\uff0c\u53ef\u4ee5\u5c06\u793a\u4f8b\u6574\u7406\u6210\u5982\u4e0b\u5f62\u5f0f</li> </ul> <pre><code>|  1.0 0.0 0.0 0.0 |   | 1 |    | 0.5 |\n|  0.0 1.0 0.0 0.0 | x | 1 | =  | 1.5 |\n|  0.0 0.0 1.0 0.0 |   | 1 |    | 2.0 |\n| -0.5 0.5 1.0 1.0 |   | 1 |    | 1.0 |\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%9B%B8%E5%85%B3%E5%BA%93/glm/glm%E7%9F%A9%E9%98%B5%E4%B8%8E%E5%90%91%E9%87%8F%E4%B9%98%E6%B3%95/#_2","title":"\u5206\u6790","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%9B%B8%E5%85%B3%E5%BA%93/glm/glm%E7%9F%A9%E9%98%B5%E4%B8%8E%E5%90%91%E9%87%8F%E4%B9%98%E6%B3%95/#_3","title":"\u624b\u52a8\u8ba1\u7b97","text":"<p>\u6211\u4eec\u6839\u636e\u77e9\u9635\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u624b\u52a8\u8ba1\u7b97\u4e00\u4e0b\uff1a</p> <p>\u8ba1\u7b97\u516c\u5f0f <pre><code>| m11 m12 m13 m14 |   | x |\n| m21 m22 m23 m24 | x | y | \n| m31 m32 m33 m34 |   | z |\n| m41 m42 m43 m44 |   | w |\n\n= \n    (\n        x*m11 + y*m12 + z*m13 + w*m14,\n        x*m21 + y*m22 + z*m23 + w*m24,\n        x*m31 + y*m32 + z*m33 + w*m34,\n        x*m41 + y*m42 + z*m43 + w*m44\n    )\n</code></pre></p> <p>\u8ba1\u7b97\u7ed3\u679c <pre><code>|   1     0 0 0 |   | 1 |\n|   0     1 0 0 | x | 1 | = (1, 1, 1, 1)\n|   0     0 1 0 |   | 1 |\n| -0.5 -0.5 1 1 |   | 1 |\n</code></pre></p> <p>\u53d1\u73b0\u7ed3\u679c\u548c\u7a0b\u5e8f\u8fd0\u884c\u7684\u5bf9\u4e0d\u5230\uff01\u90a3\u53ea\u6709\u4e00\u79cd\u53ef\u80fd\u4e86\uff0cglm\u7684 <code>(4x4) * (4x1)</code> \u5e76\u4e0d\u662f\u6570\u5b66\u4e2d\u77e9\u9635\u7684\u8ba1\u7b97\u65b9\u6cd5\uff01</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%9B%B8%E5%85%B3%E5%BA%93/glm/glm%E7%9F%A9%E9%98%B5%E4%B8%8E%E5%90%91%E9%87%8F%E4%B9%98%E6%B3%95/#glm","title":"\u67e5\u770bglm\u6e90\u7801","text":"<pre><code>template&lt;typename T, qualifier Q&gt;\nGLM_FUNC_QUALIFIER typename mat&lt;4, 4, T, Q&gt;::col_type operator*\n(\nmat&lt;4, 4, T, Q&gt; const&amp; m,\ntypename mat&lt;4, 4, T, Q&gt;::row_type const&amp; v\n)\n{\ntypename mat&lt;4, 4, T, Q&gt;::col_type const Mov0(v[0]);            //x\ntypename mat&lt;4, 4, T, Q&gt;::col_type const Mov1(v[1]);            //y\ntypename mat&lt;4, 4, T, Q&gt;::col_type const Mul0 = m[0] * Mov0;    //\u7b2c\u4e00\u884c * x\ntypename mat&lt;4, 4, T, Q&gt;::col_type const Mul1 = m[1] * Mov1;    //\u7b2c\u4e8c\u884c * y\ntypename mat&lt;4, 4, T, Q&gt;::col_type const Add0 = Mul0 + Mul1;    //\u7b2c\u4e00\u884c * x + \u7b2c\u4e8c\u884c * y\ntypename mat&lt;4, 4, T, Q&gt;::col_type const Mov2(v[2]);            //z\ntypename mat&lt;4, 4, T, Q&gt;::col_type const Mov3(v[3]);            //w\ntypename mat&lt;4, 4, T, Q&gt;::col_type const Mul2 = m[2] * Mov2;    //\u7b2c\u4e09\u884c * z\ntypename mat&lt;4, 4, T, Q&gt;::col_type const Mul3 = m[3] * Mov3;    //\u7b2c\u56db\u884c * w\ntypename mat&lt;4, 4, T, Q&gt;::col_type const Add1 = Mul2 + Mul3;    //\u7b2c\u4e09\u884c * z + \u7b2c\u56db\u884c * w\ntypename mat&lt;4, 4, T, Q&gt;::col_type const Add2 = Add0 + Add1;    //\u7b2c\u4e00\u884c * x + \u7b2c\u4e8c\u884c * y + \u7b2c\u4e09\u884c * z + \u7b2c\u56db\u884c * w\nreturn Add2;\n}\n</code></pre> <p>\u68b3\u7406\u6e90\u7801\uff0c\u60ca\u8bb6\u7684\u53d1\u73b0\uff0c\u5728glm\u4e2d\uff1a<code>(4x4) * (4x1)</code>\u7684\u7ed3\u679c\u5c45\u7136\u662f<code>(1x4) * (4x4)</code>\u7684\u7ed3\u679c\u3002 <pre><code>| m11 m12 m13 m14 |   | x |\n| m21 m22 m23 m24 | x | y | \n| m31 m32 m33 m34 |   | z |\n| m41 m42 m43 m44 |   | w |\n\n=x(m11, m12, m13, m14) + y(m21, m22, m23, m24) + z(m31, m32, m33, m34) + w(m41, m42, m43, m44)\n\n= \n    (\n        x*m11 + y*m21 + z*m31 + w*m41,\n        x*m12 + y*m22 + z*m32 + w*m42,\n        x*m13 + y*m23 + z*m33 + w*m43,\n        x*m14 + y*m24 + z*m34 + w*m44\n    )\n= \n\n (x, y, z, w) x | m11 m12 m13 m14 |\n                | m21 m22 m23 m24 |\n                | m31 m32 m33 m34 |\n                | m41 m42 m43 m44 |\n</code></pre></p> <p>\u6309\u7167\u793a\u4f8b\u4ee3\u5165\uff0c\u8ba1\u7b97\u7ed3\u679c\u786e\u5b9e\u662f\u5bf9\u7684\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%9B%B8%E5%85%B3%E5%BA%93/glm/glm%E7%9F%A9%E9%98%B5%E4%B8%8E%E5%90%91%E9%87%8F%E4%B9%98%E6%B3%95/#_4","title":"\u7ed3\u8bba","text":"<p>\u56e0\u6b64\uff0c\u4e0d\u8981\u88abglm\u9a97\u4e86\u3002</p> <ul> <li>\u5728\u6570\u5b66\u7684\u89d2\u5ea6\u3001\u884c\u5217\u5f0f\u7684\u89d2\u5ea6\uff0cglm\u7684\u5411\u91cf\u5176\u5b9e\u662f\u884c\u5411\u91cf\uff0c\u5e94\u8be5\u5199\u6210<code>\u5411\u91cf = \u5411\u91cf * \u77e9\u9635</code>\uff08\u56e0\u4e3a\u77e9\u9635\u662f\u5217\u5f0f\u5b58\u50a8\u7684\uff09</li> <li>\u4f46\u5b83\u88ab\u4eba\u4e3a\u5b9a\u4e49\u6210\u5217\u5411\u91cf\uff0c\u5e76\u4eba\u4e3a\u91cd\u65b0\u5b9a\u4e49\u4e86<code>operator *</code>\uff0c\u6700\u540e\u5199\u6210<code>\u5411\u91cf = \u77e9\u9635 * \u5411\u91cf</code>\u7684\u5f62\u5f0f</li> <li>\u8fd9\u53ef\u80fd\u662f\u4e3a\u4e86\u548cGLSL\u505a\u7edf\u4e00\uff0c\u56e0\u4e3a\u5728GLSL\u4e2d\uff0c\u4e5f\u662f<code>\u5411\u91cf = \u77e9\u9635 * \u5411\u91cf</code>\u7684\u5f62\u5f0f</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%9B%B8%E5%85%B3%E5%BA%93/glm/glm%E7%9F%A9%E9%98%B5%E4%B8%8E%E5%90%91%E9%87%8F%E4%B9%98%E6%B3%95/#_5","title":"\u603b\u7ed3","text":"<p>glm\u662fOpenGL\u7684\u6570\u5b66\u5e93\uff0c\u56e0\u6b64OpenGL\u7684\u60c5\u51b5\u4e0eglm\u4e00\u81f4</p> <ol> <li>glm\u7684\u77e9\u9635\u662f\u6309\u5217\u4f18\u5148\u5b58\u50a8\uff08\u5217\u4e3b\u5e8f\uff09</li> <li>glm\u7684\u5411\u91cf\u88ab\u89c6\u4e3a\u5217\u5411\u91cf</li> <li><code>\u5411\u91cf = \u77e9\u9635 * \u5411\u91cf</code>\uff0c\u9700\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u5904\u7684\u4e58\u6cd5\u5e76\u4e0d\u662f\u884c\u5217\u5f0f\u7684\u4e58\u6cd5\uff0c\u800c\u662f\u88ab\u7a0b\u5e8f\u5458\u81ea\u5b9a\u4e49\u4e86</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E7%9B%B8%E5%85%B3%E5%BA%93/glm/to_string/","title":"To string","text":"<pre><code>#include &lt;glm/gtx/string_cast.hpp&gt;\nstd::cout &lt;&lt; glm::to_string(matrix) &lt;&lt; std::endl;\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E9%AB%98%E7%B2%BE%E5%BA%A6%E8%AE%A1%E7%AE%97/","title":"\u9ad8\u7cbe\u5ea6\u8ba1\u7b97","text":"<p>\u4ee5\u4e0b\u6765\u81eaChatGPT</p> <p>\u5bf9\u4e8e\u6574\u6570\u8ba1\u7b97\uff0cGMP \u548c MPIR \u53ef\u4ee5\u63d0\u4f9b\u66f4\u5feb\u901f\u548c\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u5bf9\u4e8e\u6d6e\u70b9\u6570\u8ba1\u7b97\uff0cMPFR \u5219\u66f4\u52a0\u5408\u9002\u3002</p> \u5e93\u540d \u7b80\u4ecb \u4f18\u70b9 \u7f3a\u70b9 GMP GNU Multiple Precision Arithmetic Library \u5728\u9ad8\u7cbe\u5ea6\u6574\u6570\u8ba1\u7b97\u65b9\u9762\u975e\u5e38\u5feb\u901f\u548c\u9ad8\u6548 \u5728\u9ad8\u7cbe\u5ea6\u6574\u6570\u8ba1\u7b97\u65b9\u9762\u975e\u5e38\u5feb\u901f\u548c\u9ad8\u6548 MPFR Multiple Precision Floating-point with Correct Rounding \u63d0\u4f9b\u4e86\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\u8ba1\u7b97\uff0c\u652f\u6301\u56db\u820d\u4e94\u5165\u3001\u5411\u96f6\u820d\u5165\u7b49\u591a\u79cd\u820d\u5165\u6a21\u5f0f\uff0c\u4ee5\u53ca\u8bb8\u591a\u7279\u6b8a\u51fd\u6570\u548c\u7b97\u6cd5\u7684\u5b9e\u73b0 \u76f8\u5bf9\u4e8e\u6574\u6570\u8ba1\u7b97\uff0c\u6d6e\u70b9\u6570\u8ba1\u7b97\u9700\u8981\u66f4\u591a\u7684\u65f6\u95f4\u548c\u5185\u5b58\uff0c\u5c24\u5176\u662f\u5728\u9ad8\u7cbe\u5ea6\u6a21\u5f0f\u4e0b MPIR Multiple Precision Integers and Rationals \u5feb\u901f\u7684\u6574\u6570\u548c\u6709\u7406\u6570\uff08\u5206\u6570\uff09\u8ba1\u7b97\uff0c\u5e76\u5177\u6709\u4e0e GMP \u76f8\u4f3c\u7684 API \u7f3a\u4e4f\u5bf9\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u652f\u6301\uff0c\u5728\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e0a\u7684\u6027\u80fd\u76f8\u5bf9\u8f83\u5dee"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E9%AB%98%E7%B2%BE%E5%BA%A6%E8%AE%A1%E7%AE%97/GMP/","title":"GMP","text":"<p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>https://gmplib.org/gmp-man-6.1.0.pdf</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E9%AB%98%E7%B2%BE%E5%BA%A6%E8%AE%A1%E7%AE%97/GMP/#gmp","title":"GMP","text":"<p>GMP\u662fGNU\u591a\u7cbe\u5ea6\u7b97\u672f\u5e93\uff08GNU Multiple Precision Arithmetic Library\uff09\u7684\u7f29\u5199\u3002\u5b83\u662f\u4e00\u4e2a\u5f00\u6e90\u7684C\u8bed\u8a00\u5e93\uff0c\u63d0\u4f9b\u4e86\u9ad8\u7cbe\u5ea6\u6574\u6570\u8fd0\u7b97\u548c\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u51fd\u6570\u3002GMP\u5e93\u53ef\u4ee5\u5728\u591a\u79cd\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u5305\u62ecLinux\u3001Windows\u3001Mac OS X\u7b49\u3002</p> <p>GMP\u5e93\u7684\u7279\u70b9\u5305\u62ec\uff1a</p> <ol> <li>\u9ad8\u7cbe\u5ea6\uff1aGMP\u5e93\u53ef\u4ee5\u8fdb\u884c\u4efb\u610f\u4f4d\u6570\u7684\u6574\u6570\u8fd0\u7b97\uff0c\u53ef\u4ee5\u5904\u7406\u6570\u503c\u8303\u56f4\u5f88\u5927\u6216\u5f88\u5c0f\u7684\u6570\u636e\uff0c\u80fd\u591f\u6ee1\u8db3\u4e00\u4e9b\u9ad8\u7cbe\u5ea6\u8ba1\u7b97\u7684\u9700\u6c42\u3002</li> <li>\u5feb\u901f\u9ad8\u6548\uff1aGMP\u5e93\u4f7f\u7528\u4e86\u591a\u79cd\u4f18\u5316\u6280\u672f\uff0c\u5305\u62ec\u6c47\u7f16\u8bed\u8a00\u4f18\u5316\u3001\u7b97\u6cd5\u4f18\u5316\u7b49\uff0c\u4f7f\u5f97\u5b83\u7684\u8fd0\u7b97\u901f\u5ea6\u975e\u5e38\u5feb\u3002</li> <li>\u53ef\u79fb\u690d\u6027\uff1aGMP\u5e93\u652f\u6301\u591a\u79cd\u64cd\u4f5c\u7cfb\u7edf\u548cCPU\u67b6\u6784\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u5e73\u53f0\u4e0a\u8fd0\u884c\u3002</li> <li>\u5b89\u5168\u53ef\u9760\uff1aGMP\u5e93\u91c7\u7528\u4e86\u4e25\u683c\u7684\u5b89\u5168\u68c0\u67e5\u673a\u5236\uff0c\u786e\u4fdd\u8ba1\u7b97\u7684\u6b63\u786e\u6027\u548c\u5b89\u5168\u6027\u3002</li> </ol> <p>GMP\u5e93\u88ab\u5e7f\u6cdb\u7528\u4e8e\u6570\u5b66\u3001\u5bc6\u7801\u5b66\u3001\u8ba1\u7b97\u673a\u4ee3\u6570\u7b49\u9886\u57df\uff0c\u662f\u8bb8\u591a\u8ba1\u7b97\u673a\u4ee3\u6570\u7cfb\u7edf\u548c\u6570\u503c\u5206\u6790\u8f6f\u4ef6\u7684\u57fa\u7840\u5e93\u4e4b\u4e00\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E9%AB%98%E7%B2%BE%E5%BA%A6%E8%AE%A1%E7%AE%97/GMP/#gmp_1","title":"GMP\u5bf9\u4e8e\u6d6e\u70b9\u8fd0\u7b97","text":"<p>GMP\u5e93\u4e3b\u8981\u662f\u7528\u4e8e\u9ad8\u7cbe\u5ea6\u6574\u6570\u8fd0\u7b97\uff0c\u4f46\u5b83\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e9b\u57fa\u672c\u7684\u6d6e\u70b9\u6570\u51fd\u6570\uff0c\u4f8b\u5982\u52a0\u3001\u51cf\u3001\u4e58\u3001\u9664\u7b49\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e9b\u6d6e\u70b9\u6570\u51fd\u6570\u7684\u7cbe\u5ea6\u548c\u6027\u80fd\u90fd\u6bd4\u4e0d\u4e0a\u4e13\u95e8\u9488\u5bf9\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u5e93\uff0c\u4f8b\u5982MPFR\u5e93\u548cMPFI\u5e93\u3002</p> <p>\u5bf9\u4e8e\u6d6e\u70b9\u6570\u8fd0\u7b97\uff0cGMP\u5e93\u63d0\u4f9b\u7684\u51fd\u6570\u53ea\u80fd\u4fdd\u8bc1\u7cbe\u5ea6\u6709\u9650\uff0c\u5e76\u4e14\u53ef\u80fd\u5b58\u5728\u4e00\u4e9b\u7cbe\u5ea6\u635f\u5931\u548c\u820d\u5165\u8bef\u5dee\u3002\u56e0\u6b64\uff0c\u5728\u9700\u8981\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\u8fd0\u7b97\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528\u4e13\u95e8\u7684\u5e93\uff0c\u4f8b\u5982MPFR\u5e93\u548cMPFI\u5e93\uff0c\u5b83\u4eec\u90fd\u662f\u5efa\u7acb\u5728GMP\u5e93\u4e4b\u4e0a\uff0c\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7cbe\u5ea6\u3001\u66f4\u53ef\u9760\u7684\u6d6e\u70b9\u6570\u8fd0\u7b97\u51fd\u6570\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E9%AB%98%E7%B2%BE%E5%BA%A6%E8%AE%A1%E7%AE%97/GMP/%E7%A4%BA%E4%BE%8B%EF%BC%9A%E8%AE%A1%E7%AE%97%E9%98%B6%E4%B9%98/","title":"\u793a\u4f8b\uff1a\u8ba1\u7b97\u9636\u4e58","text":"<pre><code>#include &lt;gmp.h&gt;\n// \u793a\u4f8b\uff1a\u8ba1\u7b9710000!\nint main(int argc, const char *argv[])\n{\n//\u5b9a\u4e493\u4e2a\u591a\u7cbe\u5ea6\u6574\u6570\uff08multiple precision integer\uff09\u53d8\u91cf\nmpz_t z_i, z_s, z_o;\n//\u521d\u59cb\u5316\nmpz_init_set_str(z_i, \"1\", 10);\nmpz_init_set_str(z_s, \"1\", 10);\nmpz_init_set_str(z_o, \"1\", 10);\n/*int mpz_init_set_str(mpz_t rop, char* str, int base)\n   @rop:  \u591a\u7cbe\u5ea6\u6574\u6570\u53d8\u91cf\n   @str:  \u5b57\u7b26\u4e32\n   @base: \u5341\u8fdb\u5236\n   */\n//\u5faa\u73af10000\u6b21\uff0c\u5e76\u8fdb\u884c\u4e58\u6cd5\u548c\u52a0\u6cd5\nfor (int i = 0; i &lt; 10000; i++)\n{\nmpz_mul(z_s, z_s, z_i);\n/*void mpz_mul(mpz_t rop, mpz_t op1, mpz_t op2)\n      \u5373\uff1arop = op1 * op2\n     */\nmpz_add(z_i, z_i, z_o);\n/*void mpz_add(mpz_t rop, mpz_t op1, mpz_t op2);\n      \u5373\uff1arop = op1 + op2\n     */\n}\n//\u6309\u5927\u6574\u6570\u7684\u683c\u5f0f\u6765\u8f93\u51fa\u7ed3\u679c\ngmp_printf(\"%Zd\\n\", z_s);\n//\u91ca\u653e\u7a7a\u95f4\nmpz_clear(z_i);\nmpz_clear(z_s);\nmpz_clear(z_o);\ngetchar();\nreturn 0;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E9%AB%98%E7%B2%BE%E5%BA%A6%E8%AE%A1%E7%AE%97/MPFR/","title":"MPFR","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E9%AB%98%E7%B2%BE%E5%BA%A6%E8%AE%A1%E7%AE%97/MPFR/#mpfr","title":"MPFR","text":"<p>MPFR\u662f\u4e00\u4e2a\u7528\u4e8e\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u5f00\u6e90C\u5e93\u3002\u5b83\u662fGNU Multiple Precision Floating-Point Reliable Library\u7684\u7f29\u5199\uff0c\u7531INRIA\uff08\u6cd5\u56fd\u56fd\u5bb6\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u81ea\u52a8\u5316\u7814\u7a76\u6240\uff09\u5f00\u53d1\u548c\u7ef4\u62a4\u3002</p> <p>MPFR\u4f9d\u8d56\u4e8eGMP\u3002</p> <p>MPFR\u5e93\u63d0\u4f9b\u4e86\u9ad8\u7cbe\u5ea6\u7684\u6d6e\u70b9\u6570\u8fd0\u7b97\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u7cbe\u5ea6\u4e0b\u8fdb\u884c\u52a0\u3001\u51cf\u3001\u4e58\u3001\u9664\u3001\u5f00\u65b9\u7b49\u5e38\u89c1\u7684\u6570\u5b66\u8fd0\u7b97\u3002\u4e0eGMP\u5e93\u7c7b\u4f3c\uff0cMPFR\u5e93\u4e5f\u662f\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u6570\u5b66\u5e93\uff0c\u4f46GMP\u5e93\u4ec5\u652f\u6301\u6574\u6570\u8fd0\u7b97\uff0c\u800cMPFR\u5e93\u5219\u4e13\u95e8\u7528\u4e8e\u6d6e\u70b9\u6570\u8fd0\u7b97\u3002</p> <p>MPFR\u5e93\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a</p> <ol> <li>\u7cbe\u5ea6\u53ef\u8c03\uff1aMPFR\u5e93\u53ef\u4ee5\u5728\u4efb\u610f\u7cbe\u5ea6\u4e0b\u8fdb\u884c\u8fd0\u7b97\uff0c\u4e14\u53ef\u52a8\u6001\u8c03\u6574\u7cbe\u5ea6\u3002</li> <li>\u53ef\u9760\u6027\u9ad8\uff1aMPFR\u5e93\u91c7\u7528\u4e86\u4e00\u7cfb\u5217\u590d\u6742\u7684\u7b97\u6cd5\uff0c\u4fdd\u8bc1\u5728\u4efb\u610f\u7cbe\u5ea6\u4e0b\u8fdb\u884c\u6570\u503c\u8ba1\u7b97\u65f6\u7684\u51c6\u786e\u6027\u548c\u53ef\u9760\u6027\u3002</li> <li>\u517c\u5bb9\u6027\u597d\uff1aMPFR\u5e93\u652f\u6301IEEE\u6807\u51c6\u7684\u6d6e\u70b9\u6570\u683c\u5f0f\uff0c\u5e76\u4e14\u4e0e\u5176\u4ed6\u6570\u5b66\u5e93\uff08\u5982GMP\u3001MPFI\u7b49\uff09\u517c\u5bb9\u3002</li> </ol> <p>MPFR\u5e93\u5e7f\u6cdb\u5e94\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u3001\u8ba1\u7b97\u673a\u8f85\u52a9\u8bbe\u8ba1\u3001\u5bc6\u7801\u5b66\u3001\u56fe\u5f62\u5b66\u3001\u7269\u7406\u5b66\u7b49\u9886\u57df\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/1-%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/%E9%AB%98%E7%B2%BE%E5%BA%A6%E8%AE%A1%E7%AE%97/MPFR/#_1","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>The GNU MPFR Library</li> <li>Git\u4ed3\u5e93</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/","title":"Index","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/#_1","title":"\u6559\u7a0b","text":"<ol> <li>Cherno\u7684OpenGL\u8bfe\u7a0b\uff1ageodoer/LearnChernoOpenGL (gitee.com)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E5%B7%A5%E5%85%B7/","title":"OpenGL\u76f8\u5173\u5de5\u5177","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E5%B7%A5%E5%85%B7/#_1","title":"\u521b\u5efa\u7a97\u53e3\u548c\u4e0a\u4e0b\u6587","text":"<p>\u5728\u4f7f\u7528OpenGL\u7ed8\u56fe\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7a97\u53e3\u548cOpenGL\u4e0a\u4e0b\u6587\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u6839\u636eWindows API\u5b57\u5f62\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\uff0c\u4f46\u8fd9\u5f88\u9ebb\u70e6\uff0c\u800c\u4e14\u5199\u7684\u4ee3\u7801\u4e5f\u4e0d\u80fd\u8de8\u5e73\u53f0\u3002\u800c\u6709\u4e00\u4e9b\u5f00\u6e90\u5e93\u53ef\u4ee5\u5e2e\u6211\u4eec\u505a\u8de8\u5e73\u53f0</p> \u7b2c\u4e09\u65b9\u5e93 \u8bf4\u660e glut The OpenGL Utility Toolkit freeglut glut\u7684\u5f00\u6e90\u66ff\u4ee3\u7248\u672c\u3002\u53ea\u652f\u6301\u56de\u8c03\u51fd\u6570 glfw Graphics Library Framework\uff0cFreeGlut\u7684\u5347\u7ea7\u7248\u3002\u652f\u6301\u56de\u8c03\u51fd\u6570\u3001\u8f6e\u8be2 <p>\u76f8\u5173\u6587\u7ae0</p> <ol> <li>freeglut\u4e0eGLFW\u4ecb\u7ecd\u53ca\u5176\u4e0d\u540c</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E5%B7%A5%E5%85%B7/#opengl","title":"\u83b7\u53d6OpenGL\u51fd\u6570\u6307\u9488","text":"<p>OpenGL\u53ea\u662f\u4e00\u4e2a\u89c4\u8303\uff0c\u800c\u51fd\u6570\u5b9e\u73b0\u5219\u5728\u663e\u5361\u9a71\u52a8\u91cc\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u53bb\u663e\u5361\u9a71\u52a8\u4e2d\u53d6\u51faOpenGL\u51fd\u6570\u7684\u6307\u9488\u3002\u5177\u4f53\u800c\u8a00\uff0c\u5728\u5b89\u88c5\u5b8c\u663e\u5361\u9a71\u52a8\u4e4b\u540e\uff0c\u4f1a\u6709\u4e00\u4e2a\u9a71\u52a8\u7684\u52a8\u6001\u94fe\u63a5\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u68c0\u7d22\u6b64\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u51fd\u6570\u6307\u9488\uff0c\u627e\u51fa\u81ea\u5df1\u6240\u9700\u8981\u7684\u3002</p> <p>\u5e02\u9762\u4e0a\u6709\u5f88\u591a\u7b2c\u4e09\u65b9\u5e93\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\u8fd9\u4ef6\u4e8b\u60c5\uff0c\u5e76\u4e14\u5b83\u4eec\u4e5f\u652f\u6301\u8de8\u5e73\u53f0\uff08\u4ee3\u7801\u8de8\u5e73\u53f0\uff1a\u4e00\u6837\u7684\u4ee3\u7801\uff0c\u62ff\u5230\u4e0d\u540c\u5e73\u53f0\u7f16\u8bd1\u4e5f\u80fd\u8fd0\u884c\uff09\u3002\u5982glew\u3001glad\u7b49\u7b49\u3002</p> \u7b2c\u4e09\u65b9\u5e93 \u8bf4\u660e glew The OpenGL Extension Wrangler Library\uff0c\u5e95\u5c42OpenGL\u63a5\u53e3\u7684\u5c01\u88c5 glad OpenGL address, glew\u5347\u7ea7\u7248"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E6%95%B0%E6%8D%AE%E5%9D%97/buffer%E5%9D%97/","title":"buffer\u5757","text":"<p>GLSL\u4e2d\u7684buffer\u5757\uff0c\u6216\u8005\u5bf9\u4e8e\u5e94\u7528\u7a0b\u5e8f\u800c\u8a00\uff0c\u5c31\u662f \u7740\u8272\u5668\u7684\u5b58\u50a8\u7f13\u5b58\u5bf9\u8c61\uff08shader storage buffer object\uff0cSSBO\uff09 \u3002</p> <pre><code>buffer BufferObject{ //\u521b\u5efa\u4e00\u4e2a\u53ef\u8bfb\u5199\u7684buffer\u5757\nint mode;        //\u5e8f\u8a00(preamble)\u6210\u5458\nvec4 points[];   //\u6700\u540e\u4e00\u4e2a\u6210\u5458\u53ef\u4ee5\u662f\u672a\u5b9a\u4e49\u5927\u5c0f\u7684\u6570\u7ec4\n};\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E6%95%B0%E6%8D%AE%E5%9D%97/buffer%E5%9D%97/#_1","title":"\u7279\u70b9","text":"<p>\u5b83\u7684\u884c\u4e3a\u7c7b\u4f3cuniform\u5757\u3002\u4e0d\u8fc7\u4e24\u8005\u4e4b\u95f4\u6709\u4e24\u4e2a\u51b3\u5b9a\u6027\u7684\u5dee\u522b\uff0c\u4f7f\u5f97buffer\u5757\u7684\u529f\u80fd\u66f4\u4e3a\u5f3a\u5927\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E6%95%B0%E6%8D%AE%E5%9D%97/buffer%E5%9D%97/#_2","title":"\u652f\u6301\u53d8\u957f\u6570\u7ec4","text":"<p>\u4e0e<code>std::vector</code>\u7c7b\u578b\u76f8\u4f3c\uff0c\u652f\u6301\u4e0d\u5b9a\u957f\u6570\u7ec4\u3002\u5e76\u4e14\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7f16\u8bd1\u548c\u94fe\u63a5\u4e4b\u540e\uff0c\u6e32\u67d3\u4e4b\u524d\u8bbe\u7f6e\u5b83\u7684\u5927\u5c0f</p> <ul> <li>\u5728\u7740\u8272\u5668\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u7684\u6210\u5458\u51fd\u6570<code>length()</code>\u83b7\u53d6\u6e32\u67d3\u65f6\u7684\u6570\u7ec4\u5927\u5c0f\u3002\u5982<code>points.length()</code></li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E6%95%B0%E6%8D%AE%E5%9D%97/buffer%E5%9D%97/#_3","title":"\u652f\u6301\u5199\u64cd\u4f5c","text":"<p>\u7740\u8272\u5668\u53ef\u4ee5\u5bf9buffer\u5757\u4e2d\u7684\u6210\u5458\u6267\u884c\u8bfb\u6216\u5199\u64cd\u4f5c\u3002\u5199\u5165\u64cd\u4f5c\u5bf9\u7740\u8272\u5668\u5b58\u50a8\u7f13\u5b58\u5bf9\u8c61\u7684\u4fee\u6539\u5bf9\u4e8e\u5176\u4ed6\u7740\u8272\u5668\u8c03\u7528\u90fd\u662f\u53ef\u89c1\u7684\u3002</p> <p>\u8fd9\u79cd\u7279\u6027\u5bf9\u4e8e\u8ba1\u7b97\u7740\u8272\u5668\u975e\u5e38\u6709\u610f\u4e49\uff0c\u5c24\u5176\u662f\u5bf9\u975e\u56fe\u50cf\u7684\u5185\u5b58\u533a\u57df\u8fdb\u884c\u5904\u7406\u7684\u65f6\u5019\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E6%95%B0%E6%8D%AE%E5%9D%97/buffer%E5%9D%97/#_4","title":"\u5982\u4f55\u9009\u62e9","text":"<ol> <li>\u5982\u679c\u4f60\u4e0d\u9700\u8981\u5199\u5165\u7f13\u5b58\u4e2d\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528uniform\u5757\uff0c\u5e76\u4e14\u786c\u4ef6\u8bbe\u5907\u672c\u8eab\u53ef\u80fd\u4e5f\u6ca1\u6709\u8db3\u591f\u7684\u8d44\u6e90\u7a7a\u95f4\u6765\u652f\u6301buffer\u5757\uff0c\u4f46\u662funiform\u5757\u901a\u5e38\u662f\u8db3\u591f\u7684</li> <li>buffer\u5757\u53ea\u53ef\u4ee5\u4f7f\u7528std430\u5e03\u5c40\uff0c\u800cuniform\u5757\u53ef\u4ee5\u9009\u62e9std140\u6216\u8005std430\u5e03\u5c40</li> <li>uniform\u4e0d\u80fd\u53d8\u957f\uff1b\u800cbuffer\u652f\u6301\u53d8\u957f</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E6%95%B0%E6%8D%AE%E5%9D%97/buffer%E5%9D%97/#_5","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>\u300aOpenGL\u7f16\u7a0b\u6307\u5357\uff08\u539f\u4e66\u7b2c9\u7248\uff09\u300b\u2014\u20142.4\u3000\u6570\u636e\u5757\u63a5\u53e3</li> <li>Shader Storage Buffer Object - OpenGL Wiki (khronos.org)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E7%BA%B9%E7%90%86/","title":"\u7eb9\u7406","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E7%BA%B9%E7%90%86/#_1","title":"\u7eb9\u7406\u7c7b\u578b","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E7%BA%B9%E7%90%86/%E7%BC%93%E5%AD%98%E7%BA%B9%E7%90%86/","title":"OpenGL\u7f13\u5b58\u7eb9\u7406\uff08Texture Buffer\uff09","text":"","tags":["GL_TEXTURE_BUFFER"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E7%BA%B9%E7%90%86/%E7%BC%93%E5%AD%98%E7%BA%B9%E7%90%86/#_1","title":"\u7f13\u5b58\u7eb9\u7406","text":"<p>OpenGL\u7f13\u5b58\u7eb9\u7406\uff08Texture Buffer\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u9ad8\u6548\u5b58\u50a8\u5927\u91cf\u6570\u636e\u7684\u6280\u672f\u3002\u5b83\u5141\u8bb8\u5c06\u4e00\u4e2a\u7f13\u5b58\u5bf9\u8c61\u4f5c\u4e3a\u7eb9\u7406\uff0c\u8fd9\u4e2a\u7f13\u5b58\u5bf9\u8c61\u53ef\u4ee5\u5b58\u50a8\u5927\u91cf\u7684\u6570\u636e\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u7eb9\u7406\u91c7\u6837\u5668\u6765\u8bfb\u53d6\u8fd9\u4e9b\u6570\u636e\uff0c\u800c\u65e0\u9700\u4f7f\u7528\u4f20\u7edf\u7684\u7f13\u5b58\u8bfb\u5199\u64cd\u4f5c\u3002</p> <p>\u4f18\u52bf</p> <ul> <li>\u6700\u5927\u7684\u597d\u5904\u5c31\u662f\u5b83\u53ef\u4ee5\u5728\u7740\u8272\u5668\u7a0b\u5e8f\u4e2d\u9ad8\u6548\u5730\u8bbf\u95ee\u5927\u91cf\u6570\u636e</li> </ul> <p>\u7279\u70b9</p> <ul> <li>\u4e00\u7ef4\u7eb9\u7406\u7684\u5c3a\u5bf8\u53d7\u9650\u4e8e <code>GL_MAX_TEXTURE_SIZE</code> \u5bf9\u5e94\u7684\u6700\u5927\u503c\uff0c\u4f46\u662f\u7f13\u5b58\u7eb9\u7406\u7684\u5c3a\u5bf8\u53d7\u9650\u4e8e <code>GL_MAX_TEXTURE_BUFFER_SIZE</code> \u7684\u503c\uff0c\u901a\u5e38\u80fd\u8fbe\u5230 2GB \u751a\u81f3\u66f4\u591a\u3002</li> <li>\u4e00\u7ef4\u7eb9\u7406\u652f\u6301\u6ee4\u6ce2\u3001mipmap\u3001\u7eb9\u7406\u5750\u6807\u7684\u622a\u53d6\uff0c\u4ee5\u53ca\u5176\u4ed6\u7684\u4e00\u4e9b\u91c7\u6837\u5668\u53c2\u6570\uff0c\u4f46\u662f\u7f13\u5b58\u7eb9\u7406\u4e0d\u884c</li> <li>\u4e00\u7ef4\u7eb9\u7406\u7684\u7eb9\u7406\u5750\u6807\u662f\u5f52\u4e00\u5316\u7684\u6d6e\u70b9\u6570\u503c\uff0c\u4f46\u662f\u7f13\u5b58\u7eb9\u7406\u4f7f\u7528\u7684\u662f\u6ca1\u6709\u5f52\u4e00\u5316\u7684\u6574\u6570\u7eb9\u7406\u5750\u6807</li> <li>\u5728GPU\u4e2d\uff0c\u4e00\u7ef4\u7eb9\u7406\u7684\u50cf\u7d20\u8fd8\u662fRGBA\u56db\u4e2a\u901a\u9053\u3002\u5982\u679c\u4f60\u53ea\u4f20R\uff0c\u5c31\u4f1a\u591a\u51faGBA\u4e09\u4e2a\u591a\u4f59\u7a7a\u95f4</li> </ul>","tags":["GL_TEXTURE_BUFFER"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E7%BA%B9%E7%90%86/%E7%BC%93%E5%AD%98%E7%BA%B9%E7%90%86/#glsl","title":"GLSL","text":"<p>\u5728GLSL\u4e2d\uff0c\u4e0e\u7f13\u5b58\u7eb9\u7406\u76f8\u5173\u7684\u7c7b\u578b\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u4e09\u79cd\uff1a</p> <ol> <li><code>samplerBuffer</code>\uff1a\u7528\u4e8e\u4ece\u7eb9\u7406\u7f13\u51b2\u533a\u4e2d\u83b7\u53d6\u6d6e\u70b9\u578b\uff08float\uff09\u50cf\u7d20\u503c\u3002</li> <li><code>usamplerBuffer</code>\uff1a\u7528\u4e8e\u4ece\u7eb9\u7406\u7f13\u51b2\u533a\u4e2d\u83b7\u53d6\u65e0\u7b26\u53f7\u6574\u6570\uff08unsigned int\uff09\u50cf\u7d20\u503c\u3002</li> <li><code>isamplerBuffer</code>\uff1a\u7528\u4e8e\u4ece\u7eb9\u7406\u7f13\u51b2\u533a\u4e2d\u83b7\u53d6\u6709\u7b26\u53f7\u6574\u6570\uff08int\uff09\u50cf\u7d20\u503c\u3002</li> </ol> <p>\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5148\u901a\u8fc7<code>textureSize()</code>\u51fd\u6570\u83b7\u53d6\u7eb9\u7406\u7f13\u51b2\u533a\u7684\u5c3a\u5bf8\uff0c\u7136\u540e\u4f7f\u7528<code>texture()</code>\u51fd\u6570\u6216\u8005<code>texelFetch()</code>\u51fd\u6570\u6765\u8fdb\u884c\u91c7\u6837\u64cd\u4f5c\u3002\u5176\u4e2d</p> <ol> <li><code>texture()</code>\u51fd\u6570\u7528\u4e8e\u5bf9\u7f13\u51b2\u533a\u8fdb\u884c\u63d2\u503c\u91c7\u6837</li> <li>\u800c<code>texelFetch()</code>\u51fd\u6570\u5219\u76f4\u63a5\u4ece\u7f13\u51b2\u533a\u4e2d\u53d6\u51fa\u50cf\u7d20\u503c\uff0c\u4e0d\u8fdb\u884c\u63d2\u503c\u5904\u7406</li> </ol>","tags":["GL_TEXTURE_BUFFER"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E7%BA%B9%E7%90%86/%E7%BC%93%E5%AD%98%E7%BA%B9%E7%90%86/#_2","title":"\u5e94\u7528","text":"<ol> <li>\u5b9e\u4f8b\u5316\u6e32\u67d3</li> <li>GPU\u77e2\u91cf\u7eb9\u7406\uff08\u53ef\u53c2\u8003\uff1a<code>\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66 &gt; \u6e32\u67d3\u6982\u8ff0 &gt; \u6587\u5b57\u6e32\u67d3 &gt; GPU\u77e2\u91cf\u6e32\u67d3</code>\u4e0b\u7684\u6587\u7ae0\uff09</li> </ol>","tags":["GL_TEXTURE_BUFFER"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E7%BA%B9%E7%90%86/%E7%BC%93%E5%AD%98%E7%BA%B9%E7%90%86/#_3","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>OpenGL - TBO (Texture Buffer Object) - \u7f13\u5b58\u7eb9\u7406 - Instancing Using TBO \u524d\u7f6e\u7bc7_tbo opengl_Jave.Lin\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</li> </ol>","tags":["GL_TEXTURE_BUFFER"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/","title":"Index","text":"<p>Cherno OpenGL\u8bfe\u7a0b\u5b66\u4e60\u7b14\u8bb0\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/#_1","title":"\u8bfe\u7a0b\u5185\u5bb9","text":"<ol> <li>OpenGL\u63a5\u53e3\u7684\u8bb2\u89e3\u4e0e\u4f7f\u7528</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/#_2","title":"\u8bfe\u7a0b\u8bc4\u4ef7","text":"<ol> <li>\u8bb2\u89e3\u7684\u5f88\u7ec6\u81f4\uff0c\u6df1\u5165\u6d45\u51fa\u3002\u4e00\u5c42\u4e00\u5c42\u53bb\u8bb2\uff0c\u8ba9\u8bfb\u8005\u77e5\u9053\u67d0\u4e9b\u6982\u5ff5\u5177\u4f53\u662f\u505a\u4ec0\u4e48\u7684\uff0c\u800c\u6bcf\u4e00\u5c42\u4e3e\u7684\u53c8\u662f\u6700\u5c0f\u6848\u4f8b</li> <li>\u5199\u4ee3\u7801\u524d\uff0c\u4f1a\u8bb2\u539f\u7406</li> <li>\u5199\u4ee3\u7801\u65f6\uff0c\u4f1a\u5e26\u8bfb\u8005\u53bb\u5199\uff0c\u5e76\u523b\u610f\u4f1a\u72af\u4e00\u4e9b\u9519\u8bef\uff0c\u518d\u8bb2\u89e3\u539f\u56e0\u5e76\u89e3\u51b3</li> <li>\u5199\u4ee3\u7801\u65f6\uff0c\u4f1a\u4ece0\u5f00\u59cb\uff0c\u7136\u540e\u4e0d\u65ad\u8fed\u4ee3\u62bd\u8c61\uff0c\u8fb9\u5199\u8fb9\u5e26\u89c2\u4f17\u601d\u8003</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/#_3","title":"\u8bfe\u7a0b\u94fe\u63a5","text":"<p>\u8bfe\u7a0b\u89c6\u9891\uff1a\u3010\u8bd1\u3011TheCherno-OpenGL\u7cfb\u5217\u6559\u7a0b_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>\u4f5c\u8005cherno\u7684\u7f51\u7ad9</li> <li>\u8bd1\u8005\u7684\u4ee3\u7801GITHUB: Github\u5730\u5740\uff1bGITEE</li> <li>OpenGL\u7684\u6587\u6863\uff1adocs.gl</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/#_4","title":"\u5de5\u7a0b\u8bf4\u660e","text":"\u5b50\u5de5\u7a0b \u5bf9\u5e94\u8bfe\u7a0b \u8bf4\u660e 13UseImgui P22 \u4f7f\u7528ImGUI\uff1b\u6dfb\u52a0\u63a7\u5236transform\u7684\u6309\u94ae 14DoubleDraw P23 \u6279\u91cf\u6e32\u67d3\u3002\u4e00\u5e27\u4e2d\uff0c\u6539\u53d8\u504f\u79fb\u77e9\u9635\uff0c\u591a\u6b21\u7ed8\u5236\u7269\u4f53 15TestProject P24, P25 1. \u6d4b\u8bd5\u6846\u67b6\uff1a\u521b\u5efa\u4e00\u4e2a\u62bd\u8c61\u7684\u6d4b\u8bd5\u7c7b\u4e0e\u83dc\u53552. \u5e76\u6dfb\u52a0\u201c\u6e05\u9664\u989c\u8272\u6d4b\u8bd5\u201d"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/01%20Hi%2C%20OpenGL/","title":"01 Hi, OpenGL","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/01%20Hi%2C%20OpenGL/#opengl","title":"OpenGL\u662f\u4ec0\u4e48","text":"<p>OpenGL\u4e0d\u662f\u4e00\u4e2a\u7c7b\u5e93\uff0c\u4e5f\u4e0d\u662f\u4e00\u4e2a\u5f15\u64ce\uff0c\u4e0d\u662f\u4e00\u4e2a\u6846\u67b6\uff0c\u975e\u5f00\u6e90 OpenGL\u53ea\u662f\u4e00\u4e2a\u89c4\u8303\uff0c\u548cC++\u89c4\u8303\u5dee\u4e0d\u591a</p> <ul> <li>\u5b83\u53ea\u662f\u63d0\u4f9b\u4e00\u4e9b\u89c4\u8303\u3002\u5b83\u89c4\u5b9a\u4e86OpenGL\u5305\u542b\u4e86\u54ea\u4e9b\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u5e94\u8be5\u5b58\u5728\uff0c\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u8fd9\u4e9b\u53c2\u6570\u5e76\u4e14\u8fd4\u56de\u8fd9\u4e2a\u503c</li> <li>\u5b83\u6ca1\u6709\u63d0\u4f9b\u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u662f\u7531GPU\u5236\u9020\u5546\u5b9e\u73b0\u3002\u5047\u8bbe\u4f60\u4f7f\u7528\u7684\u662fNVIDIA\u7684\u663e\u5361\uff0c\u90a3\u4e48OpenGL\u6240\u5b9a\u4e49\u7684\u51fd\u6570\u7531\u82f1\u4f1f\u8fbe\u5199\u5728NVIDIA\u7684\u663e\u5361\u9a71\u52a8\u91cc</li> <li>\u6bcf\u4e2a\u663e\u5361\u5236\u9020\u5546\uff08\u6bd4\u5982AMD\u3001Intel\u7b49\uff09\u90fd\u4f1a\u6709OpenGL\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u800c\u4e14\u4ee3\u7801\u90fd\u4e0d\u540c\uff0c\u56e0\u6b64OpenGL\u4e0d\u662f\u5f00\u6e90\u7684\uff0cGPU\u5236\u9020\u5546\u4e0d\u4f1a\u5f00\u6e90\u8fd9\u4e9b\u4ee3\u7801</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/01%20Hi%2C%20OpenGL/#_1","title":"\u521b\u5efa\u7a97\u53e3\u548c\u4e0a\u4e0b\u6587","text":"<p>\u5728\u4f7f\u7528OpenGL\u7ed8\u56fe\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7a97\u53e3\u548cOpenGL\u4e0a\u4e0b\u6587\u3002\u6211\u4eec\u53ef\u4ee5\u6839\u636eWindows API\u81ea\u884c\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\uff0c\u4f46\u8fd9\u5f88\u9ebb\u70e6\uff0c\u800c\u4e14\u5199\u7684\u4ee3\u7801\u4e5f\u4e0d\u80fd\u8de8\u5e73\u53f0\u3002\u5e02\u9762\u4e0a\u6709\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5e93\u80fd\u591f\u5e2e\u6211\u4eec\u5b8c\u6210\u8fd9\u4e2a\u5de5\u4f5c\uff0c\u5e76\u4e14\u5199\u7684\u4ee3\u7801\u4e5f\u80fd\u8de8\u5e73\u53f0\uff0c\u5982glfw\u3001glut\u3002</p> <p>\u672c\u6559\u7a0b\u91c7\u7528glfw\uff0c\u4e0b\u8f7d\u5730\u5740\uff1aAn OpenGL library | GLFW</p> <pre><code>#include \"GLFW/glfw3.h\"\nint main(void)\n{\nGLFWwindow* window;\n/* Initialize the library */\nif (!glfwInit()) return -1;\n/* Create a windowed mode window and its OpenGL context */\nwindow = glfwCreateWindow(640, 480, \"Hello World\", NULL, NULL);\nif (!window) {\nglfwTerminate();\nreturn -1;\n}\n/* Make the window's context current */\nglfwMakeContextCurrent(window);\n/* Loop until the user closes the window */\nwhile (!glfwWindowShouldClose(window)) {\n/* Render here */\nglClear(GL_COLOR_BUFFER_BIT);\nglBegin(GL_TRIANGLES);\nglVertex2f(-0.5f, -0.5f);\nglVertex2f(0.0f, 0.5f);\nglVertex2f(0.5f, -0.5f);\nglEnd();\n/* Swap front and back buffers */\nglfwSwapBuffers(window);\n/* Poll for and process events */\nglfwPollEvents();\n}\nglfwTerminate();\nreturn 0;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/01%20Hi%2C%20OpenGL/#opengl_1","title":"\u83b7\u53d6OpenGL\u51fd\u6570\u6307\u9488","text":"<p>OpenGL\u53ea\u662f\u4e00\u4e2a\u89c4\u8303\uff0c\u800c\u51fd\u6570\u5b9e\u73b0\u5219\u5728\u663e\u5361\u9a71\u52a8\u91cc\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u53bb\u663e\u5361\u9a71\u52a8\u4e2d\u53d6\u51faOpenGL\u51fd\u6570\u7684\u6307\u9488\u3002\u5177\u4f53\u800c\u8a00\uff0c\u5728\u5b89\u88c5\u5b8c\u663e\u5361\u9a71\u52a8\u4e4b\u540e\uff0c\u4f1a\u6709\u4e00\u4e2a\u9a71\u52a8\u7684\u52a8\u6001\u94fe\u63a5\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u68c0\u7d22\u6b64\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u51fd\u6570\u6307\u9488\uff0c\u627e\u51fa\u81ea\u5df1\u6240\u9700\u8981\u7684\u3002</p> <p>\u5e02\u9762\u4e0a\u6709\u5f88\u591a\u7b2c\u4e09\u65b9\u5e93\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\u8fd9\u4ef6\u4e8b\u60c5\uff0c\u5e76\u4e14\u5b83\u4eec\u4e5f\u652f\u6301\u8de8\u5e73\u53f0\uff08\u4ee3\u7801\u8de8\u5e73\u53f0\uff1a\u4e00\u6837\u7684\u4ee3\u7801\uff0c\u62ff\u5230\u4e0d\u540c\u5e73\u53f0\u7f16\u8bd1\u4e5f\u80fd\u8fd0\u884c\uff09\u3002\u5982glew\u3001glad\u7b49\u7b49\u3002</p> <p>\u672c\u6559\u7a0b\u4f7f\u7528glew\uff08The OpenGL Extension Wrangler Library\uff09\uff0c\u4e0b\u8f7d\u5730\u5740\uff1aGLEW: The OpenGL Extension Wrangler Library (sourceforge.net)</p> <p>\u4f7f\u7528glew\u9700\u6ce8\u610f</p> <ol> <li>\u82e5\u4f7f\u7528glew\u7684\u9759\u6001\u5e93\uff0c\u9700\u8981\u5728\u5f15\u7528\u5e93\u4e4b\u524d\u5b9a\u4e49\u5b8f<code>GLEW_STATIC</code></li> <li>\u5fc5\u987b\u5728\u521b\u5efa\u4e86\u7a97\u53e3\u3001\u521d\u59cb\u5316\u4e0a\u4e0b\u6587\u4e4b\u540e\uff08\u4e0a\u4e0b\u6587\u6709\u6548\uff09\uff0c\u624d\u80fd\u8c03\u7528<code>glewInit</code></li> </ol> <pre><code>#include &lt;iostream&gt;\n#define GLEW_STATIC\n#include \"GL/glew.h\"\n#include \"GLFW/glfw3.h\"\nint main(void)\n{\n//...\nGLenum err = glewInit();\nif (GLEW_OK != err) {\nstd::cout &lt;&lt; \"Error: \" &lt;&lt; glewGetErrorString(err) &lt;&lt; std::endl;\n}\nstd::cout &lt;&lt; \"Status: Using GLEW \" &lt;&lt; glewGetString(GLEW_VERSION) &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"Status: Using GL \" &lt;&lt; glGetString(GL_VERSION) &lt;&lt; std::endl;\n//...\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/02%20Draw%20Triangle/","title":"02 Draw Triangle","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/02%20Draw%20Triangle/#opengl","title":"\u4f20\u7edfOpenGL","text":"<p>\u5728\"Hi, OpenGL\"\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4f20\u7edf\u7684OpenGL\u7ed8\u5236\u4e86\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u4f20\u7edf\u7684OpenGL\u4f7f\u7528<code>glBegin()</code>\u548c<code>glEnd()</code>\u5373\u53ef\u5b8c\u6210\u56fe\u5f62\u7684\u7ed8\u5236\u3002</p> <pre><code>glBegin(GL_TRIANGLES);\nglVertex2f(-0.5f, -0.5f);\nglVertex2f( 0.0f,  0.5f);\nglVertex2f( 0.5f, -0.5f);\nglEnd();\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/02%20Draw%20Triangle/#opengl_1","title":"\u73b0\u4ee3OpenGL","text":"<p>\u73b0\u4ee3OpenGL\u7ed8\u5236\u7684\u6d41\u7a0b\uff1a</p> <ol> <li>\u5b9a\u4e49\u4e00\u4e9b\u6570\u636e\u6765\u8868\u793a\u4e09\u89d2\u5f62\uff0c\u7136\u540e\u628a\u5b83\u4eec\u653e\u5230\u663e\u5b58\u4e2d</li> <li>\u7136\u540e\u53d1\u51faDrawCall\u6307\u4ee4\u3002\u8fd9\u662f\u4e00\u4e2a\u7ed8\u5236\u6307\u4ee4\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1aHey\u663e\u5361\uff0c\u4f60\u7684\u663e\u5b58\u4e2d\u6709\u4e00\u5806\u6570\u636e\uff0c\u8bfb\u53d6\u5b83\uff0c\u5e76\u4e14\u628a\u5b83\u7ed8\u5236\u5728\u5c4f\u5e55\u4e0a</li> <li>\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u8fd8\u9700\u544a\u8bc9\u663e\u5361\u5982\u4f55\u8bfb\u53d6\u548c\u89e3\u91ca\u8fd9\u4e9b\u6570\u636e\uff0c\u4ee5\u53ca\u5982\u4f55\u628a\u5b83\u653e\u5230\u6211\u4eec\u7684\u5c4f\u5e55\u4e0a</li> <li>\u7740\u8272\u5668\u8d1f\u8d23\u5982\u4f55\u89e3\u91ca\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u7ed8\u5236</li> </ol> <p>OpenGL\u5177\u4f53\u64cd\u4f5c\u662f\u4e00\u4e2a\u72b6\u6001\u673a</p> <ul> <li>\u8fd9\u610f\u5473\u7740\u4f60\u65e0\u9700\u628a\u5b83\u4eec\u770b\u6210\u5bf9\u8c61\u6216\u7c7b\u4f3c\u7684\u4e1c\u897f\uff0c\u4f60\u505a\u7684\u4e00\u5207\u90fd\u662f\u5728\u8bbe\u7f6e\u4e00\u7cfb\u5217\u7684\u72b6\u6001</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/02%20Draw%20Triangle/#_1","title":"\u9876\u70b9\u7f13\u51b2\u533a","text":"<p>\u7f13\u51b2\u533a\uff1a\u4e00\u5757\u7528\u6765\u5b58\u50a8\u5b57\u8282\u7684\u5185\u5b58\u3002</p> <p>OpenGL\u4e2d\u7684\u5185\u5b58\u7f13\u51b2\u533a</p> <ul> <li>\u8fd9\u5757\u5185\u5b58\u5b9e\u9645\u4e0a\u662f\u5728\u663e\u5361\u4e2d\u7684\uff0c\u5728VRAM\uff08\u663e\u5b58\uff0cVideo RAM\uff09\u5f53\u4e2d</li> </ul> <p>\u9876\u70b9\u7f13\u51b2\u533a\uff1a\u5b58\u50a8\u9876\u70b9\u6570\u636e\u7684\u7f13\u51b2\u533a</p> <p>\u9876\u70b9\u2260\u4f4d\u7f6e</p> <ul> <li>\u9876\u70b9\u4e0e\u4f4d\u7f6e\u65e0\u5173</li> <li>\u9876\u70b9\u662f\u51e0\u4f55\u56fe\u5f62\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u5b83\u5177\u6709\u5f88\u591a\u4e2a\u5c5e\u6027\uff1a\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u3001\u6cd5\u7ebf\u3001\u989c\u8272\u7b49\u7b49\uff0c\u800c\u4f4d\u7f6e\u53ea\u662f\u5176\u4e2d\u4e00\u4e2a\u5c5e\u6027</li> <li>\u5982\u679c\u53ea\u6709\u4f4d\u7f6e\u5c5e\u6027\uff0c\u90a3\u53ef\u4ee5\u8bf4\u662f\u9876\u70b9\u4f4d\u7f6e\uff0c\u800c\u4e0d\u80fd\u79f0\u4e3a\u9876\u70b9</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/02%20Draw%20Triangle/#glgenbuffers","title":"glGenBuffers","text":"<p>\u5728GPU\u4e2d\u751f\u6210buffer\uff0c\u5e76\u83b7\u5f97\u8fd9\u4e9bBuffer\u7684ID</p> <ol> <li>OpenGL\u4e00\u6b21\u53ef\u4ee5\u751f\u6210\u4e00\u5806\u7f13\u51b2\u533a\uff0c\u56e0\u6b64\u5728\u7b2c\u4e00\u4e2a\u53c2\u6570\u5f53\u4e2d\uff0c\u6307\u5b9a\u4f60\u9700\u8981\u751f\u6210\u51e0\u4e2a\u7f13\u51b2\u533a</li> <li>\u8fd9\u4e2a\u51fd\u6570\u4e0d\u8fd4\u56de\u751f\u6210\u7684\u7f13\u51b2\u533aid\uff0c\u5b83\u662f\u901a\u8fc7\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8fd4\u56de\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u6574\u6570\u6765\u63a5\u6536\u7f13\u51b2\u533aid<ol> <li>\u4f46\u56e0\u4e3a\u4e00\u6b21\u53ef\u4ee5\u751f\u6210\u591a\u4e2a\uff0c\u6240\u4ee5\u662f\u4f20\u5165\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u5f62\u6307\u9488\u3002\u9700\u9002\u914d\u4e00\u5806\u7f13\u51b2\u533a\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u5c31\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u6570\u7ec4</li> <li>\u57fa\u672c\u4e0a\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u6570\u5b57\uff0c\u6bd4\u59821\u30012\u30013\u7b49\u7b49\uff0c\u90a3\u662f\u4f60\u7533\u8bf7\u5b9e\u9645\u5bf9\u8c61\u7684ID\u3002\u65e0\u8bba\u662f\u9876\u70b9\u7f13\u51b2\u533a\uff0c\u8fd8\u662f\u9876\u70b9\u6570\u7ec4\u3001\u7eb9\u7406\u3001\u7740\u8272\u5668\u6216\u8005\u4efb\u4f55\u5176\u4ed6\u4e1c\u897f\uff0cOpenGL\u8fd4\u56de\u7ed9\u4f60\u7684\u90fd\u662f\u4e00\u4e2aID</li> </ol> </li> </ol> <pre><code>unsigned int buffer;\nglGenBuffers(1, &amp;buffer);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/02%20Draw%20Triangle/#glbindbuffer","title":"glBindBuffer","text":"<p>\u4f60\u53ef\u80fd\u5728GPU\u4e2d\u751f\u6210\u4e86\u5f88\u591abuffer\uff0c\u4f46OpenGL\u4e00\u6b21\u64cd\u4f5c\u7684buffer\u4e2a\u6570\u6709\u9650\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u9009\u62e9buffer\u3002</p> <p>\u5728OpenGL\u4e2d\u9009\u62e9(selecting)\u88ab\u79f0\u4e4b\u4e3a\u7ed1\u5b9a(binding)</p> <ol> <li>\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fbuffer\u7684\u7c7b\u578b\u3002\u9876\u70b9\u7f13\u51b2\u533a\u5bf9\u5e94\u7684\u662fGL_ARRAY_BUFFER</li> <li>\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662fbuffer\u7684ID</li> </ol> <pre><code>glBindBuffer(GL_ARRAY_BUFFER, buffer); //\u8fd9\u610f\u5473\u7740\uff0c\u6211\u9700\u8981\u4f7f\u7528buffer\u8fd9\u4e2a\u7f13\u51b2\u533a\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/02%20Draw%20Triangle/#glbufferdata","title":"glBufferData","text":"<p>\u628a\u6570\u636e\u653e\u5230\u7f13\u51b2\u533a\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f</p> <ol> <li>\u4e0d\u9700\u8981\u9a6c\u4e0a\u63d0\u4f9b\u6570\u636e\uff0c\u4e4b\u540e\u5728\u66f4\u65b0\u7684\u65f6\u5019\u518d\u7ed9</li> <li>\u5728\u521b\u5efa\u7f13\u51b2\u533a\u65f6\uff0c\u76f4\u63a5\u7ed9\u6570\u636e</li> </ol> <p>\u8fd9\u91cc\u662f\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff0c\u5728\u521b\u5efa\u7f13\u51b2\u533a\u3001\u7ed1\u5b9a\u7f13\u51b2\u533a\u4e4b\u540e\u76f4\u63a5\u7ed9\u6570\u636e</p> <pre><code>float positions[2 * 3] = {\n-0.5f, -0.5f,\n0.0f,  0.5f,\n0.5f, -0.5f\n};\nglBufferData(GL_ARRAY_BUFFER, 6 * sizeof(float), positions, GL_STATIC_DRAW);\n</code></pre> <p>\u53c2\u6570\uff1a\u7ed8\u5236\u6a21\u5f0f</p> <ol> <li><code>STREAM</code>  \u88ab\u4fee\u6539\u4e00\u6b21\uff0c\u53ea\u80fd\u4f7f\u7528\u51e0\u6b21\u3002</li> <li><code>STATIC</code> \u4fee\u6539\u4e00\u6b21\u3001\u4f7f\u7528\u591a\u6b21\u3002\u4e0d\u4f1a\u6bcf\u5e27\u4fee\u6539buffer\uff0c\u4f46\u6bcf\u5e27\u90fd\u7528\u8fd9\u4e00\u4e2abuffer\u7ed8\u5236</li> <li><code>DYNAMIC</code> \u53cd\u590d\u4fee\u6539\u3001\u591a\u6b21\u4f7f\u7528\u3002\u6bcf\u5e27\u4fee\u6539\u8fd9\u4e9b\u9876\u70b9\uff0c\u5e76\u4e14\u6bcf\u5e27\u7ed8\u5236</li> </ol> <p>\u4f46\u8fd9\u53ea\u662f\u63d0\u793a\uff0c\u5982\u679c\u4f60\u7533\u660e\u4e3a<code>STATIC</code>\uff0c\u7136\u540e\u6bcf\u5e27\u8fd8\u662f\u4f1a\u66f4\u65b0\u7f13\u51b2\u533a\u3002\u867d\u7136\u8fd9\u8fdd\u53cd\u4e86\u63d0\u793a(hint)\uff0c\u4f46\u4e5f\u80fd\u8fd0\u884c\uff0c\u53ea\u662f\u901f\u5ea6\u6bd4\u8f83\u6162\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/02%20Draw%20Triangle/#glvertexattribpointer","title":"glVertexAttribPointer","text":"<p>\u4e0a\u4e00\u6b65\u4e4b\u540e\uff0c\u6570\u636e\u5df2\u7ecf\u62f7\u8d1d\u5230GPU\u5f53\u4e2d\u4e86\u3002\u4f46\u8fd9\u4e9b\u6570\u636e\u53ea\u662f\u4e00\u4e9b\u5b57\u8282\uff0cOpenGL\u8fd8\u4e0d\u77e5\u9053\u5982\u4f55\u6b63\u786e\u89e3\u8bfb\u8fd9\u4e9b\u5b57\u8282\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u544a\u8bc9OpenGL\uff0c\u201c\u5185\u5b58\u4e2d\u6709\u4ec0\u4e48\uff1f\u5b83\u4eec\u53c8\u662f\u5982\u4f55\u5e03\u5c40\u7684\uff1f\u201d\u3002</p> <pre><code>//\u542f\u7528\u9876\u70b9\u5c5e\u6027\u6570\u7ec4\uff0c\u7d22\u5f150\uff0c\u7684\u4f4d\u7f6e\nglEnableVertexAttribArray(0);\n//\u544a\u8bc9GPU\uff0c\u5f53\u524d\u7f13\u51b2\u533a\u7684\u5185\u5b58\u5e03\u5c40\uff0c\u5373positions\u7684\u5185\u5b58\u5e03\u5c40\n//\u5f53\u524d\uff0cpositions\u4e2d\u53ea\u6709\u4f4d\u7f6e\u5c5e\u6027\nglVertexAttribPointer(0,  //\u6307\u5b9a\u7b2c\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\u7684\u5e03\u5c40\n2,   //\u9876\u70b9\u4f4d\u7f6e\u662f\u4e8c\u7ef4\u7684\uff0c\u6709\u4e24\u4e2a\u5206\u91cf\uff0csize=2\u5373\u53ef\nGL_FLOAT,\nGL_FALSE,\n2 * sizeof(float), //\u4e00\u4e2a\u9876\u70b9\u7684\u5927\u5c0f\n0 //positions\u4e2d\u53ea\u5305\u542b\u4e86\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\uff0c\u56e0\u6b64\u5c31\u4e0d\u9700\u8981\u4f4d\u79fb\u91cf\n);\n</code></pre> <p>\u51fd\u6570\u58f0\u660e\uff1a <pre><code>void\u00a0glVertexAttribPointer(\nGLuint\u00a0index,\nGLint\u00a0size,\nGLenum\u00a0type,\nGLboolean\u00a0normalized,\nGLsizei\u00a0stride,\nconst GLvoid *\u00a0pointer);\nvoid\u00a0glVertexAttribIPointer(\nGLuint\u00a0index,\nGLint\u00a0size,\nGLenum\u00a0type,\nGLsizei\u00a0stride,\nconst GLvoid *\u00a0pointer);\nvoid\u00a0glVertexAttribLPointer(\nGLuint\u00a0index,\nGLint\u00a0size,\nGLenum\u00a0type,\nGLsizei\u00a0stride,\nconst GLvoid *\u00a0pointer);\n</code></pre></p> <p>\u53c2\u6570\uff1aindex</p> <ul> <li>\u5b83\u662f\u7f13\u51b2\u533a\u4e2d\u5b9e\u9645\u5c5e\u6027\u7684\u7d22\u5f15</li> <li>\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u4f1a\u6307\u5b9a\u4f4d\u7f6e\u5c5e\u6027\u7684index=0\uff0c\u7eb9\u7406\u5750\u6807\u7684index=1\uff0c\u6cd5\u7ebf\u7684index=2</li> </ul> <p>\u53c2\u6570\uff1asize</p> <ul> <li>\u9876\u70b9\u5c5e\u6027\u7684\u5206\u91cf\u6570\uff0c\u53ea\u80fd\u662f1\u30012\u30013\u30014</li> <li>\u4f8b\u5982\uff0c\u5f53\u524d\u7684\u4f8b\u5b50\uff0c\u9876\u70b9\u4f4d\u7f6e\u662f\u4e8c\u7ef4\u7684\uff0c\u6709\u4e24\u4e2a\u5206\u91cf\uff0csize=2\u5373\u53ef</li> </ul> <p>\u53c2\u6570\uff1atype</p> <ul> <li>\u6570\u636e\u7c7b\u578b\uff0c\u5982<code>GL_FLOAT</code></li> </ul> <p>\u53c2\u6570\uff1anormalized</p> <ul> <li>\u4e00\u822c\u662f\u4e0d\u9700\u8981\u7684\uff0c\u7f6e\u4e3afalse</li> <li>\u4f8b\u5982\u989c\u8272\uff0c\u503c\u57280-255\u4e4b\u95f4\uff0c\u5b83\u9700\u8981\u88ab\u89c4\u8303\u5316\u52300\u52301\u4e4b\u95f4\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528normalized\u8fd9\u4e2a\u53c2\u6570\uff0c\u5c06\u5b83\u7f6e\u4e3atrue</li> </ul> <p>\u53c2\u6570\uff1astride</p> <ul> <li>stride\u5c31\u662f\u6bcf\u4e2a\u9876\u70b9\u4e4b\u95f4\u7684\u5b57\u8282\u6570</li> <li>\u4f8b\u5982\uff0c\u6b64\u65f6\u9876\u70b9\u5177\u6709\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u3001\u6cd5\u7ebf\u4e09\u4e2a\u5c5e\u6027\u3002\u4f4d\u7f6e\u662f3\u4e2afloat\u3001\u7eb9\u7406\u5750\u6807\u662f2\u4e2afloat\u3001\u6cd5\u7ebf\u662f3\u4e2afloat\uff0c\u56e0\u6b64<code>stride=8*sizeof(float)=32\u4e2a\u5b57\u8282</code></li> <li>0\u662f\u7b2c\u4e00\u4e2a\u9876\u70b9\uff1b<code>0+stride</code>\u662f\u7b2c\u4e8c\u4e2a\u9876\u70b9\uff1b<code>0+2*stride</code>\u662f\u7b2c\u4e00\u4e2a\u9876\u70b9</li> </ul> <p>\u53c2\u6570\uff1apointer</p> <ul> <li>pointer\u662f\u6307\u5411\u5b9e\u9645\u5c5e\u6027\u7684\u6307\u9488</li> <li>\u4f8b\u5982\uff0c\u6b64\u65f6\u9876\u70b9\u5177\u6709\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u3001\u6cd5\u7ebf\u4e09\u4e2a\u5c5e\u6027\u3002\u5bf9\u4e8e\u9876\u70b9<code>pointer=0</code>\uff1b\u5bf9\u4e8e\u7eb9\u7406\u5750\u6807<code>pointer=3*4</code>\uff1b\u5bf9\u4e8e\u6cd5\u7ebf<code>pointer=3*4+2*4</code></li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/02%20Draw%20Triangle/#drawcall","title":"DrawCall","text":"<p>\u7ed8\u5236\u547d\u4ee4\uff08DrawCall\uff09</p> <ol> <li>\u6ca1\u6709\u7d22\u5f15\u7f13\u51b2\u533a\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528<code>glDrawArray()</code>\u51fd\u6570</li> <li>\u5982\u679c\u6709\u7d22\u5f15\u7f13\u51b2\u533a\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528<code>glDrawElements()</code>\u51fd\u6570</li> </ol> <pre><code>int main() {\n//...\nwhile(!glfwWindowShouldClose(window)) {\nglClear(GL_COLOR_BUFFER_BIT);\n//\u7f13\u51b2\u533aoffset=0\u7684\u5730\u65b9\u5f00\u59cb\n//\u7ed8\u52363\u4e2a\u9876\u70b9\nglDrawArrays(GL_TRIANGLES, 0, 3);\n//...\n}\n//...\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/03%20Hi%2C%20Shader/","title":"03 Hi, Shader","text":"<p>\u5982\u679c\u4f60\u6ca1\u6709\u7ed9OpenGL\u63d0\u4f9b\u81ea\u5df1\u7684\u7740\u8272\u5668\uff0c\u4e00\u4e9b\u663e\u5361\u9a71\u52a8\u5b9e\u9645\u4e0a\u4f1a\u4e3a\u4f60\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u7684\u7740\u8272\u5668\u3002\u56e0\u6b64\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u5df2\u7ecf\u80fd\u7ed8\u5236\u51fa\u4e00\u4e2a\u4e09\u89d2\u5f62\u4e86\u3002</p> <p>\u7740\u8272\u5668\u662f\u4e00\u4e2a\u8fd0\u884c\u5728\u663e\u5361\u4e0a\u7684\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u5728\u663e\u5361\u4e0a\u4ee5\u4e00\u79cd\u975e\u5e38\u7279\u6b8a\u53c8\u975e\u5e38\u5f3a\u5927\u7684\u65b9\u5f0f\u8fd0\u884c\u3002</p> <ul> <li>Shader\u5f88\u5bb9\u6613\u8ba9\u4eba\u8054\u60f3\u5230\u5149\u6e90\uff0c\u89c9\u5f97\u548c\u7740\u8272\u6709\u5173\uff0c\u4f46\u5b83\u53ea\u662f\u5728\u663e\u5361\u4e0a\u8fd0\u884c\u7684\u4e00\u4e2a\u7a0b\u5e8f\u800c\u5df2\uff0c\u548c\u5b9e\u9645\u7684\u56fe\u5f62\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb</li> </ul> <p>\u6211\u4eec\u53ef\u4ee5\u5728\u8ba1\u7b97\u673a\u4e0a\u4ee5\u6587\u672c\u6216\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u7f16\u5199\u7740\u8272\u5668\u7684\u4ee3\u7801\uff0c\u7136\u540e\u901a\u8fc7OpenGL\u7684API\u628a\u5b83\u4eec\u53d1\u9001\u5230\u663e\u5361\u4e0a\uff0c\u5b83\u80fd\u591f\u5728\u663e\u5361\u4e0a\u7f16\u8bd1\u3001\u94fe\u63a5\u548c\u8fd0\u884c\u3002\u662f\u7684\uff0c\u5b83\u8fd0\u884c\u5728GPU\u4e0a\uff0c\u800c\u4e0d\u50cfC++\u7a0b\u5e8f\u8fd0\u884c\u5728CPU\u4e0a\u3002</p> <p>\u9876\u70b9\u7740\u8272\u5668</p> <ul> <li>\u5b83\u4f1a\u4e3a\u6211\u4eec\u8bd5\u56fe\u6e32\u67d3\u7684\u6bcf\u4e2a\u9876\u70b9\u8c03\u7528\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u544a\u8bc9OpenGL\uff0c\u8fd9\u4e2a\u9876\u70b9\u5728\u5c4f\u5e55\u7a7a\u95f4\u7684\u4ec0\u4e48\u4f4d\u7f6e</li> <li>\u4f8b\u5982\u5f53\u524d\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u67093\u4e2a\u9876\u70b9\uff0c\u56e0\u6b64\u4f1a\u4e3a3\u4e2a\u9876\u70b9\u5206\u522b\u8c03\u7528\u4e00\u6b21\u9876\u70b9\u7740\u8272\u5668</li> </ul> <p>\u7247\u6bb5\u7740\u8272\u5668</p> <ul> <li>\u4e3a\u6bcf\u4e2a\u9700\u8981\u5149\u6805\u5316\u7684\u50cf\u7d20\u8fd0\u884c\u4e00\u6b21\uff0c\u51b3\u5b9a\u6bcf\u4e2a\u50cf\u7d20\u7684\u989c\u8272</li> <li>\u4f8b\u5982\u5f53\u524d\u7684\u4f8b\u5b50\uff0c\u7247\u6bb5\u7740\u8272\u5668\u53ef\u80fd\u4f1a\u88ab\u8c03\u7528\u6570\u4e07\u6b21\uff0c\u8fd9\u53d6\u51b3\u4e8e\u6b64\u4e09\u89d2\u5f62\u5728\u5c4f\u5e55\u4e0a\u5360\u636e\u4e86\u591a\u5c11\u7a7a\u95f4</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/03%20Hi%2C%20Shader/#_1","title":"\u7248\u672c\u4e00\uff1a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u7740\u8272\u5668","text":"<pre><code>//\u7f16\u8bd1\u7740\u8272\u5668\nstatic unsigned int CompileShader(unsigned int type, const std::string&amp; source)\n{\nunsigned int id = glCreateShader(type); //\u521b\u5efa\u6307\u5b9a\u7c7b\u578b\u7684\u7740\u8272\u5668\nconst char* src = source.c_str();\nglShaderSource(id, 1, &amp;src, nullptr);   //\u6307\u5b9aid\u7740\u8272\u5668\u7684\u6e90\u7801\n//\u4f20\u5165nullptr\uff0c\u8868\u793a\u4ee5src\u662f\u4ee5'\\0'\u7ed3\u675f\u3002\u5982\u679c\u53ea\u60f3\u4f20\u5165source\u4e2d\u7684\u67d0\u4e00\u6bb5\uff0c\u53ef\u4ee5\u6307\u5b9a\u957f\u5ea6\nglCompileShader(id);                    //\u7f16\u8bd1\u7740\u8272\u5668\n//\u83b7\u53d6\u7f16\u8bd1\u72b6\u6001\nint result;\nglGetShaderiv(id, GL_COMPILE_STATUS, &amp;result);\nif (result == GL_FALSE) {\nint length;\nglGetShaderiv(id, GL_INFO_LOG_LENGTH, &amp;length);     // \u83b7\u53d6\u65e5\u5fd7\u957f\u5ea6\nchar* msg = (char*)_malloca(length * sizeof(char)); //\u5728\u6808\u4e0a\u521b\u5efa\nglGetShaderInfoLog(id, length, &amp;length, msg);       //\u83b7\u53d6\u65e5\u5fd7\u4fe1\u606f\nstd::cout &lt;&lt; \"Failed to compile \" &lt;&lt; (type == GL_VERTEX_SHADER ? \"vertex\" : \"fragment\") &lt;&lt; \" shader!\" &lt;&lt; std::endl;\nstd::cout &lt;&lt; msg &lt;&lt; std::endl;\nglDeleteShader(id); // \u5220\u9664\u7740\u8272\u5668\nreturn 0;\n}\nreturn id;\n}\n//\u521b\u5efa\u7740\u8272\u5668\nstatic int CreateShader(const std::string&amp; vertexShader, const std::string&amp; fragmentShader)\n{\nunsigned int program = glCreateProgram(); //\u521b\u5efa\u7a0b\u5e8f\n//\u521b\u5efa\u7740\u8272\u5668\nunsigned int vs = CompileShader(GL_VERTEX_SHADER, vertexShader);\nunsigned int fs = CompileShader(GL_FRAGMENT_SHADER, fragmentShader);\n//\u9644\u52a0\u5230\u4e00\u4e2a\u7a0b\u5e8f\u5f53\u4e2d\nglAttachShader(program, vs);\nglAttachShader(program, fs);\nglLinkProgram(program);     //\u94fe\u63a5\u7a0b\u5e8f\nglValidateProgram(program); //\u9a8c\u8bc1\u662f\u5426\u6709\u6548\n//\u6b64\u65f6\u53ef\u4ee5\u5220\u9664\u4e86\uff0c\u56e0\u4e3a\u5b83\u4eec\u5df2\u7ecf\u88ab\u94fe\u63a5\u5230program\u5f53\u4e2d\u4e86\n//\u548cC++\u7a0b\u5e8f\u7684obj\u4e2d\u95f4\u6587\u4ef6\u4e00\u6837\uff0cvs\u3001fs\u5c31\u53ef\u4ee5\u88ab\u5220\u9664\u4e86\n//\u4f46\u5176\u5b9e\u4e3a\u4e86\u65b9\u4fbf\u8c03\u8bd5\uff0c\u8fd9\u4e2a\u65e0\u9700\u5220\u9664\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5f00\u9500\u975e\u5e38\u5c0f\nglDeleteShader(vs);\nglDeleteShader(fs);\nreturn program;\n}\nint main(void)\n{\n//...\nstd::string vertexShader =\n\"#version 330 core\\n\"\n\"\\n\"\n\"layout(location = 0)in vec4 position;\"\n//location == glVertexAttribPointer\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\n//\u5728\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u9876\u70b9\u7740\u8272\u5668\u7684\u4f4d\u7f6e\u4f20\u7684\u662fvec2\uff0c\u56e0\u6b64\u7528vec2 position\u66f4\u51c6\u786e\u3002\u4f46\u5982\u679c\u7528vec2\uff0c\u4e0b\u9762\u5219\u9700\u8981\u6539\u6210gl_Position=vec4(position.xy, 0.0, 1.0);\n//\u4f46\u8fd9\u91cc\u53ef\u4ee5\u5199vec4\uff0cOpenGL\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u8865\u9f50\uff0c\u540e\u9762gl_Position\u5c31\u65b9\u4fbf\u4e86\n\"\\n\"\n\"void main()\\n\"\n\"{\\n\"\n\" gl_Position = position;\\n\"    //gl_Postion\u662f\u4e00\u4e2avec4\n\"}\\n\";\nstd::string fragmentShader =\n\"#version 330 core\\n\"\n\"\\n\"\n\"layout(location = 0)out vec4 color;\"\n\"\\n\"\n\"void main()\\n\"\n\"{\\n\"\n\" color = vec4(1.0, 0.0, 0.0, 1.0);\\n\"  //\u6307\u5b9a\u4e3a\u7ea2\u8272\n\"}\\n\";\nunsigned int shader = CreateShader(vertexShader, fragmentShader);\nglUseProgram(shader); /* \u4f7f\u7528\u7740\u8272\u5668\u7a0b\u5e8f */\nwhile (!glfwWindowShouldClose(window)) {\n//...\n}\nglDeleteProgram(shader); //\u5220\u9664\u7740\u8272\u5668\u7a0b\u5e8f\n//...\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/04%20Managing%20shader/","title":"04 Managing shader","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/04%20Managing%20shader/#_1","title":"\u7248\u672c\u4e8c\uff1a\u5c06\u7740\u8272\u5668\u4ee3\u7801\u62bd\u5230\u6587\u4ef6\u5f53\u4e2d","text":"<p>\u8001\u5e08\u4e60\u60ef\u628a\u7740\u8272\u5668\u6587\u4ef6\u5b58\u5728<code>res/shaders/</code>\u76ee\u5f55\u4e0b</p> <p>\u8001\u5e08\u4e60\u60ef\u628a\u9876\u70b9\u7740\u8272\u5668\u3001\u7247\u5143\u7740\u8272\u5668\u653e\u5728\u4e00\u4e2a\u6587\u672c\u6587\u4ef6<code>*.shader*</code>\u5f53\u4e2d\u8fdb\u884c\u7ba1\u7406</p> <ul> <li>\u56e0\u4e3a\u5b83\u4eec\u4e00\u822c\u6210\u5bf9\u51fa\u73b0\uff0c\u5206\u6210\u4e24\u4e2a\u6587\u4ef6\u5b58\uff0c\u5f88\u4e0d\u76f4\u89c2</li> </ul> <p>\u4f8b\u5982\u4e0a\u4e00\u4e2a\u4f8b\u5b50</p> <ol> <li>\u5c06\u9876\u70b9\u7740\u8272\u5668\u3001\u7247\u5143\u7740\u8272\u5668\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u5f53\u4e2d<code>res/shaders/Basic.shader</code></li> </ol> <pre><code>#shader vertex\n#version 330 core\nlayout(location = 0) in vec4 position;\nvoid main()\n{\ngl_Position = position;\n}\n#shader fragment\n#version 330 core\nlayout(location = 0) out vec4 color;\nvoid main()\n{\ncolor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n</code></pre> <ol> <li>C++\u4ee3\u7801</li> </ol> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;string&gt;\n#include &lt;sstream&gt;\n#define GLEW_STATIC\n#include \"GL/glew.h\"\n#include \"GLFW/glfw3.h\"\nstruct ShaderProgramSource\n{\nstd::string VertexSource;\nstd::string FragmentSource;\n};\nstatic ShaderProgramSource ParseShader(const std::string&amp; filepath)\n{\nstd::ifstream stream(filepath);\nenum class ShaderType\n{\nNONE = -1, VERTEX = 0, FRAGMENT = 1\n};\nstd::string line;\nstd::stringstream ss[2];\nShaderType type = ShaderType::NONE;\nwhile(getline(stream, line))\n{\nif(line.find(\"#shader\") != std::string::npos)\n{\nif(line.find(\"vertex\") != std::string::npos)\n{\ntype = ShaderType::VERTEX;\n}\nelse if(line.find(\"fragment\") != std::string::npos)\n{\ntype = ShaderType::FRAGMENT;\n}\n}\nelse\n{\nss[(int)type] &lt;&lt; line &lt;&lt; '\\n';\n}\n}\nreturn {\nss[0].str(),\nss[1].str()\n};\n}\n//...\nint main()\n{\n//...\nShaderProgramSource source = ParseShader(\"res/shaders/Basic.shader\");\n//\u76f8\u5bf9\u8def\u5f84\uff0c\u5728 \u9879\u76ee\u5c5e\u6027&gt;\u8c03\u8bd5&gt;\u5de5\u4f5c\u76ee\u5f55\uff0c\u8bbe\u7f6e\nstd::cout &lt;&lt; source.VertexSource &lt;&lt; std::endl;\nstd::cout &lt;&lt; source.FragmentSource &lt;&lt; std::endl;\nunsigned int shader = CreateShader(source.VertexSource, source.FragmentSource);\nglUseProgram(shader);\nwhile(!glfwWindowShouldClose(window)) {\n//...\n}\n//...\nglDeleteProgram(shader); //\u5220\u9664\u7740\u8272\u5668\u7a0b\u5e8f\nreturn 0;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/05%20%E7%B4%A2%E5%BC%95%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%88%E5%85%83%E7%B4%A0%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%89/","title":"05 \u7d22\u5f15\u7f13\u51b2\u533a\uff08\u5143\u7d20\u7f13\u51b2\u533a\uff09","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/05%20%E7%B4%A2%E5%BC%95%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%88%E5%85%83%E7%B4%A0%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%89/#_1","title":"\u7ed8\u5236\u4e00\u4e2a\u957f\u65b9\u5f62","text":"<p>\u5728\u4e0a\u4e00\u4e2a\u8bfe\u7a0b\u4e2d\uff0c\u7ed8\u5236\u7684\u662f\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002\u672c\u8282\u8bfe\u6765\u7ed8\u5236\u4e00\u4e2a\u957f\u65b9\u5f62\u3002 \u6709\u4e00\u4e2a\u80cc\u666f\u77e5\u8bc6\u662f\uff0c\u5728\u8ba1\u7b97\u673a\u4e16\u754c\u91cc\u7ed8\u5236\u7684\u57fa\u7840\u56fe\u5143\u90fd\u662f\u4e09\u89d2\u5f62\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u957f\u65b9\u5f62\u62c6\u6210\u4e24\u4e2a\u4e09\u89d2\u5f62\u6765\u8fdb\u884c\u7ed8\u5236\u3002</p> <p>\u53ea\u9700\u4fee\u6539\u4e09\u4e2a\u5730\u65b9\uff0c\u5373\u53ef\u5b8c\u6210\u957f\u65b9\u5f62\u7684\u7ed8\u5236\u3002 <pre><code>//\u5b9a\u4e49\u4e24\u4e2a\u4e09\u89d2\u5f62\u7684\u9876\u70b9\nfloat positions[] = {\n-0.5f, -0.5f,\n0.5f, -0.5f,\n0.5f,  0.5f,\n0.5f,  0.5f,\n-0.5f,  0.5f,\n-0.5f, -0.5f\n};\n//\u8c03\u6574\u9876\u70b9\u7f13\u51b2\u533a\u7684\u5927\u5c0f\nglBufferData(GL_ARRAY_BUFFER, 6 * 2 * sizeof(float), positions, GL_STATIC_DRAW);\n//\u7ed8\u5236\u65f6\uff0c\u7ed8\u52366\u4e2a\u9876\u70b9\nglDrawArrays(GL_TRAINGLES, 0, 6);\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/05%20%E7%B4%A2%E5%BC%95%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%88%E5%85%83%E7%B4%A0%E7%BC%93%E5%86%B2%E5%8C%BA%EF%BC%89/#_2","title":"\u4f7f\u7528\u7d22\u5f15\u7f13\u51b2\u533a\u4ee5\u91cd\u7528\u9876\u70b9","text":"<p>\u4e0a\u8282\u7ed8\u5236\u4f7f\u7528\u4e866\u4e2a\u9876\u70b9\uff0c\u4f46\u957f\u65b9\u5f62\u53ea\u67094\u4e2a\u9876\u70b9\uff0c\u591a\u7528\u4e862\u4e2a\u9876\u70b9\u3002\u5176\u5b9e\u80fd\u53d1\u73b02\u4e2a\u9876\u70b9\u662f\u91cd\u590d\u7684\u3002 \u6b64\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u7d22\u5f15\u7f13\u51b2\u533a\u6765\u91cd\u7528\u6211\u4eec\u7684\u9876\u70b9\uff0c\u51cf\u5c11\u6570\u636e\u91cf\u3002</p> <p>\u7d22\u5f15\u7f13\u51b2\u533a\uff08\u53c8\u540d\uff0c\u5143\u7d20\u7f13\u51b2\u533a\uff09\uff1a\u5141\u8bb8\u6211\u4eec\u91cd\u7528\u9876\u70b9</p> <pre><code>float positions[] = {                  //\u7d22\u5f15\u53f7\n-0.5f, -0.5f,  //0\uff0c\u4ece0\u5f00\u59cb\n0.5f, -0.5f,  //1\n0.5f,  0.5f,  //2\n-0.5f,  0.5f   //3\n};\nunsigned int indices[] = {\n0, 1, 2, //\u7b2c1\u4e2a\u4e09\u89d2\u5f62\n2, 3, 0  //\u7b2c2\u4e2a\u4e09\u89d2\u5f62\n};\nunsigned int buffer;\nglGenBuffers(1, &amp;buffer);\nglBindBuffer(GL_ARRAY_BUFFER, buffer);\nglBufferData(GL_ARRAY_BUFFER, 4 * 2 * sizeof(float), positions, GL_STATIC_DRAW);\nglEnableVertexAttribArray(0);\nglVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, sizeof(float) * 2, 0);\n//\u5c06\u7d22\u5f15\u7f13\u51b2\u533a\u53d1\u9001\u5230\u663e\u5361\u4e0a\nunsigned int ibo;\nglGenBuffers(1, &amp;ibo);\nglBindBuffer(GL_ELEMENT_ARRAY_BUFFER, ibo);\nglBufferData(GL_ELEMENT_ARRAY_BUFFER, 6 * sizeof(unsigned int), indices, GL_STATIC_DRAW);\n//...\nwhile(...)\n{\n//...\nglDrawElements(GL_TRANGLES, 6, GL_UNSIGNED_INT, nullptr);\n//\u7ed8\u52366\u4e2a\u7d22\u5f15\n//\u6307\u5411\u7d22\u5f15\u7f13\u51b2\u533a\u7684\u4e00\u4e2a\u6307\u9488\uff1a\u524d\u9762\u5df2\u7ecfglBindBuffer(ibo)\u4e86\uff0c\u53ef\u4ee5\u7528nullptr\n//...\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/06%20%E5%9C%A8OpenGL%E4%B8%AD%E5%A4%84%E7%90%86%E9%94%99%E8%AF%AF/","title":"06 \u5728OpenGL\u4e2d\u5904\u7406\u9519\u8bef","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/06%20%E5%9C%A8OpenGL%E4%B8%AD%E5%A4%84%E7%90%86%E9%94%99%E8%AF%AF/#glgeterror","title":"glGetError","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/06%20%E5%9C%A8OpenGL%E4%B8%AD%E5%A4%84%E7%90%86%E9%94%99%E8%AF%AF/#_1","title":"\u7b80\u6613\u4f7f\u7528","text":"<pre><code>static void GLClearError()\n{\nwhile(glGetError() != GL_NO_ERROR);\n}\nstatic void GLCheckError()\n{\nwhile(GLenum error = glGetError())\n{\nstd::cout &lt;&lt; \"[OpenGL Error] (\"\n&lt;&lt; error &lt;&lt; \")\"\n&lt;&lt; std::endl;\n}\n}\n//\u4f7f\u7528\uff0c\u7528\u4e24\u4e2a\u51fd\u6570\u5939\u4f4fOpenGL\u7684\u51fd\u6570\nGLClearError(); //\u6e05\u9664\u5728\u4e4b\u524d\u7684\u6240\u6709\u9519\u8bef\nglDrawElements(GL_TRIANGLES, 6, GL_INT, nullptr);\nGLCheckError(); //\u68c0\u67e5\u4e0a\u4e00\u53e5\u8bdd\u662f\u5426\u62a5\u9519\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/06%20%E5%9C%A8OpenGL%E4%B8%AD%E5%A4%84%E7%90%86%E9%94%99%E8%AF%AF/#_2","title":"\u5c01\u88c5\u6210\u65ad\u8a00\u7684\u5f62\u5f0f","text":"<pre><code>#define ASSERT(x) if(!(x)) __debugbreak();\n//__debugbreak()\u662fVS MSVC\u8c03\u8bd5\u5668\u7684\u4e2d\u65ad\u8bed\u53e5\n#define GLCall(x) GLClearError();\\\n    x;\\\n    ASSERT(GLLogCall(#x, __FILE__, __LINE__))\nstatic void GLClearError()\n{\nwhile(glGetError() != GL_NO_ERROR);\n}\nstatic bool GLLogCall(const char* function, const char* file, int line)\n{\nwhile(GLenum error = glGetError())\n{\nstd::cout &lt;&lt; \"[OpenGL Error] (\"\n&lt;&lt; error &lt;&lt; \")\"\n&lt;&lt; \": \" &lt;&lt; function\n&lt;&lt; \" \" &lt;&lt; file\n&lt;&lt; \" \" &lt;&lt; line\n&lt;&lt; std::endl;\nreturn false;\n}\nreturn true;\n}\n//\u4f7f\u7528OpenGL\u51fd\u6570\u65f6\uff0c\u7528GLCall\u5305\u88c5\u4e00\u4e0b\u5c31\u884c\nGLCall(unsigned int program = glCreateProgram());\nGLCall(glDrawElements(GL_TRIANGLES, 6, GL_INT, nullptr));\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/06%20%E5%9C%A8OpenGL%E4%B8%AD%E5%A4%84%E7%90%86%E9%94%99%E8%AF%AF/#opengl","title":"OpenGL\u9519\u8bef\u7801","text":"<p><code>GLenum error = glGetError()</code>\u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u7801\uff0c\u5982\u4f55\u67e5\u770b\u5b83\u7684\u9519\u8bef\u4fe1\u606f\u5462\uff1f</p> <p>\u4f8b\u5982\uff0c\u9519\u8bef\u78011280</p> <p>1.\u5728<code>glew.h</code>\u4e2d\uff0c\u641c\u7d221280\u7684\u5341\u516d\u8fdb\u5236\u6570\uff08\u5373<code>0x0500</code>\uff09\uff0c\u5c31\u80fd\u83b7\u5f97\u4e00\u4e2a <pre><code>#define GL_INVALID_ENUM 0x500\n</code></pre></p> <p>2.\u7136\u540e\u5728<code>docs.gl/gl4/glGetError</code>\u6587\u6863\u4e2d\u627e\u5230\u8fd9\u4e2a\u9519\u8bef\uff0c\u5373\u53ef\u77e5\u9053\u5bf9\u5e94\u7684\u9519\u8bef\u8be6\u60c5</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/06%20%E5%9C%A8OpenGL%E4%B8%AD%E5%A4%84%E7%90%86%E9%94%99%E8%AF%AF/#gldebugmessagecallback","title":"glDebugMessageCallback","text":"<p>\u5728OpenGL4.3\u4ee5\u540e\uff0c\u63d0\u4f9b\u4e86\u56de\u8c03\u51fd\u6570\u8ba9\u6211\u4eec\u83b7\u53d6OpenGL\u7684\u4fe1\u606f</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/07%20Shader%20Uniform/","title":"07 Shader Uniform","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/07%20Shader%20Uniform/#uniform","title":"uniform\u53d8\u91cf","text":"<p>\u4e0a\u4e00\u8282\u4e2d\uff0c\u5728\u7247\u5143\u7740\u8272\u4e2d\uff0c\u6211\u4eec\u786c\u7f16\u7801\u8f93\u5165\u4e86\u4e00\u4e2a\u989c\u8272\uff0c\u6307\u5b9a\u4e3a\u4e86\u7ea2\u8272\u3002</p> <p>\u8fd9\u4e00\u8282\uff0c\u6211\u4eec\u5c06\u4f7f\u7528uniform\u53d8\u91cf\uff0c\u4eceCPU\u4e2d\u4f20\u4e00\u4e2a\u989c\u8272\u5230\u7247\u5143\u7740\u8272\u5668\uff0c\u4f7f\u7528\u8fd9\u4e2a\u989c\u8272\u4f5c\u4e3a\u7247\u5143\u7684\u6700\u7ec8\u989c\u8272\u3002</p> <p>uniform</p> <ul> <li>CPU\u4f20\u6570\u636e\u5230\u663e\u5361\u7684\u4e00\u79cd\u65b9\u5f0f</li> </ul> <p>1.\u5728shader\u4e2d\u6dfb\u52a0\u4ee3\u7801 <pre><code>//...\n#shader fragment\n#version 330 core\nlayout(location = 0) out vec4 color;\nuniform vec4 u_Color; //\u8bb0\u4f4fu_Color\u8fd9\u4e2a\u540d\u5b57\uff0c\u5728\u901a\u8fc7OpenGL\u4f20\u503c\u65f6\uff0c\u9700\u8981\u7528\u5230\u5b83\nvoid main()\n{\ncolor = u_Color;\n}\n</code></pre></p> <p>2.\u5728C++\u4ee3\u7801\u4e2d\u4f20\u503c <pre><code>//...\nint main()\n{\n//...\n/**\n     * \u4ea4\u6362\u95f4\u9694\uff0c\u4ea4\u6362\u7f13\u51b2\u533a\u4e4b\u524d\u7b49\u5f85\u7684\u5e27\u6570\uff0c\u901a\u5e38\u79f0\u4e3av-sync\n     * \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4ea4\u6362\u95f4\u9694\u4e3a0\n     * \u8fd9\u91cc\u8bbe\u7f6e\u4e3a1\uff0c\u5373\u6bcf\u5e27\u66f4\u65b0\u4e00\u6b21\n     **/\nglfwSwapInterval(1);\n//...\nint location = glGetUniformLocation(shader, \"u_Color\"); //\u83b7\u53d6\u53d8\u91cf\u7684\u53e5\u67c4\nASSERT(location != -1); //-1\u610f\u5473\u7740\u6211\u4eec\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684uniform\u53d8\u91cf\nfloat r = 0.0f;\nfloat increment = 0.05f\nwhile(...)\n{\nglClear(GL_COLOR_BUFFER_BIT);\nglUniform4f(location, r, 0.3f, 0.8f, 1.0f); //\u4f20\u503c\nglDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, nullptr);\nif(r&gt;1.0f)      increment = -0.05f;\nelse if(r&lt;0.0f) increment =  0.05f;\nr += increment;\n//...\n}\n//...\nreturn 0;\n}\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/08%20%E9%A1%B6%E7%82%B9%E6%95%B0%E7%BB%84/","title":"08 \u9876\u70b9\u6570\u7ec4","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/08%20%E9%A1%B6%E7%82%B9%E6%95%B0%E7%BB%84/#_1","title":"\u4e3a\u4ec0\u4e48\u8981\u6709\u9876\u70b9\u6570\u7ec4","text":"<p>\u5728\u4e4b\u524d\u7684\u6848\u4f8b\u5f53\u4e2d\uff0c<code>positions</code>\u548c<code>indices</code>\u90fd\u662f\u786c\u7f16\u7801\u5199\u6b7b\u7684\u3002\u4f46\u662f\u5728\u5b9e\u9645\u5e94\u7528\u5f53\u4e2d\uff0c\u4e24\u8005\u53ef\u80fd\u90fd\u4f1a\u6539\u53d8\uff0c\u800c\u4e14\u4e0d\u4ec5\u662f\u6570\u503c\u4f1a\u6539\u53d8\uff0c\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u9876\u70b9\u5c5e\u6027\uff0c\u5982\u9876\u70b9\u6cd5\u5411\u91cf\u3001\u9876\u70b9\u989c\u8272\u7b49\u7b49\u3002</p> <p>\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5047\u8bbe\u9876\u70b9\u7f13\u51b2\u533a\u4f1a\u53d8\u5316\uff0c\u770b\u4e00\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u505a\u54ea\u4e9b\u64cd\u4f5c\u3002</p> <pre><code>//...\nint main(void)\n{\n//...\nfloat positions[] =\n{                  //\u7d22\u5f15\u53f7\n-0.5f, -0.5f,  //0\uff0c\u4ece0\u5f00\u59cb\n0.5f, -0.5f,  //1\n0.5f,  0.5f,  //2\n-0.5f,  0.5f   //3\n};\nunsigned int indices[] =\n{\n0, 1, 2, //\u7b2c1\u4e2a\u4e09\u89d2\u5f62\n2, 3, 0  //\u7b2c2\u4e2a\u4e09\u89d2\u5f62\n};\n//\u521b\u5efa\u4e00\u4e2a\u7f13\u51b2\u533a\nunsigned int buffer;\nGLCall(glGenBuffers(1, &amp;buffer));\n//\u4e3aGL_ARRAY_BUFFER\u7c7b\u578b\u7ed1\u5b9a\u4e00\u4e2a\u7f13\u51b2\u533a\nGLCall(glBindBuffer(GL_ARRAY_BUFFER, buffer));\n//\u5c06\u6570\u636e\u62f7\u8d1d\u5230GL_ARRAY_BUFFER\u7c7b\u578b\u7684\u7f13\u51b2\u533a\u4e0a\nGLCall(glBufferData(GL_ARRAY_BUFFER, 4 * 2 * sizeof(float), positions, GL_STATIC_DRAW));\n//\u6307\u5b9a\u9876\u70b9\u7f13\u51b2\u533a\u7684\u5e03\u5c40\nGLCall(glEnableVertexAttribArray(0));\nGLCall(glVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, 2 * sizeof(float), 0));\n//\u521b\u4e00\u4e2a\u7f13\u51b2\u533a\nunsigned int ibo;\nGLCall(glGenBuffers(1, &amp;ibo));\n//\u4e3aGL_ELEMENT_ARRAY_BUFFER\u7c7b\u578b\u7ed1\u5b9a\u4e00\u4e2a\u7f13\u51b2\u533a\nGLCall(glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, ibo));\n//\u5c06\u6570\u636e\u62f7\u8d1d\u5230GL_ELEMENT_ARRAY_BUFFER\u7c7b\u578b\u7684\u7f13\u51b2\u533a\u4e0a\nGLCall(glBufferData(GL_ELEMENT_ARRAY_BUFFER, 6 * sizeof(unsigned int), indices, GL_STATIC_DRAW));\n//\u7740\u8272\u5668\nShaderProgramSource source = ParseShader(\"res/shaders/Basic.shader\");\nunsigned int shader = CreateShader(source.VertexSource, source.FragmentSource);\nGLCall(glUseProgram(shader));\n//\u83b7\u53d6\u53d8\u91cf\u7684\u53e5\u67c4\nint location;\nGLCall(location = glGetUniformLocation(shader, \"u_Color\"));\nASSERT(location != -1);\n//\u5728\u521b\u5efa\u5b8c\u9876\u70b9\u7f13\u51b2\u533a\u4e0e\u7d22\u5f15\u7f13\u51b2\u533a\u540e\uff0c\u8981\u8fdb\u884c\u89e3\u7ed1\u3002\u56e0\u4e3a\u5728\u4e0b\u4e00\u4e2a\u6d41\u7a0b\u5f53\u4e2d\uff0c\u53ef\u80fd\u4f1a\u521b\u5efa\u522b\u7684\u7f13\u51b2\u533a\nGLCall(glUseProgram(0));                            //\u89e3\u7ed1\u7740\u8272\u5668\nGLCall(glBindBuffer(GL_ARRAY_BUFFER, 0));           //\u89e3\u7ed1\u9876\u70b9\u7f13\u51b2\u533a\nGLCall(glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0));   //\u89e3\u7ed1\u7d22\u5f15\u7f13\u51b2\u533a\nfloat r = 0.0f;\nfloat increment = 0.05f;\nwhile (!glfwWindowShouldClose(window))\n{\nGLCall(glClear(GL_COLOR_BUFFER_BIT));\n//\u5728\u7ed8\u5236\u524d\uff0c\u624d\u51b3\u5b9a\u8981\u4f7f\u7528\u54ea\u4e2a\u7740\u8272\u5668\u3001\u54ea\u4e2a\u9876\u70b9\u7f13\u51b2\u533a\u548c\u54ea\u4e2a\u7d22\u5f15\u7f13\u51b2\u533a\n//\u7740\u8272\u5668\nGLCall(glUseProgram(shader));                            //\u9876\u70b9\u7f13\u51b2\u533a\nGLCall(glBindBuffer(GL_ARRAY_BUFFER, buffer));\nGLCall(glEnableVertexAttribArray(0));   //\u5982\u679c\u524d\u9762disalbeVertexAttribArray\u7684\uff0c\u8fd9\u91cc\u9700\u8981Enable\nGLCall(glVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, 2 * sizeof(float), 0)); //\u8fd9\u91cc\u8fd8\u9700\u8981\u544a\u8bc9OpenGL\u9876\u70b9\u7f13\u51b2\u533a\u7684\u5185\u5b58\u5e03\u5c40\n//\u7d22\u5f15\u7f13\u51b2\u533a\nGLCall(glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, ibo));\nGLCall(glUniform4f(location, r, 0.3f, 0.8f, 1.0f)); //\u4f20\u503c\nGLCall(glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, nullptr));\nif (r &gt; 1.0f)      increment = -0.05f;\nelse if (r &lt; 0.0f) increment = 0.05f;\nr += increment;\nglfwSwapBuffers(window);\nglfwPollEvents();\n}\nGLCall(glDeleteProgram(shader));\nglfwTerminate();\nreturn 0;\n}\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u5728\u7ed8\u5236\u65f6\uff0c\u53c8\u8981\u6307\u5b9a\u4e00\u6b21\u9876\u70b9\u7f13\u51b2\u533a\u7684\u5e03\u5c40\uff1f</p> <ul> <li>\u56e0\u4e3a<code>glVertexAttribPointer</code>\u662f\u4f5c\u7528\u4e8eOpenGL\u5f53\u524d\u7684<code>GL_ARRAY_BUFFER</code>\uff0c\u800c\u5e76\u6ca1\u6709\u5b58\u50a8\u5230<code>buffer</code>\u6240\u6307\u5411\u7684\u7f13\u51b2\u533a\u4e0a</li> <li>\u56e0\u6b64\uff0c\u5728\u7ed8\u5236\u7684\u65f6\u5019\uff0c\u5728\u6211\u4eec\u91cd\u65b0\u7ed1\u5b9a\u4e00\u4e2a\u9876\u70b9\u7f13\u51b2\u533a\u540e\uff0c\u6211\u4eec\u53c8\u8981\u8c03\u7528<code>glVertexAttribPointer</code>\uff0c\u53bb\u89e3\u91ca\u6b64\u65f6\u7ed1\u5b9a\u7684\u9876\u70b9\u7f13\u51b2\u533a\u7684\u5e03\u5c40\u662f\u600e\u4e48\u6837\u7684</li> </ul> <p>\u201c\u9876\u70b9\u6570\u7ec4\u201d\u80fd\u591f\u8bb0\u5f55\u9876\u70b9\u7f13\u51b2\u533a\u7684\u72b6\u6001\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\u4f1a\u8bb0\u5f55</p> <ol> <li>\u6b64\u9876\u70b9\u6570\u7ec4\u7684\u7f13\u51b2\u533a\u662f\u54ea\u4e2a</li> <li>\u6b64\u7f13\u51b2\u533a\u7684\u5185\u5b58\u5e03\u5c40\u662f\u600e\u4e48\u6837\u7684</li> </ol> <p>\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u7684\u9876\u70b9\u6570\u7ec4\uff0c\u5728\u7ed8\u5236\u65f6\uff0c\u7531\u539f\u5148\u7684\u4e24\u5927\u6b65\uff0c\u7b80\u5316\u6210\u4e86\u4e00\u6b65\u3002</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/08%20%E9%A1%B6%E7%82%B9%E6%95%B0%E7%BB%84/#_2","title":"\u9876\u70b9\u6570\u7ec4","text":"<p>\u9876\u70b9\u6570\u7ec4</p> <ul> <li>\u57fa\u672c\u4e0a\u662f\u4e00\u79cd\u901a\u8fc7\u7279\u5b9a\u89c4\u8303\uff0c\u7ed1\u5b9a\u9876\u70b9\u7f13\u51b2\u533a\u7684\u65b9\u5f0f</li> <li>\u201c\u9876\u70b9\u6570\u7ec4\u201d\u662fOpenGL\u7684\u7279\u4ea7\uff0cDirectX\u7b49\u5176\u4ed6\u6e32\u67d3\u63a5\u53e3\u4e2d\u5e76\u4e0d\u5b58\u5728\u8fd9\u4e2a\u6982\u5ff5</li> </ul> <p>\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u6b63\u786e\u4f7f\u7528\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff0c\u4e0d\u4ec5\u5199\u4ee3\u7801\u65b9\u4fbf\uff0c\u6027\u80fd\u8fd8\u4f1a\u5f97\u5230\u63d0\u5347\u3002 \u4f8b\u5982\uff0c\u4e3a\u51e0\u4f55\u4f53\u7684\u6bcf\u4e2a\u90e8\u5206\u521b\u5efa\u4e0d\u540c\u7684\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff0c\u5728\u5207\u6362\u51e0\u4f55\u4f53\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u7ed1\u5b9a\u5176\u5bf9\u5e94\u7684\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u5373\u53ef\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/08%20%E9%A1%B6%E7%82%B9%E6%95%B0%E7%BB%84/#_3","title":"\u9876\u70b9\u6570\u7ec4\u662f\u5fc5\u987b\u7684","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/08%20%E9%A1%B6%E7%82%B9%E6%95%B0%E7%BB%84/#_4","title":"\u517c\u5bb9\u6027\u914d\u7f6e\u6587\u4ef6","text":"<p>\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u662f\u5fc5\u987b\u7684\u3002\u867d\u7136\u5728\u4e4b\u524d\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u90fd\u6ca1\u6709\u521b\u5efa\u5b83\u3002 \u8fd9\u662f\u56e0\u4e3a\uff0cOpenGL\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f\u201c\u517c\u5bb9\u6027\u914d\u7f6e\u6587\u4ef6\u201d\uff0c\u5b83\u4f1a\u5e2e\u6211\u4eec\u521b\u5efa\u5e76\u7ef4\u62a4\u4e00\u4e2a\u9ed8\u8ba4\u7684\u9876\u70b9\u6570\u7ec4\u3002</p> <pre><code>//\u5e0c\u671bOpenGL\u7684\u7248\u672c\u662f3.3\nglfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);\nglfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);\n//\u4f7f\u7528\u201c\u517c\u5bb9\u6027\u914d\u7f6e\u6587\u4ef6\u201d\uff08\u9ed8\u8ba4\u5c31\u662f\u8fd9\u4e2a\uff09\nglfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_COMPAT_PROFILE);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/08%20%E9%A1%B6%E7%82%B9%E6%95%B0%E7%BB%84/#_5","title":"\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6","text":"<p>\u7136\u800c\uff0c\u201c\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\u201d\u5374\u6ca1\u6709\u8fd9\u4e2a\u7b56\u7565\uff0c\u201c\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\u201d\u4e0d\u4f1a\u5e2e\u6211\u4eec\u521b\u5efa\u8fd9\u4e2a\u9ed8\u8ba4\u7684\u9876\u70b9\u6570\u7ec4\u3002</p> <pre><code>//\u5e0c\u671bOpenGL\u7684\u7248\u672c\u662f3.3\nglfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);\nglfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);\n//\u4f7f\u7528\u201c\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\u201d\nglfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);\n</code></pre> <p>\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u5728\u524d\u9762\u52a0\u4e0a\u4e86\u4f7f\u7528\u201c\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\u201d\u7684\u4ee3\u7801\uff0c\u90a3\u4e48\u5c31\u4f1a\u7f16\u8bd1\u51fa\u9519\u3002\u9519\u8bef\u78011282\uff0c</p> <p></p> <p>\u603b\u4e4b\uff0c\u82e5\u662f\u201c\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\u201d\uff0c\u6211\u4eec\u5c31\u9700\u8981\u663e\u5f0f\u5730\u521b\u5efaOpenGL\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u3002\u5728\u7ed1\u5b9a\u9876\u70b9\u7f13\u51b2\u533a\u524d\uff0c\u521b\u5efa\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u5373\u53ef\uff0c\u4f8b\u5982\uff1a <pre><code>//\u521b\u5efa\u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\nunsigned int vao;\nGLCall(glGenVertexArrays(1, &amp;vao));\n//\u7ed1\u5b9a\u9876\u70b9\u6570\u7ec4\uff08\u4e4b\u540e\u7ed1\u5b9a\u9876\u70b9\u7f13\u51b2\u533a\u3001\u6307\u5b9a\u9876\u70b9\u7f13\u51b2\u533a\u5e03\u5c40\u7684\u64cd\u4f5c\uff0c\u90fd\u4f1a\u8bb0\u5f55\u5728vao\u4e0a\uff09\nGLCall(glBindVertexArray(vao));\nunsigned int buffer;\nGLCall(glGenBuffers(1, &amp;buffer));\nGLCall(glBindBuffer(GL_ARRAY_BUFFER, buffer));\n//...\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/08%20%E9%A1%B6%E7%82%B9%E6%95%B0%E7%BB%84/#_6","title":"\u4f7f\u7528\u9876\u70b9\u6570\u7ec4","text":"<pre><code>//...\nint main(void)\n{\n//...\nfloat positions[] =\n{                  //\u7d22\u5f15\u53f7\n-0.5f, -0.5f,  //0\uff0c\u4ece0\u5f00\u59cb\n0.5f, -0.5f,  //1\n0.5f,  0.5f,  //2\n-0.5f,  0.5f   //3\n};\nunsigned int indices[] =\n{\n0, 1, 2, //\u7b2c1\u4e2a\u4e09\u89d2\u5f62\n2, 3, 0  //\u7b2c2\u4e2a\u4e09\u89d2\u5f62\n};\n//\u521b\u5efa\u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\nunsigned int vao;\nGLCall(glGenVertexArrays(1, &amp;vao));\n//\u7ed1\u5b9a\u9876\u70b9\u6570\u7ec4\uff08\u4e4b\u540e\u7ed1\u5b9a\u9876\u70b9\u7f13\u51b2\u533a\u3001\u6307\u5b9a\u9876\u70b9\u7f13\u51b2\u533a\u5e03\u5c40\u7684\u64cd\u4f5c\uff0c\u90fd\u4f1a\u8bb0\u5f55\u5728vao\u4e0a\uff09\nGLCall(glBindVertexArray(vao));\n//\u7ed1\u5b9a\u9876\u70b9\u7f13\u51b2\u533a\nunsigned int buffer;\nGLCall(glGenBuffers(1, &amp;buffer));\nGLCall(glBindBuffer(GL_ARRAY_BUFFER, buffer));\nGLCall(glBufferData(GL_ARRAY_BUFFER, 4 * 2 * sizeof(float), positions, GL_STATIC_DRAW));\n//\u89e3\u91ca\u9876\u70b9\u7f13\u51b2\u533a\u7684\u5e03\u5c40\nGLCall(glEnableVertexAttribArray(0));\nGLCall(glVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, 2 * sizeof(float), 0));\n//...\n/* \u89e3\u7ed1 */\nGLCall(glBindVertexArray(0));\nGLCall(glBindBuffer(GL_ARRAY_BUFFER, 0));\nGLCall(glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0));\nwhile (!glfwWindowShouldClose(window))\n{\n//...\n//\u53ea\u9700\u7ed1\u5b9a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\nGLCall(glBindVertexArray(vao));\n//\u65e0\u9700\u518d\u505a\u8fd9\u4e24\u4e2a\u64cd\u4f5c\n//1. \u7ed1\u5b9a\u9876\u70b9\u7f13\u51b2\u533a\n//GLCall(glBindBuffer(GL_ARRAY_BUFFER, buffer));\n//2. \u6307\u5b9a\u9876\u70b9\u7f13\u51b2\u533a\u7684\u5e03\u5c40\n//GLCall(glEnableVertexAttribArray(0));\n//GLCall(glVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, 2 * sizeof(float), 0));\n//...\n}\nGLCall(glDeleteProgram(shader));\nglfwTerminate();\nreturn 0;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/08%20%E9%A1%B6%E7%82%B9%E6%95%B0%E7%BB%84/#1n","title":"1\u4e2a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff0c\u8fd8\u662fN\u4e2a","text":"<p>\u5f53\u524d\u7684\u4ee3\u7801\u4e2d\uff0c\u53ea\u662f\u4e00\u4e2aHelloWorld\u3002</p> <p>\u5728\u5b9e\u9645\u5de5\u7a0b\u5e94\u7528\u5f53\u4e2d\uff0c\u54ea\u79cd\u7b56\u7565\u66f4\u4f18\u5462\uff1f</p> <ol> <li>\u5168\u5c40\u59cb\u7ec8\u53ea\u7ed1\u5b9a\u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u3002\u5f53\u7ed8\u5236\u67d0\u4e2a\u7f51\u683c\u65f6\uff0c\u518d\u7ed1\u5b9a\u9876\u70b9\u7f13\u51b2\u6570\u7ec4\u4e0e\u89e3\u91ca\u5e03\u5c40</li> <li>\u4e00\u4e2a\u7f51\u683c\u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u3002\u5f53\u7ed8\u5236\u67d0\u4e2a\u7f51\u683c\u65f6\uff0c\u7ed1\u5b9a\u7f51\u683c\u5bf9\u5e94\u7684\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u5373\u53ef</li> </ol> <p>\u7b54\u6848\u662f\u89c6\u60c5\u51b5\u800c\u5b9a</p> <ul> <li>\u9700\u8981\u5728\u4f60\u7684\u751f\u4ea7\u73af\u5883\u4e2d\u505a\u6d4b\u8bd5\u624d\u80fd\u786e\u5b9a\uff0c</li> <li>\u9700\u8981\u63a7\u5236\u7684\u53d8\u91cf\u6709\uff1a\u5e73\u53f0\u3001\u8bbe\u5907\u3001\u663e\u5361\uff0c\u751a\u81f3\u662f\u9a71\u52a8\u7684\u7248\u672c\uff08\u56e0\u4e3aOpenGL\u51fd\u6570\u7684\u5b9e\u73b0\u4e0d\u4e00\u6837\uff09</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/","title":"10 \u7eb9\u7406","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/#gpu","title":"GPU\u6240\u652f\u6301\u7684\u7eb9\u7406\u4e2a\u6570","text":"<p>GPU\u6240\u652f\u6301\u7684\u7eb9\u7406\u4e2a\u6570</p> <ol> <li>\u5728Windows\u4e0a\uff0c\u5178\u578b\u7684\u73b0\u4ee3\u663e\u5361\uff0c\u670932\u4e2a\u7eb9\u7406\u63d2\u69fd\uff08textures slots\uff09</li> <li>\u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\uff0c\u6bd4\u5982\u5b89\u5353\u6216\u8005iPhone\uff0c\u53ef\u80fd\u67098\u4e2a\u63d2\u69fd\uff0c\u8fd9\u53d6\u51b3\u4e8e\u663e\u5361\u3001\u4ee5\u53caOpenGL\u7684\u5177\u4f53\u5b9e\u73b0</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/#_1","title":"\u5782\u76f4\u7ffb\u8f6c\u7eb9\u7406","text":"<p>OpenGL\u7684\u7eb9\u7406\u50cf\u7d20\u662f\u4ece \u5de6\u4e0b\u89d2 \u5f00\u59cb\u7684\uff0c\u4e0d\u662f\u5728\u5de6\u4e0a\u89d2</p> <ul> <li>OpenGL\u7eb9\u7406\u7684\u5de6\u4e0b\u89d2\u5750\u6807\u662f(0, 0)</li> <li>OpenGL\u7eb9\u7406\u7684\u53f3\u4e0a\u89d2\u5750\u6807\u662f(1, 1)</li> </ul> <p>\u7136\u800cpng\u56fe\u50cf\u7684\u5750\u6807\u662f\u4ece \u5de6\u4e0a\u89d2 \u5f00\u59cb\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5bf9png\u56fe\u50cf\u505a\u5782\u76f4\uff08\u4e0a\u4e0b\uff09\u7ffb\u8f6c\u4e4b\u540e\uff0c\u624d\u80fd\u4e22\u7ed9OpenGL\u3002</p> <p>\u5982\u4f55\u7ffb\u8f6c\u56fe\u50cf</p> <ol> <li>\u53ef\u4ee5\u81ea\u5df1\u624b\u5199\u4ee3\u7801\uff0c\u5c06\u50cf\u7d20\u8c03\u6362\u4e00\u4e0b\u4f4d\u7f6e</li> <li><code>stb_image</code>\u7b2c\u4e09\u65b9\u5e93\u652f\u6301\u5728\u52a0\u8f7d\u56fe\u50cf\u65f6\uff0c\u5782\u76f4\u7ffb\u8f6c\u7eb9\uff1a<code>stbi_set_flip_vertically_on_load(1);</code></li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/#shader","title":"\u5728Shader\u4e2d\u4f7f\u7528\u7eb9\u7406","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/#1","title":"1. \u5728\u9876\u70b9\u6570\u636e\u4e2d\u6dfb\u52a0\u7eb9\u7406\u5750\u6807","text":"<pre><code>//\u9876\u70b9\u6570\u636e\nfloat positions[] = {\n//\u9876\u70b9\u4f4d\u7f6exy, UV\u5750\u6807xy\n-0.5f, -0.5f, 0.0f, 0.0f,  // 0\n0.5f, -0.5f, 1.0f, 0.0f,   // 1\n0.5f,  0.5f, 1.0f, 1.0f,   // 2\n-0.5f,  0.5f, 0.0f, 1.0f   // 3\n};\n//\u9876\u70b9\u7f13\u51b2\u533a\nVertexBuffer vb(positions, 4 * 4 * sizeof(float));\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/#2-openglgpu","title":"2. \u8bfb\u53d6\u7eb9\u7406\uff0c\u5e76\u901a\u8fc7OpenGL\u4f20\u5165GPU","text":"<pre><code>Texture texture(\"res/textures/ChernoLogo.png\");\ntexture.Bind(0);                        //\u7ed1\u5b9a\u7b2c0\u4e2a\u7eb9\u7406\u69fd\nshader.SetUniform1i(\"u_Texture\", 0);    //\u4f20\u503c\u7ed9\u7740\u8272\u5668\uff0c\u5c06\u4f7f\u7528\u7eb9\u7406\u69fd\u7684\u5e8f\u53f7\u7ed9u_Texture\u53d8\u91cf\n</code></pre> <p>Texture\u7c7b\u7684\u5177\u4f53\u5b9e\u73b0 <pre><code>class Texture\n{\nprivate:\nunsigned int m_RendererID;\nstd::string m_FilePath;\nunsigned char* m_LocalBuffer;   //\u5185\u5b58\u5f53\u4e2d\u5b58\u50a8\u7eb9\u7406\nint m_Width, m_Height;\nint m_BPP;  //bits per-pixel, \u6bcf\u4e2a\u50cf\u7d20\u7684\u6bd4\u7279\u5927\u5c0f\npublic:\nTexture(const std::string&amp; path);\n~Texture();\nvoid Bind(unsigned int slot = 0) const;\nvoid Unbind() const;\ninline int GetWidth() const { return m_Width; }\ninline int GetHeight() const { return m_Height; }\n};\n</code></pre> <pre><code>#include \"Texture.h\"\n#include \"vender/stb_image/stb_image.h\"\nTexture::Texture(const std::string&amp; path)\n:m_RendererID(0), m_FilePath(path), m_LocalBuffer(nullptr), m_Width(0), m_Height(0), m_BPP(0)\n{\nstbi_set_flip_vertically_on_load(1); //\u5782\u76f4\u7ffb\u8f6c\u7eb9\u7406 \nm_LocalBuffer = stbi_load(path.c_str(), &amp;m_Width, &amp;m_Height, &amp;m_BPP, 4);\n//\u60f3\u8981\u4f7f\u7528RGBA\uff0c\u5219\u4f20\u51654\nGLCall(glGenTextures(1, &amp;m_RendererID));            //\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\nGLCall(glBindTexture(GL_TEXTURE_2D, m_RendererID)); //\u7ed1\u5b9a\u7eb9\u7406\nGLCall(glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR));   //\u7f29\u5c0f\u8fc7\u6ee4\u5668 \u7ebf\u6027\u91cd\u91c7\u6837\nGLCall(glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR));   //\u653e\u5927\u8fc7\u6ee4\u5668 \u7ebf\u6027\u91cd\u91c7\u6837\n/*\u201c\u5d4c\u5165\u6a21\u5f0f\u201dor\u201c\u73af\u7ed5\u6a21\u5f0f\u201d\n    1. GL_CLAMP_TO_EDGE \u5d4c\u5165 \u4e0d\u5e0c\u671b\u5b83\u6269\u5927\u533a\u57df\n    2. \u5e73\u94fa\n     */\nGLCall(glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE));    //\u6c34\u5e73\u73af\u7ed5(S\u76f8\u5f53\u4e8eX) \nGLCall(glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE));    //\u5782\u76f4\u73af\u7ed5(T\u76f8\u5f53\u4e8eY)\n//\u6ce8\uff1a\u5982\u679c\u4e0d\u8bbe\u7f6e\u8fd9\u56db\u4e2a\u53c2\u6570\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a\u9ed1\u8272\u7684\u7eb9\u7406\u3002\u56e0\u4e3a\u5b83\u4eec\u6ca1\u6709\u9ed8\u8ba4\u503c\n//\u5c06\u6570\u636e\u62f7\u8d1d\u5230GPU\u4e0a\nGLCall(glTexImage2D(\nGL_TEXTURE_2D,      //\u7eb9\u7406\u7c7b\u578b\n0,                  //level=0\uff0c\u8868\u793a\u5b83\u4e0d\u662f\u4e00\u4e2a\u590d\u5408\u7eb9\u7406\nGL_RGBA8,           //\u4f60\u5e0c\u671bOpenGL\u5728GPU\u4e2d\u5982\u4f55\u5b58\u50a8\u4f60\u7684\u7eb9\u7406 =&gt; \u6309\u7167RGBA8\u6765\u5b58\u50a8\nm_Width, m_Height,  //\u5bbd\u9ad8\n0,                  //\u50cf\u7d20\u8fb9\u6846=0\nGL_RGBA,            //\u4f20\u7ed9GPU\u6570\u636e\u7684\u683c\u5f0f\u662f\u4ec0\u4e48 =&gt; RGBA\u56db\u4e2a\u901a\u9053\nGL_UNSIGNED_BYTE,   //\u4f20\u7ed9GPU\u6570\u636e\u7684\u7c7b\u578b =&gt; \u6bcf\u4e2a\u901a\u9053\u662f\u4e00\u4e2aunsigned byte\nm_LocalBuffer       //\u6570\u636e\uff08\u4e5f\u53ef\u4ee5\u4f20nullptr\uff0c\u8fd9\u8868\u793a\u5148\u5206\u914d\u663e\u5b58\uff0c\u5230\u540e\u9762\u518d\u62f7\u8d1d\uff09\n)); GLCall(glBindTexture(GL_TEXTURE_2D, 0)); //\u89e3\u9664\u7ed1\u5b9a\nif (m_LocalBuffer) {\nstbi_image_free(m_LocalBuffer); //\u5220\u9664\u5185\u5b58\u4e2d\u7684\u6570\u636e\nm_LocalBuffer = nullptr;\n}\n}\nTexture::~Texture()\n{\nGLCall(glDeleteTextures(1, &amp;m_RendererID));\nif (m_LocalBuffer)\n{\nstbi_image_free(m_LocalBuffer); //\u5220\u9664\u5185\u5b58\u4e2d\u7684\u6570\u636e\nm_LocalBuffer = nullptr;\n}\n}\nvoid Texture::Bind(unsigned int slot) const\n{\n//\u6fc0\u6d3b\u7b2cslot\u4e2a\u7eb9\u7406\u69fd\uff08\u8fd9\u610f\u5473\u7740\u4e0b\u4e00\u4e2a\u7eb9\u7406\u5c06\u7ed1\u5b9a\u5230\u7b2cslot\u4e2a\u7eb9\u7406\u69fd\u4e0a\uff09\nGLCall(glActiveTexture(GL_TEXTURE0 + slot));\n//\u5c06m_RendererID\u7eb9\u7406\uff0c\u7ed1\u5b9a\u5230\u6fc0\u6d3b\u7684\u69fd\u91cc\uff08\u4e5f\u5c31\u662f\u7b2cslot\u4e2a\u7eb9\u7406\u69fd\u4e2d\uff09\nGLCall(glBindTexture(GL_TEXTURE_2D, m_RendererID));\n//\u6ce8\uff1a\u867d\u7136\u7eb9\u7406\u69fd\u8303\u56f4\u662f[GL_TEXTURE0, GL_TEXTURE31]\uff0c\u4f46\u4e0d\u4e00\u5b9a\u4f60\u7684\u663e\u5361\u652f\u6301\uff0c\u8fd9\u8fd8\u662f\u53d6\u51b3\u4e8e\u4f60\u7684\u663e\u5361\n//    \u670932\u4e2a\uff0c\u662f\u56e0\u4e3a32\u662fOpenGL\u89c4\u683c\u5141\u8bb8\u7684\u6700\u5927\u503c\n}\nvoid Texture::Unbind() const\n{\nGLCall(glBindTexture(GL_TEXTURE_2D, 0));\n}\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/#3-shader","title":"3. \u5728Shader\u4e2d\u4f7f\u7528\u7eb9\u7406","text":"<pre><code>#shader vertex\n#version 330 core\n//\u9876\u70b9\u6570\u636e\nlayout(location = 0)in vec4 position;   //\u9876\u70b9\u4f4d\u7f6e\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u662fvec4\uff09\nlayout(location = 1)in vec2 texCoord;   //UV\u5750\u6807\nout vec2 v_TexCoord; //\u8f93\u51fa\u53d8\u91cf\u3002\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\uff0c\u5c06\u4f1a\u4f5c\u4e3a\u7247\u5143\u7740\u8272\u5668\u7684\u8f93\u5165\nvoid main()\n{\ngl_Position = position;\nv_TexCoord = texCoord;\n};\n#shader fragment\n#version 330 core\nlayout(location = 0)out vec4 color;\nin vec2 v_TexCoord; //\u7531\u9876\u70b9\u7740\u8272\u5668\u4f20\u5165\nuniform sampler2D u_Texture;\n//sampler2D\u4e3a\u4e8c\u7ef4\u7684\u7eb9\u7406\u56fe\n//OpenGL\u53ea\u9700\u8bbe\u7f6e\u7eb9\u7406\u69fd\u7684Id\u5373\u53ef\uff0csampler2D\u5373\u4f1a\u53d6\u5230\u5bf9\u5e94\u7684\u7eb9\u7406\nvoid main()\n{\nvec4 texColor = texture(u_Texture, v_TexCoord); //\u5bf9\u6307\u5b9a\u7eb9\u7406\u5750\u6807\u8fdb\u884c\u91c7\u6837\ncolor = texColor;\n};\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/#4","title":"4. \u6dfb\u52a0\u7eb9\u7406\u6df7\u5408","text":"<pre><code>//# \u5b9a\u4e49OpenGL\u5982\u4f55\u6df7\u5408alpha\u50cf\u7d20\nGLCall(glEnable(GL_BLEND)); //\u542f\u7528\u6df7\u5408\nGLCall(glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA));  //RGBA = SrcRgba * GL_SRC_ALPHA + DestRgba * GL_ONE_MINUS_SRC_ALPHA\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/#_2","title":"\u7eb9\u7406\u6df7\u5408","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/#_3","title":"\u5f15\u8a00","text":"<p>\u5728\u56fe\u5f62\u5b66\u4e2d\uff0c\u4e0d\u53ef\u907f\u514d\u8981\u6e32\u67d3\u4e00\u4e9b\u90e8\u5206\u6216\u5b8c\u5168\u900f\u660e\u7684\u4e1c\u897f\uff0c\u4f8b\u5982</p> <ol> <li>\u6709\u8272\u73bb\u7483\uff1a\u53ea\u80fd\u900f\u8fc7\u67d0\u79cd\u989c\u8272</li> <li>\u5177\u6709\u900f\u660e\u901a\u9053\u7684\u56fe\u7247\uff1a\u900f\u660e\u7684\u50cf\u7d20\u4e0d\u6e32\u67d3</li> </ol> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cOpenGL\u4e0d\u6267\u884c\u4efb\u4f55\u6df7\u5408\uff0c\u4f1a\u5c06\u56fe\u7247\u6e32\u67d3\u6210\u4e0d\u900f\u660e\u7684\u4e1c\u897f\u3002</p> <ol> <li>\u5982\u5de6\u56fe\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u544a\u8bc9OpenGL \u5904\u7406\u900f\u660e\u5ea6\u7684\u7b56\u7565 \uff0c\u90a3\u4e48\u5b83\u6e32\u67d3\u7684\u7ed3\u679c\u5c06\u4e0d\u4f1a\u662f\u4f60\u60f3\u8981\u7684</li> <li>\u53f3\u56fe\u5c31\u6b63\u786e\u8bbe\u7f6e\u4e86\u5904\u7406\u900f\u660e\u5ea6\u7684\u7b56\u7565\uff0c\u7ed3\u679c\u662f\u6b63\u786e\u7684</li> </ol> <p> </p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/#_4","title":"\u4ec0\u4e48\u662f\u6df7\u5408\uff1f","text":"<p>\u4f8b\u5982\uff0c\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u6709\u4e24\u5757\u6709\u8272\u73bb\u7483\uff0c\u4e00\u4e2a\u662f\u7ea2\u8272\uff0c\u4e00\u4e2a\u662f\u84dd\u8272\uff0c\u84dd\u8272\u73bb\u7483\u538b\u5728\u7ea2\u8272\u73bb\u7483\u4e0a\u9762</p> <ol> <li>\u56e0\u4e3a\u84dd\u8272\u538b\u76d6\u5728\u7ea2\u8272\u73bb\u7483\u4e0a\u9762\uff0c\u56e0\u6b64\u6e32\u67d3\u987a\u5e8f\u662f\uff1a\u5148\u7ea2\u8272\u73bb\u7483\uff0c\u518d\u84dd\u8272\u73bb\u7483</li> <li>\u9996\u5148\uff0c\u5148\u6e32\u67d3\u7ea2\u8272\u73bb\u7483\uff0c\u6e32\u67d3\u7ed3\u679c\u80af\u5b9a\u662f\u7ea2\u8272\u3002\u7136\u540e\u5c06\u5176\u5b58\u50a8\u5728\u76ee\u6807\u7f13\u51b2\u533a(Target buffer)\u5f53\u4e2d\u3002\u5728\u6df7\u5408\u7684\u8bed\u5883\u4e2d\uff0c\u4e4b\u524d\u6e32\u67d3\u7684\u65e7\u989c\u8272\u503c\u4e00\u822c\u79f0\u4e3adestination\uff08\u76ee\u6807\uff09</li> <li>\u5176\u6b21\uff0c\u6e32\u67d3\u84dd\u8272\u73bb\u7483\uff0c\u6e32\u67d3\u7ed3\u679c\u80af\u5b9a\u662f\u84dd\u8272\uff0c\u6b64\u65f6\u5c31\u9047\u5230\u4e86\u5982\u4f55\u4e0e\u539f\u5148\u989c\u8272\uff08\u7ea2\u8272\uff09\u6df7\u5408\u7684\u95ee\u9898\u3002\u5728\u6df7\u5408\u7684\u8bed\u5883\u4e2d\uff0c\u5f53\u524d\u6e32\u67d3\u7684\u989c\u8272\u503c\u88ab\u79f0\u4e3asource\uff08\u6e90\uff09\uff0c\u6216\u8f93\u51fa\u989c\u8272\u3002</li> </ol> <p></p> <p>\u56e0\u6b64\uff0c\u6df7\u5408\u51b3\u5b9a\u4e86\u5982\u4f55\u5c06 \u8f93\u51fa\u989c\u8272(output) \u4e0e \u4e4b\u524d\u7684\u989c\u8272(target buffer) \u8fdb\u884c\u7ed3\u5408\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/#_5","title":"\u542f\u7528\u6df7\u5408","text":"<p>\u9ed8\u8ba4\u662f\u7981\u7528</p> <ol> <li><code>glEnable(GL_BLEND)</code></li> <li><code>glEnable(GL_BLEND)</code></li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/#_6","title":"\u6df7\u5408\u8272\u8ba1\u7b97\u65b9\u5f0f","text":"<p>\u6307\u5b9a\u6df7\u5408\u8272\u8ba1\u7b97\u65b9\u5f0f\u7684API\uff1a<code>glBlendFunc(src_factor, dest_factor)</code></p> <p>\u5176\u5bf9\u5e94\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a<code>\u4e24\u4e2a\u989c\u8272\u7684\u6df7\u5408\u7ed3\u679c = src * src_factor + dest * dest_factor</code></p> <ul> <li><code>src_factor</code>\uff1asource\u7684\u56e0\u5b50\uff0c\u9ed8\u8ba4\u4e3a<code>GL_ONE</code></li> <li><code>dest_factor</code>\uff1adest\u7684\u56e0\u5b50\uff0c\u9ed8\u8ba4\u4e3a<code>GL_ZERO</code></li> </ul> <p>\u4e8b\u5b9e\u4e0a\uff0csrc_factor\u3001dest_factor\u7684\u56e0\u5b50\u4e5f\u53ef\u4ee5\u53ea\u4f5c\u7528\u4e8eRGB\u3001RGBA\u3001R\u3001G\u3001B\u3001RG\u7b49\u7b49\u3002</p> <p>\u4f8b\uff1a<code>glBlendFunc(GL_ONE, GL_ZERO)</code></p> <ol> <li><code>GL_ONE</code>\uff1a\u53d6\u989c\u8272\u7684RGBA\u7684\u901a\u9053\uff0c\u7136\u540e<code>\u00d71</code></li> <li><code>GL_ZERO</code>\uff1a\u53d6\u989c\u8272\u7684RGBA\u7684\u901a\u9053\uff0c\u7136\u540e<code>\u00d70</code></li> <li>\u56e0\u6b64\uff0c\u8ba1\u7b97\u516c\u5f0f\u4e3a<code>result = src * 1 + dest * 0</code></li> <li>\u4e8b\u5b9e\u4e0a\uff0c\u8ba1\u7b97\u7ed3\u679c\u662f\u65b0\u7684\u6e32\u67d3\u7ed3\u679c\uff0c\u5b83\u4f1a\u628a\u65e7\u7684\u6e32\u67d3\u7ed3\u679c\u8fdb\u884c\u8986\u76d6</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/#_7","title":"\u6df7\u5408\u6a21\u5f0f","text":"<p>\u6307\u5b9a\u6df7\u5408\u7684\u6a21\u5f0f\uff1a<code>glBlendEquation(mode)</code></p> <ul> <li><code>mode</code>\uff1a\u5982\u4f55\u7ec4\u7ec7src\u548cdest\u7684\u989c\u8272\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u516c\u5f0f\u4e2d\u7684\u8fd0\u7b97\u7b26\uff0c\u9ed8\u8ba4\u662f<code>GL_FUNC_ADD</code>\uff0c\u4e5f\u5c31\u662f<code>+</code>\u53f7</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/10%20%E7%BA%B9%E7%90%86/#_8","title":"\u6df7\u8272\u793a\u4f8b","text":"<p>\u4e00\u3001alpha=0\uff0c\u5219\u4fdd\u7559dest\u7684\u989c\u8272</p> <ol> <li><code>src_factor  = GL_SRC_ALPHA</code></li> <li><code>dest_factor = GL_ONE_MINUS_SRC_ALPHA</code></li> <li><code>mode        = GL_FUNC_ADD</code></li> </ol> <p></p> <p>\u4e8c\u3001\u90e8\u5206\u900f\u660e</p> <ul> <li><code>src  = (1.0, 1.0, 1.0, 0.5)</code> \u767d\u8272\u73bb\u7483\uff0c\u4f46\u900f\u660e\u5ea60.5</li> <li><code>dest = (1.0, 0.0, 1.0, 1.0)</code> \u6d0b\u7ea2\u8272\u957f\u65b9\u5f62</li> </ul> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/11%20%E6%95%B0%E5%AD%A6%E5%BA%93%E4%B8%8E%E6%8A%95%E5%BD%B1%E7%9F%A9%E9%98%B5/","title":"11 \u6570\u5b66\u5e93\u4e0e\u6295\u5f71\u77e9\u9635","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/11%20%E6%95%B0%E5%AD%A6%E5%BA%93%E4%B8%8E%E6%8A%95%E5%BD%B1%E7%9F%A9%E9%98%B5/#_1","title":"\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/11%20%E6%95%B0%E5%AD%A6%E5%BA%93%E4%B8%8E%E6%8A%95%E5%BD%B1%E7%9F%A9%E9%98%B5/#_2","title":"\u5f15\u8a00","text":"<p>\u6211\u4eec\u5148\u505a\u51e0\u4e2a\u8bd5\u9a8c\u3002</p> <ol> <li> <p>\u5728\u539f\u5148\u7684\u4ee3\u7801\u4e2d\uff0c\u957f\u65b9\u5f62\u7684\u56db\u4e2a\u9876\u70b9\u662f0.5 <pre><code>//\u9876\u70b9\u6570\u636e\nfloat positions[] = {\n//\u9876\u70b9\u4f4d\u7f6exy, UV\u5750\u6807xy\n-0.5f, -0.5f, 0.0f, 0.0f,   // 0\n0.5f, -0.5f, 1.0f, 0.0f,    // 1\n0.5f,  0.5f, 1.0f, 1.0f,    // 2\n-0.5f,  0.5f, 0.0f, 1.0f    // 3\n};\n</code></pre> </p> </li> <li> <p>\u5c06\u957f\u65b9\u5f62\u7684\u56db\u4e2a\u9876\u70b9\u6539\u62101 <pre><code>//\u9876\u70b9\u6570\u636e\nfloat positions[] = {\n//\u9876\u70b9\u4f4d\u7f6exy, UV\u5750\u6807xy\n-1.0f, -1.0f, 0.0f, 0.0f,   // 0\n1.0f, -1.0f, 1.0f, 0.0f,    // 1\n1.0f,  1.0f, 1.0f, 1.0f,    // 2\n-1.0f,  1.0f, 0.0f, 1.0f    // 3\n};\n</code></pre> </p> </li> <li> <p>\u5c06\u957f\u65b9\u5f62\u7684\u56db\u4e2a\u9876\u70b9\u6539\u62102 <pre><code>//\u9876\u70b9\u6570\u636e\nfloat positions[] = {\n//\u9876\u70b9\u4f4d\u7f6exy, UV\u5750\u6807xy\n-2.0f, -2.0f, 0.0f, 0.0f,   // 0\n2.0f, -2.0f, 1.0f, 0.0f,    // 1\n2.0f,  2.0f, 1.0f, 1.0f,    // 2\n-2.0f,  2.0f, 0.0f, 1.0f    // 3\n};\n</code></pre> </p> </li> </ol> <p>\u4e0d\u96be\u53d1\u73b0\uff0c\u65e0\u8bba\u6211\u4eec\u600e\u4e48\u66f4\u6539\u9876\u70b9\u7684\u5750\u6807\u503c\uff0c\u5728\u7a97\u53e3\u4e2d\uff0c\u6bcf\u6b21\u53ea\u663e\u793a\u4e86x\u2208[-1, 1]\uff0cy\u2208[-1, 1]\u7684\u5185\u5bb9\u3002</p> <p>\u56de\u60f3\uff0c\u5728\u8fd9\u4efd\u4ee3\u7801\u4e2d\uff08basic.shader\uff09\uff0c<code>positions</code>\u7684\u9876\u70b9\u5750\u6807\u76f4\u63a5\u8d4b\u503c\u7ed9\u4e86<code>gl_Position</code> <pre><code>#shader vertex\n//...\nvoid main()\n{\ngl_Position = position;\nv_TexCoord = texCoord;\n};\n#shader fragment\n//...\n</code></pre></p> <p>\u56e0\u6b64\uff0c\u5f15\u51fa\u4e86\u4e00\u4e2a\u80cc\u666f\u77e5\u8bc6\uff1a<code>gl_Position</code>\u5b9e\u9645\u4e0a\u88abGPU\u5f53\u6210 [-1, 1] \u7684\u5750\u6807\uff08\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff09\u8fdb\u884c\u5904\u7406\u4e86\u3002GPU\u5728\u4e4b\u540e\uff0c\u4f1a\u5c06**\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb** \u6620\u5c04\u6210 \u5c4f\u5e55\u5750\u6807\u7cfb\uff0c\u4ece\u800c\u7ed8\u5236\u5230\u6211\u4eec\u7684\u5c4f\u5e55\u4e0a\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/11%20%E6%95%B0%E5%AD%A6%E5%BA%93%E4%B8%8E%E6%8A%95%E5%BD%B1%E7%9F%A9%E9%98%B5/#_3","title":"\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb","text":"<p>\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb\uff08normalized device coordinate system, NDC\uff09</p> <ul> <li>\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u7a7a\u95f4\u76f4\u89d2\u5750\u6807\u7cfb</li> <li>\u5b83\u7684X\u3001Y\u7684\u8303\u56f4\u90fd\u5728[-1, 1]\u4e4b\u95f4</li> </ul> <p></p> <p>GPU\u5c31\u4f1a\u5c06 \u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u7cfb \u6620\u5c04\u6210 \u5c4f\u5e55\u5750\u6807\u7cfb\uff08window device coordinate system\uff09\uff0c\u4ece\u800c\u5c06\u6211\u4eec\u7684\u56fe\u6848\u663e\u793a\u5230\u5c4f\u5e55\u5f53\u4e2d\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/11%20%E6%95%B0%E5%AD%A6%E5%BA%93%E4%B8%8E%E6%8A%95%E5%BD%B1%E7%9F%A9%E9%98%B5/#glm","title":"glm\u6570\u5b66\u5e93","text":"<p>glm\u7b2c\u4e09\u65b9\u5e93\u7684\u5168\u7a0b\u53eb\u505aOpenGL Mathematics\u3002Yes\uff0c\u5b83\u5c31\u662fOpenGL\u7684\u6570\u5b66\u5e93\uff0c\u6240\u4ee5\u6709\u5f88\u591a\u6807\u51c6\u90fd\u662f\u57fa\u4e8eOpenGL\u6807\u51c6\u7f16\u5199\u7684\u3002glm\u65e8\u5728\u6a21\u4effGLSL\u5e76\u4e0eOpenGL\u4e00\u8d77\u4f7f\u7528\u3002</p> <p>\u4f8b\u5982\uff1aglm\u77e9\u9635\u7684\u5185\u5b58\u5e03\u5c40\u4e0eOpenGL\u4e00\u81f4\uff0c\u90fd\u662f\u6309\u5217\u4f18\u5148\u6765\u5b58\u50a8\u7684\uff01</p> <ul> <li>\u56e0\u6b64\u5728\u4f7f\u7528<code>glUniformMatrix4fv</code>\u65f6\uff0c\u5c31\u65e0\u9700\u8f6c\u7f6e\uff0c\u76f4\u63a5\u5c06<code>glm</code>\u7684\u77e9\u9635\u5185\u5b58\u62f7\u8d1d\u5230GPU\u5373\u53ef\u3002</li> </ul> <pre><code>void Shader::SetUniformMat4f(const std::string&amp; name, const glm::mat4&amp; matrix) {\nGLCall(\nglUniformMatrix4fv(\nGetUniformLocation(name),\n1,          //1\u4e2a\u77e9\u9635\nGL_FALSE,   //true\u9700\u8981\u8f6c\u7f6e\uff0cfalse\u4e0d\u9700\u8981\u8f6c\u7f6e\n&amp;matrix[0][0]  //\u4f20\u5165\u77e9\u9635\u7684\u5185\u5b58\u5730\u5740\n)\n);\n//f\u8868\u793afloat\n//v\u8868\u793a\u6211\u4eec\u5728\u4f20\u5165\u4e00\u4e2a\u6570\u7ec4    \n}\n</code></pre> <ul> <li>\u4f46\u5982\u679c\u5176\u4ed6\u6570\u5b66\u5e93\u662f\u4ee5\u884c\u4f18\u5148\u6765\u5b58\u50a8\u77e9\u9635\u7684\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u4f20\u5165<code>GL_TRUE</code>\uff0cOpenGL\u4f1a\u81ea\u884c\u5bf9\u5176\u8fdb\u884c\u8f6c\u7f6e</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/11%20%E6%95%B0%E5%AD%A6%E5%BA%93%E4%B8%8E%E6%8A%95%E5%BD%B1%E7%9F%A9%E9%98%B5/#_4","title":"\u6295\u5f71\u77e9\u9635","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/11%20%E6%95%B0%E5%AD%A6%E5%BA%93%E4%B8%8E%E6%8A%95%E5%BD%B1%E7%9F%A9%E9%98%B5/#_5","title":"\u4ecb\u7ecd","text":"<p>\u5047\u8bbe\uff0c\u4f60\u6709\u4e00\u4e2a3D\u4e16\u754c\uff0c\u91cc\u9762\u6709\u5c71\u4e18\u3001\u5730\u5f62\u3001\u4eba\u7269\u3001\u5efa\u7b51\u7269\u7b49\u7b49\uff0c\u8fd9\u4e2a3D\u4e16\u754c\u662f\u4ee5\u4f55\u79cd\u65b9\u5f0f\u663e\u793a\u57282D\u7684\u5c4f\u5e55\u5f53\u4e2d\u7684\uff1f</p> <ul> <li>\u6295\u5f71\u77e9\u9635</li> </ul> <p>\u6295\u5f71\u77e9\u9635\uff0c\u672c\u8d28\u4e0a\u662f\u5c06\u4e09\u7ef4\u7a7a\u95f4\u6295\u5f71\u5230\u4e8c\u7ef4\u5c4f\u5e55\u4e0a\u7684\u77e9\u9635\uff0c\u5373\u5c06\u4e09\u7ef4\u5750\u6807\u8f6c\u6362\u4e3a\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\u3002</p> <p>\u5b83\u6709\u4e24\u79cd\uff1a</p> <ol> <li>\u900f\u89c6\u6295\u5f71\uff1a\u8fd1\u5927\u8fdc\u5c0f\uff0c\u5e38\u7528\u4e8e3D\u4e16\u754c</li> <li>\u6b63\u4ea4\u6295\u5f71\uff1a\u8fdc\u8fd1\u4e00\u6837\uff0c\u5e38\u7528\u8bed2D\u4e16\u754c\u5f53\u4e2d\uff0c\u4f46\u662f3D\u4e2d\u4e5f\u4f1a\u6709\u5e94\u7528\uff08\u4f8b\u5982\u5173\u5361\u7f16\u8f91\u5668\u30013D\u5efa\u6a21\u7a0b\u5e8f\uff09</li> </ol> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/11%20%E6%95%B0%E5%AD%A6%E5%BA%93%E4%B8%8E%E6%8A%95%E5%BD%B1%E7%9F%A9%E9%98%B5/#_6","title":"\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u6295\u5f71\u77e9\u9635","text":"<ol> <li> <p>Application.cpp <pre><code>#include \"glm/gml.hpp\"\n#include \"glm/gtc/matrix_transform.hpp\"\nint main()\n{\n//...\nIndexBuffer ib(indices, 6);\n//\u6b63\u4ea4\u77e9\u9635\uff08\u628a\u6240\u6709\u5750\u6807\u6620\u5c04\u52302D\u5e73\u9762\u4e0a\uff0c\u79bb\u7684\u8fdc\u7684\u7269\u4f53\u5e76\u4e0d\u4f1a\u53d8\u5c0f\uff09\nglm::mat4 proj = glm::ortho(\n-2.0f, //\u5de6\u8fb9\n2.0f,  //\u53f3\u8fb9\n-1.5f, //\u5e95\u90e8\n1.5f,   //\u9876\u90e8\n-1.0f,  //\u8fdc\n1.0f    //\u8fd1\n);\n//x\u2208[-2, 2]\u4f1a\u88ab\u6620\u5c04\u5230NDC\u7684[-1, 1]\u4e0a\uff0c\u5176\u4ed6\u7684\u4f1a\u88ab\u5220\u6389\u3002\u56e0\u6b64x=0.5\u5373\u5728\u7a97\u53e3\u76841/4\u5904\n//y\u2208[-1.5, 1.5]\u4f1a\u88ab\u6620\u5c04\u5230NDC\u7684[-1, 1]\u4e0a\uff0c\u5176\u4ed6\u7684\u4f1a\u88ab\u5220\u6389\n//\u6ce8\uff1a\u9075\u5faa4x3\u7684\u7eb5\u6a2a\u6bd4\uff08\u5c06\u8fd9\u4e9b\u6570\u5b57\u4e58\u4ee52\uff0c\u5c31\u5f97\u5230\u4e864x3\uff09\n//\u9876\u90e8\u5230\u5e95\u90e8\u67093\u4e2a\u5355\u4f4d\u8ddd\u79bb\uff1b\u4ece\u5de6\u5230\u53f34\u4e2a\u5355\u4f4d\u8ddd\u79bb\n//...\nshader.SetUniformMat4f(\"u_MVP\", proj); //\u4f20\u5165\u7740\u8272\u5668\n}\n</code></pre></p> </li> <li> <p>basic.shader <pre><code>#shader vertex\n#version 330 core\nlayout(location = 0)in vec4 position;\nlayout(location = 1)in vec2 textCoord;\nout vec2 v_TextCoord;\nuniform mat4 u_MVP; //\u6a21\u578b\u89c6\u56fe\u77e9\u9635\uff0c\u76ee\u524d\u53ea\u4f20\u5165\u4e86\u4e00\u4e2a\u6295\u5f71\u77e9\u9635\nvoid main()\n{\ngl_Position = u_MVP * position; //\u5c06\u5750\u6807\u505a\u4e00\u4e2a\u6295\u5f71\u53d8\u6362\nv_TextCoord = textCoord;\n};\n#shader fragment\n#version 330 core\nlayout(location = 0)out vec4 color;\nin vec2 v_TextCoord;\nuniform vec4 u_Color;\nuniform sampler2D u_Texture;\nvoid main()\n{\nvec4 textColor = texture(u_Texture, v_TextCoord);\ncolor = textColor;\n};\n</code></pre></p> </li> <li> <p>shader.cpp <pre><code>//glm::mat4\u662f\u5217\u5f0f\u5b58\u50a8\uff0c\u800cOpenGL\u4e5f\u662f\u5217\u5f0f\u5b58\u50a8\uff0c\u56e0\u6b64\u65e0\u9700\u8f6c\u7f6e\n//\u5982\u679cmatrix\u662f\u884c\u5f0f\u5b58\u50a8\uff0c\u624d\u9700\u8981\u8f6c\u7f6e\nvoid Shader::SetUniformMat4f(const std::string&amp; name, const glm::mat4&amp; matrix) {\nGLCall(\nglUniformMatrix4fv(\nGetUniformLocation(name),\n1,          //1\u4e2a\u77e9\u9635\nGL_FALSE,   //true\u9700\u8981\u8f6c\u7f6e\uff0cfalse\u4e0d\u9700\u8981\u8f6c\u7f6e\n&amp;matrix[0][0]  //\u4f20\u5165\u77e9\u9635\u7684\u5185\u5b58\u5730\u5740\n)\n);\n//f\u8868\u793afloat\n//v\u8868\u793a\u6211\u4eec\u5728\u4f20\u5165\u4e00\u4e2a\u6570\u7ec4    \n}\n</code></pre></p> </li> </ol> <p>\u5728\u5b8c\u6210\u4ee3\u7801\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u51e0\u4e2a\u8bd5\u9a8c\u6765\u52a0\u6df1\u5bf9\u6295\u5f71\u77e9\u9635\u7684\u7406\u89e3</p> <ol> <li>\u6211\u4eec\u53ef\u4ee5\u5728CPU\u4e2d\u8ba1\u7b97\u6295\u5f71\u4e4b\u540e\u7684\u5750\u6807\u662f\u591a\u5c11\uff0c\u7136\u540e\u89c2\u5bdf\u8fd9\u4e2a\u70b9\u5728\u7a97\u53e3\u7684\u4f4d\u7f6e\u662f\u5426\u6b63\u786e</li> </ol> <pre><code>glm::vec4 vp(100, 100, 0, 1);\nglm::vec4 result = proj * vp;\n</code></pre> <ol> <li>\u66f4\u6539<code>glm::ortho</code>\u4e2dx\u3001y\u7684\u9608\u503c</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/12%20%E6%A8%A1%E5%9E%8B%E3%80%81%E8%A7%86%E5%9B%BE%E7%9F%A9%E9%98%B5/","title":"12 \u6a21\u578b\u3001\u89c6\u56fe\u77e9\u9635","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/12%20%E6%A8%A1%E5%9E%8B%E3%80%81%E8%A7%86%E5%9B%BE%E7%9F%A9%E9%98%B5/#_1","title":"\u6a21\u578b\u77e9\u9635","text":"<p>\u5bf9\u6a21\u578b\u8fdb\u884c\u504f\u79fb\u7684\u77e9\u9635\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/12%20%E6%A8%A1%E5%9E%8B%E3%80%81%E8%A7%86%E5%9B%BE%E7%9F%A9%E9%98%B5/#_2","title":"\u89c6\u56fe\u77e9\u9635","text":"<p>\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u5c71\u662f\u4e0d\u53d8\u7684\uff0c\u5982\u679c\u4f60\u8981\u770b\u5230\u5c71\u7684\u540e\u9762\uff0c\u4f60\u5c31\u8981\u722c\u5230\u5c71\u7684\u540e\u9762\u8fdb\u884c\u89c2\u770b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7269\u4f53\uff08\u5c71\uff09\u4e0d\u52a8\uff0c\u6444\u50cf\u673a\uff08\u4f60\u7684\u773c\u775b\uff09\u79fb\u52a8\u3002</p> <p>\u4f46\u662f\uff0c\u5728OpenGL\u7684\u4e16\u754c\u4e2d\uff0c\u662f\u76f8\u53cd\u7684\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4f60\u5750\u5728\u7535\u8111\u9762\u524d\u4e00\u52a8\u4e0d\u52a8\uff0c\u4f60\u9002\u5f53\u64cd\u4f5c\u9f20\u6807\u5c31\u53ef\u4ee5\u770b\u5230\u5c71\u7684\u540e\u9762\u3002\u5b9e\u9645\u4e0a\uff0c\u6444\u50cf\u673a\uff08\u4f60\u7684\u773c\u775b\uff09\u6ca1\u6709\u79fb\u52a8\uff0c\u800c\u7269\u4f53\uff08\u7535\u8111\u91cc\u7684\u5c71\uff09\u79fb\u52a8\u4e86\u3002</p> <p>\u56e0\u6b64\uff0c\u5728OpenGL\u4e2d\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u6ca1\u6709\u6444\u50cf\u673a\u8fd9\u4e2a\u6982\u5ff5\u7684\uff0c\u4f60\u6bcf\u6b21\u64cd\u4f5c\u9f20\u6807\uff0c\u6211\u4eec\u90fd\u662f\u5bf9\u9876\u70b9\u4f4d\u7f6e\u8fdb\u884c\u53d8\u6362\u7684\u3002</p> <p>\u800c\u6a21\u62df\u6444\u50cf\u673a\u79fb\u52a8\u65f6\uff0c\u5bf9\u9876\u70b9\u505a\u53d8\u6362\u7684\u77e9\u9635\uff0c\u5c31\u88ab\u79f0\u4e3a\u89c6\u56fe\u77e9\u9635\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnChernoOpenGL/12%20%E6%A8%A1%E5%9E%8B%E3%80%81%E8%A7%86%E5%9B%BE%E7%9F%A9%E9%98%B5/#_3","title":"\u4ee3\u7801","text":"<pre><code>int main()\n{\nwindow = glfwCreateWindow(640, 480, \"Hello World\", NULL, NULL);\n//...\n{\n//\u9876\u70b9\u6570\u636e\nfloat positions[] = {\n//\u9876\u70b9\u4f4d\u7f6exy, UV\u5750\u6807xy\n100.0f, 100.0f, 0.0f, 0.0f, // 0\n200.0f, 100.0f, 1.0f, 0.0f, // 1\n200.0f, 200.0f, 1.0f, 1.0f, // 2\n100.0f, 200.0f, 0.0f, 1.0f  // 3\n};\n//...\n/* glm::ortho \u6b63\u4ea4\u77e9\u9635 */\n/* \u8fd9\u91cc\u5e94\u8be5\u662f 960x720 \u800c\u4e0d\u662f 960x540 \u7684\u5206\u8fa8\u7387 */\nglm::mat4 proj = glm::ortho(0.0f, 960.0f, 0.0f, 720.0f, -1.0f, 1.0f);\n/* \u76f8\u673a\u4f4d\u7f6e \u89c6\u56fe\u77e9\u9635 x&amp;y&amp;z */\nglm::mat4 view = glm::translate(glm::mat4(1.0f), glm::vec3(-100, 0, 0)); //\u5411\u5de6\u79fb\u52a8100\n/* \u6a21\u578b\u77e9\u9635 \u5bf9\u8c61\u4f4d\u7f6e */\nglm::mat4 model = glm::translate(glm::mat4(1.0f), glm::vec3(200, 200, 0)); //\u5c06\u6a21\u578b\u5411\u53f3\u79fb\u52a8200\uff0c\u5411\u4e0a\u79fb\u52a8200\nglm::mat4 mvp = proj * view * model; //\u5728OpenGL\u4e2d\uff0c\u662f \u77e9\u9635 * \u5411\u91cf\u3002\u56e0\u6b64\u987a\u5e8f\u662f\uff1a\u5411\u91cf = \u6295\u5f71\u77e9\u9635 * \u89c6\u56fe\u77e9\u9635 * \u6a21\u578b\u77e9\u9635 * \u5411\u91cf\nShader shader(\"res/shaders/Basic.shader\");\nshader.Bind();\nshader.SetUniform4f(\"u_Color\", 0.2f, 0.3f, 0.8f, 1.0f);\nshader.SetUniformMat4f(\"u_MVP\", mvp);\n//...\n}\n//...\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnOpenGL/","title":"LearnOpenGL","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/LearnOpenGL/#_1","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>OpenGL\u7ecf\u5178\u6559\u7a0b\uff1alearnopengl\u3001LearnOpenGL\u4e2d\u6587\u7248</li> <li>\u89c6\u9891\u6559\u7a0b\uff1a\u83ef\u68b5\u5927\u5b78-\u651d\u5f71\u8207VR\u8a2d\u8a08\u7cfb-\u7cfb\u4e3b\u4efb\u6559\u7a0b</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/SonghoOpenGL/","title":"Index","text":"<p>\u8bc4\u4ef7\uff1a\u6559\u7a0b\u504f\u65e7\uff0c\u4f46\u793a\u4f8b\u3001\u56fe\u7247\u8fd8\u662f\u633a\u5230\u4f4d\u7684\u3002</p> <p>\u7f51\u5740</p> <ol> <li>OpenGL (songho.ca)</li> <li>Math (songho.ca)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/OpenGL/%E8%B5%84%E6%96%99/%E3%80%8AOpenGL%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97%E3%80%8B/","title":"OpenGL\u7f16\u7a0b\u6307\u5357\uff08\u7ea2\u5b9d\u4e66\uff09","text":"<p>\u4ee3\u7801\uff1aopenglredbook/examples: Examples for the OpenGL Red Book (github.com)</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/Vulkan/%E8%B5%84%E6%96%99/","title":"vulkan\u8d44\u6599","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/Vulkan/%E8%B5%84%E6%96%99/#_1","title":"\u793a\u4f8b","text":"<ol> <li>SaschaWillems/Vulkan: Examples and demos for the new Vulkan API (github.com)</li> <li>LostPeter/LostPeterVulkan\uff1b\u6587\u6863</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E5%9B%BE%E5%BD%A2API/WebGPU/%E8%B5%84%E6%96%99/","title":"WebGPU\u8d44\u6599","text":"<p>https://github.com/mikbry/awesome-webgpu</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E/Filament/","title":"Google Filament","text":"<p>Filament is a real-time physically based rendering engine for Android, iOS, Windows, Linux, macOS, and WebGL2\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E/Filament/#_1","title":"\u76f8\u5173\u94fe\u63a5","text":"<ul> <li>google/filament</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E/Filament/#_2","title":"\u76f8\u5173\u6587\u7ae0","text":"<p>\u7b2c\u4e09\u65b9\u5e93</p> <ol> <li>Google Filament \u6e90\u7801\u5b66\u4e60\uff08\u4e8c\uff09\uff1a\u4e09\u65b9\u5e93\u5206\u7c7b\u603b\u7ed3</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E/Filament/%E6%9D%90%E8%B4%A8%E7%B3%BB%E7%BB%9F/","title":"Filament\u6750\u8d28\u7cfb\u7edf\uff08PBR\uff09","text":"<p>\u76f8\u5173\u6587\u6863</p> <ul> <li>PBR\u5b9e\u73b0\u6587\u6863\uff1aPhysically Based Rendering in Filament</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E/Filament/%E6%9D%90%E8%B4%A8%E7%B3%BB%E7%BB%9F/#_1","title":"\u793a\u4f8b\u5de5\u7a0b","text":"<p>demo\u5de5\u7a0bmaterial_sandbox\uff0c\u6f14\u793a\u6750\u8d28sandboxlit.mat</p> <p>\u8c03\u8bd5\u8fd0\u884c\uff1a\u53f3\u952e\u5b50\u5de5\u7a0b<code>material_sandbox</code> &gt; \u8c03\u8bd5 &gt; \u547d\u4ee4\u53c2\u6570 &gt; \u8f93\u5165\u6a21\u578b\uff0c\u5982<code>D:\\model\\1.obj</code></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E/Filament/%E6%9D%90%E8%B4%A8%E7%B3%BB%E7%BB%9F/#_2","title":"\u6750\u8d28\u7f16\u8bd1","text":"<p>\u6bcf\u4e2a\u6750\u8d28\u6240\u5bf9\u5e94\u7684shader\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u53c2\u6570\u90fd\u4e0d\u4e00\u6837\uff0c\u6211\u4eec\u5f88\u96be\u7528\u4e00\u4e2a\u7edf\u4e00\u7684shader\u53bb\u63cf\u8ff0\u6240\u6709\u6750\u8d28\u3002\u56e0\u6b64\uff0c\u6750\u8d28\u7f16\u8bd1\u7684\u76ee\u7684\uff0c\u5c31\u662f\u4e3a\u4e86\u751f\u6210\u6b64\u6750\u8d28\u7684shader\u3002</p> <p>\u6750\u8d28\u7f16\u8bd1\u7684\u6d41\u7a0b</p> <ol> <li>Filament\u7684\u6750\u8d28\u6587\u4ef6\u4ee5<code>mat</code>\u4e3a\u540e\u7f00\u540d</li> <li>\u5b83\u4f1a\u7ecf\u8fc7<code>matc</code>\u5de5\u5177\u7f16\u8bd1\u6210<code>filamat</code>\u6587\u4ef6\uff0c\u6b64\u6587\u4ef6\u4e5f\u5305\u542b\u4e86\u5b8c\u6574\u7684\u7740\u8272\u5668</li> <li>filament\u4f1a\u5c06N\u4e2a<code>filamat</code>\u6587\u4ef6\u7edf\u4e00\u5b58\u50a8\u5230<code>RESOURCES_PACKAGE</code>\u6570\u7ec4\u91cc</li> </ol> <p></p> <p>filament\u662f\u5982\u4f55\u7f16\u8bd1shader\u7684\uff1f</p> <ul> <li>\u5f15\u64ce\u5185\u90e8\u63d0\u4f9b\u4e00\u4e9b\u5185\u7f6e\u7684shader\u6587\u4ef6\uff08\u5728shaders\u5b50\u5de5\u7a0b\u4e2d\uff09\uff0c\u8fd9\u4e9b\u6587\u4ef6\uff08<code>.fs</code>\u3001<code>vs</code>\uff09\u5e76\u4e0d\u662f\u5b8c\u6574\u7684shader\u7a0b\u5e8f\uff0c\u800c\u662f\u4e00\u4e9b\u7a0b\u5e8f\u7247\u6bb5\uff08\u5982\u51fd\u6570\u7b49\uff09</li> <li><code>ShaderGenerator</code>\u7c7b\u4f1a\u6839\u636eshadingModel\u3001\u6750\u8d28\u7684\u53c2\u6570\u7b49\uff0c\u62fc\u63a5\u51fa\u5b8c\u6574\u7684shader\uff08\u53c2\u89c1\uff1a<code>ShaderGenerator::createVertexProgram</code>\u3001<code>ShaderGenerator::createFragmentProgram</code>\uff09</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E/Filament/%E6%9D%90%E8%B4%A8%E7%B3%BB%E7%BB%9F/#_3","title":"\u6750\u8d28\u7cfb\u7edf\u8bbe\u8ba1\u539f\u5219","text":"<p>\u8d77\u6e90\u4e8eDisney \"principled\" BRDF\uff0c\u4e4b\u540e\u7684PBR\u6750\u8d28\u7cfb\u7edf\u57fa\u672c\u90fd\u53c2\u7167\u4e8e\u5b83</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E/Filament/%E6%9D%90%E8%B4%A8%E7%B3%BB%E7%BB%9F/#_4","title":"\u6e90\u7801\u7b14\u8bb0","text":"<pre><code>N\uff1a\u6cd5\u7ebf\nL\uff1a\u5149\u7ebf\u65b9\u5411\uff08\u6307\u5411\u5149\u6e90\uff09\nV\uff1a\u89c2\u5bdf\u65b9\u5411\uff08\u6307\u5411\u76f8\u673a\uff09\nH\uff1a\u5f52\u4e00\u5316\u534a\u7a0b\u5411\u91cf\no\uff1a\u8868\u793a\u70b9\u4e58\u5e76\u4e14\u622a\u65ad0~1\u4e4b\u95f4\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E/Filament/%E6%9D%90%E8%B4%A8%E7%B3%BB%E7%BB%9F/#_5","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>PBR\u5b66\u4e60\u7b14\u8bb0\uff08\u4e09\uff09PBR shader\u5b9e\u73b0\u57fa\u7840</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E/Unity/%E8%B5%84%E6%96%99/%E3%80%8AUnity%20Shader%E5%85%A5%E9%97%A8%E7%B2%BE%E8%A6%81%E3%80%8B/","title":"Unity Shader\u5165\u95e8\u7cbe\u8981","text":"<p>\u76f8\u5173\u7f51\u7ad9</p> <ol> <li>\u5b98\u65b9\u6e90\u7801</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/","title":"Index","text":"<p>\u6e32\u67d3\uff1a\u6307\u8ba1\u7b97\u673a\u8f6f\u4ef6\u7531\u6a21\u578b\u751f\u4ea7\u51fa\u56fe\u50cf\u7684\u8fc7\u7a0b\u3002</p> <p>\u82e5\u8981\u6e32\u67d3\u4e00\u5f20\u903c\u771f\u7684\u56fe\u7247\uff0c\u4e00\u822c\u8981\u7ecf\u5386\u8fd9\u4e9b\u7269\u7406\u73b0\u8c61</p> <ol> <li>\u592a\u9633\u5149\u4e0e\u5176\u4ed6\u5149\u6e90\uff08\u5929\u7136\u6216\u4eba\u9020\u5149\uff09\u53d1\u51fa\u5149</li> <li>\u5149\u4e0e\u573a\u666f\u4e2d\u7684\u7269\u4f53\u76f8\u4e92\u4f5c\u7528\u3002\u90e8\u5206\u88ab\u5438\u6536\uff1b\u90e8\u5206\u6563\u5c04\u5f00\u6765\uff0c\u5411\u65b0\u7684\u65b9\u5411\u4f20\u64ad</li> <li>\u6700\u7ec8\uff0c\u5728\u573a\u666f\u4e2d\u5f39\u6765\u5f39\u53bb\u7684\u5149\u7ebf\u88ab\u4f20\u611f\u5668\uff08\u4eba\u773c\u3001\u7535\u5b50\u4f20\u611f\u5668\uff09\u6240\u5438\u6536</li> </ol> <p>\u800c\u56fe\u5f62\u5b66\u6e32\u67d3\u5c31\u662f\u8981\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5f97\u51fa\u548c\u73b0\u5b9e\u76f8\u540c\u7684\u6548\u679c\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/#_1","title":"\u76f8\u5173\u6587\u732e","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/","title":"\u5149\u7167\u4e0e\u6750\u8d28","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/#_1","title":"\u5149\u7167\u73b0\u8c61","text":"<p>\u79c1\u4ee5\u4e3a\uff0c\u5149\u7167\u73b0\u8c61\u53ef\u5206\u4e3a\uff1a\u6563\u5c04\uff08scattering\uff09\u3001\u5438\u6536\uff08absorption\uff09\u548c\u884d\u5c04\uff08diffraction\uff09\u3002\u5176\u4ed6\u5149\u4e0e\u7269\u8d28\u7684\u76f8\u4e92\u4f5c\u7528\u90fd\u53ef\u62c6\u89e3\u6210\u8fd9\u4e09\u79cd\u3002</p> <p>\u800c\u884d\u5c04\u5728\u56fe\u5f62\u5b66\u4e2d\u63a5\u89e6\u751a\u5c11\uff0c\u56e0\u6b64\u53ef\u8ba4\u4e3a\uff0c\u5149\u4e0e\u7269\u8d28\u76f8\u4e92\u4f5c\u7528\u90fd\u662f\u5438\u6536\u4e0e\u6563\u5c04\u4e24\u79cd\u73b0\u8c61\u6240\u4f5c\u7528\u7684\u7ed3\u679c\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/#_2","title":"\u5438\u6536","text":"<p>\u5438\u6536\u53d1\u751f\u5728\u7269\u4f53\u7684\u5185\u90e8\uff0c\u5438\u6536\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u5149\u8f6c\u53d8\u4e3a\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684\u80fd\u91cf\u5e76\u6d88\u5931\u3002\u56e0\u6b64\uff0c\u5438\u6536\u4f1a\u51cf\u5c11\u5149\u7684\u80fd\u91cf\uff0c\u4f46\u4e0d\u4f1a\u5f71\u54cd\u5149\u7684\u65b9\u5411\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/#_3","title":"\u6563\u5c04","text":"<p>\u5f53\u5149\u7ebf\u9047\u5230 \u5149\u5b66\u4e0d\u8fde\u7eed\u6027\uff08optical discontinuity\uff09 \u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u6563\u5c04\u3002</p> <p>\u5149\u5b66\u4e0d\u8fde\u7eed\u6027\u53ef\u80fd\u5b58\u5728\u4e8e</p> <ol> <li>\u5177\u6709\u4e0d\u540c\u5149\u5b66\u6027\u8d28\u7684\u4e24\u79cd\u7269\u8d28\u5206\u754c\u5904</li> <li>\u6676\u4f53\u7ed3\u6784\u7834\u88c2\u5904</li> <li>\u5bc6\u5ea6\u53d8\u5316\u5904</li> <li>\u7b49\u7b49</li> </ol> <p>\u6563\u5c04\u5e76\u4e0d\u4f1a\u6539\u53d8\u5149\u7684\u80fd\u91cf\uff0c\u5b83\u53ea\u4f1a\u6539\u53d8\u5149\u7684\u65b9\u5411</p> <p></p> <p>\u5149\u7684\u6563\u5c04\u4e00\u822c\u53c8\u5206\u4e3a\u53cd\u5c04\uff08reflection\uff09\u548c\u6298\u5c04\uff08refraction\uff09</p> <ul> <li>\u6298\u5c04\u4e0e\u53cd\u5c04\u90fd\u53d1\u751f\u5728\u4e24\u79cd\u4ecb\u8d28\u7684\u4ea4\u754c\u5904\uff0c\u53ea\u662f\u53cd\u5c04\u5149\u8fd4\u56de\u539f\u4ecb\u8d28\u5f53\u4e2d\uff0c\u800c\u6298\u5c04\u5149\u7ebf\u5219\u8fdb\u5165\u53e6\u4e00\u79cd\u4ecb\u8d28\u5f53\u4e2d</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/#_4","title":"\u53cd\u5c04","text":"<p>\u5149\u5728\u4f20\u64ad\u5230\u4e0d\u540c\u7269\u8d28\u65f6\uff0c\u5728\u5206\u754c\u9762\u4e0a\u6539\u53d8\u4f20\u64ad\u65b9\u5411\uff0c\u7531\u8fd4\u56de\u5230\u539f\u6765\u7269\u8d28\u4e2d\u7684\u73b0\u8c61\uff0c\u53eb\u5149\u7684\u53cd\u5c04\uff08reflection\uff09</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/#_5","title":"\u53cd\u5c04\u5b9a\u5f8b","text":"<ol> <li>\u4e09\u7ebf\u5171\u9762\uff1a\u53cd\u5c04\u5149\u7ebf\u4e0e\u5165\u5c04\u5149\u7ebf\u3001\u6cd5\u7ebf\uff0c\u5728\u540c\u4e00\u5e73\u9762\u4e0a</li> <li>\u4e24\u7ebf\u5206\u5c45\uff1a\u53cd\u5c04\u5149\u7ebf\u548c\u5165\u5c04\u5149\u7ebf\u5206\u5c45\u5728\u6cd5\u7ebf\u4e24\u4fa7</li> <li>\u4e24\u89d2\u76f8\u7b49\uff1a\u53cd\u5c04\u89d2\u7b49\u4e8e\u5165\u5c04\u89d2</li> <li>\u5149\u5177\u6709\u53ef\u9006\u6027\uff1a\u5149\u7684\u53cd\u5c04\u73b0\u8c61\u4e2d\uff0c\u5149\u8def\u662f\u53ef\u9006\u7684</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/#_6","title":"\u53cd\u5c04\u5206\u7c7b","text":"<p>\u53cd\u5c04\u53c8\u5206\u4e3a\u4e09\u79cd\uff0c\u56fe\u5f62\u5b66\u4e2d\u4e3b\u8981\u8003\u8651\u955c\u9762\u53cd\u5c04\u4e0e\u6f2b\u53cd\u5c04\u3002</p> \u5206\u7c7b \u8bf4\u660e \u5bf9\u6bd4 \u955c\u9762\u53cd\u5c04\u53c8\u79f0\uff0c\u6b63\u53cd\u5c04 \u5448\u955c\u9762\u72b6\u53cd\u5c04\u7684\u6ce2\uff0c\u5165\u5c04\u3001\u53cd\u5c04\u5149\u7ebf\u4e0e\u8868\u9762\u5448\u4e00\u6837\u7684\u89d2\u5ea6 \u5728\u8868\u9762\u53cd\u5c04\u7684\u5149 \u6f2b\u53cd\u5c04\u53c8\u79f0\uff0c\u6717\u4f2f\u53cd\u5c04 \u5e73\u884c\u5149\u7ebf\u5c04\u5230\u51f9\u51f8\u4e0d\u5e73\u7684\u8868\u9762\u4e0a\uff0c\u88ab\u53cd\u5c04\u5230\u5404\u4e2a\u65b9\u5411\u4e0a \u5149\u7ecf\u5386\u900f\u5c04\u3001\u5438\u6536\u548c\u6563\u5c04\u51fa\u53bb\u7684\u5149\u7ebf \u65b9\u5411\u53cd\u5c04\u53c8\u79f0\uff0c\u975e\u6717\u4f2f\u53cd\u5c04 \u4ecb\u4e8e\u955c\u9762\u53cd\u5c04\u4e0e\u6f2b\u53cd\u5c04\u4e4b\u95f4\uff0c\u5176\u8868\u73b0\u4e3a\u5404\u9879\u90fd\u6709\u53cd\u5c04\uff0c\u4e14\u5f3a\u5ea6\u4e0d\u5747\u5300\uff0c\u6ca1\u6709\u89c4\u5f8b\u53ef\u5bfb <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/#_7","title":"\u5149\u7684\u6298\u5c04","text":"<p>\u5149\u4ece\u4e00\u79cd\u4ecb\u8d28\u659c\u5c04\u5165\u53e6\u4e00\u79cd\u4ecb\u8d28\u65f6\uff0c\u4f20\u64ad\u65b9\u5411\u53d1\u751f\u6539\u53d8</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/#_8","title":"\u9644\uff1a\u884d\u5c04","text":"<p>\u884d\u5c04 \uff08Diffraction\uff09\uff0c\u53c8\u79f0\u7ed5\u5c04\uff0c\u662f\u6307\u6ce2\u9047\u5230\u969c\u788d\u7269\u65f6\u504f\u79bb\u539f\u6765\u76f4\u7ebf\u4f20\u64ad\u7684\u7269\u7406\u73b0\u8c61\u3002</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/#_9","title":"\u5176\u4ed6\u5149\u7167\u73b0\u8c61","text":"<p>\u5149\u7167\u8fd8\u6709\u5176\u4ed6\u73b0\u8c61\uff0c\u4f46\u90fd\u53ef\u4ee5\u89e3\u91ca\u6210\u4e0a\u8ff0\u73b0\u8c61\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/#_10","title":"\u5149\u7684\u900f\u5c04","text":"<p>\u5f53\u5149\u7ebf\u7167\u5c04\u7269\u4f53\u8868\u9762\u65f6\uff0c\u4f1a\u53d1\u751f\u6563\u5c04\u548c\u5438\u6536\u7684\u73b0\u8c61</p> <ol> <li>\u3010\u5438\u6536\u3011\u4e00\u90e8\u5206\u5149\u88ab\u7269\u4f53\u8868\u9762\u5438\u6536</li> <li>\u3010\u6563\u5c04\u3011\u4e00\u90e8\u5206\u5149\u7ebf\u53cd\u5c04\u51fa\u53bb\uff08\u5305\u62ec\u6f2b\u53cd\u5c04\u4e0e\u955c\u9762\u53cd\u5c04\uff09\uff1b\u53e6\u4e00\u90e8\u5206\u5149\u7ebf\u6298\u5c04\u8fdb\u7269\u4f53\u5f53\u4e2d</li> </ol> <p>\u6298\u5c04\u8fdb\u7269\u4f53\u5185\u90e8\u7684\u5149\u7ebf\uff0c\u5728\u7269\u4f53\u5185\u90e8\u5f39\u6765\u5f39\u53bb</p> <ol> <li>\u5728\u5f39\u6765\u5f39\u53bb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6709\u90e8\u5206\u88ab\u7269\u4f53\u5438\u6536</li> <li>\u6709\u4e00\u90e8\u5206\u5149\u5728\u5185\u90e8\u5f39\u6765\u5f39\u53bb\uff0c\u53c8\u89e6\u78b0\u5230\u5149\u5b66\u8fb9\u754c\uff0c\u53c8\u53d1\u751f\u4e86\u6563\u5c04</li> </ol> <p>\u5165\u5c04\u5149\u7ecf\u8fc7\u6298\u5c04\u7a7f\u8fc7\u7269\u4f53\u540e\uff0c\u518d\u6b21\u6298\u5c04\u51fa\u7269\u4f53\u7684\u73b0\u8c61\uff0c\u5c31\u662f\u5149\u7684\u900f\u5c04\u3002</p> <p>\u88ab\u900f\u5c04\u7684\u7269\u4f53\u4e3a\u900f\u660e\u4f53\u6216\u534a\u900f\u660e\u4f53\uff0c\u5982\u73bb\u7483\u3001\u6ee4\u8272\u7247\u7b49\u7b49\u3002</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/#_11","title":"\u5149\u6e90\u7c7b\u578b","text":"<p>\u5149\u6e90\u6709\u4e09\u79cd\u4e0d\u540c\u7684\u7c7b\u578b\uff1a\u5e73\u884c\u5149\u6e90\u3001\u70b9\u5149\u6e90\u548c\u805a\u5149\u706f\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/#_12","title":"\u6750\u8d28","text":"<p>\u5728\u6e32\u67d3\u4e2d\uff0c\u901a\u8fc7\u6750\u8d28\u6765\u63cf\u8ff0\u6a21\u578b\u7684\u5916\u89c2\u3002\u6bcf\u4e2a\u6750\u8d28\u90fd\u548c\u4e00\u7cfb\u5217Shader\u4ee3\u7801\u3001\u7eb9\u7406\u548c\u5176\u4ed6\u5c5e\u6027\u8054\u7cfb\u5728\u4e00\u8d77\uff0c\u7528\u6765\u6a21\u62df\u5149\u4e0e\u6750\u8d28\u7684\u76f8\u4e92\u4f5c\u7528\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/#_13","title":"\u7740\u8272","text":"<p>\u7740\u8272\uff0c\u8ba1\u7b97\u67d0\u50cf\u7d20\u989c\u8272\u7684\u8fc7\u7a0b\u3002\u8ba1\u7b97\u9700\u8003\u8651\u5149\u7167\u3001\u7269\u4f53\u7684\u6750\u8d28\u7b49\u56e0\u7d20\u3002</p> \u5e38\u89c1\u7684\u7740\u8272\u5904\u7406\u65b9\u6cd5 \u7b80\u4ecb \u8bf4\u660e \u5e73\u6ed1\u7740\u8272(Flat shading) \u4e00\u4e2a\u4e09\u89d2\u9762\u4e00\u4e2a\u989c\u8272 \u82e5\u4e09\u89d2\u9762\u7684\u4ee3\u8868\u9876\u70b9\u662f\u767d\u8272\uff0c\u5219\u6574\u4e2a\u9762\u90fd\u662f\u767d\u8272 \u9ad8\u6d1b\u5fb7\u7740\u8272(Gouraud shading) \u6839\u636e\u4e09\u4e2a\u9876\u70b9\u989c\u8272\uff0c\u7ebf\u6027\u63d2\u503c\u51fa\u4e09\u89d2\u9762\u6bcf\u4e2a\u50cf\u7d20\u7684\u989c\u8272 \u9ad8\u6d1b\u5fb7\u7740\u8272\u53ef\u4ee5\u4e3a\u65e0\u5149\u6cfd\u8868\u9762\u4ea7\u751f\u5408\u7406\u7684\u7ed3\u679c\uff0c\u4f46\u5bf9\u4e8e\u5f3a\u9ad8\u5149\u53cd\u5c04\u7684\u8868\u9762\uff0c\u53ef\u80fd\u4f1a\u5931\u771f(artifacts) \u51af\u6c0f\u7740\u8272(Phong shading) \u7528\u7740\u8272\u65b9\u7a0b\u5355\u72ec\u6c42\u89e3\u6bcf\u4e2a\u50cf\u7d20\u7684\u989c\u8272 Phong Shading\u662f\u8003\u8651\u5982\u4f55\u7531\u4e09\u4e2a\u9876\u70b9\u751f\u6210\u9762\u7684\u989c\u8272\u3002\u800cPhong Lighting Model\u662f\u8003\u8651\u7269\u4f53\u88ab\u5149\u7167\u4ea7\u751f\u7684\u6548\u679c <p></p> <p>\u51af\u6c0f\u7740\u8272\u53ef\u4ee5\u8bf4\u662f\u4e09\u8005\u4e2d\u6700\u63a5\u8fd1\u771f\u5b9e\u7684\u7740\u8272\u6548\u679c\uff0c\u5f53\u7136\u5f00\u9500\u4e5f\u662f\u6700\u5927\u7684</p> <ul> <li>\u56e0\u4e3a\u9ad8\u6d1b\u5fb7\u7740\u8272\u662f\u6bcf\u4e2a\u9876\u70b9\uff08vertex\uff09\u8ba1\u7b97\u4e00\u6b21\u5149\u7167</li> <li>\u51af\u6c0f\u7740\u8272\u662f\u6bcf\u4e2a\u7247\u5143\uff08fragment\uff09\u6216\u8005\u8bf4\u6bcf\u50cf\u7d20\u8ba1\u7b97\u4e00\u6b21\u5149\u7167\uff0c\u70b9\u7684\u6cd5\u5411\u91cf\u662f\u901a\u8fc7\u9876\u70b9\u7684\u6cd5\u5411\u91cf\u63d2\u503c\u5f97\u5230\u7684</li> <li>\u6240\u4ee5\u8bf4\u4e0d\u4f1a\u51fa\u73b0\u9ad8\u6d1b\u5fb7\u7740\u8272\u4e5f\u8bb8\u4f1a\u9047\u5230\u7684\u5931\u771f\u95ee\u9898\u3002</li> </ul> <p>\u95ee\u9898\uff1a\u662f\u5426\u53ef\u4ee5\u8bf4Phong\u3001Blin-Phong\u3001PBR\u5149\u7167\u6a21\u578b\u7684\u7740\u8272\u5904\u7406\u65b9\u6cd5\u90fd\u662fPhong Shading</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/#_14","title":"\u53c2\u8003\u8d44\u6599","text":"<ol> <li>\u5149\u7684\u53cd\u5c04&amp;\u6298\u5c04&amp;\u900f\u5c04&amp;\u884d\u5c04 - \u7b80\u4e66 (jianshu.com)</li> <li>\u300aReal-Time Rendering 3rd\u300b \u63d0\u70bc\u603b\u7ed3</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/%E9%95%9C%E9%9D%A2%E5%8F%8D%E5%B0%84/","title":"\u955c\u9762\u53cd\u5c04","text":"<p>\u955c\u9762\u53cd\u5c04\u9879\u7684\u65b9\u5411\u5206\u5e03\u53d6\u51b3\u4e8e\u8868\u9762\u7c97\u7cd9\u5ea6\uff08roughness\uff0c\u5176\u53cd\u4e49\u8bcd\u662f smoothness\uff0c\u5149\u6ed1\u5ea6\uff09\u3002</p> <p>\u53cd\u5c04\u5149\u7ebf\u5bf9\u4e8e\u66f4\u5e73\u6ed1\u7684\u8868\u9762\u66f4\u52a0\u7d27\u5bc6\uff0c\u5e76\u4e14\u5bf9\u4e8e\u8f83\u7c97\u7cd9\u7684\u8868\u9762\u66f4\u52a0\u5206\u6563\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0b\u56fe\u4e2d\u7684\u8fd9\u79cd\u4f9d\u8d56\u5173\u7cfb\uff0c\u5b83\u663e\u793a\u4e86\u4e0d\u540c\u7c97\u7cd9\u5ea6\u7684\u4e24\u4e2a\u8868\u9762\u7684\u53cd\u5c04\u6548\u679c\u3002</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/","title":"PBR","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/#_1","title":"\u5f15\u8a00","text":"<p>PBR\u66f4\u50cf\u662f\u4e00\u79cd\u6982\u5ff5\uff0c\u800c\u4e0d\u662f\u4e00\u5957\u4e25\u683c\u7684\u89c4\u5219\u3002\u2014\u2014Joe Wilson</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/#_2","title":"\u7b80\u4ecb","text":"<p>PBR\u5c31\u662fPhysically-Based Rendering\u7684\u7f29\u5199\uff0c\u610f\u4e3a\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u3002</p> <ul> <li>\u5b83\u662f\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c\u65e8\u5728\u6a21\u62df\u73b0\u5b9e\u4e16\u754c\u4e2d\u5149\u548c\u7269\u4f53\u7684\u771f\u5b9e\u4ea4\u4e92\uff0c\u4ee5\u8fbe\u5230\u4e00\u79cd\u903c\u771f\u7684\u3001\u771f\u5b9e\u7684\u6e32\u67d3\u6548\u679c</li> <li>Blinn-Phong\u5b9e\u9645\u4e0a\u662f\u6839\u636e\u73b0\u5b9e\u4e16\u754c\u7684\u73b0\u8c61\u603b\u7ed3\u51fa\u6765\u7684\u7ecf\u9a8c\u6a21\u578b\uff0c\u8fd9\u4e0e\u73b0\u5b9e\u4e16\u754c\u7684\u7269\u7406\u539f\u7406\u5f88\u4e0d\u642d\u3002\u800cPBR\u4e0e\u7269\u7406\u539f\u7406\u975e\u5e38\u5951\u5408\uff0c\u5b83\u4f7f\u5f97\u827a\u672f\u5bb6\u521b\u5efa\u6750\u8d28\u66f4\u52a0\u5bb9\u6613\uff0c\u6e32\u67d3\u7ed3\u679c\u4e5f\u66f4\u50cf\u73b0\u5b9e\u4e16\u754c</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/#_3","title":"\u4e24\u79cd\u5de5\u4f5c\u6d41","text":"<p>\u3010PBR\u6750\u8d28\u6709\u4e24\u79cd\u5de5\u4f5c\u6d41\u7a0b\u3011</p> \u540d\u79f0 \u53c2\u6570\u503c\uff08\u6216\u8d34\u56fe\uff09 \u5171\u6709\u8d34\u56fe 1.\u57fa\u4e8e\u91d1\u5c5e\u7684\u5de5\u4f5c\u6d412.Metallic/Roughness3.\u91d1\u5c5e/\u7c97\u7cd9\u5ea6 \u57fa\u8272(BaseColor)\u91d1\u5c5e\u5ea6(Metallic)\u7c97\u7cd9\u5ea6(Roughness) \u6cd5\u7ebf(Normal)\u73af\u5883\u5149\u906e\u853d(Ambient Occlusion)\u9ad8\u5ea6(Height) 1.\u57fa\u4e8e\u955c\u9762\u53cd\u5c04\u7684\u5de5\u4f5c\u6d412.\u975e\u91d1\u5c5e\u5de5\u4f5c\u6d413.Specular/Glossiness4.\u955c\u9762\u53cd\u5c04/\u5149\u6cfd\u5ea6 \u6f2b\u53cd\u5c04(diffuse)\u955c\u9762\u53cd\u5c04(specular)\u5149\u6cfd\u5ea6(glossiness) \u540c\u4e0a <p>\u3010PS\u3011\u4e0d\u8981\u88ab\u540d\u5b57\u6240\u8ff7\u60d1\u3002\u57fa\u4e8e\u955c\u9762\u53cd\u5c04\u5de5\u4f5c\u6d41\u4e5f\u53ef\u4ee5\u505a\u91d1\u5c5e\uff0c\u53ea\u662f\u5b83\u505a\u51fa\u6765\u7684\u91d1\u5c5e\uff0c\u6709\u53ef\u80fd\u6ca1\u6709\u6bd4\u91d1\u5c5e\u5de5\u4f5c\u6d41\u6765\u7684\u771f\u5b9e</p> <p>\u3010\u4e24\u79cd\u5de5\u4f5c\u6d41\u7684\u5bf9\u6bd4\u56fe\u3011 </p> \u53c2\u6570 \u975e\u91d1\u5c5e\u5de5\u4f5c\u6d41 \u91d1\u5c5e\u5de5\u4f5c\u6d41 Diffuse(Albedo)\u6f2b\u53cd\u5c04(\u53cd\u7167\u7387) 1. \u5f53\u91d1\u5c5e\u5ea6=0,\uff0cAlbedo\u5373\u4ee3\u8868\u6f2b\u53cd\u5c042. \u5f53\u91d1\u5c5e\u5ea6=1\uff0cAlbedo\u5373\u4ee3\u8868\u91d1\u5c5e\u7684\u53cd\u5c04\u7387\u503c\u56e0\u6b64\u8fd8\u9700\u8981\u52a0\u4e00\u4e2a\u91d1\u5c5e\u5ea6\u503c\u7684\u8499\u7248 \u65e0\uff08\u91d1\u5c5e\u6ca1\u6709\u6f2b\u53cd\u5c04\uff0c\u56e0\u6b64\u628a\u8fd9\u9879\u6539\u6210\u4e86Base Color\uff09 Base Color\u57fa\u7840\u8272 \u65e0 \u5305\u542b\u4e86\u4e24\u79cd\u4fe1\u606f\uff1a1. \u91d1\u5c5e\u7684\u53cd\u5c04\u7387\u503c2. \u975e\u91d1\u5c5e\u7684\u989c\u8272\u4fe1\u606f\uff08\u5728\u6b64\u6848\u4f8b\u4e2d\uff0c\u975e\u91d1\u5c5e\u662f\u94c1\u9508\uff09 Glossiness\u548cRoughness(\u4e24\u8005\u4e3a\u4e00\u4f53\u4e24\u9762) Glossiness\u5149\u6cfd\u5ea6\u767d\u8272\u4ee3\u8868\u5149\u6ed1\u9ed1\u8272\u4ee3\u8868\u7c97\u7cd9 Roughness\u7c97\u7cd9\u5ea6\u767d\u8272\u4ee3\u8868\u7c97\u7cd9\u9ed1\u8272\u4ee3\u8868\u5149\u6ed1 Specular\u955c\u9762\u53cd\u5c04\u7387 \u9664\u4e86\u6f2b\u53cd\u5c04\uff0c\u8fd8\u9700\u8868\u8fbe\u955c\u9762\u53cd\u5c04\u7387 \u65e0\uff08\u91d1\u5c5e\u6ca1\u6709\u6f2b\u53cd\u5c04\uff0c\u5168\u662f\u955c\u9762\u53cd\u5c04\uff0c\u56e0\u6b64\u4e0d\u9700\u8981Specular\uff0c\u6539\u6210\u4e86Metallic\uff09 Metallic\u91d1\u5c5e \u65e0 \u767d\u8272\u4ee3\u8868\u91d1\u5c5e\u9ed1\u8272\u4ee3\u8868\u9ed1\u91d1\u5c5e"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/#_4","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>The PBR Guide - Part 2 (adobe.com)</li> <li>PBR\u6750\u8d28\u7528\u6cd5\u53ca\u8bb2\u89e3</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99PBR%E6%9D%90%E8%B4%A8/","title":"\u5982\u4f55\u7f16\u5199PBR\u6750\u8d28","text":"<p>PBR\u6e32\u67d3\u7ba1\u7ebf\u6240\u9700\u7684\u6bcf\u4e00\u4e2a\u8868\u9762\u53c2\u6570\u90fd\u53ef\u4ee5\u7528\u4e00\u4e2a\u7eb9\u7406\u6765\u5b9a\u4e49\u6216\u8005\u5efa\u6a21\u3002</p> <p>\u4f7f\u7528\u7eb9\u7406\u53ef\u4ee5\u8ba9\u6211\u4eec\u9010\u7247\u6bb5\uff08fragment\uff09\u7684\u6765\u63a7\u5236\u6bcf\u4e2a\u8868\u9762\u4e0a\u7279\u5b9a\u7684\u70b9\uff0c\u5bf9\u4e8e\u5149\u7ebf\u662f\u5982\u4f55\u54cd\u5e94\u7684\uff08\u4e0d\u8bba\u90a3\u4e2a\u70b9\u662f\u4f55\u79cd\u6750\u8d28\uff0c\u662f\u91d1\u5c5e\uff0c\u662f\u7c97\u7cd9\uff0c\u8fd8\u662f\u5e73\u6ed1\uff1b\u4e5f\u4e0d\u8bba\u8868\u9762\u5bf9\u4e8e\u4e0d\u540c\u6ce2\u957f\u7684\u5149\u4f1a\u6709\u5982\u4f55\u53cd\u5e94\uff09</p> <p>\u4f8b\u5982\u4e0b\u56fe\uff0c\u662f\u4f60\u53ef\u80fd\u5728PBR\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u7ecf\u5e38\u4f1a\u9047\u5230\u7684\u7eb9\u7406\u5217\u8868</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99PBR%E6%9D%90%E8%B4%A8/#_1","title":"\u4e94\u4e2a\u53c2\u6570","text":"<p>\u4e00\u5171\u67095\u4e2a\u53c2\u6570\u3002</p> <p>\u7f8e\u672f\u5e08\u4eec\u53ef\u4ee5\u5728\u7eb9\u7d20\u7ea7\u522b\u8bbe\u7f6e\u6216\u8c03\u6574\u8fd9\u4e9b\u57fa\u4e8e\u7269\u7406\u7684\u8f93\u5165\u503c\uff0c\u8fd8\u53ef\u4ee5\u4ee5\u73b0\u5b9e\u4e16\u754c\u6750\u6599\u7684\u8868\u9762\u7269\u7406\u6027\u8d28\u6765\u5efa\u7acb\u4ed6\u4eec\u7684\u6750\u8d28\u6570\u636e\u3002</p> <p>\u8fd9\u662fPBR\u6e32\u67d3\u7ba1\u7ebf\u6700\u5927\u7684\u4f18\u52bf\u4e4b\u4e00\uff0c\u56e0\u4e3a\u4e0d\u8bba\u73af\u5883\u6216\u8005\u5149\u7167\u7684\u8bbe\u7f6e\u5982\u4f55\u6539\u53d8\u8fd9\u4e9b\u8868\u9762\u7684\u6027\u8d28\u662f\u4e0d\u4f1a\u6539\u53d8\u7684\uff0c\u8fd9\u4f7f\u5f97\u7f8e\u672f\u5e08\u4eec\u53ef\u4ee5\u66f4\u4fbf\u6377\u5730\u83b7\u53d6\u7269\u7406\u53ef\u4fe1\u7684\u7ed3\u679c\u3002\u5728PBR\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u7f16\u5199\u7684\u8868\u9762\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u5728\u4e0d\u540c\u7684PBR\u6e32\u67d3\u5f15\u64ce\u95f4\u5171\u4eab\u4f7f\u7528\uff0c\u4e0d\u8bba\u5904\u4e8e\u4f55\u79cd\u73af\u5883\u4e2d\u5b83\u4eec\u770b\u4e0a\u53bb\u90fd\u4f1a\u662f\u6b63\u786e\u7684\uff0c\u56e0\u6b64\u770b\u4e0a\u53bb\u4e5f\u4f1a\u66f4\u81ea\u7136\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99PBR%E6%9D%90%E8%B4%A8/#_2","title":"\u53cd\u7167\u7387","text":"<p>\u53cd\u7167\u7387\uff1a\u53cd\u7167\u7387(Albedo)\u7eb9\u7406\u4e3a\u6bcf\u4e00\u4e2a\u91d1\u5c5e\u7684\u7eb9\u7d20(Texel)\uff08\u7eb9\u7406\u50cf\u7d20\uff09\u6307\u5b9a\u8868\u9762\u989c\u8272\u6216\u8005\u57fa\u7840\u53cd\u5c04\u7387\u3002\u8fd9\u548c\u6211\u4eec\u4e4b\u524d\u4f7f\u7528\u8fc7\u7684\u6f2b\u53cd\u5c04\u7eb9\u7406\u76f8\u5f53\u7c7b\u4f3c\uff0c\u4e0d\u540c\u7684\u662f\u6240\u6709\u5149\u7167\u4fe1\u606f\u90fd\u662f\u7531\u4e00\u4e2a\u7eb9\u7406\u4e2d\u63d0\u53d6\u7684\u3002\u6f2b\u53cd\u5c04\u7eb9\u7406\u7684\u56fe\u50cf\u5f53\u4e2d\u5e38\u5e38\u5305\u542b\u4e00\u4e9b\u7ec6\u5c0f\u7684\u9634\u5f71\u6216\u8005\u6df1\u8272\u7684\u88c2\u7eb9\uff0c\u800c\u53cd\u7167\u7387\u7eb9\u7406\u4e2d\u662f\u4e0d\u4f1a\u6709\u8fd9\u4e9b\u4e1c\u897f\u7684\u3002\u5b83\u5e94\u8be5\u53ea\u5305\u542b\u8868\u9762\u7684\u989c\u8272\uff08\u6216\u8005\u6298\u5c04\u5438\u6536\u7cfb\u6570\uff09\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99PBR%E6%9D%90%E8%B4%A8/#_3","title":"\u6cd5\u7ebf","text":"<p>\u6cd5\u7ebf\uff1a\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u548c\u6211\u4eec\u4e4b\u524d\u5728\u6cd5\u7ebf\u8d34\u56fe\u6559\u7a0b\u4e2d\u6240\u4f7f\u7528\u7684\u8d34\u56fe\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002\u6cd5\u7ebf\u8d34\u56fe\u4f7f\u6211\u4eec\u53ef\u4ee5\u9010\u7247\u6bb5\u7684\u6307\u5b9a\u72ec\u7279\u7684\u6cd5\u7ebf\uff0c\u6765\u4e3a\u8868\u9762\u5236\u9020\u51fa\u8d77\u4f0f\u4e0d\u5e73\u7684\u5047\u8c61\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99PBR%E6%9D%90%E8%B4%A8/#_4","title":"\u91d1\u5c5e\u5ea6","text":"<p>\u91d1\u5c5e\u5ea6\uff1a\u91d1\u5c5e(Metallic)\u8d34\u56fe\u9010\u4e2a\u7eb9\u7d20\u7684\u6307\u5b9a\u8be5\u7eb9\u7d20\u662f\u4e0d\u662f\u91d1\u5c5e\u8d28\u5730\u7684\u3002\u6839\u636ePBR\u5f15\u64ce\u8bbe\u7f6e\u7684\u4e0d\u540c\uff0c\u7f8e\u672f\u5e08\u4eec\u65e2\u53ef\u4ee5\u5c06\u91d1\u5c5e\u5ea6\u7f16\u5199\u4e3a\u7070\u5ea6\u503c\u53c8\u53ef\u4ee5\u7f16\u5199\u4e3a1\u62160\u8fd9\u6837\u7684\u4e8c\u5143\u503c\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99PBR%E6%9D%90%E8%B4%A8/#_5","title":"\u7c97\u7cd9\u5ea6","text":"<p>\u7c97\u7cd9\u5ea6\uff1a\u7c97\u7cd9\u5ea6(Roughness)\u8d34\u56fe\u53ef\u4ee5\u4ee5\u7eb9\u7d20\u4e3a\u5355\u4f4d\u6307\u5b9a\u67d0\u4e2a\u8868\u9762\u6709\u591a\u7c97\u7cd9\u3002\u91c7\u6837\u5f97\u6765\u7684\u7c97\u7cd9\u5ea6\u6570\u503c\u4f1a\u5f71\u54cd\u4e00\u4e2a\u8868\u9762\u7684\u5fae\u5e73\u9762\u7edf\u8ba1\u5b66\u4e0a\u7684\u53d6\u5411\u5ea6\u3002\u4e00\u4e2a\u6bd4\u8f83\u7c97\u7cd9\u7684\u8868\u9762\u4f1a\u5f97\u5230\u66f4\u5bbd\u9614\u66f4\u6a21\u7cca\u7684\u955c\u9762\u53cd\u5c04\uff08\u9ad8\u5149\uff09\uff0c\u800c\u4e00\u4e2a\u6bd4\u8f83\u5149\u6ed1\u7684\u8868\u9762\u5219\u4f1a\u5f97\u5230\u96c6\u4e2d\u800c\u6e05\u6670\u7684\u955c\u9762\u53cd\u5c04\u3002\u67d0\u4e9bPBR\u5f15\u64ce\u9884\u8bbe\u91c7\u7528\u7684\u662f\u5bf9\u67d0\u4e9b\u7f8e\u672f\u5e08\u6765\u8bf4\u66f4\u52a0\u76f4\u89c2\u7684\u5149\u6ed1\u5ea6(Smoothness)\u8d34\u56fe\u800c\u975e\u7c97\u7cd9\u5ea6\u8d34\u56fe\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u6570\u503c\u5728\u91c7\u6837\u4e4b\u65f6\u5c31\u9a6c\u4e0a\u7528\uff081.0 \u2013 \u5149\u6ed1\u5ea6\uff09\u8f6c\u6362\u6210\u4e86\u7c97\u7cd9\u5ea6\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99PBR%E6%9D%90%E8%B4%A8/#_6","title":"\u73af\u5883\u5149\u906e\u853d","text":"<p>AO\uff1a\u73af\u5883\u5149\u906e\u853d(Ambient Occlusion)\u8d34\u56fe\u6216\u8005\u8bf4AO\u8d34\u56fe\u4e3a\u8868\u9762\u548c\u5468\u56f4\u6f5c\u5728\u7684\u51e0\u4f55\u56fe\u5f62\u6307\u5b9a\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u9634\u5f71\u56e0\u5b50\u3002\u6bd4\u5982\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u7816\u5757\u8868\u9762\uff0c\u53cd\u7167\u7387\u7eb9\u7406\u4e0a\u7684\u7816\u5757\u88c2\u7f1d\u90e8\u5206\u5e94\u8be5\u6ca1\u6709\u4efb\u4f55\u9634\u5f71\u4fe1\u606f\u3002\u7136\u800cAO\u8d34\u56fe\u5219\u4f1a\u628a\u90a3\u4e9b\u5149\u7ebf\u8f83\u96be\u9003\u9038\u51fa\u6765\u7684\u6697\u8272\u8fb9\u7f18\u6307\u5b9a\u51fa\u6765\u3002\u5728\u5149\u7167\u7684\u7ed3\u5c3e\u9636\u6bb5\u5f15\u5165\u73af\u5883\u906e\u853d\u53ef\u4ee5\u660e\u663e\u7684\u63d0\u5347\u4f60\u573a\u666f\u7684\u89c6\u89c9\u6548\u679c\u3002\u7f51\u683c/\u8868\u9762\u7684\u73af\u5883\u906e\u853d\u8d34\u56fe\u8981\u4e48\u901a\u8fc7\u624b\u52a8\u751f\u6210\uff0c\u8981\u4e48\u75313D\u5efa\u6a21\u8f6f\u4ef6\u81ea\u52a8\u751f\u6210\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/0-PBR%E5%8E%9F%E7%90%86%E7%AE%80%E4%BB%8B/","title":"0 PBR\u539f\u7406\u7b80\u4ecb","text":"<p>\u7b14\u8005\u6700\u8fd1\u5728\u6363\u9f13PBR\uff0c\u4f46\u7f51\u4e0a\u7684\u8d44\u6599\u90fd\u504f\u7406\u8bba\uff0c\u975e\u5e38\u4e25\u8c28\uff0c\u516c\u5f0f\u4e5f\u5f88\u591a\u3001\u5f88\u957f\u3002 \u56e0\u6b64\uff0c\u7b14\u8005\u60f3\u6c89\u6dc0\u51fa\u4e00\u4e2a\u300aHelloPBR\u300b\u7cfb\u5217\uff0c\u6b64\u7cfb\u5217\u4f1a\u5ffd\u7565\u5927\u91cf\u7ec6\u8282\uff0c\u589e\u52a0\u79d1\u666e\u6027\u3002 \u7cfb\u5217\u5185\u5bb9\uff1a\u81ea\u9876\u5411\u4e0b\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bPBR\u7684\u539f\u7406\uff0c\u5e76\u57fa\u4e8eOpenGL\u5b9e\u73b0\u4e00\u4e2aHello\u7248\u672c\u3002\u975e\u6280\u672f\u4eba\u5458\u53ef\u5ffd\u7565\u4ee3\u7801\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/0-PBR%E5%8E%9F%E7%90%86%E7%AE%80%E4%BB%8B/#_1","title":"\u5f15\u8a00","text":"<p>\u5728\u56fe\u5f62\u5b66\u6e32\u67d3\u4e2d\uff0c\u6709\u4e00\u4e2a\u95ee\u9898\u5f88\u68d8\u624b\uff1a\u5149\u7ebf\u6253\u5728\u4e09\u7ef4\u6a21\u578b\u4e0a\u4e4b\u540e\uff0c\u5728\u5c4f\u5e55\u4e0a\u8981\u663e\u793a\u4ec0\u4e48\u989c\u8272\uff1f\u5982\u4f55\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u989c\u8272\u5462\uff1f</p> <ul> <li>\u7b80\u5355\u6765\u8bf4\uff0cPBR\u5c31\u662f\u4e00\u79cd\u8ba1\u7b97\u516c\u5f0f\uff0c\u5b83\u6240\u8ba1\u7b97\u51fa\u6765\u7684\u989c\u8272\uff0c\u548c\u771f\u5b9e\u4e16\u754c\u975e\u5e38\u50cf</li> <li>\u8fd9\u6b63\u662f\u56e0\u4e3aPBR\u516c\u5f0f\u662f\u57fa\u4e8e\u7269\u7406\u539f\u7406\u6240\u603b\u7ed3\u51fa\u7684\uff0c\u56e0\u6b64\u5f97\u540d\u201c\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u201d\uff0c\u82f1\u6587\u540d\u201cPhysically-Based Rendering\u201d</li> <li>\u5728\u56fe\u5f62\u5b66\u4e2d\uff0c\u201c\u8ba1\u7b97\u67d0\u70b9\u7684\u989c\u8272\u201d\u7684\u8fd9\u4e2a\u52a8\u4f5c\uff0c\u53eb\u201c\u7740\u8272\u201d</li> </ul> <p>\u672c\u6587\u7ae0\u5c06\u81ea\u9876\u5411\u4e0b\u7684\u4ecb\u7ecdPBR\u516c\u5f0f\uff0c\u5728\u8fc7\u7a0b\u4e2d\u7b80\u8981\u4ecb\u7ecd\u6d89\u53ca\u7684\u76f8\u5173\u5185\u5bb9\u3002 </p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/0-PBR%E5%8E%9F%E7%90%86%E7%AE%80%E4%BB%8B/#_2","title":"\u5982\u4f55\u8ba1\u7b97\u7269\u4f53\u8868\u9762\u4e0a\u67d0\u4e2a\u70b9\u7684\u989c\u8272","text":"<p>\u9488\u5bf9\u7269\u4f53\u8868\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9(\u8bb0\u4e3a\\(p\\))\uff0c\u573a\u666f\u4e2d\u5404\u79cd\u5149\u7ebf\u6253\u8fc7\u6765\uff0c\u8fd9\u4e00\u70b9\u4f1a\u663e\u793a\u4ec0\u4e48\u989c\u8272(\u8bb0\u4e3a\\(color\\))\u5462\uff1f</p> <p>color\u7531\u4e09\u4e2a\u90e8\u5206\u6240\u8d21\u732e   </p> \\[ color = colorIBL + colorEmissive + colorInLights \\] <ol> <li>\\(colorIBL\\)\u8868\u793a\u73af\u5883\u5149\u6240\u8d21\u732e\u7684\u989c\u8272</li> <li>\\(colorEmissive\\)\u7269\u4f53\u81ea\u5df1\u53d1\u51fa\u7684\u5149\uff0c\u7531\u81ea\u53d1\u5149\u6240\u8d21\u732e\u7684\u989c\u8272</li> <li>\\(colorInLights\\)\u5728\u573a\u666f\u4e2d\u5404\u4e2a\u5149\u7ebf\u4f5c\u7528\u4e0b\uff0c\\(p\\)\u70b9\u663e\u793a\u51fa\u6765\u7684\u989c\u8272</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/0-PBR%E5%8E%9F%E7%90%86%E7%AE%80%E4%BB%8B/#_3","title":"\u73af\u5883\u5149\u989c\u8272","text":"<p>\u5982\u4e0b\u56fe\uff0c\u5149\u6e90\u5728\u53f3\u4e0a\u89d2\uff0c\u800c\u8336\u676f\u7684\u80cc\u5149\u4f4d\u7f6e\uff08Ambient lighting\u7bad\u5934\u6240\u6307\u4f4d\u7f6e\uff09\u5c45\u7136\u8fd8\u6709\u989c\u8272</p> <ul> <li>\u6839\u636e\u7269\u7406\u539f\u7406\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u82e5\u4e00\u4e2a\u70b9\u63a5\u6536\u4e0d\u5230\u5149\uff0c\u90a3\u5e94\u8be5\u662f\u9ed1\u8272\u7684</li> <li>\u80cc\u5149\u90e8\u5206\u4e0d\u662f\u9ed1\u8272\uff0c\u90a3\u6b63\u662f\u56e0\u4e3a\u6211\u4eec\u80fd\u63a5\u6536\u5230\u5149\uff0c\u4f46\u5b83\u4e0d\u662f\u76f4\u63a5\u5149\u6e90\uff0c\u662f\u4e00\u79cd\u95f4\u63a5\u5149\u7167</li> </ul> <p></p> <p>\u73af\u5883\u5149\uff1a\u5149\u6e90\u53d1\u51fa\u7684\u5149\uff0c\u5728\u73af\u5883\u4e2d\u5f39\u6765\u5f39\u53bb\uff0c\u6700\u7ec8\u5230\u8fbe\u4e86\u8fd9\u4e2a\u80cc\u5149\u70b9 \u73af\u5883\u5149\u989c\u8272\uff1a\u5728\u73af\u5883\u5149\u4f5c\u7528\u4e0b\uff0c\u7269\u4f53\u8868\u9762\u4ea7\u751f\u7684\u989c\u8272 \u73af\u5883\u5149\u8d34\u56fe</p> <ul> <li>\u56e0\u4e3a\u73af\u5883\u5149\u5f39\u6765\u5f39\u53bb\u7684\uff0c\u8ba1\u7b97\u91cf\u5f88\u5927\uff0c\u4e5f\u5f88\u96be\u6a21\u62df\u3002\u4e00\u822c\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u73af\u5883\u8d34\u56fe\u6765\u6a21\u62df\u73af\u5883\u5149</li> <li>\u73af\u5883\u5149\u8d34\u56fe\u53ef\u4ee5\u8ba9\u6a21\u578b\u53cd\u5c04\u51fa\u5468\u56f4\u73af\u5883\u7684\u6837\u5b50\uff0c\u5982\u4e0b\u56fe\u53f3\u4fa7\uff0c\u800c\u5de6\u4fa7\u7684\u56fe\u50cf\u5c31\u662f\u73af\u5883\u5149\u8d34\u56fe</li> </ul> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/0-PBR%E5%8E%9F%E7%90%86%E7%AE%80%E4%BB%8B/#_4","title":"\u81ea\u53d1\u5149\u7684\u989c\u8272","text":"<p>\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u6709\u4e00\u4e9b\u7269\u4f53\u662f\u4f1a\u81ea\u5df1\u53d1\u5149\u7684\uff0c\u6bd4\u5982\u8424\u706b\u866b\u3001\u8def\u706f\u3002\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\uff0c\u81ea\u53d1\u5149\u5e38\u7528\u4e00\u4e2aRGB\u6765\u8868\u793a\u3002</p> <p>\u5982\u4e0b\u56fe\uff0c\u7ea2\u3001\u7eff\u3001\u84dd\u4e09\u4e2a\u7403\u90fd\u4f7f\u7528\u4e86\u81ea\u53d1\u5149\u6750\u8d28\u3002\u5373\u4f7f\u5728\u9ed1\u6697\u7684\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u7684\u989c\u8272\u3002</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/0-PBR%E5%8E%9F%E7%90%86%E7%AE%80%E4%BB%8B/#_5","title":"\u5404\u4e2a\u5149\u7ebf\u6240\u4f5c\u7528\u7684\u989c\u8272","text":"<p>\u573a\u666f\u4e2d\u53ef\u80fd\u4f1a\u6709N\u4e2a\u5149\u6e90\uff0c<code>colorInLights</code>\u662f\u8fd9\u4e9b\u5149\u6e90\u5171\u540c\u4f5c\u7528\u4e4b\u540e\u7684\u989c\u8272\u3002  </p> <p>\\(colorInLights = colorInLight_1 + colorInLigh_2 + ... + colorLight_n\\)</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/0-PBR%E5%8E%9F%E7%90%86%E7%AE%80%E4%BB%8B/#_6","title":"\u5149\u6e90\u7684\u4e09\u79cd\u7c7b\u578b","text":"\u7c7b\u578b \u8bf4\u660e \u70b9\u5149\u6e90 \u5149\u6e90\u7684\u80fd\u91cf\u4f1a\u968f\u7740\u8ddd\u79bb\u7684\u589e\u5927\u800c\u8870\u51cf \u5b9a\u5411\u706f \u5149\u7ebf\u62e5\u6709\u6052\u5b9a\u7684\u80fd\u91cf\uff0c\u5e76\u4e14\u4e0d\u4f1a\u968f\u7740\u8ddd\u79bb\u7684\u589e\u5927\u800c\u8870\u51cf \u805a\u5149\u706f \u5149\u6e90\u7684\u80fd\u91cf\u96c6\u4e2d\u6253\u5728\u4e00\u4e2a\u5730\u65b9"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/0-PBR%E5%8E%9F%E7%90%86%E7%AE%80%E4%BB%8B/#pbrdf","title":"\u8ba1\u7b97\u4e00\u675f\u5149\u7ebf\u5728\u70b9p\u5904\u6240\u8d21\u732e\u7684\u989c\u8272\uff08BRDF\uff09","text":"<p>\u8ba1\u7b97\u67d0\u4e2a\u5149\u6e90\u5bf9\u7269\u4f53\u8868\u9762\u67d0\u4e2a\u70b9\u6240\u8d21\u732e\u7684\u989c\u8272\uff0c\u90fd\u662f\u7528 BRDF\u516c\u5f0f \u8ba1\u7b97\u5f97\u51fa\u7684\u3002\u53ea\u4e0d\u8fc7\uff0c\u4e0d\u540c\u7c7b\u578b\u7684\u5149\u6e90\u5230\u8fbe\u7269\u4f53\u8868\u9762\u7684\u80fd\u91cf\u4e0d\u540c\u800c\u5df2\u3002</p> <ul> <li>\u56e0\u4e3a\uff0c\u5c3d\u7ba1\u5149\u6e90\u7684\u5f3a\u5ea6\u76f8\u540c\uff0c\u4e0d\u540c\u5149\u6e90\u7c7b\u578b\uff0c\u8fbe\u5230\u540c\u4e00\u4e2a\u7269\u4f53\u8868\u9762\u7684\u80fd\u91cf\u4e5f\u4f1a\u6709\u6240\u4e0d\u540c</li> </ul> <p>\u4e0b\u4e00\u7bc7\u6587\u7ae0\u5c06\u5c55\u5f00\u4ecb\u7ecdBRDF\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/0-PBR%E5%8E%9F%E7%90%86%E7%AE%80%E4%BB%8B/#_7","title":"\u5149\u7684\u5f3a\u5ea6","text":"<p>\u4e70\u706f\u6ce1\u65f6\uff0c\u6211\u4eec\u90fd\u4f1a\u7528\u201c\u74e6\u201d\u6765\u5b9a\u91cf\u63cf\u8ff0\u706f\u7684\u4eae\u5ea6\uff0c\u6bd4\u598235W\u7684\u767d\u70bd\u706f\u3002\u90a3\u4e48\uff0c\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6211\u4eec\u5982\u4f55\u5b9a\u91cf\u63cf\u8ff0\u5149\u6e90\u7684\u4eae\u5ea6\uff08\u5f3a\u5ea6\uff09\u5462\uff1f</p> <ul> <li>\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u4e00\u822c\u4e0d\u7528\u201c\u74e6\u201d\u6765\u8861\u91cf\uff0c\u6211\u4eec\u8003\u8651\u7684\u91cd\u70b9\u662f\u5982\u4f55\u65b9\u4fbf\u8ba1\u7b97\u3002</li> </ul> <p>\u6839\u636e\u8f90\u5c04\u5ea6\u91cf\u5b66\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e09\u539f\u8272\uff08RGB\uff09\u6765\u5b9a\u91cf\u63cf\u8ff0\u5149\u6e90\u7684\u5f3a\u5ea6\uff08\u5728\u8f90\u5c04\u5ea6\u91cf\u5b66\u4e2d\uff0c\u79f0\u4e3a\u201c\u8f90\u5c04\u901a\u91cf\u201d\uff09\u3002</p> <ul> <li>R\u5206\u91cf\u63cf\u8ff0\u7ea2\u5149\u7684\u5f3a\u5ea6</li> <li>G\u5206\u91cf\u63cf\u8ff0\u7eff\u5149\u7684\u5f3a\u5ea6</li> <li>B\u5206\u91cf\u63cf\u8ff0\u84dd\u5149\u7684\u5f3a\u5ea6</li> </ul> <p>\u8fd9\u4e5f\u521a\u597d\u5951\u5408\u8ba1\u7b97\u673a\u5bf9\u989c\u8272\u7684\u63cf\u8ff0\uff0c\u5f88\u65b9\u4fbf\u5728\u516c\u5f0f\u4e2d\u8ba1\u7b97\u3002 \u4f8b\u5982\uff0c\u8ba1\u7b97\u70b9\u5149\u6e90\u5728\\(p\\)\u7684\u80fd\u91cf</p> <pre><code>//\u706f\u5149\u989c\u8272\uff08\u5b9e\u9645\u4e0a\u4e0d\u662f\u989c\u8272\uff0c\u800c\u662f\u5149\u7684\u5f3a\u5ea6\uff0c\u7528RGB\u4e09\u8272\u7f16\u7801\u6765\u5b9a\u91cf\u8868\u793a\uff09\nvec3\u00a0\u00a0lightColor\u00a0\u00a0=\u00a0vec3(23.47,\u00a021.31,\u00a020.79);\n//\u70b9p\u4e0e\u5149\u6e90\u7684\u8ddd\u79bb\nfloat distance = length(lightPositions - WorldPos);\n//\u5149\u6e90\u8870\u51cf\u56e0\u5b50\uff08\u8ddd\u79bb\u8d8a\u8fdc\uff0c\u8870\u51cf\u8d8a\u4e25\u91cd\uff09\nfloat attenuation = 1.0 / (distance * distance);\n//\u8f90\u5c04\u7387\uff0c\u5149\u6e90\u6253\u5728\u70b9p\uff08\u7247\u5143\uff09\u4e0a\u7684\u603b\u80fd\u91cf\nvec3 radiance = lightColor * attenuation;   </code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/0-PBR%E5%8E%9F%E7%90%86%E7%AE%80%E4%BB%8B/#_8","title":"\u4f2a\u4ee3\u7801","text":"<pre><code>vec4 evaluateLights(const PbrMaterial material) {\n//\u63cf\u8ff0\u70b9p\uff08\u7269\u4f53\u8868\u9762\u7684\u4e00\u4e2a\u70b9\uff09\u7684\u4e00\u4e9b\u4fe1\u606f\u91cf\nPixelParams pixel = getPixelParams(material); vec3 colorInLights = vec3(0.0);\n//\u73af\u5883\u5149\uff08\u73af\u5883\u5149\u5b9e\u9645\u4e0a\u662f\u5728\u8fd9\u91cc\u8ba1\u7b97\u7684\uff0c\u56e0\u4e3a\u8981\u53c2\u52a0\u540e\u9762\u7684blend\uff09\ncolorInLights += evaluateIBL(material); //\u904d\u5386\u6240\u6709\u5149\u6e90\uff08\u9664\u4e86\u73af\u5883\u5149\uff09\nfor(Light light : material.Lights)\n{\n//\u8ba1\u7b97\u5149\u7ebf\u5728\u70b9p\u5904\u8d21\u732e\u7684\u989c\u8272\ncolorInLights += evaluateBRDF(pixel, light, material);\n}\n#if defined(BLEND_MODE_FADE) &amp;&amp; !defined(SHADING_MODEL_UNLIT)\ncolorInLights *= material.baseColor.a;\n#endif\nfloat alpha = computeDiffuseAlpha(material.baseColor.a);\nreturn vec4(colorInLights, alpha);\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/0-PBR%E5%8E%9F%E7%90%86%E7%AE%80%E4%BB%8B/#pbr","title":"PBR\u6750\u8d28","text":"<p>PBR\u516c\u5f0f\u91cc\u6709\u4e00\u5806\u7684\u8f93\u5165\u53c2\u6570\uff0c\u4f8b\u5982\u57fa\u7840\u8272\u3001\u91d1\u5c5e\u5ea6\u3001\u7c97\u7cd9\u5ea6\u7b49\u7b49\u3002\u6709\u4e86\u8fd9\u4e9b\u8f93\u5165\u53c2\u6570\uff0c\u6e32\u67d3\u5668\u624d\u80fd\u6839\u636ePBR\u516c\u5f0f\uff0c\u5f97\u51fa\u903c\u771f\u7684\u989c\u8272\u3002 \u8fd9\u4e9b\u53c2\u6570\u5176\u5b9e\u5b58\u50a8\u5728\u6750\u8d28\u5f53\u4e2d\uff0c\u56e0\u6b64\u5305\u542b\u4e86PBR\u8f93\u5165\u53c2\u6570\u7684\u6750\u8d28\u79f0\u4e3a\u201cPBR\u6750\u8d28\u201d\u3002\u201cPBR\u6750\u8d28\u201d\u4e00\u822c\u662f\u7531\u827a\u672f\u5bb6\u6839\u636e\u6750\u6599\u7684\u611f\u5149\u60c5\u51b5\uff0c\u8c03\u5236\u4e0e\u5efa\u6a21\u6240\u5f97\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/1-BRDF/","title":"1 BRDF","text":"<p>\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u5f53\u4e2d\uff0c\u6211\u4eec\u8c08\u5230\u4e86BRDF\u516c\u5f0f\uff0c\u5b83\u662f\u7528\u6765\u8ba1\u7b97\u4e00\u4e2a\u5149\u6e90\u5bf9\u7269\u4f53\u8868\u9762\u7684\u5f71\u54cd\u7ed3\u679c\uff0c\u5728\u56fe\u5f62\u5b66\u4e2d\uff0c\u8fd9\u4e2a\u7ed3\u679c\u6211\u4eec\u901a\u5e38\u7528RGBA\u989c\u8272\u6765\u8868\u793a\u3002\u8fd9\u4e00\u8282\uff0c\u5c06\u5c55\u5f00\u8c08\u8c08BRDF\u3002 </p> <p>BRDF\u5e2e\u52a9\u6211\u4eec\u8ba1\u7b97\u51fa\uff1a\u4e00\u6761\u5149\u7ebf \u6253\u5230\u7269\u4f53\u8868\u9762\u4e00\u70b9\u4e0a\uff0c\u5e94\u8be5\u6210\u4ec0\u4e48\u989c\u8272\u3002</p> <ul> <li>BRDF\uff0cBidirectional Reflective Distribution Function\uff0c\u53cc\u5411\u53cd\u5c04\u5206\u5e03\u51fd\u6570</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/1-BRDF/#_1","title":"\u955c\u9762\u53cd\u5c04\u4e0e\u6f2b\u53cd\u5c04","text":"<p>\u6839\u636e\u7269\u7406\u5b9a\u5f8b\uff0c\u6211\u4eec\u77e5\u9053\u5f53\u4e00\u675f\u5165\u5c04\u5149\uff08incident light\uff09\u6253\u5728\u4e00\u4e2a\u8868\u9762\u4e0a\u65f6\uff0c\u5c06\u5206\u6210\u4e24\u90e8\u5206\uff1a\u955c\u9762\u53cd\u5c04\u548c\u6f2b\u53cd\u5c04\u3002</p> <p></p> <p>\u5b83\u4eec\u8fd8\u6709\u5f88\u591a\u522b\u540d\uff1a</p> <ul> <li>\u955c\u9762\u53cd\u5c04\uff1aspecular reflection\u3001\u9ad8\u5149\u53cd\u5c04</li> <li>\u6f2b\u53cd\u5c04\uff1adiffuse reflection\u3001\u6298\u5c04+\u6563\u5c04</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/1-BRDF/#_2","title":"\u955c\u9762\u53cd\u5c04","text":"<p>\u6839\u636e\u5149\u7684\u53cd\u5c04\u5b9a\u5f8b\uff0c\u5f53\u4e00\u675f\u5149\u78b0\u649e\u5230\u7269\u4f53\u8868\u9762\u4e0a\u65f6\uff0c\u5b83\u7684\u4e00\u90e8\u5206\u80fd\u91cf\u4f1a\u6cbf\u7740\u4e0e\u5e73\u9762\u6cd5\u5411\u91cf\u7684\u5bf9\u79f0\u65b9\u5411\u53cd\u5c04\u51fa\u53bb\uff0c\u800c\u4e0d\u8fdb\u5165\u7269\u4f53\uff0c\u8fd9\u4e00\u90e8\u5206\u5373\u88ab\u79f0\u4e3a\u201c\u955c\u9762\u53cd\u5c04\u201d\u3002</p> <p></p> <p>\u5982\u4e0b\u56feSpecular highlights\u7bad\u5934\u6240\u6307\u533a\u57df\uff0c\u5373\u662f\u201c\u955c\u9762\u53cd\u5c04\u201d\u7684\u6548\u679c</p> <ul> <li>\u767d\u8272\uff1a\u7531\u4e8e\u5165\u5c04\u5149\u662f\u767d\u5149\uff0c\u800c\u201c\u955c\u9762\u53cd\u5c04\u201d\u662f\u5149\u7ebf\u649e\u5230\u8868\u9762\u540e\uff0c\u76f4\u63a5\u53cd\u5c04\u51fa\u53bb\u7684\uff0c\u56e0\u6b64\u201c\u955c\u9762\u53cd\u5c04\u201d\u4e5f\u662f\u767d\u5149\u3002</li> <li>\u4eae\u4eae\u7684\uff1a\u955c\u9762\u53cd\u5c04\u5149\u7684\u65b9\u5411\u4e00\u822c\u90fd\u96c6\u4e2d\u5728\u4e0a\u56fe\u7684\\(B\\)\u65b9\u5411\u7684\u5468\u56f4\uff0c\u56e0\u6b64\u770b\u8d77\u6765\u4eae\u4eae\u7684\u3002\u8fd9\u4e0e\u6f2b\u53cd\u5c04\u4e0d\u540c\uff0c\u6f2b\u53cd\u5c04\u7684\u5149\u7ebf\u662f\u56db\u9762\u516b\u65b9\u7684\uff0c\u5b83\u7684\u80fd\u91cf\u88ab\u5747\u644a\u5230\u56db\u9762\u516b\u65b9\u4e86\u3002</li> </ul> <p></p> <p>\u955c\u9762\u53cd\u5c04\u4e0e\u8868\u9762\u7684\u7c97\u7cd9\u5ea6\u6709\u5173</p> <ol> <li>\u5982\u679c\u8868\u9762\u8d8a\u7c97\u7cd9\uff0c\u4e0b\u56fe\u4e2d\\(f_r\\)\u533a\u57df\u5c31\u8d8a\u5927\u3002\u90a3\u610f\u5473\u7740\uff0c\u5728\u7269\u4f53\u8868\u9762\u4e0a\u9ad8\u5149\u533a\u57df\u5f88\u5927\uff0c\u4f46\u5f3a\u5ea6\u8f83\u5f31</li> <li>\u5982\u679c\u8868\u9762\u8d8a\u5149\u6ed1\uff0c\u4e0b\u56fe\u4e2d\u7684\\(f_r\\)\u533a\u57df\u5c31\u8d8a\u7a84\uff0c\u76f4\u5230\u53cd\u5c04\u5149\u5168\u96c6\u4e2d\u5728\u955c\u9762\u65b9\u5411\uff08\u5165\u5c04\u5149\u8f74\u5bf9\u79f0\u7684\u65b9\u5411\uff09\uff0c\u8fd9\u610f\u5473\u7740\uff0c\u5728\u7269\u4f53\u8868\u9762\u4e0a\u9ad8\u5149\u533a\u57df\u5f88\u5c0f\uff0c\u4f46\u5f3a\u5ea6\u975e\u5e38\u5927\uff0c\u975e\u5e38\u523a\u773c</li> </ol> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/1-BRDF/#_3","title":"\u6f2b\u53cd\u5c04","text":"<p>\u6839\u636e\u7269\u7406\u5b9a\u5f8b\uff0c\u6211\u4eec\u6709\u4ee5\u4e0b\u8ba4\u8bc6\uff08\u5982\u4e0b\u56fe\u4e2d\u7684\u6a58\u8272\u5149\u7ebf\uff09</p> <ol> <li>\u5f53\u4e00\u675f\u5149\u78b0\u649e\u5230\u8868\u9762\u4e0a\u65f6\uff0c\u5b83\u7684\u4e00\u90e8\u5206\u80fd\u91cf\u4f1a\u6298\u5c04\u8fdb\u7269\u4f53\u5185\u90e8</li> <li>\u7269\u4f53\u7531\u65e0\u6570\u5fae\u5c0f\u7684\u7c92\u5b50\u6240\u7ec4\u6210\uff0c\u5149\u7ebf\u8fdb\u5165\u7269\u4f53\u5185\u90e8\u4e4b\u540e\uff0c\u4f1a\u4e0e\u8fd9\u4e9b\u7c92\u5b50\u518d\u6b21\u53d1\u751f\u78b0\u649e\uff0c\u5728\u7c92\u5b50\u95f4\u201c\u5f39\u6765\u5f39\u53bb\u201d\uff08\u5373\u5728\u7269\u4f53\u5185\u90e8\u53d1\u751f \u6563\u5c04\uff09</li> <li>\u5728\u78b0\u649e\u8fc7\u7a0b\u4e2d\uff0c\u7c92\u5b50\u4f1a\u5438\u6536\u5149\u7ebf\u7684\u4e00\u90e8\u5206\u80fd\u91cf\uff0c\u7136\u540e\u8f6c\u4e3a\u70ed\u91cf<ol> <li>\u82e5\u5728\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0c\u5149\u7ebf\u7684\u67d0\u6761\u5206\u652f\u80fd\u91cf\u8017\u5c3d\uff0c\u5149\u7ebf\u5c31\u51fa\u4e0d\u53bb\u4e86\uff0c\u5168\u88ab\u5438\u6536\u8f6c\u6362\u4e3a\u4e86\u70ed\u91cf</li> <li>\u82e5\u5728\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0c\u5149\u7ebf\u80fd\u91cf\u672a\u80fd\u88ab\u5168\u90e8\u5438\u6536\uff0c\u5c31\u6210\u529f\u79bb\u5f00\u8868\u9762\uff0c\u6784\u6210\u6240\u8c13\u7684\u201c\u6f2b\u53cd\u5c04\u5149\u201c\uff0c\u5b83\u4eec\u5c06\u534f\u540c\u6784\u6210\u7269\u4f53\u8868\u9762\u7684\u989c\u8272\uff08\u53ea\u662f\u6f2b\u53cd\u5c04\u90e8\u5206\u7684\u989c\u8272\uff09</li> </ol> </li> </ol> <p></p> <p>\u6f2b\u53cd\u5c04\uff1a\u7ecf\u8fc7\u6298\u5c04\u3001\u6563\u5c04\u4e4b\u540e\uff0c\u8fd8\u80fd\u4ece\u7269\u4f53\u5185\u90e8\u5c04\u51fa\u8868\u9762\u7684\u5149\u7ebf\u3002\u5b83\u4eec\u7684\u65b9\u5411\u968f\u673a\uff0c\u4f46\u5404\u4e2a\u65b9\u5411\u7684\u80fd\u91cf\u53ef\u4ee5\u5047\u5b9a\u4e3a\u76f8\u540c\u3002</p> <ul> <li>\u5982\u4e0b\u56fe\uff0cDiffuse reflection\u7bad\u5934\u6240\u503c\u5373\u662f\u6f2b\u53cd\u5c04\u4f5c\u7528\u4e0b\u4ea7\u751f\u7684\u989c\u8272</li> <li>\u6f2b\u53cd\u5c04\u5176\u5b9e\u662f\u7269\u4f53\u7684\u4e3b\u8981\u989c\u8272\uff0c\u4ece\u4e0a\u9762\u4ea4\u4ee3\u7684\u7269\u7406\u539f\u7406\u53ef\u77e5\uff0c\u5b83\u662f\u7269\u4f53\u7684\u4e3b\u8981\u989c\u8272\uff0c\u4e5f\u76f4\u63a5\u53d6\u51b3\u4e8e\u7269\u4f53\u7684\u6750\u8d28\u3002\u6bd4\u5982\u67d0\u4e2a\u7ea2\u8272\u8863\u670d\uff0c\u5b83\u80fd\u628a\u7eff\u5149\u3001\u84dd\u5149\u90fd\u7ed9\u5438\u6536\u4e86\uff0c\u53ea\u6709\u7ea2\u5149\u80fd\u4ece\u5b83\u5185\u90e8\u5f39\u51fa\u6765\uff0c\u56e0\u6b64\u5448\u73b0\u7ea2\u8272</li> </ul> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/1-BRDF/#_4","title":"\u80fd\u91cf\u5b88\u6052","text":"<p>\u6839\u636e\u70ed\u529b\u5b66\u7b2c\u4e00\u5b9a\u5f8b\uff08 \u80fd\u91cf\u5b88\u6052 \u5b9a\u5f8b\uff09\uff0c\u6211\u4eec\u6709\u4ee5\u4e0b\u63a8\u8bba</p> <ol> <li>\u8bb0\u5165\u5c04\u5149\u7684\u603b\u80fd\u91cf\u4e3a1\uff08\u5355\u4f4d1\uff09</li> <li>\u955c\u9762\u53cd\u5c04\u7cfb\u6570\\(k_s\\)\uff1a\u5047\u8bbe\u955c\u9762\u53cd\u5c04\u90e8\u5206\u5360\u603b\u80fd\u91cf\u7684\\(k_s\\)\uff08\u5982\\(k_s=0.8\\)\uff0c\u5373\u4ee3\u886880%\u7684\u80fd\u91cf\u53c2\u4e0e\u955c\u9762\u53cd\u5c04\u4f5c\u7528\uff09</li> <li>\u6f2b\u53cd\u5c04\u7cfb\u6570\\(k_d\\)\uff1a\u6839\u636e\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff0c\u53c2\u4e0e\u6f2b\u53cd\u5c04\u90e8\u5206\u7684\u80fd\u91cf\u5373\u5360\u603b\u80fd\u91cf\u7684\\(k_d = 1-k_s\\)\uff08\u5373\\(k_d=0.2\\)\uff09</li> </ol> <p>[Tips] \u5bf9\u4e8e\u6f2b\u53cd\u5c04\u7cfb\u6570\uff0c\u8fd8\u9700\u8981\u4e58\u4ee5\u4e00\u4e2a\u9006\u91d1\u5c5e\u5ea6</p> <ul> <li>\u6839\u636e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5176\u4e2d\u53ea\u662f20%\u7684\u80fd\u91cf \u53c2\u4e0e \u6f2b\u53cd\u5c04\u4f5c\u7528\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u4e00\u5b9a20%\u7684\u80fd\u91cf\u90fd\u80fd\u4ece\u7269\u4f53\u91cc\u9762\u51fa\u6765</li> <li>\u8fd9\u8981\u6839\u636e\u7269\u4f53\u7684\u6750\u8d28\uff0c\u5982\u679c\u662f\u91d1\u5c5e\u6750\u8d28\uff0c\u5b83\u53cd\u5c04\u51fa\u6765\u7684\u80fd\u91cf\u51e0\u4e4e\u4e3a0\uff0c\u56e0\u4e3a\u5149\u7ebf\u8fdb\u5165\u7269\u4f53\u4e4b\u540e\uff0c\u4f1a\u88ab\u91d1\u5c5e\u5b8c\u5168\u5438\u6536</li> <li>\u91d1\u5c5e\u5ea6<code>metallic</code>\uff1a\u7528\u4e8e\u8868\u8fbe\u6b64\u7269\u4f53\u6750\u6599\u7684\u91d1\u5c5e\u5ea6\u3002\u53d6\u503c\u8303\u56f4\u662f[0, 1]\uff0c1\u5b8c\u5168\u662f\u91d1\u5c5e\uff0c0\u662f\u4ecb\u7535\u8d28\uff08\u975e\u91d1\u5c5e\uff09</li> </ul> <pre><code>vec3 kD = vec3(1.0) - kS;   //\u6f2b\u53cd\u5c04\u7cfb\u6570\uff08\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff09\nkD *= 1.0 - metallic;       //\u4e58\u4ee5\u9006\u91d1\u5c5e\u5ea6\n//\u82e5metallic=1.0\uff0c\u5219kD=0\uff0c\u8868\u793a\u6ca1\u6709\u5149\u7ebf\u80fd\u51fa\u6765\n//\u82e5metallic=0.0\uff0c\u5219\u8868\u793a\u53c2\u4e0e\u6f2b\u53cd\u5c04\u4f5c\u7528\u7684\u6240\u6709\u80fd\u91cf\u90fd\u80fd\u4ece\u7269\u4f53\u5185\u90e8\u5f39\u51fa\u6765\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/HelloPBR/1-BRDF/#_5","title":"\u603b\u7ed3","text":"<p>\u6839\u636e\u4e0a\u9762\u7684\u539f\u7406\u53ef\u77e5\uff0c\u4e00\u675f\u5149\u6253\u5230\u7269\u4f53\u8868\u9762\u5448\u73b0\u51fa\u6765\u7684\u989c\u8272\uff0c\u7531\u4e24\u90e8\u5206\u6784\u6210\uff1a\u6f2b\u53cd\u5c04\uff08diffuse\uff09\u3001\u955c\u9762\u53cd\u5c04\uff08specular\uff09\u3002</p> \\[ f_r = k_d * f_{diffuse} + k_s * f_{specular} \\] <p>\u5173\u4e8e\u8fd9\u4e24\u9879\uff08\\(f_{diffuse}\\)\u3001\\(f_{specular}\\)\uff09\u7684\u6c42\u89e3\uff0c\u5176\u5b9e\u6709\u5f88\u591a\u79cd\u516c\u5f0f\uff0c\u56e0\u6b64\u884d\u751f\u51fa\u4e86\u5f88\u591a\u79cdBRDF\uff0c\u6bcf\u4e00\u79cd\u90fd\u80fd\u8fd1\u4f3c\u5f97\u51fa \u201c\u7269\u4f53\u8868\u9762\u5bf9\u4e8e\u5149\u7684\u53cd\u5e94\u201d \uff0c\u90fd\u5f88\u903c\u771f\u3002\u4f46\u662f\u5f53\u524d\u5f88\u591a\u5b9e\u65f6\u6e32\u67d3\u7ba1\u7ebf\u4f7f\u7528\u7684\u90fd\u662fCook-Torrance BRDF\u6a21\u578b\uff0c\u672c\u6587\u4e0d\u518d\u8d58\u8ff0\uff0c\u8bf7\u770b\u540e\u7eed\u6587\u7ae0\u3002</p> <p>\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>vec3 evaluateBRDF(const PixelParams pixel, const Light light, const PbrMaterial material)\n{\n//\u8ba1\u7b97\u4e00\u4e9b\u53c2\u6570\uff0c\u5982NoV, NoL, NoH, LoH\u7b49\uff0c\u540e\u7eed\u8981\u7528\n//..\nvec3 specular = evaluateSpecular(...); //\u955c\u9762\u53cd\u5c04\u7684\u989c\u8272\nvec3 diffuse = evaluateDiffuse(...);   //\u6f2b\u53cd\u5c04\u7684\u989c\u8272\n//\u4e24\u4e2a\u7cfb\u6570\nvec3 kS = material.Fresnel; //\u955c\u9762\u53cd\u5c04\u7cfb\u6570 = \u83f2\u6d85\u5c14\u9879\uff08\u53ef\u4ee5\u6709\u522b\u7684\u7b97\u6cd5\uff09\nvec3 kD = vec3(1.0) - kS;   //\u6f2b\u53cd\u5c04\u7cfb\u6570\uff08\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff09\nkD *= 1.0 - metallic;       //\u4e58\u4ee5\u9006\u91d1\u5c5e\u5ea6\nreturn kD * diffuse + kS * specular;\n}\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/","title":"PBR\u539f\u7406","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/#_1","title":"\u201c\u57fa\u4e8e\u7269\u7406\u7684\u7740\u8272\u201d\uff0c\u800c\u975e\u201c\u57fa\u4e8e\u7269\u7406\u7740\u8272\u201d","text":"<p>PBR\uff0cPhysically Based Rendering\uff0c\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\uff0c\u5b83\u4ecd\u7136\u53ea\u662f\u5bf9\u57fa\u4e8e\u7269\u7406\u539f\u7406\u7684\u73b0\u5b9e\u4e16\u754c\u8fdb\u884c\u4e00\u79cd \u8fd1\u4f3c\uff0c\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u88ab\u79f0\u4e3a \u201d\u57fa\u4e8e\u7269\u7406\u7684\u7740\u8272\u201c\uff08Physically based shading\uff09\uff0c\u800c\u975e\u201d\u7269\u7406\u7740\u8272\u201c\uff08Physical shading\uff09\u7684\u539f\u56e0\u3002</p> <p>\u5224\u65ad\u4e00\u79cdPBR\u5149\u7167\u6a21\u578b\u662f\u5426\u662f\u57fa\u4e8e\u7269\u7406\u7684\uff0c\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u4e09\u4e2a\u6761\u4ef6</p> <ol> <li>\u57fa\u4e8e\u5fae\u5e73\u9762(Microfacet)\u7684\u8868\u9762\u6a21\u578b</li> <li>\u80fd\u91cf\u5b88\u6052</li> <li>\u5e94\u7528\u57fa\u4e8e\u7269\u7406\u7684BRDF</li> </ol> <p>PBR\u9075\u5faa\u7684\u662f\u4e00\u79cd\u88ab\u79f0\u4e3a \u53cd\u5c04\u7387\u65b9\u7a0b(The Reflectance Equation)\u7684\u7279\u5316\u7248\u672c\u3002\u8981\u6b63\u786e\u5730\u7406\u89e3PBR\uff0c\u5f88\u91cd\u8981\u7684\u4e00\u70b9\u5c31\u662f\u8981\u9996\u5148\u900f\u5f7b\u5730\u7406\u89e3\u53cd\u5c04\u7387\u65b9\u7a0b\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/#_2","title":"\u80fd\u91cf\u5b88\u6052","text":"<p>PBR\u4e3a\u4e86\u5b9e\u73b0\u7269\u7406\u5b66\u4e0a\u7684\u53ef\u4fe1\u5ea6\uff0c\u5b83\u9075\u5b88\u4e86\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff0c\u5373 \u53cd\u5c04\u5149\u7ebf\u7684\u603b\u548c \u6c38\u8fdc\u4e0d\u80fd\u8d85\u8fc7 \u5165\u5c04\u5149\u7ebf\u7684\u603b\u91cf\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/#_3","title":"\u5fae\u5e73\u9762\u6a21\u578b","text":"<p>PBR\u91c7\u7528\u4e86\u201c\u5fae\u5e73\u9762\u6a21\u578b\u201d\u7684\u7406\u8bba\uff0c\u5176\u53cd\u5c04\u7387\u65b9\u7a0b\u4e5f\u662f\u57fa\u4e8e\u201c\u5fae\u5e73\u9762\u6a21\u578b\u201d\u6240\u6784\u5efa\u7684\u3002 \u5177\u4f53\u8bf7\u53c2\u9605\uff1a\u300a\u5fae\u5e73\u9762\u6a21\u578b\u300b</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/#_4","title":"\u53cd\u5c04\u7387\u65b9\u7a0b","text":"<p>PBR\u7684\u8ba1\u7b97\u516c\u5f0f\u662f\u201c\u53cd\u5c04\u7387\u65b9\u7a0b\u201d\u3002 \u5177\u4f53\u8bf7\u53c2\u9605\uff1a\u300a\u53cd\u5c04\u7387\u65b9\u7a0b\u300b</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/#_5","title":"\u5ef6\u4f38\u9605\u8bfb","text":"<ul> <li>Background: Physics and Math of Shading by Naty Hoffmann\uff1a\u7531\u4e8e\u5728\u8fd9\u4e00\u7bc7\u6587\u7ae0\u4e2d\u8981\u8c08\u8bba\u7684\u7406\u8bba\u70b9\u592a\u591a\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u7406\u8bba\u77e5\u8bc6\u90fd\u53ea\u662f\u6d89\u53ca\u5230\u4e86\u76ae\u6bdb\u3002\u5982\u679c\u4f60\u5e0c\u671b\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u5149\u7ebf\u80cc\u540e\u7684\u7269\u7406\u77e5\u8bc6\u4ee5\u53ca\u5b83\u4eec\u548cPBR\u7406\u8bba\u4e4b\u95f4\u6709\u4ec0\u4e48\u5173\u8054\u7684\u8bdd\uff0c**\u8fd9**\u624d\u662f\u4f60\u9700\u8981\u9605\u8bfb\u7684\u8d44\u6e90\u3002</li> <li>Real shading in Unreal Engine 4\uff1a\u63a2\u8ba8\u4e86Epic Games\u5728\u4ed6\u4eec\u7684Unreal 4\u5f15\u64ce\u4e2d\u6240\u91c7\u7528\u7684PBR\u6a21\u578b\u3002\u6211\u4eec\u8fd9\u4e9b\u6559\u7a0b\u4e2d\u4e3b\u8981\u6d89\u53ca\u7684PBR\u7cfb\u7edf\u5c31\u662f\u57fa\u4e8e\u4ed6\u4eec\u7684PBR\u6a21\u578b\u3002</li> <li>Marmoset: PBR Theory\uff1a\u4e3b\u8981\u9488\u5bf9\u7f8e\u672f\u5e08\u7684PBR\u4ecb\u7ecd\uff0c\u4e0d\u8fc7\u4ecd\u7136\u662f\u5f88\u597d\u7684\u8bfb\u7269\u3002</li> <li>Coding Labs: Physically based rendering\uff1a\u4ecb\u7ecd\u6e32\u67d3\u65b9\u7a0b\u4ee5\u53ca\u5b83\u548cPBR\u76f4\u63a5\u7684\u5173\u7cfb\u3002</li> <li>Coding Labs: Physically Based Rendering - Cook\u2013Torrance\uff1a\u4ecb\u7ecd\u4e86Cook-Torrance BRDF.</li> <li>Wolfire Games - Physically based rendering\uff1a\u4ecb\u7ecd\u4e86PBR\uff0c\u7531Lukas Orsv\u00e4rn\u6240\u8457\u3002</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/#_6","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>PBR\u7406\u8bba</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/Lambertian%E6%BC%AB%E5%8F%8D%E5%B0%84/","title":"Lambertian\u6f2b\u53cd\u5c04","text":"<p>\u3010Lambertian\u6f2b\u53cd\u5c04\u3011</p> \\[ f_{lambert} = \\frac{c}{\\pi} \\] <ol> <li>\\(c\\)\u8868\u793a\u8868\u9762\u989c\u8272\uff08\u56de\u60f3\u4e00\u4e0b\u6f2b\u53cd\u5c04\u8868\u9762\u7eb9\u7406\uff09</li> <li>\u9664\u4ee5\\(\\pi\\)\u662f\u4e3a\u4e86\u5bf9\u6f2b\u53cd\u5c04\u5149\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u56e0\u4e3a\u524d\u9762\u542b\u6709BRDF\u7684\u79ef\u5206\u65b9\u7a0b\u662f\u53d7\\(\\pi\\)\u5f71\u54cd\u7684</li> </ol> <p>\u3010Lambertian\u7684\u6548\u7387\u3011</p> <ul> <li>\u9664\u6b64\u4e4b\u5916\uff0c\u5176\u4ed6BRDF\u6709\u5176\u4ed6\u7684\u6f2b\u53cd\u5c04\u65b9\u5f0f\uff0c\u5927\u591a\u6570\u770b\u4e0a\u53bb\u90fd\u76f8\u5f53\u771f\u5b9e\uff0c\u4f46\u662f\u76f8\u5e94\u7684\u8fd0\u7b97\u5f00\u9500\u4e5f\u975e\u5e38\u7684\u6602\u8d35\u3002</li> <li>\u4e0d\u8fc7\u6309Epic\u516c\u53f8\u7ed9\u51fa\u7684\u7ed3\u8bba\uff0cLambertian\u6f2b\u53cd\u5c04\u6a21\u578b\u5df2\u7ecf\u8db3\u591f\u5e94\u4ed8\u5927\u591a\u6570\u5b9e\u65f6\u6e32\u67d3\u7684\u7528\u9014\u4e86</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/Lambertian%E6%BC%AB%E5%8F%8D%E5%B0%84/#_1","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>PBR\u7406\u8bba</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%85%89%E7%85%A7/","title":"\u5149\u7167","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%85%89%E7%85%A7/#_1","title":"\u70b9\u5149\u6e90","text":"<p>\u73b0\u5b9e\u7684\u70b9\u5149\u6e90\u90fd\u4f1a\u53d7\u5149\u7ebf\u8870\u51cf\u5f71\u54cd\u4e00\u6837\uff0c\u70b9\u5149\u6e90\u7684\u8f90\u5c04\u5f3a\u5ea6\u5e94\u8be5\u6839\u636e\u70b9\\(p\\)\u6240\u5728\u7684\u4f4d\u7f6e\u548c\u5149\u6e90\u7684\u4f4d\u7f6e\u4ee5\u53ca\u4ed6\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u800c\u505a\u4e00\u4e9b\u7f29\u653e</p> <pre><code>//\u706f\u5149\u989c\u8272\uff08\u5b9e\u9645\u4e0a\u4e0d\u662f\u989c\u8272\uff0c\u800c\u662f\u5149\u7684\u8f90\u5c04\u901a\u91cf\uff0c\u7528RGB\u4e09\u8272\u7f16\u7801\u6765\u8868\u793a\uff09\nvec3\u00a0\u00a0lightColor\u00a0\u00a0=\u00a0vec3(23.47,\u00a021.31,\u00a020.79);\n//\u5149\u7ebf\u5165\u5c04\u65b9\u5411\uff08\u6307\u5411\u5149\u6e90\uff0c\u4e16\u754c\u5750\u6807\u7cfb\uff09\nvec3 L = normalize(lightPositions - WorldPos);\n//\u534a\u7a0b\u5411\u91cf\nvec3 H = normalize(V + L);\n//\u4e0e\u5149\u6e90\u7684\u8ddd\u79bb\uff0c\u5176\u4e2dWorldPos\u662f\u7247\u5143\u7684\u4e16\u754c\u5750\u6807\nfloat distance = length(lightPositions - WorldPos);\n//\u5149\u6e90\u8870\u51cf\u56e0\u5b50\uff08\u8ddd\u79bb\u8d8a\u8fdc\uff0c\u8870\u51cf\u8d8a\u4e25\u91cd\uff09\nfloat attenuation = 1.0 / (distance * distance);\n//\u8f90\u5c04\u7387\uff0c\u5149\u6e90\u6253\u5728\u6b64\u7247\u5143\u4e0a\u7684\u603b\u80fd\u91cf\nvec3 radiance = lightColor * attenuation;           </code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%85%89%E7%85%A7/#_2","title":"\u5b9a\u5411\u5149","text":"<p>\u5b9a\u5411\u5149(directional light)\u62e5\u6709\u6052\u5b9a\u7684\\(\\omega_i\\)\uff0c\u800c\u4e0d\u4f1a\u6709\u8870\u51cf\u56e0\u5b50</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%85%89%E7%85%A7/#_3","title":"\u805a\u5149\u706f","text":"<p>\u4e00\u4e2a\u805a\u5149\u706f\u5149\u6e90\u5219\u6ca1\u6709\u6052\u5b9a\u7684\u8f90\u5c04\u5f3a\u5ea6\uff0c\u5176\u8f90\u5c04\u5f3a\u5ea6\u662f\u6839\u636e\u805a\u5149\u706f\u7684\u65b9\u5411\u5411\u91cf\u6765\u7f29\u653e\u7684</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%85%89%E7%85%A7/#_4","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u5149\u7167 - LearnOpenGL CN (learnopengl-cn.github.io)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%8F%8D%E5%B0%84%E7%8E%87%E6%96%B9%E7%A8%8B/","title":"\u53cd\u5c04\u7387\u65b9\u7a0b","text":"<p>\u3010\u80cc\u666f\u77e5\u8bc6\u3011\u5728\u6b64\u4e4b\u524d\uff0c\u9700\u8981\u4e86\u89e3[\u8f90\u5c04\u5ea6\u91cf\u5b66]\u7684\u76f8\u5173\u6982\u5ff5\u3002</p>","tags":["\u6e32\u67d3\u65b9\u7a0b","\u53cd\u5c04\u7387\u65b9\u7a0b"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%8F%8D%E5%B0%84%E7%8E%87%E6%96%B9%E7%A8%8B/#_1","title":"\u6e32\u67d3\u65b9\u7a0b","text":"<p>\u6e32\u67d3\u65b9\u7a0b\u662f\u67d0\u4e9b\u806a\u660e\u7edd\u9876\u7684\u4eba\u6240\u6784\u60f3\u51fa\u6765\u7684\u4e00\u4e2a\u7cbe\u5999\u7684\u65b9\u7a0b\u5f0f\uff0c\u662f\u5982\u4eca\u6211\u4eec\u6240\u62e5\u6709\u7684\u7528\u6765\u6a21\u62df\u5149\u7684\u89c6\u89c9\u6548\u679c\u6700\u597d\u7684\u6a21\u578b\uff1a</p> <p></p>","tags":["\u6e32\u67d3\u65b9\u7a0b","\u53cd\u5c04\u7387\u65b9\u7a0b"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%8F%8D%E5%B0%84%E7%8E%87%E6%96%B9%E7%A8%8B/#_2","title":"\u53cd\u5c04\u7387\u65b9\u7a0b","text":"<p>\u800c\u53cd\u5c04\u7387\u65b9\u7a0b\u662f\u4e00\u79cd\u7279\u5316\u7684\u6e32\u67d3\u65b9\u7a0b</p> <ol> <li>\u53cd\u5c04\u7387\u516c\u5f0f\u8ba1\u7b97\u4e86\uff0c\u70b9\\(p\\)\u5728\\(\\omega_0\\)\u65b9\u5411\u4e0a\uff0c\u88ab\u53cd\u5c04\u51fa\u6765\u7684\u8f90\u5c04\u7387\\(L_o(p, \\omega_0)\\)\u7684\u603b\u548c</li> <li>\u6362\u800c\u8a00\u4e4b\uff0c\\(L_0\\)\u8868\u793a\u4e86\u4ece\\(\\omega_0\\)\u65b9\u5411\u4e0a\u89c2\u5bdf\uff0c\u5149\u7ebf\u6295\u5c04\u5230\u70b9\\(p\\)\u4e0a\u53cd\u5c04\u51fa\u6765\u7684\u8f90\u7167\u5ea6</li> </ol> \\[ L_o(p,\\omega_o) = \\int\\limits_{\\Omega} f_r(p,\\omega_i,\\omega_o) L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \\]","tags":["\u6e32\u67d3\u65b9\u7a0b","\u53cd\u5c04\u7387\u65b9\u7a0b"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%8F%8D%E5%B0%84%E7%8E%87%E6%96%B9%E7%A8%8B/#_3","title":"\u5165\u5c04\u65b9\u5411\u5411\u91cf","text":"<p>\u3010\\(\\omega_i\\)\u3011\u7acb\u65b9\u89d2\uff0c\u53ef\u4ee5\u89c6\u4f5c\u662f\u5165\u5c04\u65b9\u5411\u5411\u91cf\\(\\omega_i\\)</p>","tags":["\u6e32\u67d3\u65b9\u7a0b","\u53cd\u5c04\u7387\u65b9\u7a0b"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%8F%8D%E5%B0%84%E7%8E%87%E6%96%B9%E7%A8%8B/#_4","title":"\u51fa\u5c04\u65b9\u5411\u5411\u91cf","text":"<p>\u3010\\(\\omega_o\\)\u3011\u8868\u793a\u89c2\u5bdf\u65b9\u5411\uff0c\u4e5f\u6025\u901f\u5149\u7ebf\u7684\u51fa\u5c04\u65b9\u5411</p>","tags":["\u6e32\u67d3\u65b9\u7a0b","\u53cd\u5c04\u7387\u65b9\u7a0b"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%8F%8D%E5%B0%84%E7%8E%87%E6%96%B9%E7%A8%8B/#_5","title":"\u8f90\u5c04\u7387","text":"<p>\u3010\\(L\\)\u3011\u5373\u8f90\u5c04\u7387\uff0c\u5177\u4f53\u800c\u8a00\uff0c\u662f\u4ee3\u8868\u901a\u8fc7\u67d0\u4e2a\u65e0\u9650\u5c0f\u7684\u7acb\u65b9\u4f53\\(\\omega_i\\)\u3001\u5728\u67d0\u4e2a\u70b9\\(p\\)\u4e0a\u7684\u8f90\u5c04\u7387</p>","tags":["\u6e32\u67d3\u65b9\u7a0b","\u53cd\u5c04\u7387\u65b9\u7a0b"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%8F%8D%E5%B0%84%E7%8E%87%E6%96%B9%E7%A8%8B/#_6","title":"\u80fd\u91cf","text":"<p>\u3010\\(n \\cdot \\omega_i\\)\u3011</p> <ol> <li>\u8bb0 \u5149\u7ebf\u4e0e\u5e73\u9762\u95f4\u7684\u5165\u5c04\u89d2\u4e3a\\(\\theta\\)</li> <li>\u6211\u4eec\u5229\u7528\\(\\cos \\theta\\)\u6765\u8ba1\u7b97\u80fd\u91cf\uff0c\u800c\\(\\cos \\theta = \u5e73\u9762\u6cd5\u5411\u91cf * \u5149\u7ebf\u65b9\u5411\\)\uff0c\u5373\\(\\cos \\theta = n \\cdot \\omega_i\\)</li> </ol>","tags":["\u6e32\u67d3\u65b9\u7a0b","\u53cd\u5c04\u7387\u65b9\u7a0b"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%8F%8D%E5%B0%84%E7%8E%87%E6%96%B9%E7%A8%8B/#_7","title":"\u534a\u7403\u9886\u57df\u5185\u7684\u8f90\u7167\u5ea6","text":"<p>\u3010\\(\\int\\) \u4e0e \\(d\\omega_i\\)\u3011</p> <p>\u5f53\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u8ba1\u7b97\u7684\u53ea\u662f\u4e00\u4e2a\u65b9\u5411\uff08\\(\\omega_i\\)\uff09\u4e0a\u7684\u5165\u5c04\u5149\u3002\u4f46\u8fd9\u8fdc\u8fdc\u4e0d\u591f\uff0c\u6211\u4eec\u5e94\u8be5\u8ba1\u7b97\u4ee5\u70b9\\(p\\)\u4e3a\u7403\u5fc3\uff0c\u534a\u7403\u9886\u57df\\(\\Omega\\)\u5185\u6240\u6709\u65b9\u5411\u4e0a\u7684\u5165\u5c04\u5149\u3002\u800c\\(\\int\\) \u4e0e \\(d\\omega_i\\)\u5373\u662f\u4e3a\u4e86\u6c42\u534a\u7403\u9886\u57df\u5185\u7684\u8f90\u7167\u5ea6\u3002</p> <p></p> <p>\u5982\u4f55\u8ba1\u7b97\uff1f</p> <ul> <li>\u5982\u4f55\u8ba1\u7b97\u67d0\u4e9b\u9762\u79ef\u7684\u503c\uff0c\u6216\u8005\u8bf4\uff0c\u5982\u4f55\u8ba1\u7b97\u50cf\u534a\u7403\u9886\u57df\u4e2d\u67d0\u4e00\u4e2a\u4f53\u79ef\u7684\u503c\uff1f\u6211\u4eec\u5c06\u7528\u5230\u201c\u79ef\u5206(Integral)\u201d\uff0c\u4e5f\u5c31\u662f\u516c\u5f0f\u4e2d\u7684\\(\\int\\)</li> <li>\\(\\int ... d\\omega_i\\) \u5305\u542b\u4e86\u534a\u7403\u9886\u57df\\(\\Omega\\)\u5185\u6240\u6709\u5165\u5c04\u65b9\u5411\u4e0a\u7684\\(d\\omega_i\\)</li> </ul> <p>\u79ef\u5206\u5982\u4f55\u8ba1\u7b97\uff1f</p> <ul> <li>\u79ef\u5206\u8fd0\u7b97\u7684\u503c \u7b49\u4e8e \u4e00\u4e2a\u51fd\u6570\u66f2\u7ebf\u7684\u9762\u79ef\uff0c\u5b83\u7684\u8ba1\u7b97\u7ed3\u679c\u8981\u4e48\u662f\u89e3\u6790\u89e3\uff0c\u8981\u4e48\u662f\u6570\u503c\u89e3</li> <li>\u7531\u4e8e\u6e32\u67d3\u65b9\u7a0b\u7684\u53cd\u5c04\u7387\u65b9\u7a0b\u90fd\u6ca1\u6709\u89e3\u6790\u89e3\uff0c\u6211\u4eec\u5c06\u4f1a\u7528\u79bb\u6563\u7684\u65b9\u6cd5\u6765 \u6c42\u8fd9\u4e2a\u79ef\u5206\u7684\u6570\u503c\u89e3</li> </ul> <p>\u56e0\u6b64\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u8f6c\u6362\u4e3a</p> <ol> <li>\u5728\u534a\u7403\u9886\u57df\\(\\Omega\\)\u4e2d\uff0c\u6309\u4e00\u5b9a\u6b65\u957f\u5c06\u53cd\u5c04\u7387\u65b9\u7a0b\u5206\u522b\u6c42\u89e3</li> <li>\u7136\u540e\u518d\u6309\u7167\u6b65\u957f\u5927\u5c0f\uff0c\u5c06\u6240\u5f97\u5230\u7684\u7684\u7ed3\u679c\u5e73\u5747\u5316</li> <li>\u8fd9\u79cd\u65b9\u6cd5\u88ab\u79f0\u4e4b\u4e3a\u201c\u9ece\u66fc\u548c(Riemann sum)\u201d</li> </ol> <p>\u5982\u4e0b\uff0c\u7ed9\u51fa\u4e00\u4e2a\u7c97\u7cd9\u7684\u4ee3\u7801\u5e2e\u52a9\u7406\u89e3</p> <ul> <li><code>dW</code>\u5373\u9ece\u66fc\u548c\u4e2d\u7684\u79bb\u6563\u6b65\u957f\uff0c\u800c\u7528\u6b64\u65b9\u6cd5\u5f97\u5230\u7684\u51fd\u6570\u603b\u9762\u79ef\u4e5f\u662f\u4e00\u4e2a\u8fd1\u4f3c\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u79bb\u6563\u90e8\u5206\u7684\u6570\u91cf\u6765\u63d0\u9ad8\u9ece\u66fc\u548c\u7684\u51c6\u786e\u5ea6</li> <li>\u901a\u8fc7\u5229\u7528<code>dW</code>\u7684\u503c\uff0c\u6765\u5bf9\u6240\u6709\u79bb\u6563\u90e8\u5206\u8fdb\u884c\u7f29\u653e\uff0c\u5176\u548c\u6700\u540e\u5c31\u7b49\u4e8e\u79ef\u5206\u51fd\u6570\u7684\u603b\u9762\u79ef\u6216\u8005\u603b\u4f53\u79ef</li> <li>\u8fd9\u4e2a\u7528\u6765\u5bf9\u6bcf\u4e2a\u79bb\u6563\u6b65\u957f\u8fdb\u884c\u7f29\u653e\u7684<code>dW</code>\uff0c\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u662f\u53cd\u5c04\u7387\u65b9\u7a0b\u4e2d\u7684\\(d\\omega_i\\)</li> <li>\u5728\u6570\u5b66\u4e0a\uff0c\u7528\u6765\u8ba1\u7b97\u79ef\u5206\u7684\\(d \\omega_i\\)\u8868\u793a\u7684\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u7b26\u53f7\uff0c\u800c\u6211\u4eec\u4f7f\u7528\u7684<code>dW</code>\u5728\u4ee3\u7801\u4e2d\u548c\u5b83\u5e76\u6ca1\u6709\u76f4\u63a5\u7684\u8054\u7cfb</li> </ul> <pre><code>int steps = 100;\nfloat sum = 0.0f; vec3 P = ...; vec3 Wo = ...; vec3 N = ...; float dW = 1.0f / steps; for(int i = 0; i &lt; steps; ++i) { vec3 Wi = getNextIncomingLightDir(i); sum += Fr(p, Wi, Wo) * L(p, Wi) * dot(N, Wi) * dW; }\n</code></pre>","tags":["\u6e32\u67d3\u65b9\u7a0b","\u53cd\u5c04\u7387\u65b9\u7a0b"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%8F%8D%E5%B0%84%E7%8E%87%E6%96%B9%E7%A8%8B/#brdf","title":"BRDF","text":"<p>\u3010\\(f_r\\)\u3011\u81f3\u6b64\uff0c\u5269\u4e0b\u7684\u5c31\u662f\\(f_r\\)\u4e86\u3002\u5b83\u88ab\u79f0\u4e3aBRDF\uff0c\u4f5c\u7528\u662f\u57fa\u4e8e\u8868\u9762\u6750\u8d28\u5c5e\u6027\u6765\u5bf9\u5165\u5c04\u8f90\u5c04\u7387\u8fdb\u884c\u7f29\u653e\u6216\u52a0\u6743\u3002</p> <p>\u5177\u4f53\u53c2\u8003BRDF\u6587\u6863\u3002</p>","tags":["\u6e32\u67d3\u65b9\u7a0b","\u53cd\u5c04\u7387\u65b9\u7a0b"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%8F%8D%E5%B0%84%E7%8E%87%E6%96%B9%E7%A8%8B/#_8","title":"\u603b\u7ed3","text":"<p>\u53cd\u5c04\u7387\u65b9\u7a0b\u6982\u62ec\u4e86</p> <ol> <li>\u534a\u7403\u9886\u57df\\(\\Omega\\)\u5185</li> <li>\u78b0\u649e\u5230\u4e86\u70b9\\(p\\)\u4e0a\u7684\u6240\u6709\u5165\u5c04\u65b9\u5411\\(\\omega_i\\)\u4e0a\u7684\u5149\u7ebf\u7684\u8f90\u5c04\u7387</li> <li>\u5e76\u53d7\u5230\u4e86\\(f_r\\)\u7684\u7ea6\u675f</li> <li>\u7136\u540e\u8fd4\u56de\u89c2\u5bdf\u65b9\u5411\u4e0a\u53cd\u5c04\u5149\u7684\\(L_0\\)</li> </ol> <p>\u5165\u5c04\u5149\u8f90\u5c04\u7387\u4ece\u54ea\u91cc\u83b7\u5f97\uff1f</p> <ol> <li>\u5165\u5c04\u5149\u8f90\u5c04\u7387\u53ef\u7531\u5149\u6e90\u5904\u83b7\u5f97\uff08\u53c2\u8003\u5149\u7167\uff09</li> <li>\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\uff0c\u5229\u7528\u4e00\u4e2a\u73af\u5883\u8d34\u56fe\u6765\u6d4b\u7b97\u6240\u6709\u5165\u5c04\u65b9\u5411\u4e0a\u7684\u8f90\u5c04\u7387\uff08\u53c2\u8003\u6f2b\u53cd\u5c04\u8f90\u7167\u5ea6\uff09</li> </ol>","tags":["\u6e32\u67d3\u65b9\u7a0b","\u53cd\u5c04\u7387\u65b9\u7a0b"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%8F%8D%E5%B0%84%E7%8E%87%E6%96%B9%E7%A8%8B/#cook-torrance","title":"Cook-Torrance\u53cd\u5c04\u7387\u65b9\u7a0b","text":"<p>\u5982\u679c\uff0cBRDF\u4f7f\u7528Cook-Torrance\u6a21\u578b\uff0c\u90a3\u4e48\u6b64\u53cd\u5c04\u7387\u65b9\u7a0b\u5373\u53ef\u53eb\u505a\u201cCook-Torrance\u53cd\u5c04\u7387\u65b9\u7a0b\u201d\u3002</p> <p>\u516c\u5f0f\u5982\u4e0b\uff1a</p> \\[ L_o(p,\\omega_o) = \\int\\limits_{\\Omega} (k_d\\frac{c}{\\pi} + k_s\\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)})L_i(p,\\omega_i) n \\cdot \\omega_i d\\omega_i \\] <p>\u6b64\u65b9\u7a0b\u63cf\u8ff0\u4e86\u4e00\u4e2a\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u6a21\u578b\uff0c\u5b83\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u5e38\u7528\u7684PBR\u4e86\u3002</p>","tags":["\u6e32\u67d3\u65b9\u7a0b","\u53cd\u5c04\u7387\u65b9\u7a0b"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/BRDF/","title":"BRDF","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/BRDF/#_1","title":"\u5f15\u8a00","text":"<p>\u5728\u5fae\u5e73\u9762\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u8c08\u5230\uff0c\u6839\u636e\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff0c\u4e00\u675f\u5149\u78b0\u649e\u5230\u8868\u9762\u65f6\uff0c\u5b83\u4f1a\u5206\u79bb\u6210\u4e24\u90e8\u4efd\uff0c\u5373\u6298\u5c04\u4e0e\u53cd\u5c04\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u8ba1\u7b97\u8fd9\u4e24\u4e2a\u91cf\uff1a</p> <pre><code>// \u8bbe\u5165\u5c04\u5149\u7ebf\u80fd\u91cf\u4e3a1\n// \u53cd\u5c04/\u955c\u9762 \u90e8\u5206\uff0c\u5165\u5c04\u5149\u7ebf\u88ab\u53cd\u5c04\u7684\u80fd\u91cf\u6240\u5360\u7684\u767e\u5206\u6bd4\nfloat kS = calculateSpecularComponent(...); // \u6298\u5c04/\u6f2b\u53cd\u5c04 \u90e8\u5206\nfloat kD = 1.0 - ks;\n</code></pre> <p>\u800cBRDF\u6b63\u662f\u5e2e\u52a9\u6211\u4eec\u8ba1\u7b97\u51fa\uff0c\u6750\u8d28\u7684\u53cd\u5c04\u4e0e\u6298\u5c04\u5c5e\u6027\u7684\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/BRDF/#brdf","title":"BRDF","text":"<p>BRDF\uff0cBidirectional Reflective Distribution Function\uff0c\u53cc\u5411\u53cd\u5c04\u5206\u5e03\u51fd\u6570</p> <p>\u3010\u8f93\u5165\u53c2\u6570\u3011</p> <ol> <li>\u5165\u5c04\u5149\u65b9\u5411\\(\\omega_i\\)</li> <li>\u51fa\u5c04\uff08\u89c2\u5bdf\uff09\u65b9\u5411\\(\\omega_o\\)</li> <li>\u5e73\u9762\u6cd5\u7ebf\\(n\\)</li> <li>\u7528\u6765\u8868\u793a\u5fae\u5e73\u9762\u7c97\u7cd9\u5ea6\u7684\u53c2\u6570\\(a\\)</li> </ol> <p>\u3010\u8f93\u51fa\u3011\u6bcf\u675f\u5149\u7ebf\u5bf9\u4e00\u4e2a\u7ed9\u5b9a\u4e86\u6750\u8d28\u5c5e\u6027\u7684\u5e73\u9762\u4e0a\u6700\u7ec8\u53cd\u5c04\u51fa\u6765\u7684\u5149\u7ebf\u6240\u4f5c\u51fa\u7684\u8d21\u732e\u7a0b\u5ea6</p> <p>\u3010\u4f8b\u3011</p> <ol> <li>\u5982\u679c\u4e00\u4e2a\u5e73\u9762\u62e5\u6709\u5b8c\u5168\u5149\u6ed1\u7684\u8868\u9762\uff08\u6bd4\u5982\u955c\u9762\uff09\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6240\u6709\u7684\u5165\u5c04\u5149\u7ebf\\(\\omega_i\\)\u800c\u8a00\uff08\u9664\u4e86\u4e00\u675f\u4ee5\u5916\uff09\uff0cBRDF\u51fd\u6570\u90fd\u4f1a\u8fd4\u56de0.0</li> <li>\u53ea\u6709\u4e00\u675f\u4e0e\u51fa\u5c04\u5149\u7ebf\\(\\omega_o\\)\u62e5\u6709\u76f8\u540c\uff08\u88ab\u53cd\u5c04\uff09\u89d2\u5ea6\u7684\u5149\u7ebf\u4f1a\u5f97\u52301.0\u8fd9\u4e2a\u8fd4\u56de\u503c</li> </ol> <p>\u3010\u9075\u5b88\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\u3011\u5bf9\u4e8eBRDF\uff0c\u4e3a\u4e86\u5b9e\u73b0\u7269\u7406\u5b66\u4e0a\u7684\u53ef\u4fe1\u5ea6\uff0c\u5b83\u5fc5\u987b\u9075\u5b88\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff0c\u5373 \u53cd\u5c04\u5149\u7ebf\u7684\u603b\u548c \u6c38\u8fdc\u4e0d\u80fd\u8d85\u8fc7 \u5165\u5c04\u5149\u7ebf\u7684\u603b\u91cf\u3002</p> <ul> <li>\u4e25\u683c\u4e0a\u6765\u8bf4\uff0c\u540c\u6837\u91c7\u7528\\(\\omega_i\\)\uff08\u5165\u5c04\u5149\u65b9\u5411\uff09\u548c\\(\\omega_o\\)\uff08\u51fa\u5c04\u65b9\u5411\uff09\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\u7684 Blinn-Phong\u5149\u7167\u6a21\u578b\u4e5f\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2aBRDF\u3002\u7136\u800c\u7531\u4e8eBlinn-Phong\u6a21\u578b\u5e76\u6ca1\u6709\u9075\u5faa\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff0c\u56e0\u6b64\u5b83\u4e0d\u88ab\u8ba4\u4e3a\u662f\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u3002</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/BRDF/Cook-Torrance%20BRDF/","title":"Cook Torrance BRDF","text":"<p>Cook-Torrance BRDF\u517c\u6709\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u4e24\u4e2a\u90e8\u5206\uff1a</p> \\[ f_r = k_d f_{lambert} +  k_s f_{cook-torrance} \\] <ol> <li>\u3010\\(k_d\\)\u3011\u5165\u5c04\u5149\u7ebf\u4e2d\uff0c\u88ab\u6298\u5c04\u90e8\u5206\u80fd\u91cf\u7684\u6bd4\u7387</li> <li>\u3010\\(k_s\\)\u3011\u53cd\u5c04\u5149\u7ebf\u4e2d\uff0c\u88ab\u53cd\u5c04\u90e8\u5206\u7684\u6bd4\u7387</li> <li>\\(k_d\\)\u548c\\(k_s\\)\u4e00\u822c\u7531\u827a\u672f\u5bb6\u8bbe\u7f6e\uff0c\u4e0d\u540c\u7684\u6750\u8d28\uff0c\u8fd9\u4e24\u4e2a\u53c2\u6570\u7684\u503c\u4e0d\u540c</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/BRDF/Cook-Torrance%20BRDF/#lambertian","title":"Lambertian\u6f2b\u53cd\u5c04","text":"<p>BRDF\u52a0\u53f7\u5de6\u4fa7\\(f_{lambert}\\)\u8868\u793a\u7684\u662f\u6f2b\u53cd\u5c04\u90e8\u5206\uff0c\u5728Cook-Torrance BRDF\u4e2d\u4f7f\u7528Lambertian\u6f2b\u53cd\u5c04\u3002 \u5177\u4f53\u53ef\u53c2\u89c1\uff1a\u300aLambertian\u6f2b\u53cd\u5c04\u300b</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/BRDF/Cook-Torrance%20BRDF/#_1","title":"\u955c\u9762\u53cd\u5c04\u90e8\u5206","text":"<p>Cook-Torrance BRDF\u7684\u955c\u9762\u53cd\u5c04</p> <ol> <li>\u5206\u5b50\u5305\u542b\u4e86\u4e09\u4e2a\u51fd\u6570\uff0c\\(D\\)\u3001\\(F\\)\u3001\\(G\\)\u5206\u522b\u4ee3\u8868\u7740\u4e00\u79cd\u7c7b\u578b\u7684\u51fd\u6570\uff0c\u5b83\u4eec\u90fd\u662f\u7528\u6765\u4f30\u8ba1\u4e00\u4e9b\u7269\u7406\u53c2\u6570\u7684\uff08\u5177\u4f53\u53ef\u67e5\u9605\u300a\u5fae\u5e73\u9762\u6a21\u578b\u300b\uff09</li> <li>\u5206\u6bcd\u90e8\u5206\u8fd8\u6709\u4e00\u4e2a\u6807\u51c6\u5316\u56e0\u5b50</li> </ol> \\[ f_{cook-torrance} = \\frac{DFG}{4(\\omega_o \\cdot n)(\\omega_i \\cdot n)} \\] <pre><code>vec3 evaluateSpecular(...)\n{\n//\u8ba1\u7b97\u5149\u7ebf\u8fbe\u5230\u70b9p\u5904\u7684\u80fd\u91cf\nfloat radiance = evaluateRadiance(light, pixel); float NDF = evaluateDistributionGGX(...);  //\u6cd5\u7ebf\u65b9\u7a0b \u00a0\nfloat G \u00a0 = evaluateGeometrySmith(...);    //\u51e0\u4f55\u51fd\u6570\nvec3 F \u00a0 \u00a0= evaluateFresnelSchlick(...);   //\u83f2\u6d85\u5c14\u51fd\u6570\nfloat denominator = ...;  //\u6839\u636e\u4e00\u4e9b\u53c2\u6570\u8ba1\u7b97\u51fa\u4e00\u4e2a\u5e38\u91cf\nvec3 specular = NDF * G * F / denominator;\nreturn specular;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/","title":"\u5fae\u5e73\u9762\u6a21\u578b","text":"","tags":["\u5fae\u5e73\u9762","\u5e73\u9762\u7c97\u7cd9\u5ea6","\u80fd\u91cf\u5b88\u6052","\u955c\u9762\u53cd\u5c04","\u6298\u5c04","\u6f2b\u53cd\u5c04","\u91d1\u5c5e\u8868\u9762"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/#_1","title":"\u7b80\u4ecb","text":"<p>\u5fae\u5e73\u9762\u7406\u8bba\u8ba4\u4e3a\uff0c\u5728\u5fae\u89c2\u5c3a\u5ea6\u4e0a\uff0c\u4efb\u4f55\u5e73\u9762\u90fd\u53ef\u4ee5\u770b\u6210\u7531N\u4e2a\u5fae\u5e73\u9762\uff08Microfacets\uff09\u6240\u7ec4\u6210\uff0c\u800c\u4e00\u4e2a\u5fae\u5e73\u9762\u662f\u4e00\u4e2a\u7ec6\u5c0f\u7684\u955c\u9762\u3002</p> <p>\u7531\u4e8e\u5e73\u9762\u7684\u7c97\u7cd9\u7a0b\u5ea6\u4e0d\u540c\uff0c\u8fd9\u4e9b\u5fae\u5e73\u9762\u7684\u6392\u5217\u65b9\u5411\u76f8\u5f53\u4e0d\u4e00\u81f4</p> <ol> <li>\u5982\u5de6\u56fe\uff0c\u8fd9\u4e2a\u5e73\u9762\u8d8a\u7c97\u7cd9\uff0c\u90a3\u4e48\u5728\u8fd9\u4e2a\u5e73\u9762\u4e0a\u7684\u5fae\u5e73\u9762\u6392\u5217\u5c31\u8d8a\u6df7\u4e71\u3002\u5728\u955c\u9762\u53cd\u5c04\uff08\u955c\u9762\u5149\uff09\u4e0b\uff0c\u5165\u5c04\u5149\u7ebf\u4f1a\u5411\u56db\u9762\u516b\u65b9\u6563\u5c04\uff08Scatter\uff09\u5f00</li> <li>\u5982\u53f3\u56fe\uff0c\u76f8\u5bf9\u5149\u6ed1\u7684\u5e73\u9762\uff0c\u5165\u5c04\u5149\u7ebf\u51e0\u4e4e\u53ea\u671d\u4e00\u4e2a\u65b9\u5411\u53cd\u5c04\uff0c\u56e0\u6b64\u4f1a\u9020\u6210\u66f4\u5c0f\u3001\u66f4\u9510\u5229\u7684\u53cd\u5c04\uff08\u56e0\u4e3a\u80fd\u91cf\u96c6\u4e2d\u5728\u4e00\u4e2a\u65b9\u5411\uff09</li> </ol> <p></p> <p></p>","tags":["\u5fae\u5e73\u9762","\u5e73\u9762\u7c97\u7cd9\u5ea6","\u80fd\u91cf\u5b88\u6052","\u955c\u9762\u53cd\u5c04","\u6298\u5c04","\u6f2b\u53cd\u5c04","\u91d1\u5c5e\u8868\u9762"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/#_2","title":"\u5e73\u9762\u7684\u7c97\u7cd9\u5ea6","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u63d0\u51fa\u201c\u7c97\u7cd9\u5ea6\u201d\u7684\u6982\u5ff5\uff1f\u63d0\u51fa\u201c\u7c97\u7cd9\u5ea6\u201d\u7684\u539f\u56e0\u662f\u4ec0\u4e48\uff1f</p> <ul> <li>\u5728\u5fae\u89c2\u5c3a\u5ea6\u4e0b\uff0c\u6ca1\u6709\u4efb\u4f55\u5e73\u9762\u662f\u5b8c\u5168\u5149\u6ed1\u7684</li> <li>\u800c\u5fae\u5e73\u9762\u975e\u5e38\u5fae\u5c0f\uff0c\u6bd4\u4e00\u4e2a\u50cf\u7d20\u8fd8\u5c0f</li> <li>\u56e0\u6b64\u4e3a\u4e00\u4e2a\u5e73\u9762\u5047\u8bbe\u4e00\u4e2a \u7c97\u7cd9\u5ea6\uff08Roughness\uff09\u53c2\u6570\uff0c\u7136\u540e\u7528\u7edf\u8ba1\u5b66\u7684\u65b9\u6cd5\u6765\u4f30\u8ba1\u5fae\u5e73\u9762\u7684\u7c97\u7cd9\u7a0b\u5ea6</li> </ul> <p>\u6709\u4e86\u201c\u7c97\u7cd9\u5ea6\u201d\u600e\u4e48\u505a</p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u5e73\u9762\u7c97\u7cd9\u5ea6\u8ba1\u7b97\u51fa\uff0c\u5728\u4f17\u591a\u5fae\u5e73\u9762\u4e2d\uff0c\u4e0e \u534a\u7a0b\u5411\u91cf \u65b9\u5411\u540c\u5411\u7684\u6bd4\u4f8b\uff08\u5177\u4f53\u53c2\u9605\uff1a\u300a\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570\u300b\uff09</li> <li>\u5982\u679c \u5fae\u5e73\u9762\u7684\u671d\u5411 \u4e0e \u5e73\u9762\u534a\u7a0b\u5411\u91cf \u7684\u65b9\u5411\u8d8a\u4e00\u81f4\uff0c\u955c\u9762\u53cd\u5c04\u7684\u6548\u679c\u8d8a\u662f\u5f3a\u70c8\u548c\u9510\u5229</li> </ul> <p>\u5e73\u9762\u7c97\u7cd9\u5ea6\u7684\u6548\u679c</p> <ul> <li>\u5e73\u9762\u7c97\u7cd9\u5ea6\u53c2\u6570 \u9608\u503c\u662f[0, 1]</li> <li>\u7c97\u7cd9\u5ea6\u8d8a\u9ad8\uff0c\u955c\u9762\u53cd\u5c04\u7684\u8f6e\u5ed3\u8981\u5927\u4e00\u4e9b\uff0c\u955c\u9762\u53cd\u5c04\u7684\u533a\u57df\u4f1a\u589e\u52a0\uff0c\u4f46\u662f\u955c\u9762\u53cd\u5c04\u7684\u4eae\u5ea6\u5374\u4f1a\u4e0b\u964d</li> <li>\u7c97\u7cd9\u5ea6\u8d8a\u5c0f\uff0c\u663e\u793a\u51fa\u7684\u955c\u9762\u53cd\u5c04\u8f6e\u5ed3\u5219\u66f4\u5c0f\u66f4\u9510\u5229</li> </ul> <p></p>","tags":["\u5fae\u5e73\u9762","\u5e73\u9762\u7c97\u7cd9\u5ea6","\u80fd\u91cf\u5b88\u6052","\u955c\u9762\u53cd\u5c04","\u6298\u5c04","\u6f2b\u53cd\u5c04","\u91d1\u5c5e\u8868\u9762"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/#_3","title":"\u80fd\u91cf\u5b88\u6052","text":"<p>\u5fae\u5e73\u9762\u8fd1\u4f3c\u6cd5 \u4f7f\u7528\u4e86\u8fd9\u6837\u4e00\u79cd\u5f62\u5f0f\u7684\u80fd\u91cf\u5b88\u6052\uff08Energy Conservation\uff09</p> <ul> <li>\u51fa\u5c04\u5149\u7ebf\u7684\u80fd\u91cf \u6c38\u8fdc\u4e0d\u80fd\u8d85\u8fc7 \u5165\u5c04\u5149\u7ebf\u7684\u80fd\u91cf\uff08\u81ea\u53d1\u5149\u7684\u9762\u9664\u5916\uff09</li> </ul> <p>\u5982\u4f55\u4f53\u73b0\u51fa\u5fae\u5e73\u9762\u6a21\u578b\u4f7f\u7528\u4e86\u8fd9\u79cd\u80fd\u91cf\u5b88\u6052\uff1f</p> <ul> <li>\u5165\u5c04\u5149\u7ebf\u80fd\u91cf\u4e00\u5b9a\uff0c\u5c31\u610f\u5473\u7740\u51fa\u5c04\u5149\u7ebf\u7684\u80fd\u91cf\u4e00\u5b9a</li> <li>\u5982\u4e0a\u56fe\uff0c\u968f\u7740\u7c97\u7cd9\u5ea6\u4e0a\u5347\uff0c\u955c\u9762\u53cd\u5c04\u7684\u533a\u57df\u4e0d\u65ad\u6269\u5927\uff080.1\u662f\u4e00\u4e2a\u5c0f\u70b9\uff0c1.0\u662f\u6574\u4e2a\u5706\uff09\uff0c\u90a3\u4e48\u5747\u644a\u5230\u6bcf\u4e2a\u50cf\u7d20\u70b9\u7684\u80fd\u91cf\u5c31\u8d8a\u5c0f\u4e86\uff0c\u56e0\u6b64\u53cd\u5c04\u7684\u4eae\u5ea6\u4e5f\u5728\u4e0b\u964d</li> <li>\u56e0\u6b64\uff0c\u5149\u6ed1\u5e73\u9762\u7684\u955c\u9762\u53cd\u5c04\u66f4\u5f3a\u70c8\uff08\u80fd\u91cf\u90fd\u96c6\u4e2d\u5728\u4e00\u4e2a\u70b9\u4e0a\u53cd\u5c04\u51fa\u6765\uff09\uff0c\u800c\u7c97\u7cd9\u5e73\u9762\u7684\u53cd\u5c04\u5374\u66f4\u660f\u6697\uff08\u80fd\u91cf\u88ab\u5747\u644a\u5230\u66f4\u591a\u5730\u65b9\u4e86\uff09</li> </ul>","tags":["\u5fae\u5e73\u9762","\u5e73\u9762\u7c97\u7cd9\u5ea6","\u80fd\u91cf\u5b88\u6052","\u955c\u9762\u53cd\u5c04","\u6298\u5c04","\u6f2b\u53cd\u5c04","\u91d1\u5c5e\u8868\u9762"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/#_4","title":"\u6298\u5c04\u4e0e\u53cd\u5c04","text":"<p>\u4e3a\u9075\u5b88\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6f2b\u53cd\u5c04\u3001\u955c\u9762\u53cd\u5c04\u5149\u505a\u51fa\u533a\u5206</p> <ul> <li>\u5f53\u4e00\u675f\u5149\u78b0\u649e\u5230\u8868\u9762\u65f6\uff0c\u5b83\u4f1a\u5206\u79bb\u6210\u4e24\u4e2a\u90e8\u5206\uff1a\u6298\u5c04\u3001\u53cd\u5c04</li> <li>\u53cd\u5c04\uff08\u955c\u9762\u53cd\u5c04\uff09\uff1a\u76f4\u63a5\u53cd\u5c04\u5f00\uff0c\u800c\u4e0d\u8fdb\u5165\u5e73\u9762\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u201c\u955c\u9762\u5149\u7167\u201d</li> <li>\u6298\u5c04\uff08\u6f2b\u53cd\u5c04\u3001\u89d2\u5ea6\u6563\u5c04\uff09\uff1a\u9664\u4e86\u53cd\u5c04\u90e8\u5206\u7684\u80fd\u91cf\uff0c\u4f59\u4e0b\u90e8\u5206\u7684\u80fd\u91cf\u4f1a\u8fdb\u5165\u8868\u9762\u5e76\u88ab\u5438\u6536\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u201c\u6f2b\u53cd\u5c04\u5149\u7167\u201d</li> </ul> <p></p> <p>\u5982\u4f55\u8ba1\u7b97\u6298\u5c04\u4e0e\u53cd\u5c04\uff1f</p> <ul> <li>\u6839\u636e\u80fd\u91cf\u5b88\u6052\u5b9a\u5f8b\uff0c\u5982\u679c\u5165\u5c04\u5149\u7ebf\u7684\u80fd\u91cf\u4e3a<code>1</code>\uff0c\u8bbe\u53cd\u5c04\u4e86<code>kS</code>\u4efd\u80fd\u91cf\uff0c\u90a3\u4e48\u5373\u6298\u5c04\u51fa\u4e86<code>1-ks</code>\u4efd\u80fd\u91cf</li> </ul> <pre><code>// \u53cd\u5c04/\u955c\u9762 \u90e8\u5206\uff0c\u5165\u5c04\u5149\u7ebf\u88ab\u53cd\u5c04\u7684\u80fd\u91cf\u6240\u5360\u7684\u767e\u5206\u6bd4\nfloat kS = calculateSpecularComponent(...); // \u6298\u5c04/\u6f2b\u53cd\u5c04 \u90e8\u5206\nfloat kD = 1.0 - ks;\n</code></pre> <p></p>","tags":["\u5fae\u5e73\u9762","\u5e73\u9762\u7c97\u7cd9\u5ea6","\u80fd\u91cf\u5b88\u6052","\u955c\u9762\u53cd\u5c04","\u6298\u5c04","\u6f2b\u53cd\u5c04","\u91d1\u5c5e\u8868\u9762"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/#_5","title":"\u6f2b\u53cd\u5c04\uff08\u6298\u5c04\u5149\uff09","text":"<p>\u6f2b\u53cd\u5c04\u7684\u539f\u7406\uff1f\u6f2b\u53cd\u5c04\u989c\u8272\u662f\u600e\u4e48\u6765\u7684\uff1f</p> <ul> <li>\u5f53\u5149\u7ebf\u63a5\u89e6\u5230\u4e00\u4e2a\u8868\u9762\u7684\u65f6\u5019\uff0c\u6298\u5c04\u5149\u662f\u4e0d\u4f1a\u7acb\u5373\u5c31\u88ab\u5438\u6536\u7684\uff0c\u800c\u662f\u8fdb\u5165\u7269\u4f53\u5185\u90e8</li> <li>\u901a\u8fc7\u7269\u7406\u5b66\u53ef\u77e5\uff0c\u5149\u7ebf\u5b9e\u9645\u4e0a\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u675f\u6ca1\u6709\u8017\u5c3d\u5c31\u4e0d\u505c\u5411\u524d\u8fd0\u884c\u7684\u80fd\u91cf\uff0c\u800c\u5149\u675f\u662f\u901a\u8fc7\u78b0\u649e\u7684\u65b9\u5f0f\u6765\u6d88\u8017\u80fd\u91cf</li> <li>\u6bcf\u4e00\u79cd\u6750\u6599\u90fd\u7531\u65e0\u6570\u5fae\u5c0f\u7684\u7c92\u5b50\u6240\u7ec4\u6210\uff0c\u8fd9\u4e9b\u7c92\u5b50\u90fd\u80fd\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4e0e\u5149\u7ebf\u53d1\u751f\u78b0\u649e\uff0c\u5bfc\u81f4\u5149\u7ebf\u6298\u6765\u6298\u53bb\uff08\u6298\u6765\u6298\u53bb\u5c31\u79f0\u4e4b\u4e3a\u6563\u5c04\uff09</li> <li>\u8fd9\u4e9b\u7c92\u5b50\u5728\u6bcf\u6b21\u7684\u78b0\u649e\u4e2d\uff0c\u90fd\u53ef\u4ee5\u5438\u6536\u5149\u7ebf\u6240\u643a\u5e26\u7684\u4e00\u90e8\u5206\u6216\u8005\u5168\u90e8\u7684\u80fd\u91cf\uff0c\u800c\u540e\u8f6c\u53d8\u4e3a\u70ed\u91cf</li> <li>\u4e00\u822c\u6765\u8bf4\uff0c\u5e76\u975e\u5168\u90e8\u80fd\u91cf\u90fd\u4f1a\u88ab\u5438\u6536\uff0c\u800c\u5149\u7ebf\u4f1a\u7ee7\u7eed\u6cbf\u7740\u968f\u673a\u7684\u65b9\u5411\u53d1\u6563\uff0c\u7136\u540e\u5728\u548c\u5176\u4ed6\u7c92\u5b50\u8fdb\u884c\u78b0\u649e\uff0c\u76f4\u81f3\u80fd\u91cf\u5b8c\u5168\u8017\u5c3d\uff08\u6216\u79bb\u5f00\u8868\u9762\uff09</li> <li>\u800c\u5149\u7ebf\u8131\u79bb\u7269\u4f53\u8868\u9762\u540e\u5c06\u4f1a\u534f\u540c\u6784\u6210\u8be5\u8868\u9762\u7684\uff08\u6f2b\u53cd\u5c04\uff09\u989c\u8272\u3002\u5982\u679c\u8868\u9762\u628a\u6298\u5c04\u5149\u90fd\u5438\u6536\u5b8c\u4e86\uff0c\u90a3\u4e48\u5c31\u5c55\u73b0\u51fa\u6765\u9ed1\u8272\uff0c\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55\u80fd\u91cf\u53cd\u5c04\u51fa\u6765</li> </ul> <p></p> <p>\u6f2b\u53cd\u5c04\u975e\u5e38\u590d\u6742\uff0c\u5f88\u96be\u6a21\u62df\uff0c\u56e0\u6b64\u5728PBR\u4e2d\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u7b80\u5316</p> <ul> <li>\u5047\u8bbe\u5bf9\u5e73\u9762\u4e0a\u7684\u6bcf\u4e00\u70b9\u6240\u6709\u7684\u6298\u5c04\u5149\u90fd\u4f1a\u88ab\u5b8c\u5168\u5438\u6536\uff0c\u800c\u4e0d\u4f1a\u6563\u5f00</li> <li>\u800c\u6709\u4e00\u4e9b\u6298\u5c04\u5149\u7684\u80fd\u91cf\u4f1a\u88ab \u6b21\u8868\u9762\u6563\u5c04\uff08Subsurface Scattering\uff09 \u8003\u8651\uff0c\u5b83\u4eec\u663e\u8457\u5730\u63d0\u5347\u4e86\u4e00\u4e9b\u8bf8\u5982\u76ae\u80a4\u3001\u5927\u7406\u77f3\u6216\u8005\u8721\u8d28\u8fd9\u6837\u6750\u8d28\u7684\u89c6\u89c9\u6548\u679c\uff0c\u4e0d\u8fc7\u4f34\u968f\u800c\u6765\u7684\u4ee3\u4ef7\u662f\u6027\u80fd\u7684\u4e0b\u964d</li> </ul>","tags":["\u5fae\u5e73\u9762","\u5e73\u9762\u7c97\u7cd9\u5ea6","\u80fd\u91cf\u5b88\u6052","\u955c\u9762\u53cd\u5c04","\u6298\u5c04","\u6f2b\u53cd\u5c04","\u91d1\u5c5e\u8868\u9762"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/#_6","title":"\u91d1\u5c5e\u8868\u9762","text":"<p>\u91d1\u5c5e\u8868\u9762\uff0c\u53ea\u4f1a\u4ea7\u751f\u955c\u9762\u53cd\u5c04\uff08\u53cd\u5c04\u5149\uff09\uff0c\u4e0d\u4f1a\u4ea7\u751f\u6f2b\u53cd\u5c04\uff08\u5373\u6298\u5c04\u5149\u4e3a0\uff09</p> <ul> <li>\u91d1\u5c5e\u8868\u9762\u5bf9\u5149\u7684\u53cd\u5e94 \u4e0e \u975e\u91d1\u5c5e\uff08\u4e5f\u79f0\u4e3a\u4ecb\u7535\u8d28\uff0cDielectrics\uff09\u8868\u9762\u5bf9\u5149\u7684\u53cd\u5e94 \u662f\u4e0d\u540c\u7684</li> <li>\u91d1\u5c5e\u8868\u9762\u4e0a\uff0c\u6240\u6709\u7684\u6298\u5c04\u5149\u90fd\u4f1a\u88ab\u76f4\u63a5\u5438\u6536\u800c\u4e0d\u4f1a\u6563\u5f00\uff0c\u53ea\u4f1a\u7559\u4e0b\u53cd\u5c04\u5149\u6216\u8005\u955c\u9762\u53cd\u5c04\u5149</li> <li>\u4e5f\u5c31\u662f\u8bf4\uff0c\u91d1\u5c5e\u8868\u9762\u53ea\u4f1a\u663e\u793a\u955c\u9762\u53cd\u5c04\u989c\u8272\uff0c\u800c\u4e0d\u4f1a\u663e\u793a\u51fa\u6f2b\u53cd\u5c04\u989c\u8272</li> </ul> <p>\u7531\u4e8e\u91d1\u5c5e\u4e0e\u7535\u4ecb\u8d28\u4e4b\u95f4\u5b58\u5728\u8fd9\u6837\u660e\u663e\u7684\u533a\u522b\uff0c\u56e0\u6b64\u5b83\u4eec\u4e24\u8005\u5728PBR\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u88ab\u533a\u522b\u5904\u7406\uff0c\u6240\u4ee5\u6709\u4e86\u4e24\u79cd\u5de5\u4f5c\u6d41\u3002</p> <p>\u3010PS\u3011\u91d1\u5c5e\u4e3a\u4ec0\u4e48\u6ca1\u6709\u6f2b\u53cd\u5c04\uff1f</p> <ul> <li>\u91d1\u5c5e\u662f\u7531\u9633\u79bb\u5b50\u548c\u81ea\u7531\u7535\u5b50\u7ec4\u6210\u7684\uff0c\u8fdb\u5165\u91d1\u5c5e\u5185\u90e8\u7684\u5149\u5b50\uff0c\u4f1a\u88ab\u81ea\u7531\u7535\u5b50\u5b8c\u5168\u5438\u6536\uff0c\u5bfc\u81f4\u5149\u5b50\u5728\u91d1\u5c5e\u5185\u90e8\u65e0\u6cd5\u51fa\u6765\uff0c\u56e0\u6b64\u6ca1\u6709\u6f2b\u53cd\u5c04</li> </ul> <p>\u3010PS\u3011\u91d1\u5c5e\u6ca1\u6709\u6f2b\u53cd\u5c04\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u6709\u989c\u8272\u5462\uff1f\u91d1\u5b50\u662f\u504f\u9ec4\u7684\u989c\u8272\uff0c\u94dc\u662f\u504f\u9ec4\u504f\u7ea2\u7684\u989c\u8272</p> <ul> <li>\u4e0d\u540c\u7269\u8d28\u5bf9\u53ef\u89c1\u5149\u6ce2\u957f\u7684\u5438\u6536\u4e0e\u7a0b\u5ea6\u662f\u4e0d\u4e00\u6837\u7684</li> <li>\u9ec4\u91d1\u4f1a\u5438\u6536\u6389\u9752\u84dd\u5149\uff0c\u4fdd\u7559\u9ec4\u5149\u3001\u4e00\u5b9a\u7684\u7ea2\u5149\u3001\u5fae\u5f31\u7684\u7d2b\u5149\u3002\u56e0\u6b64\uff0c\u57fa\u4e8e\u91d1\u5c5e\u5de5\u4f5c\u6d41\u4e2d\u6709\u4e00\u4e2a\u57fa\u7840\u8272</li> <li>\u731c\u60f3\uff1a\u8fd9\u4e5f\u8bb8\u4e0e\u5149\u7684\u6ce2\u7c92\u4e8c\u8c61\u6027\u6709\u5173\uff0c\u5149\u5b50\u662f\u88ab\u91d1\u5c5e\u5438\u6536\u7684\uff0c\u4f46\u4e0d\u540c\u91d1\u5c5e\u5bf9\u7535\u78c1\u6ce2\u7684\u5438\u6536\u4e0e\u7a0b\u5ea6\u662f\u4e0d\u4e00\u6837\u7684\u3002\u4e5f\u8bb8\u91d1\u5c5e\u4e5f\u6709\u4e00\u4e22\u4e22\u7684\u6f2b\u53cd\u5c04\u5427\uff0c\u4e5f\u8bb8\u8fd9\u662f\u5b83\u6709\u989c\u8272\u7684\u539f\u56e0</li> </ul>","tags":["\u5fae\u5e73\u9762","\u5e73\u9762\u7c97\u7cd9\u5ea6","\u80fd\u91cf\u5b88\u6052","\u955c\u9762\u53cd\u5c04","\u6298\u5c04","\u6f2b\u53cd\u5c04","\u91d1\u5c5e\u8868\u9762"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/#_7","title":"\u5fae\u5e73\u9762\u6a21\u578b\u76f8\u5173\u51fd\u6570","text":"\u5e38\u7528\u7b26\u53f7 \u51fd\u6570\u540d \u7269\u7406\u91cf \u8bf4\u660e \\(D\\) \u6cd5\u7ebf\u5206\u5e03\u51fd\u6570Normal\u00a0Distribution Function \u4f30\u7b97\u5fae\u5e73\u9762\u7684\u4e3b\u8981\u51fd\u6570 \u4f30\u7b97\u5728\u53d7\u5230\u8868\u9762\u7c97\u7cd9\u5ea6\u7684\u5f71\u54cd\u4e0b\uff0c\u671d\u5411\u65b9\u5411\u4e0e\u534a\u7a0b\u5411\u91cf\u65b9\u5411\u4e00\u81f4\u7684\u5fae\u5e73\u9762\u7684\u6570\u91cf \\(F\\) \u83f2\u6d85\u5c14\u65b9\u7a0bFresnel Rquation \u5728\u4e0d\u540c\u7684\u8868\u9762\u89d2\u4e0b\u8868\u9762\u6240\u53cd\u5c04\u7684\u5149\u7ebf\u6240\u5360\u7684\u6bd4\u7387 \\(G\\) \u51e0\u4f55\u51fd\u6570Geometry Function \u5fae\u5e73\u9762\u81ea\u6210\u9634\u5f71\u7684\u5c5e\u6027 \u5f53\u4e00\u4e2a\u5e73\u9762\u76f8\u5bf9\u6bd4\u8f83\u7c97\u7cd9\u7684\u65f6\u5019\uff0c\u5e73\u9762\u8868\u9762\u4e0a\u7684\u5fae\u5e73\u9762\u6709\u53ef\u80fd\u6321\u4f4f\u5176\u4ed6\u7684\u5fae\u5e73\u9762\u4ece\u800c\u51cf\u5c11\u8868\u9762\u6240\u53cd\u5c04\u7684\u5149\u7ebf","tags":["\u5fae\u5e73\u9762","\u5e73\u9762\u7c97\u7cd9\u5ea6","\u80fd\u91cf\u5b88\u6052","\u955c\u9762\u53cd\u5c04","\u6298\u5c04","\u6f2b\u53cd\u5c04","\u91d1\u5c5e\u8868\u9762"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/#_8","title":"\u5982\u4f55\u9009\u62e9","text":"<p>\u8fd9\u4e9b\u51fd\u6570\u80fd\u591f\u5206\u522b\u4f30\u7b97\u51fa\u4e00\u4e2a\u7269\u7406\u53c2\u6570\u3002 \u800c\u4e14\uff0c\u7528\u6765\u6c42\u8fd9\u4e9b\u7269\u7406\u53c2\u6570\u7684\u51fd\u6570\u53ef\u80fd\u4e0d\u6b62\u4e00\u4e2a\uff0c\u6709\u7684\u51fd\u6570\u975e\u5e38\u771f\u5b9e\uff0c\u6709\u7684\u5219\u975e\u5e38\u9ad8\u6548\u3002\u5bf9\u4e8e\u8fd9\u65b9\u9762\uff0c\u82f1\u4f69\u6e38\u620f\u516c\u53f8\u7684Brian Karis\u5bf9\u4e8e\u8fd9\u4e9b\u51fd\u6570\u7684\u591a\u79cd\u8fd1\u4f3c\u5b9e\u73b0\u65b9\u5f0f\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u7814\u7a76\u3002</p> <p>\u6211\u4eec\u63a8\u8350\u91c7\u7528Epic Games\u5728Unreal Engine 4\u4e2d\u6240\u4f7f\u7528\u7684\u51fd\u6570</p> <ol> <li>D\u4f7f\u7528Trowbridge-Reitz GGX\uff08\u5177\u4f53\u8bf7\u53c2\u8003\u300a\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570\u300b\uff09</li> <li>F\u4f7f\u7528Fresnel-Schlick\u8fd1\u4f3c\uff08\u5177\u4f53\u8bf7\u53c2\u8003\u300a\u83f2\u6d85\u5c14\u65b9\u7a0b\u65b9\u7a0b\u300b\uff09</li> <li>G\u4f7f\u7528Smith\u2019s Schlick-GGX\uff08\u5177\u4f53\u8bf7\u53c2\u8003\u300a\u51e0\u4f55\u51fd\u6570\u300b\uff09</li> </ol>","tags":["\u5fae\u5e73\u9762","\u5e73\u9762\u7c97\u7cd9\u5ea6","\u80fd\u91cf\u5b88\u6052","\u955c\u9762\u53cd\u5c04","\u6298\u5c04","\u6f2b\u53cd\u5c04","\u91d1\u5c5e\u8868\u9762"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/#_9","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>PBR\u7406\u8bba</li> </ol>","tags":["\u5fae\u5e73\u9762","\u5e73\u9762\u7c97\u7cd9\u5ea6","\u80fd\u91cf\u5b88\u6052","\u955c\u9762\u53cd\u5c04","\u6298\u5c04","\u6f2b\u53cd\u5c04","\u91d1\u5c5e\u8868\u9762"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/%E5%87%A0%E4%BD%95%E5%87%BD%E6%95%B0/","title":"\u51e0\u4f55\u51fd\u6570","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/%E5%87%A0%E4%BD%95%E5%87%BD%E6%95%B0/#_1","title":"\u51e0\u4f55\u51fd\u6570","text":"<p>\u51e0\u4f55\u51fd\u6570\u4ece\u7edf\u8ba1\u5b66\u4e0a\u8fd1\u4f3c\u7684\u6c42\u5f97\u4e86\u5fae\u5e73\u9762\u95f4\u76f8\u4e92\u906e\u853d\u7684\u6bd4\u7387\uff0c\u8fd9\u79cd\u76f8\u4e92\u906e\u853d\u4f1a\u635f\u8017\u5149\u7ebf\u7684\u80fd\u91cf\u3002</p> <p></p> <p>\u4e0eNDF\u7c7b\u4f3c\uff0c\u51e0\u4f55\u51fd\u6570\u91c7\u7528\u4e00\u4e2a\u6750\u6599\u7684\u7c97\u7cd9\u5ea6\u53c2\u6570\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u7c97\u7cd9\u5ea6\u8f83\u9ad8\u7684\u8868\u9762\u5176\u5fae\u5e73\u9762\u95f4\u76f8\u4e92\u906e\u853d\u7684\u6982\u7387\u5c31\u8d8a\u9ad8\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/%E5%87%A0%E4%BD%95%E5%87%BD%E6%95%B0/#schlick-ggx","title":"Schlick-GGX","text":"<p>\u672c\u8282\u4ecb\u7ecd\u7684\u51e0\u4f55\u51fd\u6570\uff0c\u662fGGX\u4e0eSchlick-Beckmann\u8fd1\u4f3c\u7684\u7ed3\u5408\u4f53\uff0c\u56e0\u6b64\u53c8\u88ab\u79f0\u4e3aSchlick-GGX</p> <ol> <li>\\(n\\)\u5e73\u9762\u6cd5\u5411\u91cf</li> <li>\\(v\\)\u89c2\u5bdf\u65b9\u5411</li> </ol> \\[ G_{SchlickGGX}(n, v, k) = \\frac{n \\cdot v}{(n \\cdot v)(1 - k) + k } \\] <p>\u3010\\(k\\)\u3011\\(k\\)\u662f\\(a\\)\uff08\u7c97\u7cd9\u5ea6\uff09\u7684\u91cd\u6620\u5c04\uff08Remapping\uff09\u3002\u6709\u4e24\u79cd\u60c5\u51b5</p> <ol> <li>\u5982\u679c\u4f7f\u7528\u76f4\u63a5\u5149\u7167\uff1a\\(k_{direct} = \\frac{(\\alpha + 1)^2}{8}\\)</li> <li>\u5982\u679c\u4f7f\u7528IBL\u5149\u7167\uff1a\\(k_{IBL} = \\frac{\\alpha^2}{2}\\)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/%E5%87%A0%E4%BD%95%E5%87%BD%E6%95%B0/#_2","title":"\u53f2\u5bc6\u65af\u6cd5","text":"<p>\u4e3a\u4e86\u6709\u6548\u7684\u4f30\u7b97\u51e0\u4f55\u90e8\u5206\uff0c\u9700\u8981\u5c06\u89c2\u5bdf\u65b9\u5411\uff08\u51e0\u4f55\u906e\u853d\uff0cGeometry Obstruction\uff09\u548c\u5149\u7ebf\u65b9\u5411\u5411\u91cf\uff08\u51e0\u4f55\u9634\u5f71\uff0cGeometry Shadowing\uff09\u90fd\u8003\u8651\u8fdb\u53bb</p> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53f2\u5bc6\u65af\u6cd5(Smith\u2019s method)\u6765\u628a\u4e24\u8005\u90fd\u7eb3\u5165\u5176\u4e2d\uff1a</p> \\[ G(n, v, l, k) = G_{sub}(n, v, k) G_{sub}(n, l, k) \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/%E5%87%A0%E4%BD%95%E5%87%BD%E6%95%B0/#_3","title":"\u6548\u679c","text":"<p>\u4f7f\u7528\u53f2\u5bc6\u65af\u6cd5\u4e0eSchlick-GGX\u4f5c\u4e3a\\(G_{sub}\\)\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6240\u793a\u4e0d\u540c\u7c97\u7cd9\u5ea6\u7684\u89c6\u89c9\u6548\u679c\uff1a</p> <p></p> <p>\u51e0\u4f55\u51fd\u6570\u662f\u4e00\u4e2a\u503c\u57df\u4e3a[0.0, 1.0]\u7684\u4e58\u6570\uff0c\u5176\u4e2d\u767d\u8272\u6216\u8005\u8bf41.0\u8868\u793a\u6ca1\u6709\u5fae\u5e73\u9762\u9634\u5f71\uff0c\u800c\u9ed1\u8272\u6216\u8005\u8bf40.0\u5219\u8868\u793a\u5fae\u5e73\u9762\u5f7b\u5e95\u88ab\u906e\u853d\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/%E5%87%A0%E4%BD%95%E5%87%BD%E6%95%B0/#glsl","title":"GLSL","text":"<pre><code>float\u00a0GeometrySchlickGGX(float\u00a0NdotV,\u00a0float\u00a0k)  {  float\u00a0nom\u00a0\u00a0\u00a0=\u00a0NdotV;  float\u00a0denom\u00a0=\u00a0NdotV\u00a0*\u00a0(1.0\u00a0-\u00a0k)\u00a0+\u00a0k;  return\u00a0nom\u00a0/\u00a0denom;  }  float\u00a0GeometrySmith(vec3\u00a0N,\u00a0vec3\u00a0V,\u00a0vec3\u00a0L,\u00a0float\u00a0k)  {  float\u00a0NdotV\u00a0=\u00a0max(dot(N,\u00a0V),\u00a00.0);  float\u00a0NdotL\u00a0=\u00a0max(dot(N,\u00a0L),\u00a00.0);  float\u00a0ggx1\u00a0=\u00a0GeometrySchlickGGX(NdotV,\u00a0k);  float\u00a0ggx2\u00a0=\u00a0GeometrySchlickGGX(NdotL,\u00a0k);  return\u00a0ggx1\u00a0*\u00a0ggx2;  }\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/%E6%B3%95%E7%BA%BF%E5%88%86%E5%B8%83%E5%87%BD%E6%95%B0/","title":"\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/%E6%B3%95%E7%BA%BF%E5%88%86%E5%B8%83%E5%87%BD%E6%95%B0/#_1","title":"\u5f15\u8a00","text":"<p>\u5177\u4f53\u53ef\u53c2\u9605\uff1a\u300a\u5fae\u5e73\u9762\u6a21\u578b\u300b</p> <p>\u6839\u636e\u5fae\u8868\u9762\u6a21\u578b\u7684\u7406\u8bba\uff0c\u5728\u5fae\u89c2\u5c3a\u5ea6\u4e0b\uff0c\u4efb\u4f55\u4e00\u4e2a\u5e73\u9762\u90fd\u53ef\u4ee5\u770b\u6210\u7531N\u4e2a\u5fae\u5e73\u9762\u6240\u7ec4\u6210\u7684\u3002</p> <p>\u5982\u679c \u5fae\u5e73\u9762\u7684\u671d\u5411 \u4e0e \u534a\u7a0b\u5411\u91cf \u7684\u65b9\u5411\u8d8a\u4e00\u81f4\uff0c\u955c\u9762\u53cd\u5c04\u7684\u6548\u679c\u8d8a\u662f\u5f3a\u70c8\u548c\u9510\u5229\u3002</p> <p>\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570\u5c31\u662f\u5e2e\u6211\u4eec\u8ba1\u7b97\u51fa\uff0c\u6709\u767e\u5206\u4e4b\u51e0\u7684\u5fae\u5e73\u9762 \u548c \u534a\u7a0b\u5411\u91cf \u7684\u65b9\u5411\u4e00\u81f4\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50</p> <ul> <li>\u7ed9\u5b9a\u4e00\u4e2a\u534a\u7a0b\u5411\u91cf\\(h\\)\uff0c\u548c\u4e00\u4e2a\u7c97\u7cd9\u5ea6</li> <li>\u5982\u679c\u5fae\u5e73\u9762\u4e2d\u670935%\u4e0e\\(h\\)\u65b9\u5411\u4e00\u81f4</li> <li>\u5219\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570\uff08NDF\uff09\u5c06\u4f1a\u8fd4\u56de0.35</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/%E6%B3%95%E7%BA%BF%E5%88%86%E5%B8%83%E5%87%BD%E6%95%B0/#_2","title":"\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570","text":"<p>\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570\uff0cNormal\u00a0Distribution Function</p> <ul> <li>\u4ece\u7edf\u8ba1\u5b66\u4e0a\uff0c\u8fd1\u4f3c\u5730\u8868\u793a\u4e86\u4e0e\u67d0\u4e9b\uff08\u534a\u7a0b\uff09\u5411\u91cf\\(h\\)\u65b9\u5411\u4e00\u81f4\u7684\u5fae\u5e73\u9762\u7684\u6bd4\u7387</li> </ul> <p>\u7ed9\u5b9a\u4e00\u4e2a\u7c97\u7cd9\u5ea6\u53c2\u6570\uff0c\u76ee\u524d\u6709\u5f88\u591aNDF\u90fd\u53ef\u4ee5\u4ece\u7edf\u8ba1\u5b66\u4e0a\u6765\u4f30\u7b97\u5fae\u5e73\u9762\u7684\u603b\u4f53\u53d6\u5411\u5ea6</p> <ul> <li>\u5e38\u7528\u7684\u662fTrowbridge-Reitz GGX</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/%E6%B3%95%E7%BA%BF%E5%88%86%E5%B8%83%E5%87%BD%E6%95%B0/#trowbridge-reitz-ggx","title":"Trowbridge-Reitz GGX","text":"<p>Trowbridge-Reitz GGX\u662f\u6cd5\u7ebf\u5206\u5e03\u51fd\u6570\u7684\u4e00\u79cd</p> <ol> <li>\\(h\\) \u534a\u7a0b\u5411\u91cf</li> <li>\\(a\\)\u8868\u9762\u7c97\u7cd9\u5ea6</li> <li>\\(n\\)\u5e73\u9762\u6cd5\u7ebf</li> </ol> \\[ NDF_{GGX TR}(n, h, \\alpha) = \\frac{\\alpha^2}{\\pi((n \\cdot h)^2 (\\alpha^2 - 1) + 1)^2} \\] <p>\u5047\u8bbe\\(h\\)\u548c\\(n\\)\u4e0d\u53d8\uff0c\u7c97\u7cd9\u5ea6\u4ece0.1\u81f31.0\u53d6\u503c\uff0cNDF\u6570\u503c\u5982\u4e0b\u6240\u793a</p> <ol> <li>\u5f53\u7c97\u7cd9\u5ea6\u5f88\u4f4e\uff08\u8868\u9762\u5f88\u5149\u6ed1\uff09\u65f6\uff0c\u4e0e\u534a\u7a0b\u5411\u91cf\u65b9\u5411\u4e00\u81f4\u7684\u5fae\u5e73\u9762\u4f1a\u9ad8\u5ea6\u96c6\u4e2d\u5728\u4e00\u4e2a\u5f88\u5c0f\u7684\u533a\u57df\u5185\u3002\u7531\u4e8e\u8fd9\u79cd\u96c6\u4e2d\u6027\uff0cNDF\u6700\u7ec8\u4f1a\u751f\u6210\u4e00\u4e2a\u975e\u5e38\u660e\u4eae\u7684\u6591\u70b9</li> <li>\u5f53\u8868\u9762\u6bd4\u8f83\u7c97\u7cd9\u7684\u65f6\u5019\uff0c\u5fae\u5e73\u9762\u7684\u53d6\u5411\u65b9\u5411\u4f1a\u66f4\u52a0\u7684\u968f\u673a\uff08\u5fae\u5e73\u9762\u6392\u5217\u7684\u5f88\u968f\u610f\uff09\u3002\u4f60\u5c06\u4f1a\u53d1\u73b0\u4e0e\\(h\\)\u5411\u91cf\u53d6\u5411\u4e00\u81f4\u7684\u5fae\u5e73\u9762\u5206\u5e03\u5728\u4e00\u4e2a\u5927\u5f97\u591a\u7684\u534a\u5f84\u8303\u56f4\u5185\uff0c\u4f46\u540c\u65f6\u8f83\u4f4e\u7684\u96c6\u4e2d\u6027\u4e5f\u4f1a\u8ba9\u6211\u4eec\u7684\u6700\u7ec8\u6548\u679c\u663e\u5f97\u66f4\u52a0\u7070\u6697</li> </ol> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/%E6%B3%95%E7%BA%BF%E5%88%86%E5%B8%83%E5%87%BD%E6%95%B0/#glsl","title":"GLSL","text":"<pre><code>float D_GGX_TR(vec3 N, vec3 H, float a)\n{ float a2 = a*a; float NdotH = max(dot(N, H), 0.0); float NdotH2 = NdotH*NdotH; float nom = a2; float denom = (NdotH2 * (a2 - 1.0) + 1.0); denom = PI * denom * denom; return nom / denom; }\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/%E8%8F%B2%E6%B6%85%E5%B0%94%E6%96%B9%E7%A8%8B/","title":"\u83f2\u6d85\u5c14\u65b9\u7a0b","text":"<p>\u83f2\u6d85\u5c14\uff08\u53d1\u97f3\u4e3aFreh-nel\uff09\u65b9\u7a0b\u63cf\u8ff0\u7684\u662f\u88ab\u53cd\u5c04\u7684\u5149\u7ebf\u5bf9\u6bd4\u5149\u7ebf\u88ab\u6298\u5c04\u7684\u90e8\u5206\u6240\u5360\u7684\u6bd4\u7387\uff0c\u8fd9\u4e2a\u6bd4\u7387\u4f1a\u968f\u7740\u6211\u4eec\u89c2\u5bdf\u7684\u89d2\u5ea6\u4e0d\u540c\u800c\u4e0d\u540c\u3002</p> <ol> <li>\u5f53\u5149\u7ebf\u78b0\u649e\u5230\u4e00\u4e2a\u8868\u9762\u7684\u65f6\u5019\uff0c\u83f2\u6d85\u5c14\u65b9\u7a0b\u4f1a\u6839\u636e\u89c2\u5bdf\u89d2\u5ea6\u544a\u8bc9\u6211\u4eec\u88ab\u53cd\u5c04\u7684\u5149\u7ebf\u6240\u5360\u7684\u767e\u5206\u6bd4</li> <li>\u5229\u7528\u8fd9\u4e2a\u53cd\u5c04\u6bd4\u7387\u548c\u80fd\u91cf\u5b88\u6052\u539f\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5f97\u51fa\u5149\u7ebf\u88ab\u6298\u5c04\u7684\u90e8\u5206\u4ee5\u53ca\u5149\u7ebf\u5269\u4f59\u7684\u80fd\u91cf</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/PBR%E5%8E%9F%E7%90%86/%E5%BE%AE%E5%B9%B3%E9%9D%A2%E6%A8%A1%E5%9E%8B/%E8%8F%B2%E6%B6%85%E5%B0%94%E6%96%B9%E7%A8%8B/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u7406\u8bba - LearnOpenGL CN (learnopengl-cn.github.io)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E4%BB%A3%E7%A0%81/LearnOpenGL%20lighting%E4%B8%AD%E7%9A%84PBR/","title":"LearnOpenGL lighting\u4e2d\u7684PBR","text":"<p>\u6559\u7a0b\uff1a\u5149\u7167 - LearnOpenGL CN (learnopengl-cn.github.io)</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E4%BB%A3%E7%A0%81/LearnOpenGL%20lighting%E4%B8%AD%E7%9A%84PBR/#_1","title":"\u6e90\u4ee3\u7801","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E4%BB%A3%E7%A0%81/LearnOpenGL%20lighting%E4%B8%AD%E7%9A%84PBR/#11pbrvs","title":"1.1.pbr.vs","text":"<pre><code>#version 330 core\nlayout (location = 0) in vec3 aPos;         //\u70b9\u4f4d\u7f6e\uff08\u6a21\u578b\u5750\u6807\u7cfb\uff09\nlayout (location = 1) in vec3 aNormal;      //\u6cd5\u5411\u91cf\uff08\u6a21\u578b\u5750\u6807\u7cfb\uff09\nlayout (location = 2) in vec2 aTexCoords;   //UV\nout vec2 TexCoords;\nout vec3 WorldPos;\nout vec3 Normal;\nuniform mat4 projection;    //\u6295\u5f71\u77e9\u9635\nuniform mat4 view;          //\u89c6\u56fe\u77e9\u9635\nuniform mat4 model;         //\u6a21\u578b\u77e9\u9635\nvoid main()\n{\nTexCoords = aTexCoords;                     //UV\nWorldPos = vec3(model * vec4(aPos, 1.0));   //\u70b9\u4f4d\u7f6e\uff08\u4e16\u754c\u5750\u6807\u7cfb\uff09\nNormal = mat3(model) * aNormal;             //\u6cd5\u5411\u91cf\uff08\u4e16\u754c\u5750\u6807\u7cfb\uff09\n//\u6ce8\uff1amat3(model)\u662f\u4e3a\u4e86\u53bb\u6389\u5e73\u79fb\u503c\uff0c\u53ea\u505a\u65cb\u8f6c\u4e0e\u7f29\u653e\u7b49\u53d8\u6362\uff0c\u56e0\u4e3a\u5b83\u662f\u5411\u91cf\uff0c\u4e0d\u662f\u5750\u6807\u70b9\ngl_Position =  projection * view * vec4(WorldPos, 1.0); //\u70b9\u4f4d\u7f6e\uff08\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff09\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E4%BB%A3%E7%A0%81/LearnOpenGL%20lighting%E4%B8%AD%E7%9A%84PBR/#11pbrfs","title":"1.1.pbr.fs","text":"<pre><code>#version 330 core\nout vec4 FragColor;\nin vec2 TexCoords;  //UV\nin vec3 WorldPos;   //\u7247\u5143\u4f4d\u7f6e\uff08\u4e16\u754c\u5750\u6807\uff09\nin vec3 Normal;     //\u6cd5\u5411\u91cf\uff08\u4e16\u754c\u5750\u6807\uff09\n//\u6750\u8d28\u53c2\u6570\n// material parameters\nuniform vec3 albedo;        //\u53cd\u7167\u7387\nuniform float metallic;     //\u91d1\u5c5e\u5ea6\nuniform float roughness;    //\u7c97\u7cd9\u5ea6\nuniform float ao;           //\u73af\u5883\u5149\u906e\u853d\n// lights\nuniform vec3 lightPositions[4]; //\u706f\u5149\u4f4d\u7f6e\nuniform vec3 lightColors[4];    //\u706f\u5149\u989c\u8272\uff08\u5b9e\u9645\u4e0a\u4e0d\u662f\u989c\u8272\uff0c\u800c\u662f\u5149\u7684\u8f90\u5c04\u901a\u91cf\uff0c\u7528RGB\u4e09\u8272\u7f16\u7801\u6765\u8868\u793a\uff09\nuniform vec3 camPos;    //\u6444\u50cf\u673a\u4f4d\u7f6e\uff08\u4e16\u754c\u5750\u6807\u7cfb\uff09\nconst float PI = 3.14159265359;\n// ----------------------------------------------------------------------------\n//GGX\u7684\u8d21\u732e\u5ea6\nfloat DistributionGGX(vec3 N, vec3 H, float roughness)\n{\nfloat a = roughness*roughness;\nfloat a2 = a*a;\nfloat NdotH = max(dot(N, H), 0.0);\nfloat NdotH2 = NdotH*NdotH;\nfloat nom   = a2;\nfloat denom = (NdotH2 * (a2 - 1.0) + 1.0);\ndenom = PI * denom * denom;\nreturn nom / denom;\n}\n// ----------------------------------------------------------------------------\n//\u8ba1\u7b97Schlick-GGX\nfloat GeometrySchlickGGX(float NdotV, float roughness)\n{\n//k\u662froughness\u7684\u91cd\u6620\u5c04\uff0c\u672c\u4ee3\u7801\u4f7f\u7528\u76f4\u63a5\u5149\u7167\nfloat r = (roughness + 1.0);\nfloat k = (r*r) / 8.0;\nfloat nom   = NdotV;\nfloat denom = NdotV * (1.0 - k) + k;\nreturn nom / denom;\n}\n// ----------------------------------------------------------------------------\n//\u51e0\u4f55\u51fd\u6570Smith\n// \u5fae\u5e73\u9762\u95f4\u76f8\u4e92\u906e\u853d\u7684\u6bd4\u7387\uff0c\u8fd9\u79cd\u76f8\u4e92\u906e\u853d\u4f1a\u635f\u8017\u5149\u7ebf\u7684\u80fd\u91cf\nfloat GeometrySmith(vec3 N, vec3 V, vec3 L, float roughness)\n{\nfloat NdotV = max(dot(N, V), 0.0);\nfloat NdotL = max(dot(N, L), 0.0);\nfloat ggx2 = GeometrySchlickGGX(NdotV, roughness);\nfloat ggx1 = GeometrySchlickGGX(NdotL, roughness);\nreturn ggx1 * ggx2;\n}\n// ----------------------------------------------------------------------------\n//\u83f2\u6d85\u5c14\u51fd\u6570\n// \u88ab\u53cd\u5c04\u7684\u5149\u7ebf\u5bf9\u6bd4\u5149\u7ebf\u88ab\u6298\u5c04\u7684\u90e8\u5206\u6240\u5360\u7684\u6bd4\u7387\nvec3 fresnelSchlick(float cosTheta, vec3 F0)\n{\nreturn F0 + (1.0 - F0) * pow(clamp(1.0 - cosTheta, 0.0, 1.0), 5.0);\n}\n// ----------------------------------------------------------------------------\nvoid main()\n{\nvec3 N = normalize(Normal);             //\u6cd5\u5411\u91cf\uff08\u4e16\u754c\u5750\u6807\u7cfb\uff09\nvec3 V = normalize(camPos - WorldPos);  //\u5149\u7ebf\u51fa\u5c04\u65b9\u5411\u3001\u89c6\u7ebf\u65b9\u5411\uff08\u6307\u5411\u6444\u50cf\u673a\uff0c\u4e16\u754c\u5750\u6807\u7cfb\uff09\n// calculate reflectance at normal incidence; if dia-electric (like plastic) use F0 \n// of 0.04 and if it's a metal, use the albedo color as F0 (metallic workflow)    \n//\u8ba1\u7b97\u6b63\u5e38\u5165\u5c04\u65f6\u7684\u53cd\u5c04\u7387\n//1. \u5982\u679c\u4ecb\u8d28\u7535(\u5982\u5851\u6599)\u4f7f\u7528F0\u4e3a0.04\n//2. \u5982\u679c\u662f\u91d1\u5c5e\uff0cF0=albedo(\u91d1\u5c5e\u5de5\u4f5c\u6d41\u7a0b)\nvec3 F0 = vec3(0.04); F0 = mix(F0, albedo, metallic);\n//\u53cd\u5c04\u7387\u65b9\u7a0b\n// reflectance equation\nvec3 Lo = vec3(0.0);\nfor(int i = 0; i &lt; 4; ++i) {\n// calculate per-light radiance\nvec3 L = normalize(lightPositions[i] - WorldPos);       //\u5149\u7ebf\u5165\u5c04\u65b9\u5411\uff08\u6307\u5411\u5149\u6e90\uff0c\u4e16\u754c\u5750\u6807\u7cfb\uff09\nvec3 H = normalize(V + L);                              //\u534a\u7a0b\u5411\u91cf\nfloat distance = length(lightPositions[i] - WorldPos);  //\u4e0e\u5149\u6e90\u7684\u8ddd\u79bb\nfloat attenuation = 1.0 / (distance * distance);        //\u5149\u6e90\u8870\u51cf\u7a0b\u5ea6\uff08\u8ddd\u79bb\u8d8a\u8fdc\uff0c\u8870\u51cf\u8d8a\u4e25\u91cd\uff09\nvec3 radiance = lightColors[i] * attenuation;           //\u8f90\u5c04\u7387\uff0c\u5149\u6e90\u6253\u5728\u6b64\u7247\u5143\u4e0a\u7684\u603b\u80fd\u91cf\n// Cook-Torrance BRDF\nfloat NDF = DistributionGGX(N, H, roughness);                   //\u6cd5\u7ebf\u65b9\u7a0b  \nfloat G   = GeometrySmith(N, V, L, roughness);                  //\u51e0\u4f55\u51fd\u6570\nvec3 F    = fresnelSchlick(clamp(dot(H, V), 0.0, 1.0), F0);     //\u83f2\u6d85\u5c14\u51fd\u6570\nvec3 numerator    = NDF * G * F; float denominator = 4.0 * max(dot(N, V), 0.0) * max(dot(N, L), 0.0) + 0.0001; // + 0.0001 to prevent divide by zero\nvec3 specular = numerator / denominator;    //Cook-Torrance BRDF \u955c\u9762\u53cd\u5c04\u90e8\u5206\u7684\u503c\n// kS is equal to Fresnel\n//kS(\u955c\u9762\u53cd\u5c04\u7cfb\u6570) = \u83f2\u6d85\u5c14\u9879\nvec3 kS = F;\n// for energy conservation, the diffuse and specular light can't\n// be above 1.0 (unless the surface emits light); to preserve this\n// relationship the diffuse component (kD) should equal 1.0 - kS.\n//\u4e3a\u4e86\u80fd\u91cf\u5b88\u6052\uff0ckD+kS\u5e94\u7b49\u4e8e1\n//\u56e0\u6b64kD(\u6f2b\u53cd\u5c04)\nvec3 kD = vec3(1.0) - kS;\n// multiply kD by the inverse metalness such that only non-metals \n// have diffuse lighting, or a linear blend if partly metal (pure metals\n// have no diffuse light).\n//\u975e\u91d1\u5c5e\u624d\u6709\u6f2b\u53cd\u5c04\uff08\u91d1\u5c5e\u6ca1\u6709\u6f2b\u53cd\u5c04\uff09\uff0c\u56e0\u6b64kD\u9700\u4e58\u4e0a\u9006\u91d1\u5c5e\u5ea6\nkD *= 1.0 - metallic;\n// scale light by NdotL\nfloat NdotL = max(dot(N, L), 0.0);        // add to outgoing radiance Lo\n//lambert = albedo / PI\nLo += (kD * albedo / PI + specular) * radiance * NdotL;  // note that we already multiplied the BRDF by the Fresnel (kS) so we won't multiply by kS again\n}   // ambient lighting (note that the next IBL tutorial will replace \n// this ambient lighting with environment lighting).\n//\u73af\u5883\u7167\u660e\uff0c\u5728\u4e0b\u4e00\u4e2aIBL\u4e2d\u6559\u7a0b\u4e2d\uff0c\u5c06\u7528\u73af\u5883\u5149\u6765\u5b9e\u73b0\nvec3 ambient = vec3(0.03) * albedo * ao;\n//\u6700\u7ec8\u7684\u989c\u8272\nvec3 color = ambient + Lo;\n// HDR tonemapping\n//HDR\u6280\u672f\u4e4btone mapping\ncolor = color / (color + vec3(1.0));\n// gamma correct\n//gamma\u77eb\u6b63\ncolor = pow(color, vec3(1.0/2.2)); FragColor = vec4(color, 1.0);\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E4%BB%A3%E7%A0%81/LearnOpenGL%20lighting%E4%B8%AD%E7%9A%84PBR/#maincpp","title":"main.cpp","text":"<pre><code>//...\nint main()\n{\n// build and compile shaders\n// -------------------------\nShader shader(\"1.1.pbr.vs\", \"1.1.pbr.fs\");\nshader.use();\nshader.setVec3(\"albedo\", 0.5f, 0.0f, 0.0f);\nshader.setFloat(\"ao\", 1.0f);\n// lights\n// ------\nglm::vec3 lightPositions[] = {\nglm::vec3(-10.0f,  10.0f, 10.0f),\nglm::vec3( 10.0f,  10.0f, 10.0f),\nglm::vec3(-10.0f, -10.0f, 10.0f),\nglm::vec3( 10.0f, -10.0f, 10.0f),\n};\nglm::vec3 lightColors[] = {\nglm::vec3(300.0f, 300.0f, 300.0f),\nglm::vec3(300.0f, 300.0f, 300.0f),\nglm::vec3(300.0f, 300.0f, 300.0f),\nglm::vec3(300.0f, 300.0f, 300.0f)\n};\nint nrRows    = 7;\nint nrColumns = 7;\nwhile (!glfwWindowShouldClose(window))\n{\nfor (int row = 0; row &lt; nrRows; ++row) {\nshader.setFloat(\"metallic\", (float)row / (float)nrRows);\nfor (int col = 0; col &lt; nrColumns; ++col) {\n// we clamp the roughness to 0.05 - 1.0 as perfectly smooth surfaces (roughness of 0.0) tend to look a bit off\n// on direct lighting.\nshader.setFloat(\"roughness\", glm::clamp((float)col / (float)nrColumns, 0.05f, 1.0f));\n//...\nrenderSphere();\n}\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E4%BB%A3%E7%A0%81/VSG%E7%A4%BA%E4%BE%8B%E4%B8%AD%E7%9A%84PBR/","title":"VSG\u793a\u4f8b\u4e2d\u7684PBR","text":"<p>\u94fe\u63a5\uff1a</p> <ol> <li>C++\u4ee3\u7801</li> <li>\u7740\u8272\u5668\u4ee3\u7801</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E4%BB%A3%E7%A0%81/VSG%E7%A4%BA%E4%BE%8B%E4%B8%AD%E7%9A%84PBR/#vsgshaderset","title":"vsgshaderset\u793a\u4f8b","text":"<p>\u547d\u4ee4\u884c\u53c2\u6570\u8bf4\u660e</p> <ol> <li><code>-i</code>\u8f93\u5165\u7684\u6a21\u578b</li> <li><code>--pbr</code></li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E4%BB%A3%E7%A0%81/VSG%E7%A4%BA%E4%BE%8B%E4%B8%AD%E7%9A%84PBR/#_1","title":"\u6e90\u7801\u9605\u8bfb","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E4%BB%A3%E7%A0%81/VSG%E7%A4%BA%E4%BE%8B%E4%B8%AD%E7%9A%84PBR/#standardvert","title":"standard.vert","text":"<pre><code>#version 450\n#extension GL_ARB_separate_shader_objects : enable\n#pragma import_defines (VSG_INSTANCE_POSITIONS, VSG_DISPLACEMENT_MAP)\nlayout(push_constant) uniform PushConstants {\nmat4 projection;\nmat4 modelView;\n} pc;\n#ifdef VSG_DISPLACEMENT_MAP\nlayout(binding = 6) uniform sampler2D displacementMap;\n#endif\nlayout(location = 0) in vec3 vsg_Vertex;        //\u9876\u70b9\u4f4d\u7f6e\uff08\u6a21\u578b\u5750\u6807\u7cfb\uff09\nlayout(location = 1) in vec3 vsg_Normal;        //\u9876\u70b9\u6cd5\u5411\u91cf\uff08\u6a21\u578b\u5750\u6807\u7cfb\uff09\nlayout(location = 2) in vec2 vsg_TexCoord0;     //\u9876\u70b9UV\nlayout(location = 3) in vec4 vsg_Color;         //\u9876\u70b9\u989c\u8272\n#ifdef VSG_INSTANCE_POSITIONS\nlayout(location = 4) in vec3 vsg_position;      //\u4e2d\u5fc3\u70b9(\u6a21\u578b\u5750\u6807\u7cfb\u539f\u70b9\u7684\u504f\u79fb\u503c)\n#endif\nlayout(location = 0) out vec3 eyePos;           //\u9876\u70b9\u4f4d\u7f6e\uff08\u76f8\u673a\u5750\u6807\u7cfb\uff09\nlayout(location = 1) out vec3 normalDir;        //\u6cd5\u5411\u91cf\uff08\u76f8\u673a\u5750\u6807\u7cfb\uff09\nlayout(location = 2) out vec4 vertexColor;      //\u9876\u70b9\u989c\u8272\nlayout(location = 3) out vec2 texCoord0;        //UV\nlayout(location = 5) out vec3 viewDir;          //\u89c6\u7ebf\u65b9\u5411\uff0c\u6307\u5411\u6444\u50cf\u673a\uff08\u76f8\u673a\u5750\u6807\u7cfb\uff09\nout gl_PerVertex{ vec4 gl_Position; };\nvoid main()\n{\nvec4 vertex = vec4(vsg_Vertex, 1.0);\nvec4 normal = vec4(vsg_Normal, 0.0);\n#ifdef VSG_DISPLACEMENT_MAP\n// TODO need to pass as as uniform or per instance attributes\nvec3 scale = vec3(1.0, 1.0, 1.0);\nvertex.xyz = vertex.xyz + vsg_Normal * (texture(displacementMap, vsg_TexCoord0.st).s * scale.z);\nfloat s_delta = 0.01;\nfloat width = 0.0;\nfloat s_left = max(vsg_TexCoord0.s - s_delta, 0.0);\nfloat s_right = min(vsg_TexCoord0.s + s_delta, 1.0);\nfloat t_center = vsg_TexCoord0.t;\nfloat delta_left_right = (s_right - s_left) * scale.x;\nfloat dz_left_right = (texture(displacementMap, vec2(s_right, t_center)).s - texture(displacementMap, vec2(s_left, t_center)).s) * scale.z;\n// TODO need to handle different origins of displacementMap vs diffuseMap etc,\nfloat t_delta = s_delta;\nfloat t_bottom = max(vsg_TexCoord0.t - t_delta, 0.0);\nfloat t_top = min(vsg_TexCoord0.t + t_delta, 1.0);\nfloat s_center = vsg_TexCoord0.s;\nfloat delta_bottom_top = (t_top - t_bottom) * scale.y;\nfloat dz_bottom_top = (texture(displacementMap, vec2(s_center, t_top)).s - texture(displacementMap, vec2(s_center, t_bottom)).s) * scale.z;\nvec3 dx = normalize(vec3(delta_left_right, 0.0, dz_left_right));\nvec3 dy = normalize(vec3(0.0, delta_bottom_top, -dz_bottom_top));\nvec3 dz = normalize(cross(dx, dy));\nnormal.xyz = normalize(dx * vsg_Normal.x + dy * vsg_Normal.y + dz * vsg_Normal.z);\n#endif\n#ifdef VSG_INSTANCE_POSITIONS\nvertex.xyz = vertex.xyz + vsg_position;  //\u52a0\u4e0a\u4e2d\u5fc3\u70b9\n#endif\ngl_Position = (pc.projection * pc.modelView) * vertex; //\u9876\u70b9\u4f4d\u7f6e\uff08\u6807\u51c6\u5316\u8bbe\u5907\u5750\u6807\uff09\neyePos = (pc.modelView * vertex).xyz;   //\u9876\u70b9\u4f4d\u7f6e\uff08\u76f8\u673a\u5750\u6807\u7cfb\uff09\nvec4 lpos = /*vsg_LightSource.position*/ vec4(0.0, 0.0, 1.0, 0.0);\nviewDir = - (pc.modelView * vertex).xyz;    //0\uff08\u76f8\u673a\u5750\u6807\u7cfb\uff0c\u5373\u76f8\u673a\u6240\u5728\u4f4d\u7f6e\uff09-\u9876\u70b9\u4f4d\u7f6e\uff08\u76f8\u673a\u5750\u6807\u7cfb\uff09 = \u89c6\u7ebf\u65b9\u5411\uff0c\u6307\u5411\u6444\u50cf\u673a\nnormalDir = (pc.modelView * normal).xyz;    //\u6cd5\u5411\u91cf\n//\u6ce8\u610f\uff1amodelView\u662f4x4\uff0c\u5176\u4e2d\u5305\u542b\u5e73\u79fb\u91cf\u3002\u800c\u6cd5\u5411\u91cf\u53ea\u662f\u5411\u91cf\uff0c\u4e0d\u9700\u8981\u505a\u5e73\u79fb\uff0c\u53ea\u9700\u8981\u505a\u65cb\u8f6c\u4e0e\u7f29\u653e\u7b49\u53d8\u6362\n//      \u56e0\u6b64\u4e58\u5b8c\u4ee5\u540e\u53d6xyz\u5373\u53ef\n//\u6216\u8005\u8fd9\u4e48\u5199\uff1anormalDir = mat3(pc.modelView) * normal;\nvertexColor = vsg_Color;\ntexCoord0 = vsg_TexCoord0;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E5%85%89%E7%85%A7%E4%B8%8E%E6%9D%90%E8%B4%A8/PBR/%E4%BB%A3%E7%A0%81/VSG%E7%A4%BA%E4%BE%8B%E4%B8%AD%E7%9A%84PBR/#standard_pbrfrag","title":"standard_pbr.frag","text":"<pre><code>#version 450\n#extension GL_ARB_separate_shader_objects : enable\n#pragma import_defines (VSG_DIFFUSE_MAP, VSG_GREYSACLE_DIFFUSE_MAP, VSG_EMISSIVE_MAP, VSG_LIGHTMAP_MAP, VSG_NORMAL_MAP, VSG_METALLROUGHNESS_MAP, VSG_SPECULAR_MAP, VSG_TWO_SIDED_LIGHTING, VSG_WORKFLOW_SPECGLOSS)\nconst float PI = 3.14159265359;\nconst float RECIPROCAL_PI = 0.31830988618;  //PI\u7684\u5012\u6570\nconst float RECIPROCAL_PI2 = 0.15915494;\nconst float EPSILON = 1e-6;\nconst float c_MinRoughness = 0.04;  //\u6700\u5c0f\u7684\u7c97\u7cd9\u5ea6\n//\u6f2b\u53cd\u5c04\u8d34\u56fe\n#ifdef VSG_DIFFUSE_MAP\nlayout(binding = 0) uniform sampler2D diffuseMap;\n#endif\n//\u91d1\u5c5e\u5ea6\u8d34\u56fe\n#ifdef VSG_METALLROUGHNESS_MAP\nlayout(binding = 1) uniform sampler2D mrMap;\n#endif\n//\u6cd5\u5411\u91cf\u8d34\u56fe\n#ifdef VSG_NORMAL_MAP\nlayout(binding = 2) uniform sampler2D normalMap;\n#endif\n//\u73af\u5883\u5149\u5438\u6536\u8d34\u56fe\n#ifdef VSG_LIGHTMAP_MAP\nlayout(binding = 3) uniform sampler2D aoMap;\n#endif\n//\u81ea\u53d1\u5149\u8d34\u56fe\n#ifdef VSG_EMISSIVE_MAP\nlayout(binding = 4) uniform sampler2D emissiveMap;\n#endif\n//\u955c\u9762\u53cd\u5c04\u8d34\u56fe\n#ifdef VSG_SPECULAR_MAP\nlayout(binding = 5) uniform sampler2D specularMap;\n#endif\nlayout(binding = 10) uniform PbrData\n{\nvec4 baseColorFactor;   //\u57fa\u7840\u989c\u8272\u56e0\u5b50\nvec4 emissiveFactor;    //\u81ea\u53d1\u5149\u56e0\u5b50\nvec4 diffuseFactor;     //\u6f2b\u53cd\u5c04\u56e0\u5b50\nvec4 specularFactor;    //\u955c\u9762\u53cd\u5c04\u56e0\u5b50\nfloat metallicFactor;   //\u91d1\u5c5e\u56e0\u5b50\nfloat roughnessFactor;  //\u7c97\u7cd9\u5ea6\u56e0\u5b50\nfloat alphaMask;\nfloat alphaMaskCutoff;\n} pbr;\n/* \u5149\u6e90\u6570\u636e\nvalues[0]\n    \u7b2c\u4e00\u4e2avec4\u5b58\u50a8\u6bcf\u79cd\u706f\u5149\u7684\u4e2a\u6570\uff0c\u4e00\u5171\u67094\u4e2d\n    \u5206\u522b\u662f\uff1a\u73af\u5883\u5149\u3001\u65b9\u5411\u5149\u3001\u70b9\u5149\u6e90\u3001\u805a\u5149\u706f\nvalues[1:64]\u8fde\u7eed\u5b58\u50a8\u5177\u4f53\u7684\u706f\u5149\uff0c\u6839\u636e\u706f\u5149\u6570\u91cf\u4ee5\u6b64\u5b58\u50a8\n\u6bcf\u79cd\u5149\u6e90\u5b58\u50a8\u7684\u4fe1\u606f\u91cf\u4e5f\u4e0d\u540c\uff0c\u5177\u4f53\u5982\u4e0b\uff1a\n    \u73af\u5883\u5149\uff1a\u5149\u7684\u80fd\u91cf\n    \u65b9\u5411\u5149\uff1a\u5149\u7684\u80fd\u91cf\u3001\u5149\u7684\u65b9\u5411\n    \u70b9\u5149\u6e90\uff1a\u5149\u7684\u80fd\u91cf\u3001\u5149\u7684\u4f4d\u7f6e\n    \u805a\u5149\u706f\uff1a\u5149\u7684\u80fd\u91cf\u3001position_cosInnerAngle\u3001lightDirection_cosOuterAngle     \n */\nlayout(set = 1, binding = 0) uniform LightData\n{\nvec4 values[64];\n} lightData;\nlayout(location = 0) in vec3 eyePos;        //\u9876\u70b9\u4f4d\u7f6e\uff08\u76f8\u673a\u5750\u6807\u7cfb\uff09\nlayout(location = 1) in vec3 normalDir;     //\u6cd5\u5411\u91cf\uff08\u76f8\u673a\u5750\u6807\u7cfb\uff09\nlayout(location = 2) in vec4 vertexColor;   //\u9876\u70b9\u989c\u8272\nlayout(location = 3) in vec2 texCoord0;     //UV\nlayout(location = 5) in vec3 viewDir;       //\u89c6\u7ebf\u65b9\u5411\uff0c\u6307\u5411\u6444\u50cf\u673a\uff08\u76f8\u673a\u5750\u6807\u7cfb\uff09\nlayout(location = 0) out vec4 outColor;\n// Encapsulate the various inputs used by the various functions in the shading equation\n// We store values in this struct to simplify the integration of alternative implementations\n// of the shading terms, outlined in the Readme.MD Appendix.\nstruct PBRInfo\n{\nfloat NdotL;                  // cos angle between normal and light direction\nfloat NdotV;                  // cos angle between normal and view direction\nfloat NdotH;                  // cos angle between normal and half vector\nfloat LdotH;                  // cos angle between light direction and half vector\nfloat VdotH;                  // cos angle between view direction and half vector\nfloat VdotL;                  // cos angle between view direction and light direction\nfloat perceptualRoughness;    // roughness value, as authored by the model creator (input to shader)\nfloat metalness;              // metallic value at the surface\nvec3 reflectance0;            // full reflectance color (normal incidence angle)\nvec3 reflectance90;           // reflectance color at grazing angle\nfloat alphaRoughness;         // roughness mapped to a more linear change in the roughness (proposed by [2])\nvec3 diffuseColor;            // color contribution from diffuse lighting\nvec3 specularColor;           // color contribution from specular lighting\n};\nvec4 SRGBtoLINEAR(vec4 srgbIn)\n{\nvec3 linOut = pow(srgbIn.xyz, vec3(2.2));\nreturn vec4(linOut,srgbIn.w);\n}\nvec4 LINEARtoSRGB(vec4 srgbIn)\n{\nvec3 linOut = pow(srgbIn.xyz, vec3(1.0 / 2.2));\nreturn vec4(linOut, srgbIn.w);\n}\nfloat rcp(const in float value)\n{\nreturn 1.0 / value;\n}\nfloat pow5(const in float value)\n{\nreturn value * value * value * value * value;\n}\n// Find the normal for this fragment, pulling either from a predefined normal map\n// or from the interpolated mesh normal and tangent attributes.\nvec3 getNormal()\n{\n#ifdef VSG_NORMAL_MAP\n// Perturb normal, see http://www.thetenthplanet.de/archives/1180\nvec3 tangentNormal = texture(normalMap, texCoord0).xyz * 2.0 - 1.0;\n//tangentNormal *= vec3(2,2,1);\nvec3 q1 = dFdx(eyePos);\nvec3 q2 = dFdy(eyePos);\nvec2 st1 = dFdx(texCoord0);\nvec2 st2 = dFdy(texCoord0);\nvec3 N = normalize(normalDir);\nvec3 T = normalize(q1 * st2.t - q2 * st1.t);\nvec3 B = -normalize(cross(N, T));\nmat3 TBN = mat3(T, B, N);\nreturn normalize(TBN * tangentNormal);\n#else\nreturn normalize(normalDir);\n#endif\n}\n// Basic Lambertian diffuse\n// Implementation from Lambert's Photometria https://archive.org/details/lambertsphotome00lambgoog\n// See also [1], Equation 1\nvec3 BRDF_Diffuse_Lambert(PBRInfo pbrInputs)\n{\nreturn pbrInputs.diffuseColor * RECIPROCAL_PI;\n}\nvec3 BRDF_Diffuse_Custom_Lambert(PBRInfo pbrInputs)\n{\nreturn pbrInputs.diffuseColor * RECIPROCAL_PI * pow(pbrInputs.NdotV, 0.5 + 0.3 * pbrInputs.perceptualRoughness);\n}\n// [Gotanda 2012, \"Beyond a Simple Physically Based Blinn-Phong Model in Real-Time\"]\nvec3 BRDF_Diffuse_OrenNayar(PBRInfo pbrInputs)\n{\nfloat a = pbrInputs.alphaRoughness;\nfloat s = a;// / ( 1.29 + 0.5 * a );\nfloat s2 = s * s;\nfloat VoL = 2 * pbrInputs.VdotH * pbrInputs.VdotH - 1;      // double angle identity\nfloat Cosri = pbrInputs.VdotL - pbrInputs.NdotV * pbrInputs.NdotL;\nfloat C1 = 1 - 0.5 * s2 / (s2 + 0.33);\nfloat C2 = 0.45 * s2 / (s2 + 0.09) * Cosri * ( Cosri &gt;= 0 ? 1.0 / max(pbrInputs.NdotL, pbrInputs.NdotV) : 1 );\nreturn pbrInputs.diffuseColor / PI * ( C1 + C2 ) * ( 1 + pbrInputs.perceptualRoughness * 0.5 );\n}\n// [Gotanda 2014, \"Designing Reflectance Models for New Consoles\"]\nvec3 BRDF_Diffuse_Gotanda(PBRInfo pbrInputs)\n{\nfloat a = pbrInputs.alphaRoughness;\nfloat a2 = a * a;\nfloat F0 = 0.04;\nfloat VoL = 2 * pbrInputs.VdotH * pbrInputs.VdotH - 1;      // double angle identity\nfloat Cosri = VoL - pbrInputs.NdotV * pbrInputs.NdotL;\nfloat a2_13 = a2 + 1.36053;\nfloat Fr = ( 1 - ( 0.542026*a2 + 0.303573*a ) / a2_13 ) * ( 1 - pow( 1 - pbrInputs.NdotV, 5 - 4*a2 ) / a2_13 ) * ( ( -0.733996*a2*a + 1.50912*a2 - 1.16402*a ) * pow( 1 - pbrInputs.NdotV, 1 + rcp(39*a2*a2+1) ) + 1 );\n//float Fr = ( 1 - 0.36 * a ) * ( 1 - pow( 1 - NoV, 5 - 4*a2 ) / a2_13 ) * ( -2.5 * Roughness * ( 1 - NoV ) + 1 );\nfloat Lm = ( max( 1 - 2*a, 0 ) * ( 1 - pow5( 1 - pbrInputs.NdotL ) ) + min( 2*a, 1 ) ) * ( 1 - 0.5*a * (pbrInputs.NdotL - 1) ) * pbrInputs.NdotL;\nfloat Vd = ( a2 / ( (a2 + 0.09) * (1.31072 + 0.995584 * pbrInputs.NdotV) ) ) * ( 1 - pow( 1 - pbrInputs.NdotL, ( 1 - 0.3726732 * pbrInputs.NdotV * pbrInputs.NdotV ) / ( 0.188566 + 0.38841 * pbrInputs.NdotV ) ) );\nfloat Bp = Cosri &lt; 0 ? 1.4 * pbrInputs.NdotV * pbrInputs.NdotL * Cosri : Cosri;\nfloat Lr = (21.0 / 20.0) * (1 - F0) * ( Fr * Lm + Vd + Bp );\nreturn pbrInputs.diffuseColor * RECIPROCAL_PI * Lr;\n}\nvec3 BRDF_Diffuse_Burley(PBRInfo pbrInputs)\n{\nfloat energyBias = mix(pbrInputs.perceptualRoughness, 0.0, 0.5);\nfloat energyFactor = mix(pbrInputs.perceptualRoughness, 1.0, 1.0 / 1.51);\nfloat fd90 = energyBias + 2.0 * pbrInputs.VdotH * pbrInputs.VdotH * pbrInputs.perceptualRoughness;\nfloat f0 = 1.0;\nfloat lightScatter = f0 + (fd90 - f0) * pow(1.0 - pbrInputs.NdotL, 5.0);\nfloat viewScatter = f0 + (fd90 - f0) * pow(1.0 - pbrInputs.NdotV, 5.0);\nreturn pbrInputs.diffuseColor * lightScatter * viewScatter * energyFactor;\n}\nvec3 BRDF_Diffuse_Disney(PBRInfo pbrInputs)\n{\nfloat Fd90 = 0.5 + 2.0 * pbrInputs.perceptualRoughness * pbrInputs.VdotH * pbrInputs.VdotH;\nvec3 f0 = vec3(0.1);\nvec3 invF0 = vec3(1.0, 1.0, 1.0) - f0;\nfloat dim = min(invF0.r, min(invF0.g, invF0.b));\nfloat result = ((1.0 + (Fd90 - 1.0) * pow(1.0 - pbrInputs.NdotL, 5.0 )) * (1.0 + (Fd90 - 1.0) * pow(1.0 - pbrInputs.NdotV, 5.0 ))) * dim;\nreturn pbrInputs.diffuseColor * result;\n}\n// The following equation models the Fresnel reflectance term of the spec equation (aka F())\n// Implementation of fresnel from [4], Equation 15\nvec3 specularReflection(PBRInfo pbrInputs)\n{\n//return pbrInputs.reflectance0 + (pbrInputs.reflectance90 - pbrInputs.reflectance0) * pow(clamp(1.0 - pbrInputs.VdotH, 0.0, 1.0), 5.0);\nreturn pbrInputs.reflectance0 + (pbrInputs.reflectance90 - pbrInputs.reflectance90*pbrInputs.reflectance0) * exp2((-5.55473 * pbrInputs.VdotH - 6.98316) * pbrInputs.VdotH);\n}\n// This calculates the specular geometric attenuation (aka G()),\n// where rougher material will reflect less light back to the viewer.\n// This implementation is based on [1] Equation 4, and we adopt their modifications to\n// alphaRoughness as input as originally proposed in [2].\nfloat geometricOcclusion(PBRInfo pbrInputs)\n{\nfloat NdotL = pbrInputs.NdotL;\nfloat NdotV = pbrInputs.NdotV;\nfloat r = pbrInputs.alphaRoughness * pbrInputs.alphaRoughness;\nfloat attenuationL = 2.0 * NdotL / (NdotL + sqrt(r + (1.0 - r) * (NdotL * NdotL)));\nfloat attenuationV = 2.0 * NdotV / (NdotV + sqrt(r + (1.0 - r) * (NdotV * NdotV)));\nreturn attenuationL * attenuationV;\n}\n// The following equation(s) model the distribution of microfacet normals across the area being drawn (aka D())\n// Implementation from \"Average Irregularity Representation of a Roughened Surface for Ray Reflection\" by T. S. Trowbridge, and K. P. Reitz\n// Follows the distribution function recommended in the SIGGRAPH 2013 course notes from EPIC Games [1], Equation 3.\nfloat microfacetDistribution(PBRInfo pbrInputs)\n{\nfloat roughnessSq = pbrInputs.alphaRoughness * pbrInputs.alphaRoughness;\nfloat f = (pbrInputs.NdotH * roughnessSq - pbrInputs.NdotH) * pbrInputs.NdotH + 1.0;\nreturn roughnessSq / (PI * f * f);\n}\n/*BRDF\n */\nvec3 BRDF(vec3 u_LightColor, vec3 v, vec3 n, vec3 l, vec3 h, float perceptualRoughness, float metallic, vec3 specularEnvironmentR0, vec3 specularEnvironmentR90, float alphaRoughness, vec3 diffuseColor, vec3 specularColor, float ao)\n{\nfloat unclmapped_NdotL = dot(n, l);\n#ifdef VSG_TWO_SIDED_LIGHTING\nif (unclmapped_NdotL &lt; 0.0)\n{\nn = -n;\nunclmapped_NdotL = -unclmapped_NdotL;\n}\n#endif\nvec3 reflection = -normalize(reflect(v, n));\nreflection.y *= -1.0f;\nfloat NdotL = clamp(unclmapped_NdotL, 0.001, 1.0);\nfloat NdotV = clamp(abs(dot(n, v)), 0.001, 1.0);\nfloat NdotH = clamp(dot(n, h), 0.0, 1.0);\nfloat LdotH = clamp(dot(l, h), 0.0, 1.0);\nfloat VdotH = clamp(dot(v, h), 0.0, 1.0);\nfloat VdotL = clamp(dot(v, l), 0.0, 1.0);\nPBRInfo pbrInputs = PBRInfo(NdotL,\nNdotV,\nNdotH,\nLdotH,\nVdotH,\nVdotL,\nperceptualRoughness,\nmetallic,\nspecularEnvironmentR0,\nspecularEnvironmentR90,\nalphaRoughness,\ndiffuseColor,\nspecularColor);\n// Calculate the shading terms for the microfacet specular shading model\nvec3 F = specularReflection(pbrInputs);         //\u83f2\u6d85\u5c14\u51fd\u6570\nfloat G = geometricOcclusion(pbrInputs);        //\u51e0\u4f55\u51fd\u6570\nfloat D = microfacetDistribution(pbrInputs);    //\u6cd5\u7ebf\u65b9\u7a0b\n// Calculation of analytical lighting contribution\nvec3 diffuseContrib = (1.0 - F) * BRDF_Diffuse_Disney(pbrInputs);   //\u6f2b\u53cd\u5c04\u9879\nvec3 specContrib = F * G * D / (4.0 * NdotL * NdotV);               //\u955c\u9762\u53cd\u5c04\u9879\n// Obtain final intensity as reflectance (BRDF) scaled by the energy of the light (cosine law)\nvec3 color = NdotL * u_LightColor * (diffuseContrib + specContrib);\ncolor *= ao;\n#ifdef VSG_EMISSIVE_MAP\nvec3 emissive = SRGBtoLINEAR(texture(emissiveMap, texCoord0)).rgb * pbr.emissiveFactor.rgb;\n#else\nvec3 emissive = pbr.emissiveFactor.rgb;\n#endif\ncolor += emissive;\nreturn color;\n}\nfloat convertMetallic(vec3 diffuse, vec3 specular, float maxSpecular)\n{\nfloat perceivedDiffuse = sqrt(0.299 * diffuse.r * diffuse.r + 0.587 * diffuse.g * diffuse.g + 0.114 * diffuse.b * diffuse.b);\nfloat perceivedSpecular = sqrt(0.299 * specular.r * specular.r + 0.587 * specular.g * specular.g + 0.114 * specular.b * specular.b);\nif (perceivedSpecular &lt; c_MinRoughness)\n{\nreturn 0.0;\n}\nfloat a = c_MinRoughness;\nfloat b = perceivedDiffuse * (1.0 - maxSpecular) / (1.0 - c_MinRoughness) + perceivedSpecular - 2.0 * c_MinRoughness;\nfloat c = c_MinRoughness - perceivedSpecular;\nfloat D = max(b * b - 4.0 * a * c, 0.0);\nreturn clamp((-b + sqrt(D)) / (2.0 * a), 0.0, 1.0);\n}\nvoid main()\n{\nfloat perceptualRoughness = 0.0;\nfloat metallic;\nvec3 diffuseColor;\nvec4 baseColor;\nfloat ambientOcclusion = 1.0;\nvec3 f0 = vec3(0.04);\n#ifdef VSG_DIFFUSE_MAP\n#ifdef VSG_GREYSACLE_DIFFUSE_MAP\nfloat v = texture(diffuseMap, texCoord0.st).s * pbr.baseColorFactor;\nbaseColor = vertexColor * vec4(v, v, v, 1.0);\n#else\nbaseColor = vertexColor * SRGBtoLINEAR(texture(diffuseMap, texCoord0)) * pbr.baseColorFactor;\n#endif\n#else\nbaseColor = vertexColor * pbr.baseColorFactor;\n#endif\nif (pbr.alphaMask == 1.0f)\n{\nif (baseColor.a &lt; pbr.alphaMaskCutoff)\ndiscard;\n}\n#ifdef VSG_WORKFLOW_SPECGLOSS\n#ifdef VSG_DIFFUSE_MAP\nvec4 diffuse = SRGBtoLINEAR(texture(diffuseMap, texCoord0));\n#else\nvec4 diffuse = vec4(1.0);\n#endif\n#ifdef VSG_SPECULAR_MAP\nvec3 specular = SRGBtoLINEAR(texture(specularMap, texCoord0)).rgb;\nperceptualRoughness = 1.0 - texture(specularMap, texCoord0).a;\n#else\nvec3 specular = vec3(0.0);\nperceptualRoughness = 0.0;\n#endif\nfloat maxSpecular = max(max(specular.r, specular.g), specular.b);\n// Convert metallic value from specular glossiness inputs\nmetallic = convertMetallic(diffuse.rgb, specular, maxSpecular);\nconst float epsilon = 1e-6;\nvec3 baseColorDiffusePart = diffuse.rgb * ((1.0 - maxSpecular) / (1 - c_MinRoughness) / max(1 - metallic, epsilon)) * pbr.diffuseFactor.rgb;\nvec3 baseColorSpecularPart = specular - (vec3(c_MinRoughness) * (1 - metallic) * (1 / max(metallic, epsilon))) * pbr.specularFactor.rgb;\nbaseColor = vec4(mix(baseColorDiffusePart, baseColorSpecularPart, metallic * metallic), diffuse.a);\n#else\nperceptualRoughness = pbr.roughnessFactor;\nmetallic = pbr.metallicFactor;\n#ifdef VSG_METALLROUGHNESS_MAP\nvec4 mrSample = texture(mrMap, texCoord0);\nperceptualRoughness = mrSample.g * perceptualRoughness;\nmetallic = mrSample.b * metallic;\n#endif\n#endif\n#ifdef VSG_LIGHTMAP_MAP\nambientOcclusion = texture(aoMap, texCoord0).r;\n#endif\ndiffuseColor = baseColor.rgb * (vec3(1.0) - f0);\ndiffuseColor *= 1.0 - metallic;\nfloat alphaRoughness = perceptualRoughness * perceptualRoughness;\nvec3 specularColor = mix(f0, baseColor.rgb, metallic);\n// Compute reflectance.\nfloat reflectance = max(max(specularColor.r, specularColor.g), specularColor.b);\n// For typical incident reflectance range (between 4% to 100%) set the grazing reflectance to 100% for typical fresnel effect.\n// For very low reflectance range on highly diffuse objects (below 4%), incrementally reduce grazing reflecance to 0%.\nfloat reflectance90 = clamp(reflectance * 25.0, 0.0, 1.0);\nvec3 specularEnvironmentR0 = specularColor.rgb;\nvec3 specularEnvironmentR90 = vec3(1.0, 1.0, 1.0) * reflectance90;\nvec3 n = getNormal();\nvec3 v = normalize(viewDir);    // Vector from surface point to camera\nfloat shininess = 100.0f;\nvec3 color = vec3(0.0, 0.0, 0.0);\n//\u4ecelightData\u53d6\u51fa\u706f\u5149\nvec4 lightNums = lightData.values[0];           //\u7b2c\u4e00\u4e2avec4\uff0c\u5b58\u50a8\u7740\u6bcf\u79cd\u706f\u5149\u7684\u6570\u91cf\nint numAmbientLights = int(lightNums[0]);       //\u73af\u5883\u5149\u6570\u91cf\nint numDirectionalLights = int(lightNums[1]);   //\u65b9\u5411\u7b49\u6570\u91cf\nint numPointLights = int(lightNums[2]);         //\u70b9\u5149\u6e90\u6570\u91cf\nint numSpotLights = int(lightNums[3]);          //\u805a\u5149\u706f\u6570\u91cf\nint index = 1;\n//\u73af\u5883\u5149\nif (numAmbientLights&gt;0)\n{\n// ambient lights\nfor(int i = 0; i&lt;numAmbientLights; ++i)\n{\nvec4 ambient_color = lightData.values[index++]; //\u73af\u5883\u5149\u80fd\u91cf\ncolor += (baseColor.rgb * ambient_color.rgb) * (ambient_color.a * ambientOcclusion);\n}\n}\n//\u5b9a\u5411\u5149\uff1a\u4e0d\u4f1a\u968f\u7740\u8ddd\u79bb\u800c\u8870\u51cf\nif (numDirectionalLights&gt;0)\n{\n// directional lights\nfor(int i = 0; i&lt;numDirectionalLights; ++i)\n{\nvec4 lightColor = lightData.values[index++];        //\u5b9a\u5411\u5149\u80fd\u91cf\nvec3 direction = -lightData.values[index++].xyz;    //\u5b9a\u5411\u5149\u7684\u65b9\u5411\nvec3 l = direction;         // Vector from surface point to light\nvec3 h = normalize(l+v);    // Half vector between both l and v\nfloat scale = lightColor.a;\ncolor.rgb += BRDF(lightColor.rgb * scale, v, n, l, h, perceptualRoughness, metallic, specularEnvironmentR0, specularEnvironmentR90, alphaRoughness, diffuseColor, specularColor, ambientOcclusion);\n}\n}\n//\u70b9\u5149\u6e90\uff1a\u968f\u7740\u8ddd\u79bb\u800c\u8870\u51cf\nif (numPointLights&gt;0)\n{\n// point light\nfor(int i = 0; i&lt;numPointLights; ++i)\n{\nvec4 lightColor = lightData.values[index++];        //\u70b9\u5149\u6e90\u80fd\u91cf\nvec3 position = lightData.values[index++].xyz;      //\u70b9\u5149\u6e90\u7684\u4f4d\u7f6e\nvec3 delta = position - eyePos;\nfloat distance2 = delta.x * delta.x + delta.y * delta.y + delta.z * delta.z;\nvec3 direction = delta / sqrt(distance2);\nvec3 l = direction;         // Vector from surface point to light\nvec3 h = normalize(l+v);    // Half vector between both l and v\nfloat scale = lightColor.a / distance2;\ncolor.rgb += BRDF(lightColor.rgb * scale, v, n, l, h, perceptualRoughness, metallic, specularEnvironmentR0, specularEnvironmentR90, alphaRoughness, diffuseColor, specularColor, ambientOcclusion);\n}\n}\n//\u805a\u5149\u706f\uff1a\u6839\u636e\u65b9\u5411\u5411\u91cf\u6765\u7f29\u653e\u7684\nif (numSpotLights&gt;0)\n{\n// spot light\nfor(int i = 0; i&lt;numSpotLights; ++i)\n{\nvec4 lightColor = lightData.values[index++];                    //\u805a\u5149\u706f\u80fd\u91cf\nvec4 position_cosInnerAngle = lightData.values[index++];\nvec4 lightDirection_cosOuterAngle = lightData.values[index++];\nvec3 delta = position_cosInnerAngle.xyz - eyePos;\nfloat distance2 = delta.x * delta.x + delta.y * delta.y + delta.z * delta.z;\nvec3 direction = delta / sqrt(distance2);\nfloat dot_lightdirection = -dot(lightDirection_cosOuterAngle.xyz, direction);\nvec3 l = direction;        // Vector from surface point to light\nvec3 h = normalize(l+v);    // Half vector between both l and v\nfloat scale = (lightColor.a * smoothstep(lightDirection_cosOuterAngle.w, position_cosInnerAngle.w, dot_lightdirection)) / distance2;\ncolor.rgb += BRDF(lightColor.rgb * scale, v, n, l, h, perceptualRoughness, metallic, specularEnvironmentR0, specularEnvironmentR90, alphaRoughness, diffuseColor, specularColor, ambientOcclusion);\n}\n}\noutColor = LINEARtoSRGB(vec4(color, baseColor.a));\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%8A%97%E9%94%AF%E9%BD%BF/","title":"\u6297\u952f\u9f7f\u7b80\u4ecb","text":"<p>\u672c\u6587\u662f\u79d1\u666e\u7c7b\u6587\u7ae0\uff0c\u7b80\u5316\u4e86\u7ec6\u8282\uff0c\u53ef\u80fd\u4f1a\u6709\u5931\u4e25\u8c28\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%8A%97%E9%94%AF%E9%BD%BF/#_1","title":"\u5f15\u8a00","text":"<p>\u4efb\u4f55\u4e00\u5f20\u7167\u7247\u90fd\u662f\u5bf9\u771f\u5b9e\u4e16\u754c\u7684\u91c7\u6837\uff0c\u5b83\u5c06\u8fde\u7eed\u7684\u4e16\u754c\u79bb\u6563\u6210\u4e00\u4e2a\u4e2a\u5c0f\u65b9\u683c\uff08\u9a6c\u8d5b\u514b\uff09\uff0c\u800c\u4e00\u4e2a\u65b9\u683c\u88ab\u8d4b\u4e88\u4e86\u4e00\u4e2a\u989c\u8272\u3002</p> <p></p> <p>\u5982\u679c\u8fd9\u4e2a\u65b9\u683c\u592a\u5927\uff0c\u5927\u5230\u6211\u4eec\u8089\u773c\u53ef\u89c1\uff0c\u4e00\u6761\u76f4\u7ebf\u7684\u6e32\u67d3\u7ed3\u679c\u5c31\u4f1a\u5448\u73b0\u201c\u952f\u9f7f\u72b6\u201d\u3002\u800c\u201c\u6297\u952f\u9f7f\u201d\u7684\u76ee\u7684\u5373\u662f\u51cf\u5c11\u201c\u952f\u9f7f\u611f\u201d\uff0c\u51cf\u5c11\u8089\u773c\u53ef\u89c1\u7684\u952f\u9f7f\uff08\u683c\u5b50\u53d8\u5c0f\u70b9\uff09\uff0c\u8ba9\u4eba\u611f\u53d7\u5230\u8fde\u7eed\u4e0e\u5e73\u6ed1\uff08\u4e0e\u65c1\u8fb9\u7684\u50cf\u7d20\u505a\u4e00\u4e2a\u6e10\u53d8\uff09\uff0c\u8ba9\u4eba\u611f\u53d7\u5230\u8212\u9002\u3002</p> <p> </p> <p>\u56e0\u6b64\uff0c\u5728\u5c4f\u5e55\u5927\u5c0f\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\u589e\u52a0\u5206\u8fa8\u7387\uff0c\u662f\u6700\u7c97\u66b4\u7684 \u6297\u952f\u9f7f \u65b9\u6cd5\u3002\u8fd9\u5c5e\u4e8e \u7269\u7406\u5c42\u9762 \u7684\u65b9\u6cd5\uff0c\u901a\u8fc7 \u63d0\u9ad8\u786c\u4ef6\u6027\u80fd \u6240\u8fbe\u5230\u7684\u3002\u800c\u6211\u4eec\u5173\u5fc3\u7684\u662f\u8f6f\u4ef6\u5c42\u9762\u7684\u9b54\u6cd5\u3002</p> <p>Tips: \u5c4f\u5e55\u5927\u5c0f\u4e0d\u53d8\uff0c\u683c\u5b50\u6570\u91cf\u53d8\u591a =&gt; \u5355\u4e2a\u683c\u5b50\u5c31\u5c0f\u4e86\uff0c\u952f\u9f7f\u611f\u5c31\u5dee</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%8A%97%E9%94%AF%E9%BD%BF/#_2","title":"\u6297\u952f\u9f7f","text":"<p>\u6297\u952f\u9f7f\uff08anti-aliasing\uff0c\u7b80\u79f0AA\uff09\uff0c\u4e5f\u88ab\u8bd1\u4e3a\u8fb9\u7f18\u67d4\u5316\u3001\u6d88\u9664\u6df7\u53e0\u3001\u6297\u56fe\u50cf\u6298\u53e0\u6709\u635f\uff0c\u53cd\u8d70\u6837\u7b49\u7b49\u3002</p> <p>\u5b83\u662f\u4e00\u79cd\u6d88\u9664\u663e\u793a\u5668\u8f93\u51fa\u7684\u753b\u9762\u4e2d\u56fe\u7269\u8fb9\u7f18\u51fa\u73b0\u51f9\u51f8\u952f\u9f7f\u7684\u6280\u672f\uff0c\u90a3\u4e9b\u51f9\u51f8\u7684\u952f\u9f7f\u901a\u5e38\u56e0\u4e3a\u9ad8\u5206\u8fa8\u7387\u7684\u4fe1\u53f7\u4ee5\u4f4e\u5206\u8fa8\u7387\u8868\u793a\u6216\u65e0\u6cd5\u51c6\u786e\u8fd0\u7b97\u51fa 3D \u56fe\u5f62\u5750\u6807\u5b9a\u4f4d\u65f6\u6240\u5bfc\u81f4\u7684\u56fe\u5f62\u6df7\u53e0\uff08aliasing\uff09\u800c\u4ea7\u751f\u7684\uff0c\u6297\u952f\u9f7f\u6280\u672f\u80fd\u6709\u6548\u5730\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002</p> \u65b9\u6cd5 \u7b80\u8ff0 SSAA Super sample anti-aliasing, \u8d85\u91c7\u6837\u6297\u952f\u9f7f\u5bf9\u4e09\u7ef4\u573a\u666f\u505a \u201c\u8d85\u91c7\u6837\u201d \uff0c\u4ee5\u6b64\u8fbe\u5230\u6297\u952f\u9f7f\u7684\u76ee\u7684\u539f\u6765\u7247\u5143\u7740\u8272\u5668\u9700\u8981\u6267\u884c1920x1080\u6b21\uff0cSSAA\u9700\u8981\u6267\u884c3840x2160\u6b21\uff0c\u6700\u540e\u518d\u5c06\u7ed3\u679c\u5408\u5e76\u62101920x1080 MSAA MultiSampling Antialising\uff0c\u591a\u91c7\u6837\u6297\u952f\u9f7f\uff0c\u662fSSAA\u7684\u6539\u826f\u7248MSAA\u53ea\u9700\u6267\u884c1920x1080\u6b21\u7247\u5143\u7740\u8272\u5668\uff0c\u53ea\u4e0d\u8fc7\u5728\u4e00\u4e2a\u7247\u5143\u7740\u8272\u5668\u5f53\u4e2d\uff0c\u8ba1\u7b97\u51faN\u4e2a\u91c7\u6837\u70b9\u6709M\u4e2a\u5728\u4e09\u89d2\u5f62\u5185\uff0c\u6700\u540e\u5c06\u989c\u8272\u4e58\u4e0aN/M\u4e2a\u6743\u91cd\u73b0\u4ee3\u663e\u5361\u90fd\u6709\u5728GPU\u4e2d\u5b9e\u73b0\u7b97\u6cd5\uff0c\u65e0\u9700\u5f00\u53d1\u4eba\u5458\u5904\u7406\u3002\u56e0\u4e3a\u5b83\u53ea\u662f\u591a\u8ba1\u7b97\u4e86\u201cN\u6b21\u70b9\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185\u201d\uff0c\u6240\u4ee5\u6bd4\u79f0\u4e3a\u201c\u591a\u91c7\u6837\u201d\uff0c\u6bd4\u201c\u8d85\u201d\u66f4\u8f7b\u91cf CSAA Coverage Sampling Anti-Aliasing, \u8986\u76d6\u91c7\u6837\u6297\u952f\u9f7f HRAA High Resolution Anti-Aliasing, \u9ad8\u5206\u8fa8\u7387\u6297\u952f\u9f7f\uff0c\u4e5f\u79f0Quincunx\u65b9\u6cd5 CFAA Custom Filter Anti-Aliasing\uff0c\u53ef\u7f16\u7a0b\u8fc7\u6ee4\u6297\u952f\u9f7f MLAA Morphological Anti-Aliasing, \u5f62\u6001\u6297\u952f\u9f7f FXAA FXAA\uff0cFast Approximate Anti-Aliasing\uff0c\u5feb\u901f\u8fd1\u4f3c\u6297\u952f\u9f7fFXAA\u662f\u5bf9\u6e32\u67d3\u7ed3\u679c\u505a\u56fe\u50cf\u5904\u7406\u3002\u5927\u81f4\u601d\u8def\u662f\u8bc6\u522b\u51fa\u8fb9\u754c\uff0c\u7136\u540e\u5bf9\u8fb9\u754c\u50cf\u7d20\u4e0e\u5468\u8fb9\u50cf\u7d20\u505a\u4e00\u4e2a\u5e73\u6ed1\u8fc7\u6e21 TAA Temporal Anti-Aliasing\uff0c\u5e27\u95f4\u6297\u952f\u9f7fTAA\u7684\u57fa\u7840\u662f\u5e27\u95f4\u76f8\u5173\u6027\uff0c\u5b83\u590d\u7528\u5386\u53f2\u5e27\uff0c\u5c06N\u4e2a\u5386\u53f2\u5e27\u4e0e\u5f53\u524d\u5e27\u505a\u52a0\u6743\u5e73\u6ed1\uff0c\u4ece\u800c\u8fbe\u5230\u6297\u952f\u9f7f\u5e73\u6ed1\u7684\u6548\u679c MFAA Multi-Frame Sampled Anti-Aliasing, \u591a\u5e27\u91c7\u6837\u6297\u952f\u9f7f"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%8A%97%E9%94%AF%E9%BD%BF/#ssaa","title":"SSAA","text":"<p>SSAA\uff08super sample anti-aliasing\uff09\uff0c\u8d85\u91c7\u6837\u6297\u952f\u9f7f\u3002</p> <p>\u7b80\u5355\u800c\u8a00</p> <ol> <li>SSAA\u4e0e\u63d0\u9ad8\u5206\u8fa8\u7387\u7684\u65b9\u5f0f\u4e00\u6837\uff0c\u4e5f\u662f\u975e\u5e38\u7c97\u66b4\u4e0e\u539f\u59cb</li> <li>\u4f8b\u5982\uff0c\u5f53\u524d\u5c4f\u5e55\u662f1920x1080\u5206\u8fa8\u7387\u7684\uff0c\u800c2x2\u7684SSAA\u4f1a\u5c06\u573a\u666f\u6e32\u67d3\u81f33840x2160\u5206\u8fa8\u7387\u7684\u7ed3\u679c\uff0c\u6700\u540e\u5c06\u6e32\u67d3\u7ed3\u679c\u5408\u5e76\u62101920x1080\uff0c\u518d\u5c55\u73b0\u5230\u5c4f\u5e55\u4e0a</li> </ol> <p>\u5177\u4f53\u800c\u8a00\uff1a\u5bf9\u4e09\u7ef4\u573a\u666f\u505a\u8d85\u91c7\u6837\uff0c\u8fbe\u5230\u6297\u952f\u9f7f\u7684\u76ee\u7684\u3002</p> <ol> <li>\u5728\u4e00\u4e2a\u50cf\u7d20\u4e2d\u53d6N\u4e2a\u91c7\u6837\u70b9\uff08\u4e0d\u4e00\u5b9a\u662f\u5747\u5300\u5206\u5e03\uff09</li> <li>\u518d\u5bf9\u6bcf\u4e2a\u91c7\u6837\u70b9\u5206\u522b\u7740\u8272\u8ba1\u7b97</li> <li>\u6700\u540e\u5c06N\u4e2a\u91c7\u6837\u70b9\u7684\u989c\u8272\u53d6\u5e73\u5747\u503c\uff0c\u4f5c\u4e3a\u6b64\u50cf\u7d20\u70b9\u7684\u989c\u8272\u503c</li> </ol> <p></p> <p>\u4f18\u70b9\uff1a\u65b9\u6cd5\u7c97\u66b4\u7b80\u5355\uff0c\u6548\u679c\u5341\u5206\u5ba2\u89c2\u3002 \u7f3a\u70b9\uff1a\u5f00\u9500\u662f\u539f\u6765\u7684N\u500d\uff0c\u9002\u7528\u4e8e2D\u6e32\u67d3\u3002\u56e0\u4e3a3D\u573a\u666f\u6570\u636e\u91cf\u5927\uff0cSSAA\u4e0d\u9002\u7528</p> <ul> <li>\u539f\u5148\u53ea\u9700\u8981\u6267\u884c1920x1080\u6b21\u7247\u5143\u7740\u8272\u5668\uff0c2x2\u7684SSAA\u8981\u6267\u884c3840x2160\u6b21\u7247\u5143\u7740\u8272\u5668\uff0c\u5f00\u9500\u5f88\u5927</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%8A%97%E9%94%AF%E9%BD%BF/#msaa","title":"MSAA","text":"<p>MSAA\uff0cMultiSampling Antialising\uff0c\u591a\u91c7\u6837\u6297\u952f\u9f7f\uff0c\u662fSSAA\u7684\u6539\u826f\u7248\u3002\u73b0\u4ee3\u6240\u6709GPU\u90fd\u5728\u786c\u4ef6\u4e0a\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u65e0\u9700\u5f00\u53d1\u8005\u5b9e\u73b0\u3002</p> <p>\u7b80\u5355\u800c\u8a00</p> <ol> <li>\u5bf9\u4e8e1920x1080\u5206\u8fa8\u7387\u30012x2\u7684SSAA\uff0c\u5b83\u7684\u6027\u80fd\u635f\u8017\u59274\u500d\u3002\u56e0\u4e3a\u4e00\u4e2a\u50cf\u7d20\u8981\u7740\u82722x2\u6b21\uff0c\u5373\u9700\u8981\u6267\u884c1920x1080x2x2\u6b21\u7247\u5143\u7740\u8272\u5668</li> <li>\u800c\u5bf9\u4e8e1920x1080\u5206\u8fa8\u7387\u30012x2\u7684MSAA\u4e0d\u4e00\u6837\uff0c\u5b83\u7740\u8272\u7684\u50cf\u7d20\u4e2a\u6570\u6ca1\u6709\u6539\u53d8\uff0c\u8fd8\u662f\u548c\u539f\u5148\u4e00\u6837\uff08\u5982\u56feb\uff09\uff0c\u53ea\u9700\u8981\u7740\u82721920x1080\u4e2a\u50cf\u7d20</li> <li>\u53ea\u4e0d\u8fc7\uff0c\u5b83\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\uff0c\u5bf9\u6bcf\u4e2a\u50cf\u7d20\u8ba1\u7b97\u4e00\u4e2a\u6743\u91cd\uff08\u5177\u4f53\u5982\u4f55\u8ba1\u7b97\uff0c\u770b\u4e0b\u6587\uff09</li> <li>\u5c06\u6743\u91cd\u4e0e\u6e32\u67d3\u7ed3\u679c\u76f8\u4e58\uff0c\u5373\u8fbe\u5230\u4e86\u6a21\u7cca\u539f\u59cb\u56fe\u50cf\u7684\u6548\u679c\uff0c\u4ece\u800c\u8fbe\u5230\u201c\u6297\u952f\u9f7f\u201d\u7684\u76ee\u7684\uff08\u5982\u56fec\uff09</li> </ol> <p></p> <p>\u3010\u5982\u4f55\u8ba1\u7b97\u6bcf\u4e2a\u50cf\u7d20\u7684\u6743\u91cd\u5462\uff1f\u3011\u7b80\u5355\u800c\u8a00</p> <ul> <li>\u5f53\u4e00\u4e2a\u7247\u5143\u7740\u8272\u5668\u7740\u8272\u5668\u5b8c\u4e4b\u540e\uff0c\u518d\u505a\u4e00\u4e2a\u540e\u5904\u7406\uff1a</li> <li>\u4f8b\u5982\uff0c\u53d62x2\u4e2a\u91c7\u6837\u70b9\uff0cGPU\u8ba1\u7b97\u51fa\u67093\u4e2a\u5728\u4e09\u89d2\u5f62\u5185\uff0c\u90a3\u4e48<code>\u6700\u7ec8\u7ed3\u679c = 3/4 * \u7247\u5143\u989c\u8272</code></li> <li>\u56e0\u6b64\uff0c\u5b83\u5b9e\u9645\u4e0a\u53ea\u662f\u591a(Multi)\u8003\u8651\u4e86\u51e0\u4e2a\u70b9\uff0c\u800c\u975e\u771f\u6b63\u8d85(Super)\u91c7\u6837\u4e86\u3002\u6d88\u8017\u5c11\uff0c\u56e0\u6b64\u88ab\u79f0\u4e3aMSAA</li> </ul> <p></p> <p>\u3010\u4e00\u4e9b\u6548\u679c\u56fe\u3011</p> <p></p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%8A%97%E9%94%AF%E9%BD%BF/#fxaa","title":"FXAA","text":"<p>FXAA\uff0cFast Approximate Anti-Aliasing\uff0c\u5feb\u901f\u8fd1\u4f3c\u6297\u952f\u9f7f\u3002</p> <p>\u7b80\u800c\u8a00\u4e4b</p> <ol> <li>FXAA\u5176\u5b9e\u662f\u4e00\u79cd\u56fe\u50cf\u7684\u540e\u671f\u5904\u7406\u6280\u672f\uff0c\u5b83\u5148\u5149\u6805\u5316\u51fa\u56fe\u7247\uff0c\u7136\u540e\u5bf9\u6e32\u67d3\u7ed3\u679c\u8fdb\u884c\u540e\u671f\u5904\u7406</li> <li>\u5b83\u901a\u8fc7\u4e00\u4e9b\u56fe\u50cf\u5339\u914d\u7684\u65b9\u6cd5\uff0c\u5c06\u6e32\u67d3\u7ed3\u679c\u4e2d\u7684\u8fb9\u754c\uff08\u952f\u9f7f\u90fd\u662f\u5728\u8fb9\u754c\u4e0a\uff09\u627e\u5230</li> <li>\u627e\u5230\u8fb9\u754c\u4ee5\u540e\uff0c\u4e0e\u5468\u56f4\u7684\u50cf\u7d20\u505a\u4e00\u4e2a\u5e73\u6ed1</li> </ol> <p>\u4f18\u70b9\uff1a\u5feb\u901f\u6709\u6548\u3002 \u7f3a\u70b9\uff1a\u7eb9\u7406\u7ec6\u8282\u4f1a\u88ab\u6a21\u7cca\u3002</p> <p>\u6548\u679c\u56fe\uff1a</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%8A%97%E9%94%AF%E9%BD%BF/#taa","title":"TAA","text":"<p>TAA\uff0cTemporal Anti-Aliasing\uff0c\u5e27\u95f4\u6297\u952f\u9f7f\u3002</p> <p>TAA\u7684\u57fa\u7840\u662f\u201c\u5e27\u95f4\u76f8\u5173\u6027\u201d\uff08frame-to-frame coherence\uff09</p> <ol> <li>\u89c6\u9891\uff0c\u6216\u8005\u52a8\u753b\uff0c\u672c\u8d28\u4e0a\u662f\u5728\u65f6\u95f4\u7ef4\u5ea6\u4e0a\u7684\u91c7\u6837\uff0c\u5b83\u5c06\u67d0\u4e2a\u65f6\u523b\u91c7\u6837\u6210\u4e00\u5f20\u56fe\u7247\u3002\u5982\u679c\u91c7\u6837\u7684\u901f\u5ea6\u5f88\u5feb\uff0c\u6bd4\u59821s\u4e2d\u62cd25\u5f20\uff0c\u90a3\u8db3\u591f\u9a97\u8fc7\u4eba\u7684\u773c\u775b\uff0c\u8fbe\u5230\u52a8\u753b\u7684\u6548\u679c</li> <li>\u4e00\u79d2\u5feb\u901f\u8f6e\u64ad25\u5f20\u56fe\u7247\uff0c\u5355\u62ce\u51fa\u6765\u4e24\u5f20\uff0c\u4f60\u4f1a\u53d1\u73b0\u4ed6\u4eec\u7684\u5dee\u5f02\u5f88\u5c0f\u3002\u8fd9\u5c31\u662f\u5e27\u95f4\u76f8\u5173\u6027\uff0c\u56e0\u4e3a\u6bcf\u4e00\u5e27\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\u5f88\u5c0f\uff0c\u5bfc\u81f4\u76f8\u90bb\u5e27\u4e4b\u95f4\u5176\u5b9e\u975e\u5e38\u76f8\u4f3c\uff0c\u53d8\u5316\u5f88\u5c0f</li> </ol> <p></p> <p>\u7b80\u800c\u8a00\u4e4b\uff1aTAA\u7684\u6838\u5fc3\u601d\u60f3\u5373\u662f\u5229\u7528\u5e27\u95f4\u76f8\u5173\u6027\uff0c\u590d\u7528\u4e4b\u524d\u7684\u5e27\u56fe\u50cf\uff08\u5386\u53f2\u5e27\uff09\uff0c\u62ff\u5b83\u4eec\u4e0e\u5f53\u524d\u5e27\u505a\u52a0\u6743\u6df7\u5408\uff0c\u4ece\u800c\u8fbe\u5230\u5e73\u6ed1\u952f\u9f7f\u7684\u6548\u679c\uff0c\u51cf\u5c11\u7a81\u53d8</p> <ul> <li>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u5e27\u4e2d\u50cf\u7d20\u7684\u91c7\u6837\u70b9\u9700\u8981\u505a\u6296\u52a8\uff0c\u5426\u5219\u76f8\u90bb\u5e27\u76f8\u540c\u4f4d\u7f6e\u4e0a\u7684\u989c\u8272\u6ca1\u591a\u5927\u53d8\u5316\uff0c\u5c31\u8fbe\u4e0d\u5230\u201c\u6297\u952f\u9f7f\u201d\u7684\u76ee\u7684</li> </ul> <p></p> <p>\u5982\u4f55\u7406\u89e3TAA\uff1f</p> <ol> <li>\u4ee52x2 SSAA\u4e3e\u4f8b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5e27\u6bcf\u4e2a\u50cf\u7d20\u9700\u7740\u82724\u6b21\uff0c\u8fd9\u65e0\u7591\u52a0\u5927\u4e86\u8ba1\u7b97\u91cf</li> <li>\u800c\u524d\u9762\u4ecb\u7ecd\u4e86\u5e27\u95f4\u76f8\u5173\u6027\uff0c\u6211\u4eec\u65e0\u9700\u5bf9\u4e00\u4e2a\u50cf\u7d20\u7740\u82724\u6b21\uff0c\u6211\u4eec\u53ea\u9700\u62ff\u6b64\u5e27\u524d\u9762\u76843\u5e27\uff0c\u62ff\u6765\u505a\u52a0\u6743\u5e73\u6ed1\uff0c\u4e0d\u5c31\u8fbe\u5230\u4e862x2 SSAA\u7684\u6548\u679c\u3002\u5982\u6b64\uff0c\u6211\u4eec\u6ca1\u6709\u989d\u5916\u7740\u82723\u6b21\uff0c\u53cd\u800c\u8fbe\u5230\u4e86SSAA\u7684\u6548\u679c</li> <li>\u56e0\u6b64\uff0cTAA\u5373\u662f\u5c06N\u4e2a\u91c7\u6837\u70b9\u7684\u8ba1\u7b97\u91cf**\u5206\u644a\u5230\u4e86\u5176\u4ed6\u5e27**\u4e0a\uff0c\u800c\u4e0d\u7528\u5728\u67d0\u5e27\u7684\u65f6\u5019\u518d\u8ba1\u7b97\uff0c\u4ee5\u6b64\u964d\u4f4e\u8ba1\u7b97\u91cf</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%8A%97%E9%94%AF%E9%BD%BF/#_3","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>GAMES101\u53cd\u8d70\u6837\u7b14\u8bb0</li> <li>\u56fe\u5f62\u5b66\u4e2d\u7684\u6297\u952f\u9f7f\u65b9\u6cd5\u7b80\u8c08</li> <li>\u300aReal-Time Rendering 3rd\u300b \u63d0\u70bc\u603b\u7ed3</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/","title":"\u6587\u5b57\u6e32\u67d3","text":"<p>\u5728Office\u8f6f\u4ef6\u5f53\u4e2d\uff0c\u5bf9\u4e8e\u6587\u5b57\u7684\u8bbe\u7f6e\u53c2\u6570\u975e\u5e38\u4e30\u5bcc\uff0c\u6709\u57fa\u7840\u7684\u5b57\u4f53\u3001\u5b57\u4f53\u5927\u5c0f\u3001\u5b57\u4f53\u989c\u8272\u3001\u52a0\u7c97\u3001\u4e0b\u5212\u7ebf\u7b49\uff0c\u8fd8\u6709\u5b57\u95f4\u8ddd\u3001\u884c\u95f4\u8ddd\u3001\u5bf9\u9f50\u7b49\u7b49\u5185\u5bb9\u3002\u4f46\u662f\u8fd9\u4e9b\u5185\u5bb9OpenGL\u3001Vulkan\u7b49\u56fe\u5f62API\u90fd\u6ca1\u6709\u63d0\u4f9b\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ea\u662f\u63d0\u4f9b\u4e00\u4e9b\u57fa\u7840\u7684\u7ed8\u56feAPI\uff0c\u4f8b\u5982\u63d0\u4f9b<code>GL_LINES</code>\uff0c\u5e2e\u52a9\u4f60\u753b\u7ebf\u3002</p> <p></p> <p>\u6587\u5b57\u6e32\u67d3 \u5176\u5b9e\u662f\u6587\u5b57\u5e93\u5e2e\u6211\u4eec\u505a\u7684\uff0c\u4f8b\u5982\u5e38\u7528\u7684FreeType\u7b2c\u4e09\u65b9\u5e93\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u8ff0\u53c2\u6570\u4f20\u7ed9FreeType\uff0c\u5c31\u80fd\u83b7\u5f97\u6587\u5b57\u7684outlines\uff0c\u518d\u57fa\u4e8e<code>GL_LINES</code>\u7b49\u57fa\u7840\u7ed8\u56feAPI\uff0c\u5c06\u6587\u5b57\u5728\u5c4f\u5e55\u4e0a\u4e00\u7b14\u4e00\u5212\u7684\u753b\u51fa\u6765\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_1","title":"\u89e3\u51b3\u65b9\u6848","text":"<p>\u6839\u636e\u56fe\u5f62API\u753b\u753b\u7684\u4e60\u60ef\uff0c\u6587\u5b57\u6e32\u67d3\u4e5f\u53ef\u4ee5\u5206\u4e3a\u4e09\u5927\u7c7b\u3002\u6700\u5e38\u7528\u7684\u662f\u7b2c\u4e09\u79cd\uff0c\u5c06\u5b57\u7b26\u7eb9\u7406\u7ed8\u5236\u5230\u4e00\u4e2a\u77e9\u5f62\u6846\u4e0a\u3002</p> \u89e3\u51b3\u65b9\u6848 \u8bf4\u660e\u4e0e\u96be\u70b9 \u7f3a\u70b9 \u7ed8\u5236\u6587\u5b57\u7684\u8f6e\u5ed3\u7ebf \u83b7\u53d6\u6587\u5b57\u7684\u8f6e\u5ed3\u7ebf\uff0c\u5e76\u901a\u8fc7\u7ed8\u5236\u7ebf\u7684API\u6765\u7ed8\u5236\uff08\u5982OpenGL\u7684<code>GL_LINES</code>\uff09 1. \u4f1a\u8d70\u6837\uff0c\u5e26\u6765\u952f\u9f7f\u72b6\uff0c\u6548\u679c\u5dee2. \u4e0d\u80fd\u5b9e\u73b0\u586b\u5145\u7684\u5b57\u4f533. \u8f6e\u5ed3\u7ebf\u53ef\u80fd\u4f1a \u90e8\u5206\u7f3a\u5931 \u7ed8\u5236\u6587\u5b57\u7684\u4e09\u89d2\u7f51 \u5c06\u6587\u5b57\u7684\u8f6e\u5ed3\u7ebf\u4e09\u89d2\u5316\uff0c\u4ece\u800c\u7ed8\u5236\u6587\u5b57\u8f6e\u5ed3\u7ebf\u7684\u4e09\u89d2\u7f51 1. \u4f1a\u8d70\u6837\uff0c\u5e26\u6765\u952f\u9f7f\u72b6\uff0c\u6548\u679c\u5dee2. \u56e0\u6d89\u53ca\u4e09\u89d2\u5316\u7b49\u64cd\u4f5c\uff0c \u751f\u6210\u6587\u5b57\u7684\u901f\u5ea6\u6162 \u3002\u56e0\u6b64\u9047\u5230\u5927\u91cf\u5237\u65b0\u6587\u5b57\u7684\u529f\u80fd\uff0c\u6e32\u67d3\u4f1a\u5361\u987f \u57fa\u4e8e\u7eb9\u7406\u7ed8\u5236 \u5c06\u6587\u5b57\u751f\u6210\u56fe\u7247\uff0c\u5e76\u5c06\u5176\u5f53\u6210\u7eb9\u7406\u753b\u5230\u4e00\u4e2a\u77e9\u5f62\u6846\u5185 1. \u4e00\u822c\u6587\u5b57\u5e93\uff08\u5982FreeType\uff09\u63d0\u4f9b\u81ea\u52a8\u751f\u6210\u56fe\u7247\u7684API\uff0c\u5b83\u4eec\u5df2\u7ecf\u5e2e\u6211\u4eec\u505a\u4e86\u53cd\u8d70\u6837\uff0c\u56e0\u6b64\u6e32\u67d3 \u6548\u679c\u597d2. \u751f\u6210\u6587\u5b57\u7684\u901f\u5ea6\u5feb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\u904d\u5386\u4e00\u5f20\u56fe\u7247 3. \u5982\u679c\u653e\u5927\u5f88\u591a\u500d\uff0c\u952f\u9f7f\u611f\u8fd8\u662f\u4f1a\u5f88\u5f3a <p>\u4e4b\u540e\uff0c\u56e0\u4e3a\u6e32\u67d3\u6548\u7387\u4e0e\u6548\u679c\uff0c\u53c8\u51fa\u73b0\u4e86\u5176\u4ed6\u7684\u7ed8\u5236\u65b9\u5f0f\uff1a</p> \u89e3\u51b3\u65b9\u6848 \u8bf4\u660e\u4e0e\u96be\u70b9 \u7f3a\u70b9 \u57fa\u4e8eSDF\u7684\u6587\u5b57\u7ed8\u5236 \u5c06\u6bcf\u4e2a\u50cf\u7d20\u5b58\u50a8\u7684\u989c\u8272\u503c\u6362\u6210\u8ddd\u79bb\u6587\u5b57\u8f6e\u5ed3\u6700\u77ed\u8ddd\u79bb1. \u5f53\u50cf\u7d20\u5728\u6587\u5b57\u5185\uff0c\u5219\u7528\u6b63\u6570\u8ddd\u79bb2. \u5728\u6587\u5b57\u5916\u5219\u7528\u8d1f\u6570\u8ddd\u79bb\uff0c\u6587\u5b57\u8f6e\u5ed3\u8ddd\u79bb\u5219\u662f\u96f6\u56e0\u6b64\u53ea\u8981\u5224\u65ad\u50cf\u7d20\u5982\u679c\u662f\u6b63\u6570\uff0c\u5c31\u8f93\u51fa\u989c\u8272\uff0c\u5426\u5219\u4e22\u5f03\u989c\u8272\u5373\u53ef \u57fa\u4e8e\u77e2\u91cf\u7eb9\u7406\u7684GPU\u6587\u5b57\u6e32\u67d3 \u5c06\u6587\u5b57\u7684\u8f6e\u5ed3\u6253\u5305\u4f20\u9001\u5230GPU\u5f53\u4e2d\uff0c\u5728\u7247\u5143\u7740\u8272\u5668\u5f53\u4e2d\u5b8c\u6210\u5b57\u4f53\u7684\u6e32\u67d3"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_2","title":"\u7ed8\u5236\u8f6e\u5ed3\u7ebf","text":"<p>todo:</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_3","title":"\u7ed8\u5236\u4e09\u89d2\u7f51","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_4","title":"\u57fa\u4e8e\u7eb9\u7406\u7ed8\u5236","text":"\u89e3\u51b3\u65b9\u6848 \u8bf4\u660e \u4f18\u70b9 \u7f3a\u70b9 \u4e00\u4e2a\u5b57\u5bf9\u5e94\u4e00\u4e2a\u7eb9\u7406 \u5c06\u8981\u7ed8\u5236\u7684\u6587\u5b57\u6309\u7167\u6bcf\u4e00\u4e2a\u5b57\u751f\u6210\u4e00\u4e2a\u5c0f\u7eb9\u7406\u7684\u65b9\u5f0f\uff0c\u7136\u540e\u518d\u7528\u5c06\u7eb9\u7406\u8d34\u5230\u7f51\u683c\u7684\u8868\u9762\uff0c\u7ed8\u5236\u51fa\u6765\u3002\u4f8b\u5982\uff1a\u201c\u535a\u5ba2\u56ed-\u4f60\u597d\u201d\uff0c\u5219\u4f1a\u751f\u62106\u4e2a\u5c0f\u7eb9\u7406\uff0c\u7136\u540e\u751f\u6210\u7f51\u683c\uff0c\u5c06\u7eb9\u7406\u8d34\u5230\u7f51\u683c\u7684\u8868\u9762\u3002 \u6bcf\u4e00\u4e2a\u5b57\u7684\u5927\u5c0f\u989c\u8272\u90fd\u53ef\u9009\u62e9 \u6587\u5b57\u591a\u4e86\u4ee5\u540e\uff0c\u9891\u7e41\u7684\u5207\u6362\uff0c\u7eb9\u7406\u9020\u6210\u6548\u7387\u4f4e\u4e0b\u3002OSG\u4e2d\u4f7f\u7528\u4e86\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6548\u7387\u6781\u5dee\uff0c\u5c24\u5176\u662f\u5728\u6587\u5b57\u66f4\u65b0\u7684\u60c5\u51b5\u4e0b\u3002 \u591a\u4e2a\u5b57\u4e00\u4e2a\u7eb9\u7406 \u76f4\u63a5\u5c06\u968f\u7ed8\u5236\u7684\u6587\u672c\u5b57\u7b26\u4e32\u751f\u6210\u4e00\u4e2a\u7eb9\u7406\u6570\u636e \u6548\u7387\u4e0a\u6bd4\u7b2c\u4e00\u79cd\u8981\u597d\u5f88\u591a \u66f4\u65b0\u7684\u65f6\u5019\u8981\u91cd\u65b0\u6784\u5efa\u4e00\u4e2a\u65b0\u7684\u7eb9\u7406\uff0c\u901f\u5ea6\u4e0a\u6709\u5f88\u5927\u635f\u5931 \u6240\u6709\u6587\u5b57\u4e00\u4e2a\u7eb9\u7406 \u5c06\u6240\u7ed8\u5236\u7684\u6587\u5b57\u90fd\u653e\u5230\u4e00\u4e2a\u8f83\u5927\u7684\u7eb9\u7406\u4e0a\u53bb\uff1b\u7136\u540e\u5728\u7eb9\u7406\u4e0a\u505a\u7d22\u5f15\uff1b\u5f53\u7ed8\u5236\u7684\u65f6\u5019\uff0c\u53bb\u67e5\u8868\uff0c\u518d\u5c06\u7eb9\u7406\u8d34\u5230\u7f51\u683c\u4e0a\u7ed8\u5236\u51fa\u6765 \u901f\u5ea6\u5f88\u5feb\uff0c\u5f88\u591a\u6e38\u620f\u5f15\u64ce\u90fd\u5728\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f \u5b58\u5728\u7684\u95ee\u9898\u7ed8\u5236\u7684\u6587\u5b57\u591a\u4e86\u4ee5\u540e\u901f\u5ea6\u4f1a\u53d8\u6162\uff0c\u5360\u7528\u5927\u91cf\u7684cpu\u65f6\u95f4\uff0c\u5f53\u7136\u5bf9\u4e8e\u5c0f\u7684\u5e94\u7528\u5df2\u7ecf\u8db3\u591f\u4e86"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_5","title":"\u76f8\u5173\u8d44\u6599","text":"<ol> <li>LearnOpenGL-\u6587\u5b57\u6e32\u67d3</li> <li>freetype\u4f7f\u7528\u8be6\u89e3(\u4e2d\u6587).pdf</li> <li>NeHe OpenGL\u7b2c\u56db\u5341\u4e09\u8bfe\uff1aFreeType\u5e93</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/","title":"FreeType","text":"<p>\u76f8\u5173\u6587\u6863\uff1a</p> <ol> <li>An introduction to glyphs (fifi.org)</li> <li>FreeType Tutorial</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/#freetype","title":"FreeType","text":"<ol> <li>\u662f\u4e00\u4e2a\u514d\u8d39\u3001\u5f00\u6e90\u3001\u53ef\u79fb\u690d\u4e14\u9ad8\u8d28\u91cf\u7684\u5b57\u4f53\u5f15\u64ce</li> <li>\u652f\u6301\u591a\u79cd\u5b57\u4f53\u683c\u5f0f\u6587\u4ef6\uff0c\u5e76\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u8bbf\u95ee\u63a5\u53e3\u3002\u5305\u62ec\u70b9\u9635\u5b57\u3001TrueType\u3001OpenType\u3001Type1\u7b49</li> <li>\u4e0d\u4f46\u53ef\u4ee5\u5904\u7406\u70b9\u9635\u5b57\u4f53\uff08\u4f4d\u56fe\uff09\uff0c\u4e5f\u53ef\u4ee5\u5904\u7406\u591a\u79cd\u77e2\u91cf\u5b57\u4f53</li> <li>\u652f\u6301\u5355\u8272\u4f4d\u56fe\u3001\u53cd\u8d70\u6837\u4f4d\u56fe\u6e32\u67d3\uff0c\u8fd9\u4f7f\u5b57\u4f53\u663e\u793a\u8d28\u91cf\u8fbe\u5230Mac\u7684\u6c34\u5e73\uff1b</li> <li>\u91c7\u7528\u9762\u5411\u5bf9\u8c61\u601d\u60f3\u8bbe\u8ba1\uff0c\u7528\u6237\u53ef\u4ee5\u7075\u6d3b\u7684\u6839\u636e\u9700\u8981\u88c1\u526a\u3002</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/#font","title":"\u5b57\u4f53Font","text":"<p>\u5b57\u4f53\uff0cFont\uff0c\u5373\u4e0d\u540c\u5b57\u7b26\u7684\u96c6\u5408</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/#_2","title":"\u5b57\u5f62","text":"<p>\u300c\u5b57\u5f62\u300d\u4e00\u4e2a\u5b57\u5f62\u5c31\u662f\u4e00\u79cd\u4e66\u5199\u98ce\u683c</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/#_3","title":"\u5b57\u7b26\u56fe","text":"<p>\u300c\u5b57\u7b26\u56fe\u300d\u5b57\u4f53\u6587\u4ef6\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u8868\uff0c\u53eb\u505a\u5b57\u7b26\u56fe\u3002\u7528\u6765\u5c06\u67d0\u79cd\u5b57\u7b26\u7801\u8f6c\u6362\u6210\u5b57\u5f62\u7d22\u5f15\u3002\u4e00\u79cd\u5b57\u7b26\u7f16\u7801\u65b9\u5f0f(\u5982ASCII\u3001Unicode\u3001Big5)\u5bf9\u5e94\u4e00\u5f20\u8868\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/#_4","title":"\u5b57\u5f62\u8f6e\u5ed3","text":"<p>\u300c\u5b57\u5f62\u8f6e\u5ed3\u300d \u70b9\uff1a\u5b57\u5f62\u6587\u672c\u7684\u5927\u5c0f\u901a\u5e38\u7528\u70b9(point)\u8868\u793a\u3002\u70b9\u662f\u4e00\u79cd\u7b80\u5355\u7684\u7269\u7406\u5355\u4f4d\uff0c\u6570\u5b57\u5370\u5237\u4e2d\uff0c\u4e00\u70b9\u7b49\u4e8e1/72\u82f1\u5bf8</p> <ol> <li>\u8bbe\u5907\u7684\u5206\u8fa8\u7387\u901a\u5e38\u4f7f\u7528dpi(\u6bcf\u82f1\u5bf8\u70b9\u6570)\u8868\u793a\u7684\u4e24\u4e2a\u6570</li> <li>\u70b9\u6570\u5927\u5c0f\u548c\u50cf\u7d20\u6570\u7684\u8f6c\u6362\u516c\u5f0f\uff1a<code>\u50cf\u7d20\u5927\u5c0f\u00a0\u00a0=\u00a0\u70b9\u6570*\u5206\u8fa8\u7387/72</code></li> </ol> <p>\u8f6e\u5ed3\u7ebf\uff1a\u5b57\u5f62\u8f6e\u5ed3\u7684\u6e90\u683c\u5f0f\u662f\u4e00\u7ec4\u5c01\u95ed\u7684\u8def\u5f84</p> <ol> <li>\u6bcf\u4e2a\u8f6e\u5ed3\u7ebf\u5212\u5b9a\u5b57\u5f62\u7684\u5916\u90e8\u6216\u5185\u90e8\u533a\u57df\uff0c\u5b83\u4eec\u53ef\u4ee5\u662f\u7ebf\u6bb5\u6216\u8005Bezier\u66f2\u7ebf</li> </ol> <p>EM\u6b63\u65b9\u5f62\uff1a\u5b57\u4f53\u5728\u521b\u5efa\u5b57\u5f62\u8f6e\u5ed3\u65f6\uff0c\u5b57\u4f53\u521b\u5efa\u8005\u6240\u4f7f\u7528\u7684\u5047\u8c61\u7684\u6b63\u65b9\u5f62\uff0c\u4ed6\u53ef\u4ee5\u5c06\u6b64\u60f3\u8c61\u6210\u4e00\u4e2a\u753b\u5b57\u7b26\u7684\u5e73\u9762</p> <ol> <li>\u5b83\u662f\u7528\u6765\u5c06\u8f6e\u5ed3\u7ebf\u7f29\u653e\u5230\u6307\u5b9a\u6587\u672c\u5c3a\u5bf8\u7684\u53c2\u8003\uff1b</li> <li>\u5b83\u7684\u5c3a\u5bf8\u8d8a\u5927\uff0c\u53ef\u4ee5\u8fbe\u5230\u66f4\u5927\u7684\u5b57\u5f62\u5206\u8fa8\u7387</li> <li>\u5b57\u5f62\u53ef\u4ee5\u81ea\u7531\u7684\u8d85\u51faEM\u6b63\u65b9\u5f62</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/#_5","title":"\u4f4d\u56fe","text":"<p>\u4f4d\u56fe\uff1a\u6307\u4ece\u5b57\u5f62\u8f6e\u5ed3\u8f6c\u6362\u6210\u4e00\u4e2a\u4f4d\u56fe\u7684\u8fc7\u7a0b</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/#freetype_1","title":"FreeType\u7684\u5ea6\u91cf\u503c","text":"<p>FreeType\u5728\u52a0\u8f7d\u5b57\u5f62\u7684\u65f6\u5019\u8fd8\u751f\u4ea7\u4e86\u51e0\u4e2a\u5ea6\u91cf\u503c\u6765\u63cf\u8ff0\u751f\u6210\u7684\u5b57\u5f62\u4f4d\u56fe\u7684\u5927\u5c0f\u548c\u4f4d\u7f6e\u3002</p> <p></p> <p>\u3010\u57fa\u7ebf\u3011\u6bcf\u4e00\u4e2a\u5b57\u5f62\u90fd\u653e\u5728\u4e00\u4e2a\u6c34\u5e73\u7684\u57fa\u7ebf\uff08Baseline\uff09\u4e0a\uff0c\u4e0a\u56fe\u4e2d\u88ab\u63cf\u9ed1\u7684\u6c34\u5e73\u7bad\u5934\u8868\u793a\u8be5\u5b57\u5f62\u7684\u57fa\u7ebf</p> <ol> <li>\u8fd9\u6761\u57fa\u7ebf\u7c7b\u4f3c\u4e8e\u62fc\u97f3\u56db\u683c\u7ebf\u4e2d\u7684\u7b2c\u4e8c\u6839\u6c34\u5e73\u7ebf</li> <li>\u4e00\u4e9b\u5b57\u5f62\u88ab\u653e\u5728\u57fa\u7ebf\u4ee5\u4e0a(\u5982\u2019x\u2019\u6216\u2019a\u2019)\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u4f1a\u8d85\u8fc7\u57fa\u7ebf\u4ee5\u4e0b(\u5982\u2019g\u2019\u6216\u2019p\u2019)</li> </ol> <p>\u3010\u5ea6\u91cf\u503c\u3011FreeType\u7684\u8fd9\u4e9b\u5ea6\u91cf\u503c\u4e2d\u5305\u542b\u4e86\u5b57\u5f62\u5728\u76f8\u5bf9\u4e8e\u57fa\u7ebf\u4e0a\u7684\u504f\u79fb\u91cf\u7528\u6765\u63cf\u8ff0\u5b57\u5f62\u76f8\u5bf9\u4e8e\u6b64\u57fa\u7ebf\u7684\u4f4d\u7f6e\uff0c\u5b57\u5f62\u7684\u5927\u5c0f\uff0c\u4ee5\u53ca\u4e0e\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002</p> \u5c5e\u6027 \u83b7\u53d6\u65b9\u5f0f \u751f\u6210\u4f4d\u56fe\u63cf\u8ff0 width\u00a0 face-&gt;glyph-&gt;bitmap.width \u5bbd\u5ea6\uff0c\u5355\u4f4d:\u50cf\u7d20 height face-&gt;glyph-&gt;bitmap.rows \u9ad8\u5ea6\uff0c\u5355\u4f4d:\u50cf\u7d20 bearingX face-&gt;glyph-&gt;bitmap_left \u6c34\u5e73\u4f4d\u7f6e(\u76f8\u5bf9\u4e8e\u8d77\u70b9origin)\uff0c\u5355\u4f4d:\u50cf\u7d20 bearingY face-&gt;glyph-&gt;bitmap_top \u5782\u76f4\u4f4d\u7f6e(\u76f8\u5bf9\u4e8e\u57fa\u7ebfBaseline)\uff0c\u5355\u4f4d:\u50cf\u7d20 advance\u00a0 face-&gt;glyph-&gt;advance.x \u8d77\u70b9\u5230\u4e0b\u4e00\u4e2a\u5b57\u5f62\u7684\u8d77\u70b9\u95f4\u7684\u8ddd\u79bb(\u5355\u4f4d:1/64\u50cf\u7d20) \u5176\u4ed6 face-&gt;glyph-&gt;bitmap.pitch \u7edd\u5bf9\u503c\u8868\u793a\u4e00\u884c\u6240\u5360\u5b57\u8282\u6570 face-&gt;glyph-&gt;bitmap.pixel_mode \u50cf\u7d20\u6a21\u5f0f\uff0c1\u6307\u5355\u8272\u7684\uff0c8\u8868\u793a\u53cd\u8d70\u6837\u7070\u5ea6\u503c face-&gt;glyph-&gt;bitmap.buffer glyph\u7684\u70b9\u9635\u4f4d\u56fe\u5185\u5b58\u7ef6\u51b2\u533a"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/#truetype","title":"\u9644\uff1aTrueType\u5b57\u4f53\u5e93","text":"<p>TrueType\u5b57\u4f53\u4e0d\u91c7\u7528\u50cf\u7d20\u6216\u5176\u4ed6\u4e0d\u53ef\u7f29\u653e\u7684\u65b9\u5f0f\u6765\u5b9a\u4e49\uff0c\u800c\u662f\u4e00\u4e9b\u901a\u8fc7\u6570\u5b66\u516c\u5f0f(\u66f2\u7ebf\u7684\u7ec4\u5408)\u3002 \u8fd9\u4e9b\u5b57\u5f62\uff0c\u7c7b\u4f3c\u4e8e\u77e2\u91cf\u56fe\u50cf\uff0c\u53ef\u4ee5\u6839\u636e\u4f60\u9700\u8981\u7684\u5b57\u4f53\u5927\u5c0f\u6765\u751f\u6210\u50cf\u7d20\u56fe\u50cf\u3002 \u901a\u8fc7\u4f7f\u7528TrueType\u5b57\u4f53\u53ef\u4ee5\u8f7b\u6613\u5448\u73b0\u4e0d\u540c\u5927\u5c0f\u7684\u5b57\u7b26\u7b26\u53f7\u5e76\u4e14\u6ca1\u6709\u4efb\u4f55\u8d28\u91cf\u635f\u5931\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/","title":"FreeType\u4f7f\u7528\u624b\u518c","text":"<p>FreeType\u7ed8\u5236\u7684\u57fa\u672c\u6d41\u7a0b\u4f8b\u5b50\uff1a\u77e2\u91cf\u6587\u5b57\u7684\u5b9e\u73b0\u8fc7\u7a0b\uff1a</p> <ol> <li>\u7ed9\u5b9a\u4e00\u4e2a\u6587\u5b57\uff0c\u65e0\u8bba\u662f\u795e\u9a6c\u7f16\u7801\u65b9\u5f0f\uff08ASCII\u3001GBK\u3001unicode\u3001BIG5\uff09\uff0c\u90fd\u53ef\u4ee5\u786e\u5b9a\u4ed6\u7684\u7f16\u7801\u503c</li> <li>\u6839\u636e\u7f16\u7801\u503c\u4ece\u5b57\u4f53\u6587\u4ef6\u4e2d\u627e\u5230\u201cglyph\u201d</li> <li>\u8bbe\u7f6e\u5b57\u4f53\u5927\u5c0f</li> <li>\u7528\u67d0\u4e9b\u51fd\u6570\u628aglyph\u91cc\u7684\u70b9\u7f29\u653e\u4e3a\u8bbe\u7f6e\u7684\u5b57\u4f53\u5927\u5c0f</li> <li>\u8f6c\u6362\u4e3a\u4f4d\u56fe\u70b9\u9635</li> <li>\u5728LCD\u4e0a\u663e\u793a\u51fa\u6765</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#freetype2ft_library","title":"\u521d\u59cb\u5316FreeType2\u5bf9\u8c61\uff08FT_Library\uff09","text":"<pre><code>FT_EXPORT(FT_Error)  FT_Init_FreeType( FT_Library *alibrary );\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#face","title":"\u88c5\u8f7d\u5b57\u4f53\uff08Face\uff09","text":"<p>\u4e00\u4e2aFace\u5bf9\u8c61\u63cf\u8ff0\u4e86\u4e00\u4e2a\u7279\u5b9a\u7684\u5b57\u6837\u548c\u98ce\u683c <pre><code>// \u65b9\u6cd5\u4e00\uff1a\u4ece\u5b57\u4f53\u6587\u4ef6\u88c5\u8f7d\u4e00\u4e2a\u5b57\u4f53Face\nFT_EXPORT(FT_Error) FT_New_Face(FT_Library   library,       // \u5e93\u7684\u53e5\u67c4\nconst char* filepathname,   // \u5b57\u4f53\u6587\u4ef6\u8def\u5f84\u540d\nFT_Long      face_index,    // \u5b57\u4f53face\u7684\u7d22\u5f15,\u8be5\u7d22\u5f15\u6307\u793a\u4f60\u60f3\u88c5\u8f7d\u7684face\u5982\u679c\u8fd9\u4e2a\u503c\u592a\u5927\uff0c\u51fd\u6570\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8befIndex\u4e3a0\u603b\u662f\u6b63\u786e\u7684\u3002\nFT_Face     *aface );       // \u4e00\u4e2a\u6307\u5411\u65b0\u5efa\u7684face\u5bf9\u8c61\u7684\u6307\u9488\n// \u65b9\u6cd5\u4e8c\uff1a\u4ece\u5185\u5b58\u88c5\u8f7dFace\nFT_EXPORT(FT_Error) FT_New_Memory_Face( FT_Library      library,    // \u5e93\u7684\u53e5\u67c4\nconst FT_Byte* file_base,   // \u6307\u5411\u5b57\u4f53\u6570\u636e\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\nFT_Long         file_size,  // \u7f13\u5b58\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u8868\u793a\uff09\nFT_Long         face_index, // face\u7d22\u5f15\nFT_Face*        aface );    // face\u5bf9\u8c61\u7684\u6307\u9488\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#_1","title":"\u8bbe\u7f6e\u76f8\u5173\u53c2\u6570","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#ft_set_pixel_sizesft_set_char_size","title":"\u8bbe\u7f6e\u5b57\u7b26\u50cf\u7d20\u5927\u5c0f\uff08FT_Set_Pixel_Sizes\u3001FT_Set_Char_Size\uff09","text":"<p>\u82e5\u50cf\u7d20\u5bbd\u5ea6\u3001\u9ad8\u5ea6\u6709\u4e00\u4e2a\u4e3a0\uff0c\u5219\u8868\u793a\u6309\u7167\u5b57\u5f62\u6765\u53cd\u7b97\u51fa\u53e6\u4e00\u4e2a\u3002 <pre><code>FT_EXPORT(FT_Error) FT_Set_Pixel_Sizes( FT_Face face,            // face\u5bf9\u8c61\u53e5\u67c4\nFT_UInt pixel_width,     // \u50cf\u7d20\u5bbd\u5ea6\nFT_UInt pixel_height );  // \u50cf\u7d20\u9ad8\u5ea6\nFT_EXPORT(FT_Error) FT_Set_Char_Size(FT_Face face,\nFT_F26Dot6 char_width,  //\u4ee51/64\u70b9\u4e3a\u5355\u4f4d\u7684\u5b57\u7b26\u5bbd\u5ea6\nFT_F26Dot6 char_height, //\u4ee51/64\u70b9\u4e3a\u5355\u4f4d\u7684\u5b57\u7b26\u9ad8\u5ea6\nFT_UInthorz_resolution, //\u8bbe\u5907\u6c34\u5e73\u5206\u8fa8\u7387\nFT_UIntvert_resolution )\uff1a //\u8bbe\u5907\u5782\u76f4\u5206\u8fa8\u7387\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#ft_set_char_size","title":"\u8bbe\u7f6e\u5b57\u7b26\u5bbd\u9ad8\u53ca\u5206\u8fa8\u7387\uff08FT_Set_Char_Size\uff09","text":"<pre><code>FT_Set_Char_Size(face, 0, 16*64, 300, 300);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#ft_get_char_index","title":"\u5f97\u5230\u5b57\u7b26\u7801\u7684\u5b57\u5f62\u7d22\u5f15\uff08FT_Get_Char_Index\uff09","text":"<p>\u3010\u88c5\u8f7d\u4e00\u4e2a\u5b57\u5f62\u56fe\u50cf\u3011\u628a\u4e00\u4e2a\u5b57\u7b26\u7801\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5b57\u5f62\u7d22\u5f15\uff0c\u5e76\u83b7\u5f97\u5b57\u4f53\u7684\u70b9\u9635\u3002\u8fd9\u91cc\u7684\u5b57\u7b26\u7801\u4e3aUnicode</p> <p>\u3010\u8bf4\u660e\u3011\u5f88\u591aTrueType\u5b57\u4f53\u5305\u542b\u4e24\u4e2a\u5b57\u7b26\u8868\u3002\u4f46\u662f\u5f53\u65b0\u5efa\u4e00\u4e2aface\u5bf9\u8c61\u65f6\uff0c\u5b83\u9ed8\u8ba4\u9009\u62e9Unicode\u5b57\u7b26\u8868</p> <ol> <li>\u4e00\u4e2a\u7528\u6765\u8f6c\u6362Unicode\u5b57\u7b26\u7801\u5230\u5b57\u5f62\u7d22\u5f15</li> <li>\u53e6\u4e00\u4e2a\u7528\u6765\u8f6c\u6362Apple Roman\u7f16\u7801\u5230\u5b57\u5f62\u7d22\u5f15</li> </ol> <pre><code>// - \u5f97\u5230uiCharCode\u5b57\u7b26\u7684\u5b57\u5f62\u7d22\u5f15\nFT_UInt uiGlyphIndex = FT_Get_Char_Index(ftFace, uiCharCode);\n// unsigned int uiCharCode = 0x0061;  //\u5b57\u6bcda\u7684ucs2\u7f16\u7801\n// - \u8bbe\u7f6e\u5b57\u7b26\u8868\nFT_Select_Charmap(face,FT_ENCODING_UNICODE);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#glyph-slot","title":"\u83b7\u5f97\u8be5\u5b57\u7b26\u7684\u56fe\u50cf\uff08\u5b57\u884c\u69fd\uff0cglyph slot\uff09","text":"<p>\u3010\u8865\u5145\u77e5\u8bc6\u3011\u5728\u4e0d\u540c\u5b57\u4f53\u4e2d\uff0c\u5b57\u5f62\u56fe\u50cf\u5b58\u50a8\u4e3a\u4e0d\u540c\u7684\u683c\u5f0f</p> <ol> <li>\u5bf9\u4e8e\u56fa\u5b9a\u5c3a\u5bf8\u5b57\u4f53\u683c\u5f0f\uff0c\u6bcf\u4e00\u56fe\u50cf\u90fd\u662f\u4e00\u4e2a\u4f4d\u56fe</li> <li>\u5bf9\u4e8e\u53ef\u4f38\u7f29\u5b57\u4f53\u683c\u5f0f\uff0c\u4f7f\u7528\u540d\u4e3a\u8f6e\u5ed3\uff08outlines\uff09\u7684\u77e2\u91cf\u5f62\u72b6\u6765\u63cf\u8ff0\u6bcf\u4e00\u4e2a\u5b57\u5f62</li> </ol> <p>\u3010\u80cc\u666f\u3011\u5728\u83b7\u5f97\u5b57\u5f62\u7d22\u5f15\u4e4b\u540e\uff0c\u4fbf\u53ef\u4ee5\u88c5\u8f7d\u8be5\u5b57\u7b26\u7684\u56fe\u50cf</p> <p>\u3010\u5b57\u5f62\u69fd\uff0cglyph slot\u3011\u5b57\u5f62\u56fe\u50cf\u5b58\u50a8\u5728\u4e00\u4e2a\u7279\u522b\u7684\u5bf9\u8c61\uff08\u5b57\u5f62\u69fd\uff0cglyph slot\uff09\u4e2d</p> <ol> <li>\u6b63\u5982\u5176\u540d\uff0c\u4e00\u4e2a\u5b57\u5f62\u69fd\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5bb9\u5668\uff0c\u5b83\u4e00\u6b21\u53ea\u80fd\u5bb9\u7eb3\u4e00\u4e2a\u5b57\u5f62\u56fe\u50cf</li> <li> <p>\u6bcf\u4e00\u4e2aface\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u5b57\u5f62\u69fd\u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7<code>face-&gt;glyph</code>\u6765\u8bbf\u95ee <pre><code>// \u5c06\u4e00\u4e2a\u5b57\u5f62\u56fe\u50cf\u88c5\u5230\u5b57\u5f62\u69fd\u4e2d\nFT_EXPORT(FT_Error) FT_Load_Glyph(FT_Face face,         //face\u5bf9\u8c61\u7684\u53e5\u67c4\nFT_UInt glyph_index,  //\u5b57\u5f62\u7d22\u5f15\nFT_Int32 load_flags ); //\u88c5\u8f7d\u6807\u5fd7,\u5176\u9ed8\u8ba4\u503c\u662fFT_LOAD_DEFAULT\u53730\n// \u83b7\u5f97\u5f53\u524d\u5b57\u5f62\u69fd\u4e2d\u5b58\u50a8\u5b57\u5f62\u56fe\u50cf\u7684\u683c\u5f0f\nface-&gt;glyph-&gt;format //\u8fd4\u56de\u503c\uff1aFT_GLYPH_FORMAT_BITMAP\n</code></pre> \u3010\u88c5\u8f7d\u6807\u5fd7load_flags\u3011</p> </li> <li> <p>FT_LOAD_DEFAULT</p> </li> <li>FT_LOAD_RENDER\uff1a\u5b57\u5f62\u56fe\u50cf\u5fc5\u987b\u7acb\u5373\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6297\u952f\u9f7f\u4f4d\u56fe\u3002\u8fd9\u662f\u4e00\u4e2a\u6377\u5f84\uff0c\u53ef\u4ee5\u53d6\u6d88\u660e\u663e\u7684\u8c03\u7528FT_Render_Glyph\uff0c\u4f46\u529f\u80fd\u662f\u76f8\u540c\u7684\u3002</li> </ol> <p>\u3010FT_Loac_Char\u3011\u4f7f\u7528\u51fd\u6570FT_Loac_Char\u4ee3\u66ffFT_Load_Glyph\u3002\u5982\u4f60\u5927\u6982\u60f3\u5230\u7684\uff0c\u5b83\u76f8\u5f53\u4e8e\u5148\u8c03\u7528GT_Get_Char_Index\u7136\u540e\u8c03\u7528FT_Load_Glyph</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#ft_bitmap_","title":"\u4f4d\u56fe\uff08FT_Bitmap_\uff09","text":"<p>\u4f4d\u56fe\uff1a\u5373\u5b57\u4f53\u7684\u70b9\u9635\u3002\u7f3a\u70b9\u6bd4\u8f83\u660e\u663e\uff0c\u7f29\u653e\u5b58\u5728\u952f\u9f7f\uff0c\u6e32\u67d3\u65cb\u8f6c\u7b49\u64cd\u4f5c\u76f8\u5bf9\u590d\u6742\uff0c\u4e14\u6548\u679c\u4e0d\u7406\u60f3\uff0c\u5148\u5927\u591a\u7528\u5728\u5d4c\u5165\u5f0f\u884c\u4e1a\uff08\u57fa\u672c\u629b\u5f03\uff09\uff0c\u5e38\u89c1\u683c\u5f0f\u6709bdf\uff0cpcf\uff0cfnt\uff0chbf\uff0chzf\u7b49\u3002 <pre><code>// \u751f\u6210\u4f4d\u56fe\u3002\u8c03\u7528\u540e\uff0c\u6570\u636e\u5b58\u653e\u5728face-&gt;glyph-&gt;bitmap\u4e2d\nFT_EXPORT(FT_Error) FT_Render_Glyph(FT_GlyphSlot slot,            // \u5b57\u5f62\u69fd\nFT_Render_Mode render_mode ); // \u6e32\u67d3\u6a21\u5f0f\n</code></pre></p> <p>\u3010\u6e32\u67d3\u6a21\u5f0f\u3011FT_Render_Mode</p> <ol> <li>FT_RENDER_MODE_NORMAL\uff1a\u9ad8\u8d28\u91cf\u7684\u6297\u952f\u9f7f\uff08256\u7ea7\u7070\u5ea6\uff09\u4f4d\u56fe</li> <li>FT_RENDER_MODE_MONO\uff1a\u9ed1\u767d\u4f4d\u56fe</li> <li>FT_RENDER_MODE_LCD\uff1a</li> </ol> <p>\u3010FT_Bitmap_\u7684\u539f\u5f62\u3011</p> <ol> <li>bitmap.width \u00a0\u4f4d\u56fe\u5bbd\u5ea6</li> <li>bitmap.rows \u00a0 \u4f4d\u56fe\u884c\u6570\uff08\u9ad8\u5ea6\uff09</li> <li>bitmap.pitch \u00a0\u5b83\u7684\u7edd\u5bf9\u503c\u662f\u4f4d\u56fe\u4e00\u884c\u6240\u5360\u7528\u7684\u5b57\u8282\u6570\uff0c\u6839\u636e\u4f4d\u56fe\u5411\u91cf\u65b9\u5411\uff0c\u53ef\u4ee5\u662f\u6b63\u503c\u6216\u662f\u8d1f\u503c <pre><code>typedef struct FT_Bitmap_{\nint             rows;           // \u4f4d\u56fe\u7684\u884c\u6570\nint             width;          // \u4f4d\u56fe\u7684\u5bbd\u5ea6,\u4e5f\u8868\u793a\u6bcf\u884c\u6709\u591a\u5c11\u4e2a\u50cf\u7d20\nint             pitch;          // \u504f\u79fb\u503c,\u5f53\u5f80\u4e0a\u65f6\u4e3a\u8d1f\u6570,\u5f80\u4e0b\u65f6\u4e3a\u6b63\u6570,\u5b83\u7684\u7edd\u5bf9\u503c\u4e3a\u4f4d\u56fe\u7684\u4e00\u884c\u6240\u5360\u7684\u5b57\u8282\u6570.\u4e0d\u591f\u4e00\u4e2a\u5b57\u8282\u5f53\u4e00\u4e2a\u5b57\u8282\u7b97.\nunsigned char*  buffer;         // \u6307\u5411\u4f4d\u56fe\u7f13\u51b2\u533a\u7684\u6307\u9488\nshort           num_grays;      // \u8be5\u503c\u53ea\u5e94\u7528\u4e8eFT_PIXEL_MODE_GRAY\u6a21\u5f0f\nchar            pixel_mode;     // \u50cf\u7d20\u6a21\u5f0f\nchar            palette_mode;   // \u8272\u5757\u50cf\u7d20\u6a21\u5f0f\nvoid*           palette;        // \u8c03\u8272\u677f\n} FT_Bitmap;\n</code></pre></li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#_2","title":"\u8f6e\u5ed3","text":"<p>\u8f6e\u5ed3\u5b57\u4f53\uff1a\u5373\u77e2\u91cf\u5b57\u4f53\uff0c\u5229\u7528\u5b57\u4f53\u8f6e\u5ed3\u53ca\u586b\u5145\u5b9e\u73b0\u5b57\u4f53\u663e\u793a\uff0c\u4f18\u52bf\u660e\u663e\uff0c\u6e32\u67d3\u7f29\u653e\u8f83\u5bb9\u6613\uff0c\u4f46\u6548\u7387\u76f8\u5bf9\u4f4e\u4e9b\uff08\u76f8\u5bf9\u4e8e\u5d4c\u5165\u5f0f\uff09</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#_3","title":"\u6536\u5c3e\u5de5\u4f5c","text":"<pre><code>FT_Done_Glyph(glyph);\nFT_Done_Face(pFTFace);\nFT_Done_FreeType(pFTLib);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#_4","title":"\u663e\u793a","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#gdi","title":"\u901a\u8fc7GDI+\u7ed8\u5236\u51fa\u4f4d\u56fe","text":"<pre><code>// \u521b\u5efa\u5185\u5b58\u4f4d\u56fe\nunsigned  char *pvBits =  new unsigned  char [10000];\nHBITMAP hBitmap =CreateDIBSection(NULL, &amp;bmpinfo, DIB_RGB_COLORS, ( void ** )&amp;pvBits, NULL, 0 );\nint iLineBytes = (bmpinfo.bmiHeader.biWidth + 7) / 8;\nfor ( int i = 0; i != bmpinfo.bmiHeader.biHeight; ++i)\n{\nmemcpy (pvBits + i * iLineBytes, face-&gt;glyph-&gt;bitmap.buffer + i * iLineBytes, iLineBytes);\n}\nBitmap *pBitmap = Bitmap::FromHBITMAP(hBitmap, NULL);\nGraphics graphic(pDC-&gt;m_hDC);\ngraphic.DrawImage(pBitmap, Point(20, 150));\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#_5","title":"\u5c06\u4f4d\u56fe\u4fdd\u5b58\u6210\u56fe\u7247","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#opengl","title":"\u5728OpenGL\u4e2d\u7ed8\u5236\u4f4d\u56fe","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/FreeType%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/#opengl_1","title":"\u5728OpenGL\u4e2d\u7ed8\u5236\u8f6e\u5ed3","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/FreeType%E7%9B%B8%E5%85%B3%E5%8D%95%E4%BD%8D/","title":"FreeType\u76f8\u5173\u5355\u4f4d","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/FreeType%E7%9B%B8%E5%85%B3%E5%8D%95%E4%BD%8D/#_1","title":"\u8ba1\u7b97\u793a\u4f8b","text":"<p>\u5df2\u77e5\uff1a</p> <pre><code>//\u5df2\u77e5\nint em_size = face-&gt;units_per_EM; //2048\u3002\u4e00\u4e2aEM\u4e2d\u5360\u67092048\u4e2aFont Units\nint x = p.x();  //1000\u3002p\u4e3a\u5b57\u5f62\u8f6e\u5ed3\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u5176x\u8f74\u7684\u6570\u503c\u662f1000\uff0c\u53731000\u4e2aFont Units\nint font_size = 12; //\u7528\u6237\u8bbe\u7f6e\u7684\u5b57\u4f53\u5927\u5c0f\u662f12pt\uff08\u78c5\uff09\nint dpi = 96;  //\u7528\u6237\u5c4f\u5e55dpi\u662f96\uff08\u5355\u4f4d\uff1a\u50cf\u7d20\u4e2a\u6570/\u82f1\u5bf8\uff09\n</code></pre> <p>\u90a3\u4e48\uff0c<code>p.x</code>\u662f\u591a\u5c11\u50cf\u7d20\uff1f</p> <pre><code>float x_em_ratio = x / em_size; //x\u5360\u6709em\u7684\u6bd4\u7387\n//1000/2048 = 0.48828125\n//\u8f6c\u6210\uff1a\u70b9\u5355\u4f4d\u5927\u5c0f\nfloat x_point_size = x_em_ratio * font_size; //0.48828125 * 12 = 5.859375\n//\u8f6c\u6210\uff1a\u50cf\u7d20\u5355\u4f4d\nfloat x_pixel_size = x_point_size * dpi / 72;\n//5.859375 * 96 / 72 = 7.8125\nint x_pixel_size_int = FT_CEIL(x_pixel_size); //\u5411\u4e0a\u53d6\u6574\n//8\u4e2a\u50cf\u7d20\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/FreeType%E7%9B%B8%E5%85%B3%E5%8D%95%E4%BD%8D/#1254cm","title":"1\u82f1\u5bf8=2.54cm","text":"<p>\\(1\u82f1\u5bf8 = 2.54cm\\)</p> <p>\u5e38\u89c1\u7535\u8111\u663e\u793a\u5c4f\u5927\u5c0f</p> \u663e\u793a\u5c4f(\u82f1\u5bf8) \u5bbd\u5ea6(cm) \u9ad8\u5ea6(cm) 19 41 31 21.5 47 27 23.8 54 30 27 60 34 32 70 40 <p>\u6ce8</p> <ol> <li>\u7535\u8111\u663e\u793a\u5c4f\u7684\u82f1\u5bf8\u662f\u6307\u5c4f\u5e55\u5bf9\u89d2\u7ebf\u7684\u957f\u5ea6\uff0c\u800c\u975e\u5355\u6307\u9ad8\u3001\u5bbd\u7684\u957f\u5ea6</li> <li>\u4e0d\u540c\u7684\u751f\u4ea7\u5546\u548c\u751f\u4ea7\u7ebf\uff0c\u663e\u793a\u5c4f\u7684\u9ad8\u5bbd\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c</li> <li>\u5c4f\u5e55\u7684\u5bbd\u9ad8\u6bd4\u4f8b\u4e5f\u4f1a\u5f71\u54cd\u663e\u793a\u5c4f\u7684\u5927\u5c0f\u3002\u4f8b\u5982\uff0c16:9\u6bd4\u4f8b\u7684\u663e\u793a\u5c4f\u4f1a\u6bd44:3\u6bd4\u4f8b\u7684\u663e\u793a\u5c4f\u66f4\u957f\u800c\u7a84</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/FreeType%E7%9B%B8%E5%85%B3%E5%8D%95%E4%BD%8D/#dpi","title":"dpi(\u4e00\u82f1\u5bf8\u7684\u50cf\u7d20\u4e2a\u6570)","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/FreeType%E7%9B%B8%E5%85%B3%E5%8D%95%E4%BD%8D/#_2","title":"\u6982\u5ff5","text":"<p>\u6253\u5370\u5de5\u5177\u4e2d\u7684DPI \u4e0e \u7535\u5b50\u4ea7\u54c1\u7684\u5c4f\u5e55\u5206\u8fa8\u7387DPI \u662f\u4e0d\u540c\u7684</p> <ol> <li>dpi(dots per inch)\u539f\u6765\u4e13\u95e8\u6307\u5370\u5237\u4e2d\u7684\u8ba1\u91cf\u5355\u4f4d\u3002\u8868\u793a\u6bcf\u82f1\u5bf8\u80fd\u5370\u5237\u7684\u7f51\u70b9\u6570\u6216\u7ebf\u6570\uff0c\u7528\u6765\u8861\u91cf\u6253\u5370\u673a\u7684\u6253\u5370\u7cbe\u5ea6\uff0c\u6307\u8f93\u51fa\u5206\u8fa8\u7387</li> <li>ppi(pixels per inch)\u6307\u56fe\u50cf\u5206\u8fa8\u7387\uff0c\u5728\u56fe\u50cf\u4e2d\uff0c\u6bcf\u82f1\u5bf8\u80fd\u663e\u793a\u7684\u50cf\u7d20\u6570\u76ee\u3002\u5177\u4f53\u8bf4\u662f\u7535\u8111\u64cd\u4f5c\u7cfb\u7edf\u548c\u6d4f\u89c8\u5668\u4e2d\u5e38\u7528\u7684\u5355\u4f4d\uff0c\u4f46\u540e\u6765\u4e0eDPI\u6df7\u7528\u4e86</li> </ol> <p>\u56e0\u6b64</p> <ol> <li>\u5728\u6253\u5370\u5de5\u5177\u4e2d\uff0cDPI\u662f\u6307\u6bcf\u82f1\u5bf8\u7684\u70b9\u6570\uff0c\u6307\u7684\u662f\u8bbe\u5907\u80fd\u591f\u5728\u6bcf\u82f1\u5bf8\u7684\u7a7a\u95f4\u4e2d\u8f93\u51fa\u6216\u663e\u793a\u591a\u5c11\u4e2a\u70b9</li> <li>\u5728\u5c4f\u5e55\u4e2d\uff0cDPI\u662f\u6307\u6bcf\u82f1\u5bf8\u7684\u50cf\u7d20\u4e2a\u6570</li> </ol> <p>\u5728\u672c\u6587\u4e2d\uff0c\u8ba8\u8bba\u7684\u662f\u8ba1\u7b97\u673a\u663e\u793a\u5c4f\u4e0a\u7684\u6587\u5b57\u663e\u793a\uff0c\u56e0\u6b64\u5168\u6587\u8bed\u4e49\u662f\u6307\u201c\u6bcf\u82f1\u5bf8\u7684\u50cf\u7d20\u4e2a\u6570\u201d</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/FreeType%E7%9B%B8%E5%85%B3%E5%8D%95%E4%BD%8D/#_3","title":"\u4f8b\u5b50","text":"<p>\u3010\u6253\u5370\u673a\u3011\u5728\u6253\u5370\u673a\u4e2d\uff0cDPI\u901a\u5e38\u7528\u4e8e\u63cf\u8ff0\u6253\u5370\u5206\u8fa8\u7387\uff0c\u8868\u793a\u6253\u5370\u673a\u6bcf\u82f1\u5bf8\u53ef\u4ee5\u8f93\u51fa\u591a\u5c11\u70b9\uff0c\u4f8b\u5982300 DPI\u8868\u793a\u6bcf\u82f1\u5bf8\u53ef\u4ee5\u8f93\u51fa300\u4e2a\u70b9\u3002DPI\u503c\u8d8a\u9ad8\uff0c\u6253\u5370\u51fa\u6765\u7684\u56fe\u50cf\u8d28\u91cf\u5c31\u8d8a\u597d\uff0c\u4f46\u5370\u5237\u6210\u672c\u4e5f\u4f1a\u76f8\u5e94\u63d0\u9ad8</p> <p>\u3010\u56fe\u50cf\u3011\u5728\u56fe\u50cf\u8bbe\u8ba1\u4e2d\uff0cDPI\u503c\u901a\u5e38\u7528\u4e8e\u6307\u5b9a\u8f93\u51fa\u56fe\u50cf\u7684\u5206\u8fa8\u7387\uff0c\u4ee5\u786e\u4fdd\u56fe\u50cf\u5728\u6253\u5370\u6216\u5c4f\u5e55\u4e0a\u7684\u663e\u793a\u6548\u679c\u3002\u4f8b\u5982\uff0c\u8981\u8f93\u51fa\u4e00\u4e2a300 DPI\u7684\u6253\u5370\u56fe\u50cf\uff0c\u5b83\u7684\u5206\u8fa8\u7387\u5e94\u8be5\u662f\u81f3\u5c11300\u50cf\u7d20/\u82f1\u5bf8\u3002</p> <p>\u3010\u5c4f\u5e55\u3011</p> <ol> <li>\u5982\u679c\u5355\u8c08\u4e00\u4e2a\u5c4f\u5e55\u5206\u8fa8\u7387\u662f1920x1080\uff0c\u5176\u5b9e\u6211\u4eec\u662f\u4e0d\u77e5\u9053\u5b83\u7684\u957f\u5bbd\u7684\uff0c\u56e0\u4e3a1920\u662f\u6307\u5728\u6c34\u5e73\u65b9\u5411\u4e0a\u53ef\u4ee5\u663e\u793a1920\u4e2a\u50cf\u7d20\uff0c\u5728\u5782\u76f4\u65b9\u5411\u4e0a\u663e\u793a1080\u4e2a\u50cf\u7d20</li> <li>\u4f46\u5982\u679c\u518d\u52a0\u4e0a<code>DPI=96</code>\uff0c\u6211\u4eec\u5c31\u80fd\u7b97\u51fa\u957f\u5bbd\u4e86\u3002<code>DPI=96</code>\u610f\u5473\u7740\u6bcf\u82f1\u5bf896\u4e2a\u50cf\u7d20\u3002\u90a3\u4e48\uff0c<code>1920/96 = 20\u82f1\u5bf8</code>\uff0c`1080/96 = 11.25\u82f1\u5bf8</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/FreeType%E7%9B%B8%E5%85%B3%E5%8D%95%E4%BD%8D/#172","title":"\u70b9\u5355\u4f4d\uff08\u78c5\uff0c1/72\u82f1\u5bf8\uff09","text":"<p>\u201c\u70b9\u201d\u5355\u4f4d\uff0c\u53c8\u79f0\u201c\u78c5\u201d\u5355\u4f4d\uff0c\u82f1\u6587point\uff0c\u7f29\u5199\u4e3a<code>p</code>\u6216<code>pt</code></p> <ul> <li>\u201c\u70b9\u201d\u662f\u70b9\u6570\u5236\uff08\u53c8\u79f0\uff0c\u78c5\u6570\u5236\uff09\u7684\u5355\u4f4d\u3002\u662f\u5370\u5237\u884c\u4e1a\u5e38\u7528\u7684\u957f\u5ea6\u5355\u4f4d\u4e4b\u4e00</li> <li>1\u70b9\uff08\u53731\u78c5\uff09=1/72\u82f1\u5bf8=0.3528\u6beb\u7c73\uff0c1\u82f1\u5bf8=72\u78c5=25.3\u6beb\u7c73\uff0c28\u78c5\u5927\u7ea6\u4e3a1cm\uff0c\u4e5f\u5c31\u662f28\u53f7\u5b57\u4e3a1\u5398\u7c73\u5927\u5c0f</li> </ul> \u78c5\u6570\uff08pt\uff09 \u5b9e\u9645\u5927\u5c0f\uff08\u82f1\u5bf8\uff09 \u5b9e\u9645\u5927\u5c0f\uff08\u5398\u7c73\uff09 \u9002\u7528\u8303\u56f4 8 0.11 0.28 \u7279\u6b8a\u60c5\u51b5\uff0c\u5982\u6587\u672c\u5c0f\u6807\u9898\u6216\u6807\u6ce8\u7b49 9 0.125 0.32 \u5c11\u91cf\u7684\u6ce8\u91ca\u6216\u5176\u4ed6\u7684\u7ec6\u8282 10 0.138 0.35 \u8f83\u5c0f\u7684\u6587\u672c\u6bb5\u843d\uff0c\u5982\u6ce8\u91ca\u6216\u811a\u6ce8\u7b49 11 0.153 0.39 \u5927\u591a\u6570\u6587\u672c\u6bb5\u843d\u7684\u6b63\u6587 12 0.167 0.42 \u4e66\u9762\u6587\u6863\uff0c\u5982\u8bba\u6587\u3001\u62a5\u544a\u7b49 14 0.194 0.49 \u6807\u9898\u6216\u5176\u4ed6\u9700\u8981\u5f3a\u8c03\u7684\u6587\u672c\u6bb5\u843d 16 0.222 0.56 \u7279\u5b9a\u7684\u8bbe\u8ba1\u9700\u6c42\u6216\u9605\u8bfb\u969c\u788d\u8005\u9700\u8981\u7684\u5b57\u4f53\u5927\u5c0f 18 0.25 0.64 \u6d77\u62a5\u3001\u5ba3\u4f20\u518c\u7b49\u9700\u8981\u5438\u5f15\u773c\u7403\u7684\u8bbe\u8ba1\u9700\u6c42"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/FreeType%E7%9B%B8%E5%85%B3%E5%8D%95%E4%BD%8D/#_4","title":"\u70b9\u8f6c\u6210\u50cf\u7d20","text":"<p>\u5982\u4f55\u5c06\u70b9\u5355\u4f4d\u7684\u6570\u503c\uff0c\u8f6c\u6210\u50cf\u7d20\u5355\u4f4d\uff1f</p> \\[ pixel\\_size = point\\_size * resolution / 72 \\] <ol> <li><code>point_size</code>\u70b9\u5927\u5c0f\uff0c\u5982<code>12pt</code></li> <li><code>resolution</code>\u5c4f\u5e55\u5206\u8fa8\u7387\uff0c\u5373\u5c4f\u5e55\u7684DPI</li> <li><code>pixel_size</code>\u50cf\u7d20\u7684\u4e2a\u6570</li> </ol> <p>\u4f8b\u5982\uff0c\u8bb0<code>point_size = 12pt</code>\uff0c<code>dpi=96</code></p> <ol> <li><code>1pt = 1/72\u82f1\u5bf8</code> =&gt; <code>12pt = 12 / 72\u82f1\u5bf8 = 0.1667\u82f1\u5bf8</code></li> <li>96dpi =&gt; \u4e00\u82f1\u5bf8\u4e0a\u670996\u4e2a\u50cf\u7d20 =&gt; <code>12pt = 0.1667\u82f1\u5bf8 * 96\u50cf\u7d20/\u82f1\u5bf8 = 16\u4e2a\u50cf\u7d20</code></li> <li>\u56e0\u6b64<code>pixel_size = 16\u4e2a\u50cf\u7d20</code></li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/FreeType%E7%9B%B8%E5%85%B3%E5%8D%95%E4%BD%8D/#emem-square","title":"EM(em square)","text":"<p>\u5c31\u50cf\u6d3b\u5b57\u5370\u5237\u672f\u4e00\u6837\uff0c\u6bcf\u4e2a\u5b57\u90fd\u5728\u4e00\u4e2a\u6b63\u65b9\u5f62\u65b9\u6846\u5185\u3002\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u4e5f\u662f\u5982\u6b64\uff0c\u5b57\u4f53\u521b\u5efa\u8005\u4f1a\u9884\u5148\u89c4\u5b9a\u7684\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u5e76\u5728\u8fd9\u4e2a\u6b63\u65b9\u5f62\u5185\u8bbe\u8ba1\u6240\u6709\u7684\u5b57\u7b26\uff0c\u8fd9\u4e2a\u6b63\u65b9\u5f62\uff0c\u79f0\u4e3aEM\u6b63\u65b9\u5f62\u3002</p> <p></p> <p>EM\u6b63\u65b9\u5f62\uff08em sqaure\uff09\uff0c\u5b83\u662f\u5b57\u4f53\u521b\u5efa\u8005\u6240\u60f3\u8c61\u51fa\u6765\u7684\u865a\u62df\u6b63\u65b9\u5f62\u7a7a\u95f4\uff0c\u6240\u6709\u5b57\u90fd\u5728\u8fd9\u4e2a\u6b63\u65b9\u5f62\u4e2d\u8fdb\u884c\u8bbe\u8ba1</p> <ol> <li>\u901a\u5e38\uff0cEM\u6b63\u65b9\u5f62\u662f\u5bbd\u5ea6\u662f\u5927\u5199\u5b57\u6bcd\u201cM\u201d\u7684\u5bbd\u5ea6</li> <li>\u4e0d\u540c\u7684\u5b57\u4f53\uff0cEM\u4e0d\u540c\uff0c\u56e0\u6b64EM\u7684\u5bbd\u5ea6\u4e5f\u4e0d\u540c</li> </ol> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/FreeType%E7%9B%B8%E5%85%B3%E5%8D%95%E4%BD%8D/#_5","title":"\u5b57\u4f53\u5927\u5c0f","text":"<p>\u5728\u4f7f\u7528Office\u76f8\u5173\u8f6f\u4ef6\u65f6\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5b57\u4f53\u5927\u5c0f\uff0c\u5982</p> <ol> <li>\u5c0f\u4e94\uff089pt\uff09</li> <li>\u516d\u53f7\uff087.5pt\uff09</li> <li>\u4e03\u53f7\uff085.5pt\uff09</li> </ol> <p>\u8fd9\u91cc\u7684\u5b57\u4f53\u5927\u5c0f\uff0c\u5176\u5b9e\u5c31\u662f\u5728\u6307\u5b9aEM\u6b63\u65b9\u5f62\u7684\u5927\u5c0f</p> <ol> <li>\u5c0f\u4e94\uff089pt\uff09 =&gt; <code>EM\u6b63\u65b9\u5f62\u7684\u957f\u5ea6 = 9pt</code></li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/FreeType%E7%9B%B8%E5%85%B3%E5%8D%95%E4%BD%8D/#font-units","title":"Font Units","text":"<p>Font Units\u4e5f\u662f\u4e00\u79cd\u5355\u4f4d\uff0c\u5b83\u662f\u4e00\u79cd\u76f8\u5bf9\u4e8eEM\u957f\u5bbd\u7684\u5355\u4f4d</p> <p>\u5c06EM\u6b63\u65b9\u5f62\u5e73\u5747\u5206\u62102048x2048\u4e2a\u5355\u5143\uff0c\u6bcf\u4e2a\u5355\u5143\u5c31\u88ab\u79f0\u4e3a\u4e00\u4e2a\u201c\u5355\u4f4d\u201d\uff0c\u5373\u4e00\u4e2aFont Units\uff08\u5b57\u4f53\u5355\u4f4d\uff09</p> <ul> <li>\u4e0d\u4e00\u5b9a\u5206\u5272\u62102048\uff0c\u8fd9\u4e2a\u503c\u8d8a\u5927\uff0c\u8868\u793a\u6bcf\u4e2aEM\u88ab\u5212\u5206\u7684\u201c\u5355\u4f4d\u6570\u201d\u8d8a\u591a\uff0c\u4ece\u800c\u53ef\u4ee5\u66f4\u7cbe\u786e\u5730\u8868\u793a\u5b57\u5f62\u7684\u5927\u5c0f\u548c\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u503c\u53ef\u4ee5\u901a\u8fc7<code>FT_FaceRec::units_per_EM</code>\u67e5\u770b</li> <li>Font units\u662f\u5b57\u4f53\u8bbe\u8ba1\u5e08\u5728\u8bbe\u8ba1\u5b57\u5f62\u65f6\u4f7f\u7528\u7684\u5185\u90e8\u5355\u4f4d\uff0c\u8fd9\u4e2a\u5355\u4f4d\u662f\u7528EM\u6b63\u65b9\u5f62\u5212\u5206\u800c\u6765\uff0c\u662f\u76f8\u5bf9\u4e8eEM\u6b63\u65b9\u5f62\u7684\u5355\u4f4d\uff0c\u56e0\u6b64\u5b83\u6ca1\u6709\u7279\u5b9a\u7684\u7269\u7406\u610f\u4e49\uff0c\u5e76\u4e0d\u80fd\u76f4\u63a5\u5bf9\u5e94\u4e8e\u663e\u793a\u5668\u4e0a\u7684\u5b9e\u9645\u957f\u5ea6\uff08\u6216\u8005\u50cf\u7d20\u4e2a\u6570\uff09</li> <li>\u5728\u5b57\u4f53\u6587\u4ef6\u4e2d\uff0c\u6bcf\u4e2a\u5b57\u5f62\u90fd\u4f1a\u4ee5Font Units\u6765\u5b58\u50a8\u5b83\u7684\u8f6e\u5ed3\u4fe1\u606f</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/FreeType%E7%9B%B8%E5%85%B3%E5%8D%95%E4%BD%8D/#units_per_em","title":"units_per_EM","text":"<p><code>FT_FaceRec::units_per_EM</code></p> <ul> <li>\u5b9a\u4e49\u4e86\u4e00\u4e2aEM\u6240\u5305\u542b\u7684Font units\u7684\u6570\u91cf</li> <li>\u4f8b\u5982\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c<code>FT_FaceRec::units_per_EM=2048</code></li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/FreeType%E7%9B%B8%E5%85%B3%E5%8D%95%E4%BD%8D/#_6","title":"\u8f6c\u6210\u7269\u7406\u5355\u4f4d","text":"<p>\u6b63\u5982\u4e0a\u6240\u8bf4\uff0cFont Units\u662f\u4e00\u4e2a\u76f8\u5bf9\u4e8eEM\u7684\u5355\u4f4d\uff0c\u5e76\u4e0d\u662f\u5177\u4f53\u7684\u7269\u7406\u5355\u4f4d\u3002 \u90a3\u4e48\uff0c\u5982\u4f55\u5c06Font Units\u8f6c\u6210\u5b9e\u9645\u7684\u7269\u7406\u6570\u503c\u5462\uff1f</p> <p>\u4f8b\u5982\uff0c\u957f\u5ea6\u4e3a1000Font Unit\uff0c\u662f\u591a\u5c11pt\uff1f\u662f\u591a\u5c11\u50cf\u7d20\uff1f</p> <ul> <li>\u8fd9\u4e2a\u548c\u5b57\u4f53\u5927\u5c0f\u6709\u5173\u3002\u5982\u679c\u4f60\u8fd9\u65f6\u5019\u8bbe\u7f6e\u7684\u5b57\u4f53\u5927\u5c0f\u662f<code>12pt</code>\uff0c\u6211\u4eec\u6765\u8ba1\u7b97\u4e00\u4e0b</li> </ul> <pre><code>// \u5df2\u77e5\nint length = 1000;  //1000pt\nint font_size = 12; //\u7528\u6237\u5c06\u5b57\u4f53\u5927\u5c0f\u8bbe\u7f6e\u4e3a12pt\uff08\u5373\uff0c\u4e00\u4e2aEM = 12pt\uff09\n// \u8f6c\u6210\u70b9\u5355\u4f4d\nint em_ratio = length / face-&gt;units_per_EM; //\u5360EM\u7684\u6bd4\u7387\nint point_size = font_size * em_ratio;      //\u5355\u4f4d\uff1a\u70b9\u5927\u5c0f\n// \u8f6c\u6210\u50cf\u7d20\u5355\u4f4d\uff0c\u9700\u8981\u77e5\u9053\u5c4f\u5e55\u7684dpi\nfloat pixel_size = point_size * dpi / 72;\nint pixel_size_int = FT_CEIL(pixel_size); //\u5411\u4e0a\u53d6\u6574\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/FreeType%E7%9B%B8%E5%85%B3%E5%8D%95%E4%BD%8D/#266","title":"\u201c26.6\u50cf\u7d20\u683c\u5f0f\u7684\u56fa\u5b9a\u70b9\u6570\u201d\u8f6c\u6210\u50cf\u7d20\u5355\u4f4d","text":"<p>Under FreeType, scaled pixel positions are all expressed in the 26.6 fixed float format (made of a 26-bit integer mantissa, and a 6-bit fractional part). In other words, all coordinates are multiplied by\u00a064. The grid lines along the integer pixel positions, are multiples of\u00a064, like (0,0), (64,0), (0,64), (128,128), etc., while the pixel centers lie at middle coordinates (32\u00a0modulo\u00a064) like (32,32), (96,32), etc. \u2014\u2014An introduction to glyphs (fifi.org)</p> <p><code>FT_Glyph_Metrics</code>\u4e2d\u7684\u6210\u5458\u53d8\u91cf\u7684\u5355\u4f4d \u901a\u5e38 \u90fd\u662f\u201c26.6\u50cf\u7d20\u683c\u5f0f\u7684\u56fa\u5b9a\u70b9\u6570\u201d\uff0c\u5373\u4e00\u4e2a\u50cf\u7d20\u76841/64</p> <p>\u8981\u5c06<code>FT_Glyph_Metrics</code>\u4e2d\u7684\u6570\u503c\u8f6c\u4e3a\u50cf\u7d20\u5355\u4f4d\uff0c\u9700\u8981\u7528\u5230FreeType\u5e93\u4e2d\u7684\u5b8f<code>FT_CEIL()</code>\u548c`FT_ROUND()``\u3002</p> <ol> <li><code>FT_CEIL()</code>\u7528\u4e8e\u5411\u4e0a\u53d6\u6574</li> <li><code>FT_ROUND()</code>\u7528\u4e8e\u56db\u820d\u4e94\u5165</li> </ol> <p>\u8fd9\u4e24\u4e2a\u5b8f\u7684\u53c2\u6570\u662f\u4e00\u4e2a 26.6\u50cf\u7d20\u683c\u5f0f\u7684\u56fa\u5b9a\u70b9\u6570 </p> <ol> <li>\u5c06\u8fd9\u4e2a\u56fa\u5b9a\u70b9\u6570\u9664\u4ee564\uff08\u4e5f\u5c31\u662f\u53f3\u79fb6\u4f4d\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u76f8\u5e94\u7684\u50cf\u7d20\u503c</li> <li>\u7136\u540e\u53ef\u4ee5\u7528FT_CEIL()\u6216FT_ROUND()\u5c06\u5176\u8f6c\u4e3a\u6574\u6570\u50cf\u7d20\u503c</li> </ol> <p>\u4f8b\u5982\uff0c\u8981\u5c06FT_Glyph_Metrics\u4e2d\u7684width\u8f6c\u4e3a\u6574\u6570\u50cf\u7d20\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;ft2build.h&gt;\n#include FT_FREETYPE_H\nFT_Library library;\nFT_Init_FreeType(&amp;library);\nFT_Face face;\nFT_New_Face(library, \"/path/to/font.ttf\", 0, &amp;face);\n//\u83b7\u53d6\u4e86\u5b57\u5f62\u69fd\u5bf9\u8c61\nFT_GlyphSlot slot = face-&gt;glyph; // \u83b7\u53d6\u5b57\u5f62\u5ea6\u91cf\u4fe1\u606f\nFT_Glyph_Metrics metrics = slot-&gt;metrics;\n// \u5c06width\u8f6c\u4e3a\u50cf\u7d20\u5355\u4f4d\nint width_pixels = FT_CEIL(metrics.width &gt;&gt; 6);\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u9664\u4ee564\uff1a<code>int width_pixels = metrics.width / 64;</code></p> <ol> <li>\u907f\u514d\u4f7f\u7528\u6d6e\u70b9\u6570\u8fd0\u7b97\uff0c\u63d0\u9ad8\u8ba1\u7b97\u901f\u5ea6\uff08\u5728\u8ba1\u7b97\u673a\u5185\u90e8\uff0c\u53f3\u79fb\u64cd\u4f5c\u901a\u5e38\u6bd4\u9664\u6cd5\u8fd0\u7b97\u66f4\u5feb\uff0c\u56e0\u4e3a\u9664\u6cd5\u9700\u8981\u4f7f\u7528\u7b97\u6cd5\u6765\u8ba1\u7b97\u5546\u548c\u4f59\u6570\uff0c\u800c\u53f3\u79fb\u53ea\u9700\u8981\u5c06\u6570\u503c\u79fb\u52a8\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a\u5373\u53ef\uff09</li> <li><code>FT_CEIL()</code>\u5b8f\u53ef\u4ee5\u5c06\u7ed3\u679c\u5411\u4e0a\u53d6\u6574\uff0c\u786e\u4fdd\u7ed3\u679c\u603b\u662f\u6bd4\u9664\u4ee564\u540e\u7684\u6570\u503c\u66f4\u5927\uff0c\u4ece\u800c\u907f\u514d\u4e86\u53d6\u6574\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u8bef\u5dee</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/%E4%BD%8D%E5%9B%BEFT_Bitmap/","title":"\u4f4d\u56feFT Bitmap","text":"<pre><code>//\u4f4d\u56fe\ntypedef struct  FT_Bitmap_\n{\nunsigned int    rows; //\u4f4d\u56fe\u884c\u6570\uff08\u5373\u9ad8\u5ea6\uff09\uff0c\u5355\u4f4d\u50cf\u7d20 \nunsigned int    width; //\u4f4d\u56fe\u5217\u6570\uff08\u5373\u5bbd\u5ea6\uff09\uff0c\u5355\u4f4d\u50cf\u7d20\nint             pitch; //\u4e00\u884c\u6240\u5360\u7684\u5b57\u8282\u6570\uff0c\u5355\u4f4d\u5b57\u8282\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5b83\u7b49\u4e8ewidth\u7684\u503c\uff0c\u4f46\u53ef\u80fd\u4f1a\u56e0\u4e3a\u5b57\u8282\u5bf9\u9f50\u7b49\u539f\u56e0\u800c\u7565\u6709\u4e0d\u540c\nunsigned char*  buffer; //\u4f4d\u56fe\u6570\u636e\u7684\u6307\u9488\uff0c\u6570\u636e\u7684\u683c\u5f0f\u53d6\u51b3\u4e8epixel_mode\n//\u6309\u7167\u884c\u5b58\u50a8\u7684\uff0c\u5373\u6bcf\u884c\u50cf\u7d20\u6570\u636e\u8fde\u7eed\u5b58\u50a8\u5728\u4e00\u8d77\uff0c\u4e0d\u540c\u884c\u4e4b\u95f4\u53ef\u80fd\u4f1a\u6709\u5b57\u8282\u5bf9\u9f50\u7684\u7a7a\u767d\nunsigned short  num_grays; //\u4f4d\u56fe\u7684\u7070\u5ea6\u7ea7\u522b\u6570\u91cf\u3002\u4ec5\u5728\u4f4d\u56fe\u4f7f\u7528\u7070\u5ea6\u7ea7\u522b\u8868\u793a\u50cf\u7d20\u65f6\u6709\u610f\u4e49\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5b83\u7b49\u4e8e2\u7684\u50cf\u7d20\u4f4d\u6570\u6b21\u65b9\nunsigned char   pixel_mode; //\u4f4d\u56fe\u7684\u50cf\u7d20\u683c\u5f0f\n//FT_PIXEL_MODE_NONE \u6ca1\u6709\u50cf\u7d20\u6570\u636e\n//FT_PIXEL_MODE_MONO \u50cf\u7d20\u6570\u636e\u4ee5\u5355\u8272\u4f4d\u8868\u793a\uff08\u5373\u9ed1\u767d\u4e8c\u503c\u56fe\uff09\n//FT_PIXEL_MODE_GRAY \u50cf\u7d20\u6570\u636e\u4ee5\u7070\u5ea6\u7ea7\u522b\u8868\u793a\n//FT_PIXEL_MODE_GRAY2 \u50cf\u7d20\u6570\u636e\u4ee52\u4f4d\u7070\u5ea6\u7ea7\u522b\u8868\u793a\n//FT_PIXEL_MODE_GRAY4 \u50cf\u7d20\u6570\u636e\u4ee54\u4f4d\u7070\u5ea6\u7ea7\u522b\u8868\u793a\n//FT_PIXEL_MODE_LCD \u50cf\u7d20\u6570\u636e\u4ee53\u4e2a\u5b50\u50cf\u7d20\u7ec4\u6210\u7684LCD\u989c\u8272\u683c\u5f0f\u8868\u793a\n//FT_PIXEL_MODE_LCD_V FT_PIXEL_MODE_LCD_V\n//FT_PIXEL_MODE_BGRA \u50cf\u7d20\u6570\u636e\u4ee5BGRA\u683c\u5f0f\u8868\u793a\nunsigned char   palette_mode; //\u8868\u793a\u4f4d\u56fe\u7684\u8c03\u8272\u677f\u683c\u5f0f\u3002\u4ec5\u5728\u4f4d\u56fe\u4f7f\u7528\u8c03\u8272\u677f\u8868\u793a\u50cf\u7d20\u65f6\u6709\u610f\u4e49\nvoid*           palette; //\u8868\u793a\u4f4d\u56fe\u8c03\u8272\u677f\u7684\u6307\u9488\uff0c\u6307\u5411\u4f4d\u56fe\u8c03\u8272\u677f\u5728\u5185\u5b58\u4e2d\u7684\u8d77\u59cb\u5730\u5740\u3002\u4ec5\u5728\u4f4d\u56fe\u4f7f\u7528\u8c03\u8272\u677f\u8868\u793a\u50cf\u7d20\u65f6\u6709\u610f\u4e49\n} FT_Bitmap;\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/%E5%AD%97%E4%BD%93%E6%96%87%E4%BB%B6FT_FaceRec/","title":"\u5b57\u4f53\u6587\u4ef6FT FaceRec","text":"<p><code>FT_FaceRec</code> \u662f FreeType \u5e93\u4e2d\u7528\u4e8e\u63cf\u8ff0\u5b57\u4f53\u6587\u4ef6\u7684\u6570\u636e\u7ed3\u6784\u4e4b\u4e00\u3002\u5b83\u5305\u542b\u4e86\u4e00\u4e2a\u5b57\u4f53\u6587\u4ef6\u7684\u6240\u6709\u4fe1\u606f\uff0c\u5305\u62ec\u5b57\u4f53\u7684\u5ea6\u91cf\u4fe1\u606f\u3001\u5b57\u5f62\u6570\u636e\u3001\u5b57\u5f62\u8f6e\u5ed3\u7b49\u3002</p> <pre><code>typedef struct  FT_FaceRec_\n{\nFT_Long           num_faces;  //\u5b57\u4f53\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u5b57\u4f53\u6570\u76ee\uff0c\u901a\u5e38\u4e3a1\nFT_Long           face_index; //\u5f53\u524d\u5b57\u4f53\u5728\u5b57\u4f53\u6587\u4ef6\u4e2d\u7684\u7d22\u5f15\nFT_Long           face_flags;  //\u5b57\u4f53\u6807\u5fd7\uff0c\u6307\u5b9a\u5b57\u4f53\u7684\u5c5e\u6027\uff08\u5982\u7c97\u4f53\u3001\u659c\u4f53\u7b49\uff09\n//FT_FACE_FLAG_SCALABLE\n//FT_FACE_FLAG_FIXED_SIZES\n//FT_FACE_FLAG_MULTIPLE_MASTERS\nFT_Long           style_flags; //\u5b57\u5f62\u6837\u5f0f\u6807\u5fd7\uff0c\u6307\u5b9a\u5b57\u5f62\u7684\u5c5e\u6027\uff08\u5982\u7c97\u4f53\u3001\u659c\u4f53\u7b49\uff09\n//FT_STYLE_FLAG_BOLD\n//FT_STYLE_FLAG_ITALIC\nFT_Long           num_glyphs; //\u5b57\u4f53\u4e2d\u7684glyph\u6570\u76ee\nFT_String*        family_name; //\u540d\u79f0\nFT_String*        style_name;  //\u5b57\u4f53\u98ce\u683c\u540d\u79f0\nFT_Int            num_fixed_sizes; //\u56fa\u5b9a\u5927\u5c0f\u5b57\u4f53\u7684\u6570\u91cf\nFT_Bitmap_Size*   available_sizes; //\u56fa\u5b9a\u5927\u5c0f\u5b57\u4f53\u7684\u6570\u7ec4\nFT_Int            num_charmaps; //\u5b57\u7b26\u7f16\u7801\u6620\u5c04\u8868\uff08charmap\uff09\u7684\u6570\u91cf\nFT_CharMap*       charmaps;     //\u5b57\u7b26\u7f16\u7801\u6620\u5c04\u8868\uff08charmap\uff09\u6570\u7ec4\nFT_Generic        generic; //\u7528\u4e8e\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u989d\u5916\u6570\u636e\n/*# The following member variables (down to `underline_thickness`) */\n/*# are only relevant to scalable outlines; cf. @FT_Bitmap_Size    */\n/*# for bitmap fonts.                                              */\nFT_BBox           bbox; //\u5b57\u4f53\u7684\u5916\u5305\u77e9\u5f62\uff0c\u5355\u4f4d\u50cf\u7d20\nFT_UShort         units_per_EM; //\u5b57\u4f53\u7684EM\uff08em-square\uff09\u5c3a\u5bf8\n//\u4e5f\u5c31\u662f\u5b57\u4f53\u7684\u57fa\u7840\u5355\u4f4d\uff0c\u901a\u5e38\u7b49\u4e8e\u5b57\u4f53\u7684\u8bbe\u8ba1\u5c3a\u5bf8\nFT_Short          ascender;  //\u5b57\u4f53\u57fa\u7ebf\u4e0a\u65b9\u7684\u8ddd\u79bb\uff0c\u5355\u4f4dfont units\nFT_Short          descender; //\u5b57\u4f53\u57fa\u7ebf\u4e0b\u65b9\u7684\u8ddd\u79bb\uff0c\u5355\u4f4dfont units\nFT_Short          height;    //\u5b57\u4f53\u7684\u9ad8\u5ea6\uff08ascender\u548cdescender\u4e4b\u548c\uff09\uff0c\u5355\u4f4dfont units\nFT_Short          max_advance_width; //\u5b57\u4f53\u4e2d\u6700\u5927\u7684advance\u5bbd\u5ea6\n//advance\u662f\u6307\u5b57\u7b26\u7684\u63a8\u8fdb\u91cf\uff0c\u5373\u5b57\u7b26\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5355\u4f4dfont units\nFT_Short          max_advance_height; //\u5b57\u4f53\u4e2d\u6700\u5927\u7684advance\u9ad8\u5ea6\uff0c\u5355\u4f4dfont units\nFT_Short          underline_position;  //\u5b57\u4f53\u4e0b\u5212\u7ebf\u4f4d\u7f6e\u7684\u5782\u76f4\u5750\u6807\uff0c\u5355\u4f4dfont units\nFT_Short          underline_thickness; //\u5b57\u4f53\u4e0b\u5212\u7ebf\u7684\u7c97\u7ec6\u5ea6\nFT_GlyphSlot      glyph;   //\u5b58\u50a8\u5f53\u524d\u5b57\u4f53\u4e2d\u7684glyph\u56fe\u50cf\u69fd\nFT_Size           size;    //\u5b57\u4f53\u5927\u5c0f\uff0c\u5355\u4f4d\u50cf\u7d20\nFT_CharMap        charmap; //\u5f53\u524d\u5b57\u4f53\u7684\u5b57\u7b26\u7f16\u7801\u6620\u5c04\u8868\n/*@private begin */\nFT_Driver         driver;  //\u5b57\u4f53\u6240\u4f7f\u7528\u7684\u9a71\u52a8\u7a0b\u5e8f\nFT_Memory         memory;  //\u7528\u4e8e\u5185\u5b58\u7ba1\u7406\u7684\u5185\u90e8\u6570\u636e\u7ed3\u6784\nFT_Stream         stream;  //\u5b57\u4f53\u6240\u5bf9\u5e94\u7684\u8f93\u5165\u6d41\uff0c\u7528\u4e8e\u4ece\u5b57\u4f53\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\nFT_ListRec        sizes_list; //\u56fa\u5b9a\u5927\u5c0f\u5b57\u4f53\u5217\u8868\nFT_Generic        autohint;   /* face-specific auto-hinter data */\n//\u81ea\u52a8hinting\u7a0b\u5e8f\nvoid*             extensions; /* unused                         */\n//\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u6269\u5c55\u6570\u636e\nFT_Face_Internal  internal; //\u662f\u4e00\u4e9b\u989d\u5916\u7684\u5185\u90e8\u4fe1\u606f\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u76f4\u63a5\u8bbf\u95ee\n/*@private end */\n} FT_FaceRec;\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/%E5%AD%97%E5%BD%A2FT_GlyphSlotRec/","title":"\u5b57\u5f62FT GlyphSlotRec","text":"<pre><code>//\u8868\u793a\u4e00\u4e2a\u5b57\u5f62\ntypedef struct  FT_GlyphSlotRec_\n{\nFT_Library library; //\u6307\u5411FreeType\u5e93\u7684\u6307\u9488\uff0c\u7528\u4e8e\u5f15\u7528\u5168\u5c40\u5e93\u5bf9\u8c61\nFT_Face face;       //\u5b57\u5f62\u6240\u5c5e\u7684\u5b57\u4f53\nFT_GlyphSlot next;  //\u4e0b\u4e00\u4e2a\u5b57\u5f62\u7684\u6307\u9488\uff0c\u7528\u4e8e\u94fe\u63a5\u4e00\u4e2a\u5b57\u5f62\u94fe\u8868\nFT_UInt reserved;   //\u4fdd\u7559\u5b57\u6bb5\uff0c\u672a\u88ab\u4f7f\u7528\nFT_Generic generic; //\u6cdb\u578b\u6307\u9488\uff0c\u53ef\u4ee5\u7528\u4e8e\u4fdd\u5b58\u4efb\u4f55\u81ea\u5b9a\u4e49\u6570\u636e\nFT_Glyph_Metrics  metrics;  //\u5b57\u5f62\u7684\u5ea6\u91cf\u4fe1\u606f\nFT_Fixed linearHoriAdvance; //\u56fa\u5b9a\u5c0f\u6570\u70b9\u7c7b\u578b\u7684\u503c\uff0c\u8868\u793a\u6c34\u5e73\u65b9\u5411\u7684\u8fdb\u5ea6\uff0c\u5e38\u7528\u4e8e\u5b9e\u73b0\u6587\u672c\u5bf9\u9f50\nFT_Fixed linearVertAdvance; //\u56fa\u5b9a\u5c0f\u6570\u70b9\u7c7b\u578b\u7684\u503c\uff0c\u8868\u793a\u5782\u76f4\u65b9\u5411\u7684\u8fdb\u5ea6\uff0c\u5e38\u7528\u4e8e\u5b9e\u73b0\u6587\u672c\u5bf9\u9f50\nFT_Vector         advance;  //\u5b57\u5f62\u7684\u8fdb\u5ea6\u4fe1\u606f\uff0c\u5305\u62ec\u6c34\u5e73\u548c\u5782\u76f4\u65b9\u5411\u4e0a\u7684\u504f\u79fb\u91cf\uff0c\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\nFT_Glyph_Format format;  //\u5b57\u5f62\u7684\u683c\u5f0f\uff0c\u5982\u70b9\u9635\u3001\u8f6e\u5ed3\u3001\u4f4d\u56fe\u7b49\u7b49\nFT_Bitmap         bitmap;      //\u5b57\u5f62\u7684\u4f4d\u56fe\u4fe1\u606f\nFT_Int            bitmap_left; //\u5728\u6c34\u5e73\u65b9\u5411\u4e0a\u7684\u504f\u79fb\u91cf\nFT_Int            bitmap_top;  //\u5728\u5782\u76f4\u65b9\u5411\u4e0a\u7684\u504f\u79fb\u91cf\nFT_Outline        outline;  //\u5b57\u5f62\u7684\u8f6e\u5ed3\u4fe1\u606f\nFT_UInt num_subglyphs;      //\u5b50\u5b57\u5f62\u7684\u6570\u91cf\nFT_SubGlyph subglyphs;      //\u5b58\u50a8\u5b50\u5b57\u5f62\u7684\u4fe1\u606f\nvoid *control_data;  //\u6307\u5411\u63a7\u5236\u6570\u636e\u7684\u6307\u9488\uff0c\u901a\u5e38\u7528\u4e8e\u5b58\u50a8FreeType\u5e93\u7684\u5185\u90e8\u6570\u636e\u7ed3\u6784\nlong control_len;    //\u63a7\u5236\u6570\u636e\u7684\u957f\u5ea6\nFT_Pos lsb_delta;  //\u5de6\u4fa7\u8fb9\u8ddd\u7684\u504f\u79fb\u91cf\nFT_Pos rsb_delta;  //\u53f3\u4fa7\u8fb9\u8ddd\u7684\u504f\u79fb\u91cf\n} FT_GlyphSlotRec;\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/%E5%AD%97%E5%BD%A2%E8%A7%84%E6%A0%BCFT_Glyph_Metrics/","title":"\u5b57\u5f62\u89c4\u683cFT Glyph Metrics","text":"<p><code>FT_Glyph_Metrics</code>\u53ef\u4ee5\u901a\u8fc7<code>face-&gt;glyph-&gt;metrics</code>\u83b7\u5f97\u3002</p> <pre><code>//\u5b57\u5f62\u7684\u5ea6\u91cf\u4fe1\u606f\uff0c\u5982\u5b57\u5f62\u5bbd\u5ea6\u3001\u9ad8\u5ea6\u3001\u5de6\u53f3\u8fb9\u754c\u7b49\u7b49\u3002\ntypedef struct  FT_Glyph_Metrics_\n{\nFT_Pos  width;  //\u5b57\u7b26\u56fe\u50cf\u5305\u56f4\u76d2\u7684\u5bbd\u5ea6\uff0c\u72ec\u7acb\u4e8e\u5e03\u5c40\u65b9\u5411\nFT_Pos  height; //\u5b57\u7b26\u56fe\u50cf\u5305\u56f4\u76d2\u7684\u9ad8\u5ea6\uff0c\u72ec\u7acb\u4e8e\u5e03\u5c40\u65b9\u5411\n//\u6ce8\u610f\u4e0d\u8981\u5c06\u5176\u4e0eFT_Size_Metrics\u7ed3\u6784\u4f53\u7684height\u6210\u5458\u641e\u6df7\n//\u7528\u4e8e\u6c34\u5e73\u5e03\u5c40\nFT_Pos  horiBearingX; //\u5b57\u5f62\u5de6\u8fb9\u7f18\u76f8\u5bf9\u4e8e\u57fa\u7ebf\u7684\u6c34\u5e73\u504f\u79fb\u91cf\nFT_Pos  horiBearingY; //\u5b57\u5f62\u5de6\u8fb9\u7f18\u76f8\u5bf9\u4e8e\u57fa\u7ebf\u7684\u6c34\u5e73\u504f\u79fb\u91cf\nFT_Pos  horiAdvance; //\u5b57\u5f62\u7684\u6c34\u5e73\u8fdb\u5ea6\uff0c\u5373\u4e0b\u4e00\u4e2a\u5b57\u5f62\u5e94\u8be5\u8ddd\u79bb\u8fd9\u4e2a\u5b57\u5f62\u591a\u8fdc\n//\u7528\u4e8e\u5782\u76f4\u5e03\u5c40\nFT_Pos  vertBearingX; //\u5b57\u5f62\u7684\u6c34\u5e73\u8fdb\u5ea6\uff0c\u5373\u4e0b\u4e00\u4e2a\u5b57\u5f62\u5e94\u8be5\u8ddd\u79bb\u8fd9\u4e2a\u5b57\u5f62\u591a\u8fdc\nFT_Pos  vertBearingY; //\u5b57\u5f62\u9876\u90e8\u8fb9\u7f18\u76f8\u5bf9\u4e8e\u57fa\u7ebf\u7684\u5782\u76f4\u504f\u79fb\u91cf\nFT_Pos  vertAdvance;  //\u5b57\u5f62\u9876\u90e8\u8fb9\u7f18\u76f8\u5bf9\u4e8e\u57fa\u7ebf\u7684\u5782\u76f4\u504f\u79fb\u91cf\n} FT_Glyph_Metrics;\n</code></pre> <p><code>FT_Glyph_Metrics</code>\u7684\u5355\u4f4d</p> <ol> <li>\u901a\u5e38\u662f26.6\u50cf\u7d20\u683c\u5f0f</li> <li>\u5982\u679c\u4f7f\u7528<code>FT_LOAD_NO_SCALE</code>\u6807\u8bb0\u8c03\u7528<code>FT_Load_Glyph</code>\u6216<code>FT_Load_Char</code>\u51fd\u6570\uff0c\u5219\u4f7f\u7528\u5b57\u4f53\u539f\u59cb\u7684\u5ea6\u91cf\u5355\u4f4d\uff08\u5373\u5b57\u4f53\u5355\u4f4d\uff0c\u70b9\u5355\u4f4d\uff09</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E6%96%87%E6%A1%A3/%E5%AD%97%E5%BD%A2%E8%A7%84%E6%A0%BCFT_Glyph_Metrics/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u4f7f\u7528FreeType\u7cbe\u786e\u5ea6\u91cf\u5b57\u4f53 - \u77e5\u4e4e (zhihu.com)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E7%A4%BA%E4%BE%8B/%E7%A4%BA%E4%BE%8B%EF%BC%9AFreeType%E6%B8%B2%E6%9F%93%E4%B8%80%E4%B8%AA%E5%AD%97%E4%BD%93/","title":"\u793a\u4f8b\uff1aFreeType\u6e32\u67d3\u4e00\u4e2a\u5b57\u4f53","text":"<pre><code>#include&lt;stdio.h&gt;\n#include &lt;ft2build.h&gt;\n#include FT_FREETYPE_H\n#define CHARSIZE 32 // \u5b57\u7b26\u4f4d\u56fe\u7684\u5927\u5c0f\u8bbe\u4e3a32 * 32\nint GetCharBitmap(int iCharSize, unsigned int uiCharCode);\nint main()\n{\n//wchar_t ch = 'b'; //\u82f1\u6587\u5b57\u7b26\nwchar_t ch = L'\u603b'; //\u4e2d\u6587\u5b57\u7b26\n//wchar_t ch = '\u4f60';\n/* \u4e2d\u6587\u5b57\u7b26\u5fc5\u987b\u8981\u52a0L\uff0c\u4e0d\u7136\u5f97\u4e0d\u5230\u5b57\u7b26\u7d22\u5f15FT_Get_Char_Index()\u8fd4\u56de0\n     * FreeType\u9ed8\u8ba4\u4e3aunicode\u7684\u5b57\u7b26\u8868\n     * L\u5c06ANSI\u5b57\u7b26\u4e32\u8f6c\u6362\u6210unicode\u7684\u5b57\u7b26\u4e32\n     *\n     */\nGetCharBitmap(CHARSIZE, ch);\nreturn 0;\n}\nint GetCharBitmap(int iCharSize, unsigned int uiCharCode)\n{\n// - \u521d\u59cb\u5316FreeType\u5bf9\u8c61\nFT_Library ftLibrary;\nFT_Error ftError = FT_Init_FreeType(&amp;ftLibrary);\nif(ftError)\n{\nprintf(\"Init freetype library fail!/n\");\nreturn -1;\n}\n// - \u4ece\u5b57\u4f53\u6587\u4ef6\u4e2d\u88c5\u8f7d\u4e00\u4e2aFace\nFT_Face ftFace;\nftError = FT_New_Face(ftLibrary,\n\"C:\\\\WINDOWS\\\\Fonts\\\\simhei.ttf\", //\u9ed1\u4f53\u4e2d\u6587\u5b57\u5e93\n0,\n&amp;ftFace);\nif(ftError == FT_Err_Unknown_File_Format)\n{\n// \u8868\u793a\u53ef\u4ee5\u6253\u5f00\u548c\u8bfb\u6b64\u6587\u4ef6\uff0c\u4f46\u4e0d\u652f\u6301\u6b64\u5b57\u4f53\u683c\u5f0f\nprintf(\"Error! Could not support this format!/n\");\nreturn -1;\n}\nelse if(ftError) // \u5176\u4ed6\u9519\u8bef\n{\nprintf(\"Error! Could not open file ukai.ttc!/n\");\nreturn -1;\n}\n// - \u8bbe\u7f6e\nftError = FT_Set_Pixel_Sizes(ftFace, iCharSize, 0);\nif(ftError)\n{\nprintf(\"Set pixel sizes to %d*%d error!/n\", iCharSize, iCharSize);\nreturn -1;\n}\n// - \u5f97\u5230\u5b57\u7b26\u7801\u7684\u5b57\u5f62\u7d22\u5f15\nFT_UInt uiGlyphIndex = FT_Get_Char_Index(ftFace, uiCharCode);\nif(uiGlyphIndex&lt;=0)\n{\nprintf(\"\u672a\u627e\u5230\u8be5\u5b57\u7b26\u7684\u7d22\u5f15\");\nreturn -1;\n}\nFT_Load_Glyph(ftFace, uiGlyphIndex, FT_LOAD_DEFAULT);\n// - \u751f\u6210\u4f4d\u56fe\nif(ftFace-&gt;glyph-&gt;format != FT_GLYPH_FORMAT_BITMAP)\n{\nFT_Render_Glyph(ftFace-&gt;glyph, FT_RENDER_MODE_MONO);\n}\nint iRow = 0, iCol = 0;\nfor(iRow = 0; iRow &lt; ftFace-&gt;glyph-&gt;bitmap.rows; iRow++)\n{\nfor(iCol = 0; iCol &lt; ftFace-&gt;glyph-&gt;bitmap.width; iCol++)\n{\nif((ftFace-&gt;glyph-&gt;bitmap.buffer[iRow * ftFace-&gt;glyph-&gt;bitmap.pitch + iCol / 8] &amp; (0xC0 &gt;&gt; (iCol % 8))) == 0)\n{\nprintf(\"1\");\n}\nelse\n{\nprintf(\"0\");\n}\n}\nprintf(\"\\n\");\n}\nreturn 0;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E7%A4%BA%E4%BE%8B/%E7%A4%BA%E4%BE%8B%EF%BC%9AOpenGL%E7%BB%98%E5%88%B6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%EF%BC%88%E7%BA%B9%E7%90%86%E6%96%B9%E6%A1%88%EF%BC%89/","title":"\u793a\u4f8b\uff1aOpenGL\u7ed8\u5236\u4e00\u4e2a\u5b57\u7b26\uff08\u7eb9\u7406\u65b9\u6848\uff09","text":"<pre><code>#include &lt;gl/glut.h&gt;\n#include &lt;iostream&gt;\n#include &lt;ft2build.h&gt;\n#include FT_FREETYPE_H\nusing namespace std;\n#define PIXEL_SIZE 20 //\u5b57\u4f53\u7684\u50cf\u7d20\u5927\u5c0f\nwchar_t ch = L'\u4f60';\nFT_Library ftLibrary;\nFT_Face ftFace;\nGLuint  texture;\nvoid print(GLubyte *rgba);\nvoid ConvertMONOToRGBA(FT_Bitmap *source, GLubyte *rgba)\n{\nGLubyte *s = source-&gt;buffer;\nGLubyte *t = rgba;\nfor(GLuint y = source-&gt;rows; y &gt; 0; y--)\n{\nGLubyte *ss = s;\nGLubyte *tt = t;\nfor(GLuint x = source-&gt;width &gt;&gt; 3; x &gt; 0; x--)\n{\nGLuint val = *ss;\nfor(GLuint i = 8; i &gt; 0; i--)\n{\ntt[0] = tt[1] = tt[2] = tt[3] = (val &amp; (1 &lt;&lt; (i - 1))) ? 0xFF : 0x00;\ntt += 4;\n}\nss += 1;\n}\nGLuint rem = source-&gt;width &amp; 7;\nif(rem &gt; 0)\n{\nGLuint val = *ss;\nfor(GLuint x = rem; x &gt; 0; x--)\n{\ntt[0] = tt[1] = tt[2] = tt[3] = (val &amp; 0x80) ? 0xFF : 0x00;\ntt += 4;\nval &lt;&lt;= 1;\n}\n}\ns += source-&gt;pitch;\nt += source-&gt;width * 4;    //pitch\n}\n}\n//FreeType\u7684\u7070\u8272\u6a21\u5f0f\uff1a1\u4e2a\u50cf\u7d20\u75281\u4e2a\u5b57\u8282\u4fdd\u5b58\u3002\nvoid ConvertGRAYToRGBA(FT_Bitmap *source, GLubyte *rgba) //\u7070\u5ea6\u56fe\u8f6cRGBA\n{\nfor(GLuint y = 0; y &lt; source-&gt;rows; y++)\n{\nfor(GLuint x = 0; x &lt; source-&gt;width; x++)\n{\nGLubyte *s = &amp;source-&gt;buffer[(y * source-&gt;pitch) + x];\nGLubyte *t = &amp;rgba[((y * source-&gt;pitch) + x) * 4];\nt[0] = t[1] = t[2] = 0xFF; //RGB\u4e3a255\nt[3] = *s; //A\u901a\u9053\u5b58\u7070\u5ea6\u56fe\n}\n}\n}\nGLubyte* get_rgba(FT_Bitmap&amp; bitmap)\n{\nint rgbaSize = bitmap.rows * bitmap.rows * 4;\nGLubyte *rgba = new GLubyte[rgbaSize];\nswitch(bitmap.pixel_mode)     //\u50cf\u7d20\u6a21\u5f0f\n{\ncase FT_PIXEL_MODE_MONO: //\u9ed1\u767d\n{\n// \u5c06\u9ed1\u767d\u8f6c\u6210RGBA\nConvertMONOToRGBA(&amp;bitmap, rgba);\nbreak;\n}\ncase FT_PIXEL_MODE_GRAY: //\u7070\u5ea6\n{\nConvertGRAYToRGBA(&amp;bitmap, rgba); //\u7070\u5ea6\u8f6cRGBA\nbreak;\n}\ndefault:\n{\nmemset(rgba, 0xFF, rgbaSize);\nbreak;\n}\n}\nreturn rgba;\n}\nGLubyte* get_rgba_2(FT_Bitmap&amp; bitmap) //\u81ea\u5df1\u5199\u7684\uff0c\u5bf9\u4f4d\u56fe\u7684\u7406\u89e3\u6709\u4e0d\u8db3\n{\nint rgbaSize = bitmap.rows * bitmap.rows * 4;\nGLubyte *rgba = new GLubyte[rgbaSize];\nfor(GLuint y = 0; y &lt; bitmap.rows; y++)\n{\nfor(GLuint x = 0; x &lt; bitmap.width; x++)\n{\nGLubyte *s = &amp;bitmap.buffer[y * bitmap.pitch + x / 8];\nGLubyte *t = &amp;rgba[((y * bitmap.width) + x) * 4];\nif((*s &amp; (0xC0 &gt;&gt; (x % 8))) == 0)  //\u975e\u5b57\u7b26\u50cf\u7d20\n{\nt[0] = t[1] = t[2] = t[3] = 0x00;\n}\nelse //\u5b57\u7b26\u50cf\u7d20\n{\nt[0] = t[1] = t[2] = t[3] = 0xff;\n}\n}\n}\nreturn rgba;\n}\nvoid init()\n{\n#pragma region FreeType\u7684\u8bbe\u7f6e\n// - \u521d\u59cb\u5316FreeType\u5bf9\u8c61\nFT_Init_FreeType(&amp;ftLibrary);\nFT_New_Face(ftLibrary,\n\"C:\\\\WINDOWS\\\\Fonts\\\\simhei.ttf\", //\u9ed1\u4f53\u4e2d\u6587\u5b57\u5e93\n0,\n&amp;ftFace);\n// - \u8bbe\u7f6e\nFT_Set_Pixel_Sizes(ftFace, PIXEL_SIZE, 0); //\u50cf\u7d20\u5927\u5c0f\n// - \u5f97\u5230\u5b57\u7b26\u7801\u7684\u5b57\u5f62\u7d22\u5f15\nFT_UInt uiGlyphIndex = FT_Get_Char_Index(ftFace, ch);\nif(uiGlyphIndex &lt;= 0)\n{\nprintf(\"\u672a\u627e\u5230\u8be5\u5b57\u7b26\u7684\u7d22\u5f15\");\n}\nFT_Load_Glyph(ftFace, uiGlyphIndex, FT_LOAD_DEFAULT);\n#pragma endregion\n#pragma region \u751f\u6210\u4f4d\u56fe\n// - \u751f\u6210\u4f4d\u56fe\uff1aFreeType\u6240\u5f97\u662f8\u4f4d\u7684\u7070\u5ea6\u56fe\nif(ftFace-&gt;glyph-&gt;format != FT_GLYPH_FORMAT_BITMAP)\n{\nFT_Render_Glyph(ftFace-&gt;glyph, FT_RENDER_MODE_MONO);\n}\n// - \u67e5\u770b\u4f4d\u56fe\u4fe1\u606f\nprintf(\"\u884c\uff1a%d;\u5217\uff1a%d\\n\", ftFace-&gt;glyph-&gt;bitmap.rows, ftFace-&gt;glyph-&gt;bitmap.width);\nprintf(\"\\n------ \u4f4d\u56fe\u4fe1\u606f ------\\n\");\nfor(int iRow = 0; iRow &lt; ftFace-&gt;glyph-&gt;bitmap.rows; iRow++)\n{\nfor(int iCol = 0; iCol &lt; ftFace-&gt;glyph-&gt;bitmap.width; iCol++)\n{\nprintf(\"%d\\t\", ftFace-&gt;glyph-&gt;bitmap.buffer[iRow * ftFace-&gt;glyph-&gt;bitmap.pitch + iCol / 8]);\n}\nprintf(\"\\n\");\n}\n#pragma endregion\n#pragma region \u6253\u5370\u6210\u5b57\u4f53\nprintf(\"\\n------ \u67e5\u770b\u5b57\u4f53\u4fe1\u606f ------\\n\");\nfor(int iRow = 0; iRow &lt; ftFace-&gt;glyph-&gt;bitmap.rows; iRow++)\n{\nfor(int iCol = 0; iCol &lt; ftFace-&gt;glyph-&gt;bitmap.width; iCol++)\n{\nauto index = iRow * ftFace-&gt;glyph-&gt;bitmap.pitch + iCol / 8;\nauto tmp = 0xC0 &gt;&gt; (iCol % 8);\nauto value = index &amp; tmp;\nif((ftFace-&gt;glyph-&gt;bitmap.buffer[iRow * ftFace-&gt;glyph-&gt;bitmap.pitch + iCol / 8] &amp; (0xC0 &gt;&gt; (iCol % 8))) == 0)\n{\nprintf(\" \");\n}\nelse\n{\nprintf(\"1\");\n}\n}\nprintf(\"\\n\");\n}\n#pragma endregion\n#pragma region \u751f\u6210\u7eb9\u7406\n// \u751f\u6210\u7eb9\u7406\nglEnable(GL_TEXTURE_2D);\nglGenTextures(1, &amp;texture);\nglBindTexture(GL_TEXTURE_2D, texture);\nGLubyte* rgba = get_rgba(ftFace-&gt;glyph-&gt;bitmap);\n//GLubyte* rgba = get_rgba_2(ftFace-&gt;glyph-&gt;bitmap);\nprint(rgba);\nglTexImage2D(GL_TEXTURE_2D,\n0,\nGL_RGBA,\nftFace-&gt;glyph-&gt;bitmap.width, ftFace-&gt;glyph-&gt;bitmap.rows,\n0,\nGL_RGBA,\nGL_UNSIGNED_BYTE,\nrgba);\ndelete rgba;\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\nglBindTexture(GL_TEXTURE_2D, 0); //\u89e3\u7ed1\n#pragma endregion\n// \u6e05\u7a7a\u8d44\u6e90\nFT_Done_Face(ftFace);\nFT_Done_FreeType(ftLibrary);\n}\nvoid myDisplay(void)\n{\nglClear(GL_COLOR_BUFFER_BIT);\nglClearColor(0, 0, 0, 0);\n// \u753b\u7eb9\u7406\nglBindTexture(GL_TEXTURE_2D, texture);\nglBegin(GL_QUADS);\n// \u8981\u6ce8\u610f\u5b57\u4f53\u7eb9\u7406\u548cOpenGL\u7684\u7ed8\u5236\u5173\u7cfb\nglTexCoord2d(0, 0);         //\u7eb9\u7406 \u5de6\u4e0b\u89d2\nglVertex2f(-0.8f, 0.8f);    //OpenGL \u5de6\u4e0a\u89d2\nglTexCoord2d(0, 1);         //\u5de6\u4e0a\u89d2\nglVertex2f(-0.8f, -0.8f);   //\u5de6\u4e0b\u89d2\nglTexCoord2f(1.0f, 1.0f);   //\u53f3\u4e0a\u89d2\nglVertex2f(0.8f, -0.8f);    //\u53f3\u4e0b\u89d2\nglTexCoord2d(1, 0);         //\u53f3\u4e0b\u89d2\nglVertex2f(0.8f, 0.8f);     //\u53f3\u4e0a\u89d2\nglEnd();\nglFlush();\n}\nint main(int argc, char *argv[])\n{\nglutInit(&amp;argc, argv);                          //\u521d\u59cb\u5316GLUT\nglutInitDisplayMode(GLUT_RGB | GLUT_SINGLE);    //\u521d\u59cb\u5316\u663e\u793a\u6a21\u5f0f\nglutInitWindowPosition(100, 100);               //\u7a97\u4f53\u4f4d\u7f6e\nglutInitWindowSize(500, 500);                   //\u7a97\u4f53\u5927\u5c0f\nglutCreateWindow(\"OpenGL One Char\");            //\u4f20\u5165\u7a97\u53e3\u540d\u79f0\uff0c\u5e76\u5f00\u7a97\ninit();\nglutDisplayFunc(&amp;myDisplay);                    //\u7ed8\u5236\u7684\u56de\u8c03\u51fd\u6570\nglutMainLoop();                                 //\u5faa\u73af\u7ed8\u5236\nreturn 0;\n}\nvoid print(GLubyte *rgba) //\u6253\u5370RGBA\n{\nprintf(\"\\n----- R -----\\n\");\nfor(GLuint y = 0; y &lt; ftFace-&gt;glyph-&gt;bitmap.rows; y++)\n{\nfor(GLuint x = 0; x &lt; ftFace-&gt;glyph-&gt;bitmap.width; x++)\n{\nGLubyte *s = &amp;ftFace-&gt;glyph-&gt;bitmap.buffer[(y * ftFace-&gt;glyph-&gt;bitmap.pitch) + x];\nGLubyte *t = &amp;rgba[((y * ftFace-&gt;glyph-&gt;bitmap.pitch) + x) * 4];\nprintf(\"%d\\t\", t[0]);\n}\nprintf(\"\\n\");\n}\nprintf(\"\\n----- G -----\\n\");\nfor(GLuint y = 0; y &lt; ftFace-&gt;glyph-&gt;bitmap.rows; y++)\n{\nfor(GLuint x = 0; x &lt; ftFace-&gt;glyph-&gt;bitmap.width; x++)\n{\nGLubyte *s = &amp;ftFace-&gt;glyph-&gt;bitmap.buffer[(y * ftFace-&gt;glyph-&gt;bitmap.pitch) + x];\nGLubyte *t = &amp;rgba[((y * ftFace-&gt;glyph-&gt;bitmap.pitch) + x) * 4];\nprintf(\"%d\\t\", t[1]);\n}\nprintf(\"\\n\");\n}\nprintf(\"\\n----- B -----\\n\");\nfor(GLuint y = 0; y &lt; ftFace-&gt;glyph-&gt;bitmap.rows; y++)\n{\nfor(GLuint x = 0; x &lt; ftFace-&gt;glyph-&gt;bitmap.width; x++)\n{\nGLubyte *s = &amp;ftFace-&gt;glyph-&gt;bitmap.buffer[(y * ftFace-&gt;glyph-&gt;bitmap.pitch) + x];\nGLubyte *t = &amp;rgba[((y * ftFace-&gt;glyph-&gt;bitmap.pitch) + x) * 4];\nprintf(\"%d\\t\", t[2]);\n}\nprintf(\"\\n\");\n}\nprintf(\"\\n----- A -----\\n\");\nfor(GLuint y = 0; y &lt; ftFace-&gt;glyph-&gt;bitmap.rows; y++)\n{\nfor(GLuint x = 0; x &lt; ftFace-&gt;glyph-&gt;bitmap.width; x++)\n{\nGLubyte *s = &amp;ftFace-&gt;glyph-&gt;bitmap.buffer[(y * ftFace-&gt;glyph-&gt;bitmap.pitch) + x];\nGLubyte *t = &amp;rgba[((y * ftFace-&gt;glyph-&gt;bitmap.pitch) + x) * 4];\nprintf(\"%d\\t\", t[3]);\n}\nprintf(\"\\n\");\n}\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/FreeType/%E7%A4%BA%E4%BE%8B/%E7%A4%BA%E4%BE%8B%EF%BC%9AOpenGL%E7%BB%98%E5%88%B6%E5%A4%9A%E6%AE%B5%E8%AF%9D%EF%BC%88%E7%BA%B9%E7%90%86%EF%BC%89/","title":"\u793a\u4f8b\uff1aOpenGL\u7ed8\u5236\u591a\u6bb5\u8bdd\uff08\u7eb9\u7406\uff09","text":"<pre><code>/*!\n * \\file:   Exp1.cpp\n * \\date:   2020/05/29 15:04\n * \\author: wangqi\n * Contact: wangq@southzn.com\n *\n * \\brief:\n *\n * TODO: long description\n *\n * \\note:   \u5b9e\u73b0\u4e86FT\u5e93\u751f\u6210\u5b57\u7b26\u4f4d\u56fe\uff0c\u5e76\u4e0a\u4f20\u5230GL\u7eb9\u7406\u3002\n            \u5b9e\u73b0\u4e86\u5b57\u7b26\u4f4d\u56fe\u7f13\u5b58\u529f\u80fd\uff0c\u591a\u4e2a\u5b57\u7b26\u56fe\u50cf\u4fdd\u5b58\u5728\u540c\u4e00\u4e2a\u7eb9\u7406\u4e2d\u3002\n            \u5b9e\u73b0\u4e86\u7b80\u5355\u7684\u5b57\u4f53\u7ba1\u7406\u6846\u67b6\u3002\n            \u5b9e\u73b0\u4e86\u7b80\u5355\u7684\u52a0\u7c97\u548c\u503e\u659c\u6548\u679c\u3002\n            \u5b9e\u73b0\u4e86\u53cd\u952f\u9f7f\u5f00\u5173\uff0c\u5e76\u4e14\u517c\u5bb9\u52a0\u7c97\u503e\u659c\u6548\u679c\u3002\n */\n// OpenGL library\n#include &lt;gl/glut.h&gt;\n// Std misc\n#include &lt;map&gt;\n#include &lt;vector&gt;\n// FreeType library\n#include &lt;ft2build.h&gt;\n#include FT_FREETYPE_H\n#include FT_BITMAP_H\n#include FT_OUTLINE_H\n#ifdef CreateFont\n#undef CreateFont\n#endif\ntypedef unsigned char byte;\nclass CFontManager //\u5b57\u4f53\u7ba1\u7406\u5668\uff1a\u7ba1\u7406\u4e86\u4e00\u4e2a\u5b57\u4f53\u5e93\n{\npublic:\nCFontManager();\n~CFontManager();\n// \u521d\u59cb\u5316\nbool initialize(void);\n// \u91ca\u653e\nvoid release(void);\n/*!\n     * \\brief:   createFont \u521b\u5efa\u5b57\u4f53\n     *\n     * \\param:   filename   \u5b57\u4f53\u6587\u4ef6\u7684\u8def\u5f84\n     * \\param:   face\n     * \\param:   tall       \u9ad8\u5ea6\n     * \\param:   bold       \u52a0\u7c97\n     * \\param:   italic     \u662f\u5426\u659c\u4f53\n     * \\param:   antialias  \u662f\u5426\u6297\u952f\u9f7f\n     * \\returns: int\n     * \\author:  wangqi\n     * \\date:    2020/06/02 14:16\n     *\n     * TODO:\n     *\n     */\nint createFont(const char *filename, int face, int tall, bool bold, bool italic, bool antialias);\n// \u5f97\u5230\u5b57\u7b26\u4fe1\u606f\nbool getCharInfo(int font_index, int code, int *wide, int *tall, int *horiBearingX, int *horiBearingY, int *horiAdvance, GLuint *texture, float coords[]);\n// \u5f97\u5230\u5b57\u4f53\u7684\u9ad8\u5ea6\nint getFontTall(int font_index);\nprivate:\nstruct glyphMetrics //\u5b57\u5f62\u5ea6\u91cf\n{\nint    width;   //\u5bbd\u5ea6\nint    height;  //\u957f\u5ea6\nint    horiBearingX;\nint    horiBearingY;\nint    horiAdvance;\n//int    vertBearingX;\n//int    vertBearingY;\n//int    vertAdvance;\n};\nclass CFont //\u5b57\u4f53\n{\npublic:\nCFont();\n~CFont();\n/*!\n         * \\brief:   create     \u521b\u5efa\u5b57\u4f53\n         *\n         * \\param:   library    FT\u5e93\u3002\u9700\u8981\u63d0\u524dFT_Init_FreeType\n         * \\param:   filename   \u5b57\u4f53\u6587\u4ef6\u7684\u8def\u5f84\n         * \\param:   face_index Face\u4e0b\u6807\n         * \\param:   tall       \u9ad8\u5ea6\n         * \\param:   bold       \u662f\u5426\u52a0\u7c97\n         * \\param:   italic     \u662f\u5426\u659c\u4f53\n         * \\param:   antialias  \u662f\u5426\u6297\u952f\u9f7f\n         * \\returns: bool\n         * \\author:  wangqi\n         * \\date:    2020/06/02 14:13\n         *\n         * TODO:\n         *\n         */\nbool create(FT_Library library, const char *filename, FT_Long face_index,\nint tall, bool bold, bool italic, bool antialias);\n// \u91ca\u653e\nvoid release(void);\n// \u5f97\u5230\u5b57\u7b26\u4e32\u4fe1\u606f\nbool getCharInfo(int code, glyphMetrics *metrics, GLuint *texture, float coords[]);\n// \u5f97\u5230\u5b57\u7b26\u9ad8\u5ea6\nint getFontTall(void);\nprivate:\n// \u52a0\u8f7d\u5b57\u7b26\nbool loadChar(int code, glyphMetrics *metrics);\nclass CChar //\u6e32\u67d3\u4e4b\u540e\u7684\u5b57\u7b26\n{\npublic:\n// \u8bbe\u7f6e\u4fe1\u606f\nvoid setInfo(glyphMetrics *metrics);\n// \u5f97\u5230\u4fe1\u606f\nvoid getInfo(glyphMetrics *metrics, GLuint *texture, float coords[]);\npublic:\nint m_code;             //\u7f16\u7801\nGLuint  m_texture;      //\u7eb9\u7406\nfloat   m_coords[4];    //\u5750\u6807\uff1aleft top right bottom\nprivate:\nglyphMetrics    m_metrics;\n};\nclass CPage //\u9875\u9762:\u7eb9\u7406=1:1\u3002\u4e00\u4e2a\u7eb9\u7406\u4e2d\u7ba1\u7406\u7740\u591a\u4e2a\u5b57\u7b26\n{\npublic:\nCPage();\n~CPage();\n/*!\n             * \\brief:   append     \u52a0\u5f53\u524d\u5b57\u4f53\u52a0\u5165\u8fd9\u4e2a\u7eb9\u7406\n             *\n             * \\param:   wide       \u5bbd\u5ea6\n             * \\param:   tall       \u9ad8\u5ea6\n             * \\param:   rgba       \u5b57\u4f53\u7684\u5185\u5bb9\n             * \\param:   coords     \u5b57\u4f53\u5728\u5f53\u524d\u7eb9\u7406\u4e2d\u7684\u5750\u6807\n             * \\returns: bool\n             * \\author:  wangqi\n             * \\date:    2020/06/02 14:36\n             *\n             * TODO:\n             *\n             */\nbool append(int wide, int tall, byte *rgba, float coords[]);\nGLuint getTexture(void); //\u5f97\u5230\u7eb9\u7406\nprivate:\nGLuint    m_texture; //\u7eb9\u7406\nint        m_wide;  //\u5bbd\u5ea6\nint        m_tall;  //\u9ad8\u5ea6\nint        m_posx;\nint        m_posy;\nint        m_maxCharTall;\n};\ntypedef std::map&lt;int, CChar *&gt; TCharMap;\n//\u952e\u503c\u5bf9\uff1a\u627e\u5230\u5b57\u7b26\u7684\u4f4d\u7f6e\n//key: \u5b57\u7b26\n//value: \u5b57\u7b26\u7684\u4fe1\u606f\nFT_Library                m_library;\nFT_Face                    m_face;\nbool                    m_antialias;\nbool                    m_bold;\nint                        m_tall;\nint                        m_rgbaSize;\nGLubyte                    *m_rgba;\nTCharMap                m_chars;\nstd::vector&lt;CPage *&gt;    m_pages;\n};\nFT_Library                m_library;\nstd::vector&lt;CFont *&gt;      m_fonts; //\u4e00\u4e2a\u5b57\u4f53\u5e93\u6709\u591a\u4e2a\u5b57\u4f53\n};\n//------------------------------------------------------------\n// CFont\n//------------------------------------------------------------\nCFontManager::CFont::CFont()\n{\nm_face = NULL;\nm_rgba = NULL;\nm_antialias = false;\nm_bold = false;\nm_tall = 0;\n}\nCFontManager::CFont::~CFont()\n{\nrelease();\n}\nbool CFontManager::CFont::create(FT_Library library, const char *filename, FT_Long face_index,\nint tall, bool bold, bool italic, bool antialias)\n{\nFT_Error err;\nif(tall &gt; 256)\n{\n// Bigger than a page size\nreturn false;\n}\n// \u5f97\u5230\u5b57\u7b26\u4fe1\u606f\nif((err = FT_New_Face(library, filename, face_index, &amp;m_face)) != FT_Err_Ok)\n{\nprintf(\"FT_New_Face() Error %d\\n\", err);\nreturn false;\n}\n// \u8bbe\u7f6e\u50cf\u7d20\nif((err = FT_Set_Pixel_Sizes(m_face, 0, tall)) != FT_Err_Ok)\n{\nprintf(\"FT_Set_Pixel_Sizes() Error %d\\n\", err);\nreturn false;\n}\n//m_rgbaSize = (tall * 2) * tall * 4; //\u6e90\u4ee3\u7801\u662f*2\uff0c\u4f46\u662f\u89c9\u5f97\u535a\u4e3b\u5199\u9519\u4e86\nm_rgbaSize = (tall) * tall * 4; //\u9ad8*\u5bbd*4\u3002\u4f46\u4f4d\u56fe\u7684\u9ad8\u5bbd\u76f8\u540c\uff0c\u6545\u53ef\u4ee5\u9ad8*\u9ad8*4\uff1b4\u4ee3\u8868RGBA\u56db\u4e2a\u901a\u9053\nm_rgba = new GLubyte[m_rgbaSize];\nif(m_rgba == NULL)\n{\nreturn false;\n}\nm_library = library;\nm_antialias = antialias;\nm_bold = bold;\nm_tall = tall;\nif(italic) //\u662f\u5426\u6297\u952f\u9f7f\n{\nFT_Matrix m;\nm.xx = 0x10000L;\nm.xy = 0.5f * 0x10000L;\nm.yx = 0;\nm.yy = 0x10000L;\nFT_Set_Transform(m_face, &amp;m, NULL);\n}\nreturn true;\n}\nvoid CFontManager::CFont::release(void)\n{\nFT_Error err;\nif(m_face)\n{\nif((err = FT_Done_Face(m_face)) != FT_Err_Ok)\n{\nprintf(\"FT_Done_Face() Error %d\\n\", err);\n}\nm_face = NULL;\n}\nif(m_rgba)\n{\ndelete[] m_rgba;\nm_rgba = NULL;\n}\nfor(TCharMap::iterator it = m_chars.begin(); it != m_chars.end(); it++)\n{\ndelete it-&gt;second;\nit-&gt;second = NULL;\n}\nm_chars.clear();\nfor(size_t i = 0; i &lt; m_pages.size(); i++)\n{\ndelete m_pages[i];\nm_pages[i] = NULL;\n}\nm_pages.clear();\n}\nbool CFontManager::CFont::getCharInfo(int code, glyphMetrics *metrics, GLuint *texture, float coords[])\n{\n// \u8bb0\u5fc6\u5316\u641c\u7d22\nTCharMap::iterator it = m_chars.find(code); //\u6839\u636ecode\u83b7\u53d6CChar\nif(it != m_chars.end()) //\u627e\u5230\n{\n// \u5f97\u5230\u7ed8\u5236\u4fe1\u606f\nit-&gt;second-&gt;getInfo(metrics, texture, coords); //\u5b57\u7b26\u3001\u7eb9\u7406\u3001 \u5750\u6807\nreturn true;\n}\n// \u6ca1\u6709\u627e\u5230\nglyphMetrics gm;\nif(loadChar(code, &amp;gm) == false) //\u52a0\u8f7d\u5b57\u7b26\n{\nreturn false;\n}\nCChar *ch = new CChar();\nch-&gt;m_code = code;\nch-&gt;setInfo(&amp;gm);\n// \u8ffd\u52a0\u5230\u4e00\u5f20\u7eb8\u4e2d\nfor(size_t i = 0; i &lt; m_pages.size(); i++)\n{\nCPage *page = m_pages[i];\nif(page-&gt;append(gm.width, gm.height, m_rgba, ch-&gt;m_coords))\n{\n// \u8fd9\u5f20\u7eb8\u8fd8\u653e\u7684\u4e0b\nch-&gt;m_texture = page-&gt;getTexture();\nch-&gt;getInfo(metrics, texture, coords);\nm_chars.insert(TCharMap::value_type(code, ch));\nreturn true;\n}\n}\n// \u4e4b\u524d\u7684\u7eb8\u90fd\u653e\u4e0d\u4e0b\u4e86\uff0c\u65b0\u5efa\u4e00\u5f20\u7eb8\nCPage *page = new CPage();\nif(page-&gt;append(gm.width, gm.height, m_rgba, ch-&gt;m_coords))\n{\nch-&gt;m_texture = page-&gt;getTexture();\nch-&gt;getInfo(metrics, texture, coords);\nm_chars.insert(TCharMap::value_type(code, ch));\nm_pages.push_back(page);\nreturn true;\n}\ndelete ch;\ndelete page;\nreturn false;\n}\nint CFontManager::CFont::getFontTall(void)\n{\nreturn m_tall;\n}\n// bitmap.width  \u4f4d\u56fe\u5bbd\u5ea6\n// bitmap.rows   \u4f4d\u56fe\u884c\u6570\uff08\u9ad8\u5ea6\uff09\n// bitmap.pitch  \u4f4d\u56fe\u4e00\u884c\u5360\u7528\u7684\u5b57\u8282\u6570\n//MONO\u6a21\u5f0f\u6bcf1\u4e2a\u50cf\u7d20\u4ec5\u75281bit\u4fdd\u5b58\uff0c\u53ea\u6709\u9ed1\u548c\u767d\u3002\n//1\u4e2abyte\u53ef\u4ee5\u4fdd\u5b588\u4e2a\u50cf\u7d20\uff0c1\u4e2aint\u53ef\u4ee5\u4fdd\u5b588*4\u4e2a\u50cf\u7d20\u3002\nvoid ConvertMONOToRGBA(FT_Bitmap *source, GLubyte *rgba)\n{\nGLubyte *s = source-&gt;buffer;\nGLubyte *t = rgba;\nfor(GLuint y = source-&gt;rows; y &gt; 0; y--)\n{\nGLubyte *ss = s;\nGLubyte *tt = t;\nfor(GLuint x = source-&gt;width &gt;&gt; 3; x &gt; 0; x--)\n{\nGLuint val = *ss;\nfor(GLuint i = 8; i &gt; 0; i--)\n{\ntt[0] = tt[1] = tt[2] = tt[3] = (val &amp; (1 &lt;&lt; (i - 1))) ? 0xFF : 0x00;\ntt += 4;\n}\nss += 1;\n}\nGLuint rem = source-&gt;width &amp; 7;\nif(rem &gt; 0)\n{\nGLuint val = *ss;\nfor(GLuint x = rem; x &gt; 0; x--)\n{\ntt[0] = tt[1] = tt[2] = tt[3] = (val &amp; 0x80) ? 0xFF : 0x00;\ntt += 4;\nval &lt;&lt;= 1;\n}\n}\ns += source-&gt;pitch;\nt += source-&gt;width * 4;    //pitch\n}\n}\n//GRAY\u6a21\u5f0f1\u4e2a\u50cf\u7d20\u75281\u4e2a\u5b57\u8282\u4fdd\u5b58\u3002\nvoid ConvertGRAYToRGBA(FT_Bitmap *source, GLubyte *rgba)\n{\nfor(GLuint y = 0; y &lt; source-&gt;rows; y++)\n{\nfor(GLuint x = 0; x &lt; source-&gt;width; x++)\n{\nGLubyte *s = &amp;source-&gt;buffer[(y * source-&gt;pitch) + x];\nGLubyte *t = &amp;rgba[((y * source-&gt;pitch) + x) * 4];\nt[0] = t[1] = t[2] = 0xFF;\nt[3] = *s;\n}\n}\n}\nbool CFontManager::CFont::loadChar(int code, glyphMetrics *metrics)\n{\nFT_Error err;\nFT_UInt glyph_index = FT_Get_Char_Index(m_face, (FT_ULong)code); //\u5f97\u5230\u4e0b\u6807\nif(glyph_index &gt; 0)\n{\n//\u5c06\u4e00\u4e2a\u5b57\u5f62\u56fe\u50cf\u88c5\u5230\u5b57\u5f62\u69fd\u4e2d\nif((err = FT_Load_Glyph(m_face, glyph_index, FT_LOAD_DEFAULT)) == FT_Err_Ok)\n{\nFT_GlyphSlot glyph = m_face-&gt;glyph; //\u83b7\u5f97\u56fe\u5f62\u4fe1\u606f\n// \u6a21\u5f0f\uff1a\u6297\u952f\u9f7f\u4e3a256\u7ea7\u7070\u5ea6;FT_RENDER_MODE_MONO\u9ed1\u767d\nFT_Render_Mode render_mode = m_antialias ? FT_RENDER_MODE_NORMAL : FT_RENDER_MODE_MONO;\nif(m_antialias &amp;&amp; m_bold) //\u52a0\u7c97\n{\nif((err = FT_Outline_EmboldenXY(&amp;glyph-&gt;outline, 60, 60)) != FT_Err_Ok)\n{\nprintf(\"FT_Outline_EmboldenXY() Error %d\\n\", err);\n}\n}\n// \u5f97\u5230\u56fe\u5f62\u4fe1\u606f\nif((err = FT_Render_Glyph(glyph, render_mode)) == FT_Err_Ok)\n{\nFT_Bitmap *bitmap = &amp;glyph-&gt;bitmap; //\u5f97\u5230\u4f4d\u56fe\nswitch(bitmap-&gt;pixel_mode) //\u50cf\u7d20\u6a21\u5f0f\n{\ncase FT_PIXEL_MODE_MONO: //\u9ed1\u767d\n{\nif(!m_antialias &amp;&amp; m_bold)\n{\n// \u52a0\u7c97\nif((err = FT_Bitmap_Embolden(m_library, bitmap, 60, 0)) != FT_Err_Ok)\n{\nprintf(\"FT_Bitmap_Embolden() Error %d\\n\", err);\n}\n}\n// \u5c06\u9ed1\u767d\u8f6c\u6210RGBA\nConvertMONOToRGBA(bitmap, m_rgba);\nbreak;\n}\ncase FT_PIXEL_MODE_GRAY: //\u7070\u5ea6\n{\nConvertGRAYToRGBA(bitmap, m_rgba); //\u7070\u5ea6\u8f6cRGBA\nbreak;\n}\ndefault:\n{\nmemset(m_rgba, 0xFF, m_rgbaSize);\nbreak;\n}\n}\nmetrics-&gt;width = bitmap-&gt;width;\nmetrics-&gt;height = bitmap-&gt;rows;\nmetrics-&gt;horiBearingX = glyph-&gt;bitmap_left;\nmetrics-&gt;horiBearingY = glyph-&gt;bitmap_top;\nmetrics-&gt;horiAdvance = glyph-&gt;advance.x &gt;&gt; 6;\nreturn true;\n}\nelse\n{\nprintf(\"FT_Render_Glyph() Error %d\\n\", err);\n}\n}\nelse\n{\nprintf(\"FT_Load_Glyph() Error %d\\n\", err);\n}\n}\nmemset(metrics, 0, sizeof(glyphMetrics));\nreturn false;\n}\n//------------------------------------------------------------\n// CChar\n//------------------------------------------------------------\nvoid CFontManager::CFont::CChar::setInfo(glyphMetrics *metrics)\n{\nmemcpy(&amp;m_metrics, metrics, sizeof(glyphMetrics));\n}\nvoid CFontManager::CFont::CChar::getInfo(glyphMetrics *metrics, GLuint *texture, float coords[])\n{\nmemcpy(metrics, &amp;m_metrics, sizeof(glyphMetrics));\n*texture = m_texture;\nmemcpy(coords, m_coords, sizeof(float) * 4);\n}\n//------------------------------------------------------------\n// CPage \u5f00\u8f9f\u4e00\u9875\u7684\u7eb9\u7406\uff0c\u6765\u5b58\u653e\u591a\u4e2a\u5b57\u7b26\n//------------------------------------------------------------\nCFontManager::CFont::CPage::CPage() //\u4e00\u9875\u5bf9\u5e94\u4e00\u4e2a\u7eb9\u7406\n{\nm_wide = m_tall = 256; //\u9ad8\nm_posx = m_posy = 0;\n// In a line, for a max height character\nm_maxCharTall = 0;\nglGenTextures(1, &amp;m_texture);    // Using your API here\nglBindTexture(GL_TEXTURE_2D, m_texture);\nglTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, m_wide, m_tall, 0, GL_RGBA, GL_UNSIGNED_BYTE, NULL);\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\n}\nCFontManager::CFont::CPage::~CPage()\n{\n// free the texture\n}\nbool CFontManager::CFont::CPage::append(int wide, int tall, byte *rgba, float coords[])\n{\nif(m_posy + tall &gt; m_tall)\n{\n// not enough line space in this page\nreturn false;\n}\n// If this line is full ...\nif(m_posx + wide &gt; m_wide)\n{\nint newLineY = m_posy + m_maxCharTall;\nif(newLineY + tall &gt; m_tall)\n{\n// No more space for new line in this page, should allocate a new one\nreturn false;\n}\n// Begin in new line\nm_posx = 0;\nm_posy = newLineY;\n// Reset\nm_maxCharTall = 0;\n}\nglBindTexture(GL_TEXTURE_2D, m_texture);\nglTexSubImage2D(GL_TEXTURE_2D, 0, m_posx, m_posy, wide, tall, GL_RGBA, GL_UNSIGNED_BYTE, rgba);\n// \u8be5\u5b57\u7b26\u7684\u4f4d\u7f6e\ncoords[0] = m_posx / (float)m_wide;                // left\ncoords[1] = m_posy / (float)m_tall;                // top\ncoords[2] = (m_posx + wide) / (float)m_wide;    // right\ncoords[3] = (m_posy + tall) / (float)m_tall;    // bottom\nm_posx += wide;\nif(tall &gt; m_maxCharTall)\n{\nm_maxCharTall = tall;\n}\nreturn true;\n}\nGLuint CFontManager::CFont::CPage::getTexture(void)\n{\nreturn m_texture;\n}\n//------------------------------------------------------------\n// CFontManager\n//------------------------------------------------------------\nCFontManager::CFontManager()\n{\nm_library = NULL;\n}\nCFontManager::~CFontManager()\n{\nrelease();\n}\nbool CFontManager::initialize(void)\n{\nFT_Error err;\nif((err = FT_Init_FreeType(&amp;m_library)) != FT_Err_Ok) //\u521d\u59cb\u5316\u4e00\u4e2a\u5e93\n{\nprintf(\"FT_Init_FreeType() Error %d\\n\", err);\nreturn false;\n}\nreturn true;\n}\nvoid CFontManager::release(void)\n{\nFT_Error err;\nfor(size_t i = 0; i &lt; m_fonts.size(); i++)\n{\ndelete m_fonts[i];\nm_fonts[i] = NULL;\n}\nm_fonts.clear();\nif((err = FT_Done_FreeType(m_library)) != FT_Err_Ok)\n{\nprintf(\"FT_Done_FreeType() Error %d\\n\");\n}\n}\nint CFontManager::createFont(const char *filename, int face, int tall, bool bold,\nbool italic, bool antialias)\n{\n// \u65b0\u5efa\u5b57\u4f53\nCFont *font = new CFont();\nif(font-&gt;create(m_library, filename, face, tall, bold, italic, antialias) != true)\n{\ndelete font; //\u521b\u5efa\u5931\u8d25\nreturn 0;\n}\n// \u653e\u5165\u5b57\u4f53\u6570\u7ec4\uff0c\u8fdb\u884c\u7ba1\u7406\nm_fonts.push_back(font);\nreturn m_fonts.size();\n}\n#define CONVERT_FONT_INDEX(x) (((x) &lt; 1 || (x) &gt; (int)m_fonts.size()) ? -1 : (x) - 1)\nbool CFontManager::getCharInfo(int font_index, int code, int *wide, int *tall, int *horiBearingX, int *horiBearingY, int *horiAdvance, GLuint *texture, float coords[])\n{\nint i = CONVERT_FONT_INDEX(font_index); //\u8f6c\u6362\u5b57\u7b26\u7684\u4e0b\u6807\nif(i == -1)\n{\nreturn false;\n}\nCFont *font = m_fonts[i]; //\u83b7\u5f97\u5b57\u4f53\nglyphMetrics metrics; //\u7ed8\u5236\u4fe1\u606f\nif(font-&gt;getCharInfo(code, &amp;metrics, texture, coords) == false) //\u83b7\u5f97\u7ed8\u5236\u4fe1\u606f\n{\nreturn false;\n}\n// \u89e3\u6790\u7ed8\u5236\u4fe1\u606f\n*wide = metrics.width;\n*tall = metrics.height;\n*horiBearingX = metrics.horiBearingX;\n*horiBearingY = metrics.horiBearingY;\n*horiAdvance = metrics.horiAdvance;\nreturn true;\n}\nint CFontManager::getFontTall(int font_index)\n{\nint i = CONVERT_FONT_INDEX(font_index);\nif(i == -1)\n{\nreturn false;\n}\nCFont *font = m_fonts[i];\nreturn font-&gt;getFontTall();\n}\nCFontManager g_FontManager;\nint char_font;\nvoid init(void)\n{\n// \u6e05\u9664\u989c\u8272\nglClearColor(0.0, 0.0, 0.0, 0.0);\n// \u6df7\u5408\u6a21\u5f0f\nglEnable(GL_BLEND);\nglBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);\n// \u521d\u59cb\u5316\u4e00\u4e2a\u5e93\ng_FontManager.initialize();\n// \u521b\u5efa\u5b57\u4f53\uff0c\u8fd4\u56de\u5b57\u4f53\u96c6\u7684\u4e2a\u6570\nchar_font = g_FontManager.createFont(\"C:\\\\WINDOWS\\\\Fonts\\\\simhei.ttf\",\n0,\n32, //\u5b57\u4f53\u9ad8\u5ea6\nfalse,\nfalse,\ntrue);\nif(char_font == 0)//\u521b\u5efa\u5931\u8d25\n{\nprintf(\"createFont failed\\n\");\n}\n}\nwchar_t ciphertext[] =\n{\nL\"\u4f60\u597d\u5417\uff1f\\n\"\nL\"\u6e29\u99a8\u63d0\u793a\uff1a\\n\"\nL\"\u4e0d\u8981\u5fd8\u8bb0\u660e\u5929\u4e0a\u5348 7:30-12:00 \u5728\u516c\u53f8\u7684\u4f53\u68c0\u54e6~\\n\"\nL\"\u4f53\u68c0\u524d\u4e00\u5929\u4e0d\u8981\u66b4\u996e\u66b4\u98df\uff0c\u4e0d\u8981\u559d\u9152\uff0c\u4e0d\u8981\u8fdb\u98df\u592a\u751c\u592a\u54b8\u7684\u98df\u7269\\n\"\nL\"\u4ee5\u514d\u5f71\u54cd\u4f53\u68c0\u7ed3\u679c\\n\"\nL\"\u665a\u4e0a10\u70b9\u540e\u4e00\u822c\u8981\u6c42\u7981\u98df\u3002\\n\"\nL\"\u4f53\u68c0\u5f53\u5929\u65e9\u6668\u5343\u4e07\u4e0d\u8981\u5403\u65e9\u9910\uff01\\n\"\nL\"\u4e0d\u8981\u5403\u65e9\u9910\uff01\\n\"\nL\"\u4e0d\u8981\u5403\u65e9\u9910\uff01\\n\"\nL\"\u7ed8\u5236\u4f4d\u7f6e\u3002\u5fd8\u8bb0\u4e86\uff0c\u53ef\u8d39\u89e3\u4e3a\u65e0\u6cd5\\n\"\n};\n//#define DRAW_PAGE\n/*!\n * \\brief:   draw_string\n *\n * \\param:   x              \u7ed8\u5236\u4f4d\u7f6e\n * \\param:   y\n * \\param:   font           \u5b57\u4f53\n * \\param:   string         \u5b57\u7b26\u4e32\n * \\returns: void\n * \\author:  wangqi\n * \\date:    2020/06/02 14:18\n *\n * TODO:\n *\n */\nvoid draw_string(int x, int y, int font_index, wchar_t *string)\n{\nif(!font_index) //\u5b57\u4f53\n{\nreturn;\n}\nint tall = g_FontManager.getFontTall(font_index); //\u5f97\u5230\u5b57\u7b26\u9ad8\uff1a\u521d\u59cb\u5316\u5b57\u4f53\u65f6\u8bbe\u7f6e\u7684\n// \u7ed8\u5236\u7684\u521d\u59cb\u4f4d\u7f6e\nint dx = x;\nint dy = y;\nGLuint sglt = 0; //\u7eb9\u7406\u7f16\u53f7\uff0c\u7b2c\u51e0\u5f20\u7eb8\nwhile(*string) // \u904d\u5386\u5b57\u7b26\u4e32\n{\nif(*string == L'\\n') //\u56de\u8f66\n{\nstring++;\ndx = x;         //\u7ed8\u5236\u7684\u521d\u59cb\u4f4d\u7f6ex\ndy += tall + 2; //\u884c\u95f4\u8ddd\ncontinue;\n}\nint cw, ct; //\u5bbd\u5ea6\u3001\u9ad8\u5ea6\nint bx, by, av;\nGLuint glt;   //\u8be5\u5b57\u7b26\u6240\u5728\u7684\u7eb8\u5f20\nfloat crd[4]; //\u8be5\u5b57\u7b26\u7684\u5750\u6807\n//\u5f97\u5230\u5b57\u7b26\u4fe1\u606f\nif(!g_FontManager.getCharInfo(font_index, *string, &amp;cw, &amp;ct, &amp;bx, &amp;by, &amp;av, &amp;glt, crd))\n{\nstring++;\ncontinue;\n}\n//\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u591a\u4e2a\u5b57\u7b26\u90fd\u5728\u540c\u4e00\u4e2a\u7eb9\u7406\u4e2d\uff0c\u907f\u514d\u9891\u7e41\u7ed1\u5b9a\u7eb9\u7406\uff0c\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387\nif(glt != sglt) //\u548c\u539f\u6765\u7684\u4e0d\u4e00\u6837\uff0c\u5219\u7ed1\u5b9a\u5f53\u524d\u7684\u7eb9\u7406\n{\nglBindTexture(GL_TEXTURE_2D, glt); //\u7ed1\u5b9a\u7eb9\u7406\nsglt = glt;\n}\nint px = dx + bx;\nint py = dy - by;\n// \u5f00\u59cb\u7ed8\u5236\u56db\u8fb9\u5f62\nglBegin(GL_QUADS);\n// \u7b2c\u4e00\u4e2a\u70b9\nglTexCoord2f(crd[0], crd[1]);   //\u6307\u5b9a\u8be5\u5b57\u7b26\u5728\u7eb9\u7406\u4e2d\u7684\u5750\u6807\uff0c\u9608\u503c\u4e3a[0, 1]\nglVertex3f(px, py, 0.0f);       //\u5bf9\u5e94\u753b\u5e03\u4e2d\u7684\u4f4d\u7f6e\n// \u7b2c\u4e8c\u4e2a\u70b9\nglTexCoord2f(crd[2], crd[1]);\nglVertex3f(px + cw, py, 0.0f);\n// \u7b2c\u4e09\u4e2a\u70b9\nglTexCoord2f(crd[2], crd[3]);\nglVertex3f(px + cw, py + ct, 0.0f);\n// \u7b2c\u56db\u4e2a\u70b9\nglTexCoord2f(crd[0], crd[3]);\nglVertex3f(px, py + ct, 0.0f);\n// \u7ed3\u675f\u7ed8\u5236\nglEnd();\ndx += av;\nstring++;\n}\n}\nvoid draw_page_texture(int x, int y, GLuint glt)\n{\nif(!glt)\n{\nglDisable(GL_TEXTURE_2D); //\u5173\u95ed\nglColor4f(0.2, 0.2, 0.2, 1.0);\n}\nelse\n{\nglEnable(GL_TEXTURE_2D); //\u5f00\u542f\nglBindTexture(GL_TEXTURE_2D, glt); //\u7ed1\u5b9a\u7eb9\u7406\nglColor4f(1.0, 1.0, 1.0, 1.0);\n}\nint w = 256;\nint t = 256;\nglBegin(GL_QUADS);\nglTexCoord2f(0.0, 0.0);\nglVertex3f(x, y, 0.0f);\nglTexCoord2f(1.0, 0.0);\nglVertex3f(x + w, y, 0.0f);\nglTexCoord2f(1.0, 1.0);\nglVertex3f(x + w, y + t, 0.0f);\nglTexCoord2f(0.0, 1.0);\nglVertex3f(x, y + t, 0.0f);\nglEnd();\n}\nvoid display(void)\n{\n// \u6e05\u9664\u7f13\u5b58\nglClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT);\n// \u5f00\u542f\u7eb9\u7406\nglEnable(GL_TEXTURE_2D);\n// \u8bbe\u7f6e\u753b\u7b14\u989c\u8272\uff0c\u5373\u5b57\u4f53\u989c\u8272\nglColor4f(0.0, 0.0, 1.0, 1.0);\n// \u7ed8\u5236\u5b57\u7b26\u4e32\ndraw_string(10, 30, char_font, ciphertext);\n// \u7ed8\u5236\u6574\u4e2a\u7eb9\u7406\ndraw_page_texture(10, 350, 0);    //\u7ed8\u5236\u4e00\u4e2a\u80cc\u666f\ndraw_page_texture(10, 350, 1);    //\u7ed8\u5236\u7b2c\u4e00\u5f20\u7eb8\uff08\u5373\u7b2c\u4e00\u4e2a\u7eb9\u7406\uff09\ndraw_page_texture(276, 350, 0);   //\u7ed8\u5236\u4e00\u4e2a\u80cc\u666f\ndraw_page_texture(276, 350, 2);   //\u7ed8\u5236\u7b2c\u4e8c\u5f20\u7eb8\uff08\u5373\u7b2c\u4e8c\u4e2a\u7eb9\u7406\uff09\nglutSwapBuffers();\nglutPostRedisplay();\n}\nvoid reshape(int width, int height)\n{\nglViewport(0, 0, width, height);\nglMatrixMode(GL_PROJECTION);\nglLoadIdentity();\ngluOrtho2D(0, width, height, 0);\nglMatrixMode(GL_MODELVIEW);\n}\nvoid keyboard(unsigned char key, int x, int y)\n{\n}\nvoid main(int argc, char **argv)\n{\nglutInitWindowPosition(200, 200);\nglutInitWindowSize(1200, 680);\nglutInit(&amp;argc, argv);\nglutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH | GLUT_STENCIL);\nglutCreateWindow(\"FreeType OpenGL\");\ninit();\nglutDisplayFunc(display);\nglutReshapeFunc(reshape);\nglutKeyboardFunc(keyboard);\nglutMainLoop();\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/","title":"\u57fa\u4e8e\u5b57\u4f53\u8f6e\u5ed3\u7684GPU\u6587\u5b57\u6e32\u67d3","text":"<p>\u672c\u6587\u4ecb\u7ecd\u4e86\u4e00\u79cd\u5b9e\u73b0\u6587\u5b57\u6e32\u67d3\u7684\u65b0\u65b9\u6cd5\u3002\u6b64\u7b97\u6cd5\u7684\u4e3b\u8981\u601d\u8def\u5728\u4e8e\uff0c\u5c06\u5b57\u4f53\u8f6e\u5ed3\u4f20\u8f93\u5230\u7247\u5143\u7740\u8272\u5668\u5f53\u4e2d\uff0c\u5728GPU\u4e2d\u5bf9\u6587\u5b57\u8fdb\u884c\u6e32\u67d3\u3002\u56e0\u6b64\u5f97\u540d\u4e8e\u201c\u57fa\u4e8e\u5b57\u4f53\u8f6e\u5ed3\u7684GPU\u6587\u5b57\u6e32\u67d3\u201d\u3002</p> <p>\u4f18\u52bf\u5982\u4e0b</p> <ol> <li>\u9ad8\u8d28\u91cf\uff1a\u5728\u4efb\u610f\u7f29\u653e\u6bd4\u4f8b\u4e0b\uff0c\u4ecd\u7136\u80fd\u591f\u4fdd\u6301\u826f\u597d\u7684\u6297\u952f\u9f7f</li> <li>\u9ad8\u6548\u7387\u3001\u4f4e\u5185\u5b58</li> </ol> <p>\u5bf9\u6bd4\uff1a\u5341\u4e07\u5b57\u7b26</p> <ol> <li>\u57fa\u4e8e\u4e09\u89d2\u7f51\u7ed8\u5236\uff1a\u7a33\u5b9a\u572890\u5e27\u5de6\u53f3\uff0c\u663e\u5b58\u5360\u75282.5GB</li> <li>\u57fa\u4e8e\u5b57\u4f53\u8f6e\u5ed3\u7684GPU\u6587\u5b57\u6e32\u67d3\uff1a\u7a33\u5b9a\u5728140\u5e27\u5de6\u53f3\uff0c\u663e\u5b58\u5360\u75280.1GB</li> </ol> <p>\u4ee3\u7801\uff1ageodoer/gpu-font-rendering: \u57fa\u4e8e\u77e2\u91cf\u8f6e\u5ed3\u7684GPU\u6587\u5b57\u6e32\u67d3 (github.com)</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_1","title":"\u7b97\u6cd5\u6982\u8ff0","text":"<p>\u4e3b\u8981\u601d\u60f3\u5982\u4e0b</p> <ol> <li>\u5c06\u5b57\u7b26\u7684\u8f6e\u5ed3\u7edf\u4e00\u5b58\u50a8\u5728\u4e00\u4e2abuffer\u5f53\u4e2d\uff0c\u5e76\u4f20\u8f93\u5230\u6e32\u67d3\u7ba1\u7ebf\u5f53\u4e2d</li> <li>\u5c06\u6bcf\u4e2a\u50cf\u7d20\u7b80\u5316\u4e3a\u5706\u5f62\u7a97\u53e3\uff0c\u6211\u4eec\u53ea\u9700\u8ba1\u7b97\u8fd9\u4e2a\u5706\u88ab\u5b57\u4f53\u7684\u8986\u76d6\u7387<code>Coverage</code>\u5373\u53ef\uff08\u800c\u8fd9\u4e00\u6b65\u662f\u5728\u7247\u5143\u7740\u8272\u5668\u5f53\u4e2d\u505a\u7684\uff09</li> <li>\u6700\u540e\u5c06<code>\u6587\u5b57\u989c\u8272*Coverage</code>\u4f5c\u4e3a\u7247\u5143\u989c\u8272\uff0c\u8fd9\u53c8\u53ef\u80fd\u8fbe\u5230\u6297\u952f\u9f7f\u7684\u6548\u679c</li> </ol> <p> </p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_2","title":"\u7b97\u6cd5\u6b65\u9aa4","text":"<p>\u4ee5\u7ed8\u5236<code>I'm MM.</code>\u4e3a\u4f8b</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_3","title":"\u51c6\u5907\u5b57\u7b26\u8f6e\u5ed3","text":"<p>\u5f53\u9047\u5230\u65b0\u5b57\u7b26\u65f6\uff0c\u5219\u9700\u8981\u51c6\u5907\u8be5\u5b57\u7b26\u7684\u8f6e\u5ed3\uff0c\u4e4b\u540e\u9700\u8981\u4f20\u8f93\u5230\u6e32\u67d3\u7ba1\u7ebf\u5f53\u4e2d\uff0c\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u3002</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_4","title":"\u51c6\u5907\u4e09\u89d2\u7f51","text":"<p>\u7ed8\u5236\u65f6\uff0c\u9700\u8981\u6839\u636e\u5b57\u7b26\u7684\u6392\u7248\u51c6\u5907\u4e09\u89d2\u7f51\uff08\u8be6\u60c5\u8bf7\u770b\u540e\u6587\uff09\u3002\u4e00\u4e2a\u5b57\u7b26\u9700\u7528\u4e00\u4e2a\u957f\u65b9\u5f62\u6765\u8986\u76d6\uff0c\u4e00\u4e2a\u957f\u65b9\u5f62\u6253\u6563\u6210\u4e24\u4e2a\u4e09\u89d2\u5f62\u3002</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_5","title":"\u51c6\u5907\u9876\u70b9\u6570\u636e","text":"<p>\u9876\u70b9\u6570\u636e\u9700\u8981\u5305\u542b\u54ea\u4e9b\u4fe1\u606f\uff1f</p> <ol> <li>\u9876\u70b9\u7684\u4e16\u754c\u5750\u6807\u65e0\u9700\u8d58\u8ff0\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u4e8c\u7ef4\u7684\u5750\u6807\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6269\u5c55\u6210\u4e09\u7ef4\u7684</li> <li>UV\u5750\u6807\u7684\u7269\u7406\u610f\u4e49\uff0c\u4e4b\u540e\u518d\u5c55\u5f00\u7ec6\u804a</li> <li><code>bufferIndex</code>\u5176\u5b9e\u5373\u662f\u6b64\u5b57\u7b26\u6240\u5bf9\u5e94\u7684<code>BufferGlyph</code>\uff0c\u4e0d\u8fc7\u4f20\u8f93\u7684\u662f<code>array&lt;BufferGlyph&gt;</code>\u4e2d\u7684\u4e0b\u6807\u3002\u6839\u636e\u6b64\uff0c\u7247\u5143\u7740\u8272\u5668\u5c31\u80fd\u53d6\u5230\u6b64\u7247\u5143\u6240\u5c5e\u5b57\u7b26\u7684\u8f6e\u5ed3</li> </ol> <pre><code>struct BufferVertex {\nfloat x, y;  //\u9876\u70b9\u7684\u4e16\u754c\u5750\u6807\uff0c\u53ef\u4ee5\u662f\u4e09\u7ef4\u7684\nfloat u, v;  //UV\u5750\u6807\nint32_t bufferIndex; //\u6b64\u5b57\u7b26\u6240\u5bf9\u5e94\u7684BufferGlyph\uff08array&lt;BufferGlyph&gt;\u7684\u4e0b\u6807\uff09\n};\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#uv","title":"UV\u7684\u7269\u7406\u610f\u4e49","text":"<p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5b57\u4f53\u8f6e\u5ed3\uff08\u5373<code>BufferCurve</code>\uff09\u662f\u6709\u4e00\u4e2a\u5b57\u4f53\u5750\u6807\u7cfb\u7684\uff0c<code>BufferCurve</code>\u4e2d\u7684\u70b9\u90fd\u662f\u6b64\u5750\u6807\u7cfb\u7684\u3002</p> <p></p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6807\u8bc6\uff0c\u6b64\u9876\u70b9\u5bf9\u5e94\u5230\u5b57\u4f53\u5750\u6807\u7cfb\u4e0a\u7684\u5750\u6807\u662f\u591a\u5c11\uff0c\u800c\u8fd9\u4e2a\u4fe1\u606f\u5c31\u5b58\u5728\u9876\u70b9\u7684UV\u5f53\u4e2d\u3002</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_6","title":"\u9876\u70b9\u7740\u8272\u5668","text":"<p>\u9876\u70b9\u7740\u8272\u5668\u5f88\u7b80\u5355</p> <ol> <li>\u9876\u70b9\u5750\u6807\u505aMVP\u53d8\u5316\u5373\u53ef</li> <li>UV\u5750\u6807\uff0c\u4e00\u6837\u8f93\u51fa\u5230\u7247\u5143\u7740\u8272\u5668\u5373\u53ef\uff0c\u6e32\u67d3\u7ba1\u7ebf\u4f1a\u81ea\u52a8\u5e2e\u4f60\u63d2\u503c</li> <li>\u7136\u800c<code>bufferIndex</code>\u5c31\u8981\u6ce8\u610f\u4e86\uff0c<code>bufferIndex</code>\u662f\u4e0d\u5141\u8bb8\u88ab\u63d2\u503c\u7684\uff0c\u56e0\u6b64\u8981\u7528<code>flat</code>\u6765\u7533\u660e</li> </ol> <pre><code>#version 330 core\nuniform mat4 projection;\nuniform mat4 view;\nuniform mat4 model;\nlayout (location = 0) in vec2 vertexPosition;\nlayout (location = 1) in vec2 vertexUV;\nlayout (location = 2) in int  vertexIndex;\nout vec2 uv;\nflat out int bufferIndex;\n//flat\u58f0\u660e\u4e00\u4e2a\u6807\u91cf\u6216\u5411\u91cf\u53d8\u91cf\u662f\u201c\u5e73\u9762\u7684\u201d\uff08\u5373\u4e0d\u4f1a\u88ab\u63d2\u503c\uff09\nvoid main() {\ngl_Position = projection * view * model * vec4(vertexPosition, 0, 1);\nuv = vertexUV;\nbufferIndex = vertexIndex;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_7","title":"\u7247\u5143\u7740\u8272\u5668","text":"<p>\u7247\u5143\u7740\u8272\u5668\u662fGPU\u6587\u5b57\u6e32\u67d3\u7684\u5173\u952e\uff0c\u5176\u4e3b\u8981\u601d\u8def\u662f</p> <ol> <li>\u636ebufferIndex\u83b7\u53d6\u5b57\u5f62\u63cf\u8ff0</li> <li>\u6839\u636e\u5b57\u5f62\u63cf\u8ff0\uff0c\u62ff\u5230\u8be5\u5b57\u7b26\u7684\u6240\u6709\u8f6e\u5ed3\u66f2\u7ebf</li> <li>\u904d\u5386\u8f6e\u5ed3\u66f2\u7ebf\uff0c\u8ba1\u7b97\u8f6e\u5ed3\u5bf9\u7247\u5143\u7684\u8986\u76d6\u7387</li> <li>\u6700\u540e\uff0c<code>\u7247\u5143\u989c\u8272 = \u8986\u76d6\u7387*\u6587\u5b57\u989c\u8272</code></li> </ol> <pre><code>#version 330 core\n//\u5b57\u5f62\u63cf\u8ff0\nstruct Glyph {\nint start, count; //Curves\u4e2d\u7684\u7d22\u5f15\n};\n//\u4e8c\u6b21\u8d1d\u585e\u5c14\u66f2\u7ebf\nstruct Curve {\nvec2 p0, p1, p2;\n};\nuniform isamplerBuffer glyphs;  //\u5b57\u5f62\u7f13\u51b2\u7eb9\u7406\uff08\u5b58\u50a8\u6240\u6709\u7684\u5b57\u5f62\u63cf\u8ff0\uff09\nuniform samplerBuffer curves;   //\u66f2\u7ebf\u7f13\u51b2\u7eb9\u7406\uff08\u5b58\u50a8\u6240\u6709\u5b57\u5f62\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\uff09\nuniform vec4 color; //\u5b57\u4f53\u989c\u8272\nin vec2 uv;\nflat in int bufferIndex;\nout vec4 result;\n// \u6839\u636e\u7d22\u5f15\uff0c\u4eceglyphs\u4e2d\u52a0\u8f7dGlyph\nGlyph loadGlyph(int index) {\nGlyph result;\nivec2 data = texelFetch(glyphs, index).xy; //texelFetch\u76f4\u63a5\u4ece\u7f13\u51b2\u533a\u4e2d\u53d6\u51fa\u50cf\u7d20\u503c\uff0c\u4e0d\u8fdb\u884c\u63d2\u503c\u5904\u7406\nresult.start = data.x;\nresult.count = data.y;\nreturn result;\n}\n// \u6839\u636e\u7d22\u5f15\uff0c\u4ececurves\u4e2d\u52a0\u8f7dCurve\nCurve loadCurve(int index) {\nCurve result;\nresult.p0 = texelFetch(curves, 3*index+0).xy;\nresult.p1 = texelFetch(curves, 3*index+1).xy;\nresult.p2 = texelFetch(curves, 3*index+2).xy;\nreturn result;\n}\n// \u8ba1\u7b97\u8986\u76d6\u7387\nfloat computeCoverage(vec2 p0, vec2 p1, vec2 p2) {\n//...\u8ba1\u7b97\u8986\u76d6\u7387\uff0c\u5e76\u8d4b\u503c\u7ed9alpha\nreturn alpha;\n}\nvoid main() {\nfloat alpha = 0;\n//1. \u6839\u636ebufferIndex\u83b7\u53d6\u5b57\u5f62\u63cf\u8ff0\nGlyph glyph = loadGlyph(bufferIndex); //2. \u904d\u5386\u8be5\u5b57\u7b26\u7684\u6240\u6709\u8f6e\u5ed3\u66f2\u7ebf\nfor (int i = 0; i &lt; glyph.count; i++) {\nCurve curve = loadCurve(glyph.start + i);\n//\u4e00\u6761\u4e8c\u9636\u8d1d\u585e\u5c14\u66f2\u7ebf\nvec2 p0 = curve.p0 - uv;\nvec2 p1 = curve.p1 - uv;\nvec2 p2 = curve.p2 - uv;\n//3. \u8ba1\u7b97\u8986\u76d6\u7387\nalpha += computeCoverage(p0, p1, p2);\n}\nalpha = clamp(alpha, 0.0, 1.0);\nresult = color * alpha;\n}\n</code></pre> <p>\u81f3\u4e8e\u5982\u4f55\u8ba1\u7b97\u8986\u76d6\u7387\uff0c\u672c\u6587\u4e0d\u518d\u5c55\u5f00\uff0c\u53ef\u9605\u8bfb\u53c2\u8003\u94fe\u63a5\u4e2d\u7684\u6587\u6863\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_8","title":"\u6587\u5b57\u7f16\u6392","text":"<p>\u5982\u4e0a\u6587\u201c\u51c6\u5907\u4e09\u89d2\u7f51\u201d\u4e2d\u6240\u8bf4\uff0c\u6211\u4eec\u8981\u6839\u636eString\u7684\u60c5\u51b5\uff0c\u5bf9\u5355\u4e2a\u5b57\u7b26\u8fdb\u884c\u7f16\u6392\uff0c\u8ba1\u7b97\u51fa\u4e09\u89d2\u7f51\u3002</p> <p></p> <p>\u6211\u4eec\u5728\u751f\u6210\u6587\u5b57\u8f6e\u5ed3buffer\u65f6\uff0c\u9700\u8981\u5c06\u6bcf\u4e2a\u5b57\u7b26\u7684\u89c4\u683c\u7ed9\u8bb0\u5f55\u4e0b\u6765\uff0c\u4ee5\u4fbf\u5728\u7f16\u6392\u6587\u5b57\u65f6\u4f7f\u7528</p> <ol> <li>\u5728\u5b57\u7b26\u63cf\u8ff0\u4fe1\u606f\u4e2d\uff0c\u52a0\u4e0a\u5b57\u7b26\u89c4\u683c\u76f8\u5173\u7684\u5c5e\u6027</li> </ol> <pre><code>// \u5b57\u7b26\u7684\u63cf\u8ff0\u4fe1\u606f\nstruct Glyph\n{\nFT_UInt glyphIndex;     //\u53ef\u7531FT_Get_Char_Index\u83b7\u5f97\nint32_t bufferIndex;    //\u5728m_GlyphBuffer\u4e2d\u7684\u7d22\u5f15\nint32_t curveCount;     //\u8be5\u5b57\u5f62\u7684\u66f2\u7ebf\u4e2a\u6570\n//\u6b64\u5b57\u7b26\u7684\u89c4\u683c\n// Important glyph metrics in font units.\nFT_Pos width, height;\nFT_Pos bearingX;\nFT_Pos bearingY;\nFT_Pos advance;\n};\n</code></pre> <ol> <li>\u5728\u751f\u6210\u6587\u5b57\u8f6e\u5ed3buffer\u65f6\uff0c\u8d4b\u503c\u8fd9\u4e9b\u5c5e\u6027</li> </ol> <pre><code>glyph.width = _face-&gt;glyph-&gt;metrics.width;\nglyph.height = _face-&gt;glyph-&gt;metrics.height;\nglyph.bearingX = _face-&gt;glyph-&gt;metrics.horiBearingX;\nglyph.bearingY = _face-&gt;glyph-&gt;metrics.horiBearingY;\nglyph.advance = _face-&gt;glyph-&gt;metrics.horiAdvance;\n</code></pre> <ol> <li>\u5728\u7ed8\u5236String\u65f6\uff0c\u53ea\u9700\u8981\u6839\u636e\u4ee5\u4e0a\u53c2\u6570\uff0c\u7f16\u6392\u5b57\u7b26\u4e32\u5373\u53ef\uff0c\u5177\u4f53\u53ef\u53c2\u7167<code>font.cpp</code>\u4e2d\uff0c<code>Font</code>\u7c7b\uff0c<code>void draw(float x, float y, const std::string&amp; text)</code>\u51fd\u6570</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_9","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>\u7b97\u6cd5\u539f\u6587\uff1a\u300aGPU Font Rendering: Current State of the Art\u300b</li> <li>\u7b80\u5316\u7248\u672c\uff1aGPU text rendering with vector textures</li> <li>C++ OpenGL\u793a\u4f8b\u4ee3\u7801\uff1aGreenLightning/gpu-font-rendering: GPU font rendering from vector outlines demonstration (github.com)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%28%E7%BF%BB%E8%AF%91%29%E5%9F%BA%E4%BA%8E%E7%9F%A2%E9%87%8F%E7%BA%B9%E7%90%86%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/","title":"(\u7ffb\u8bd1)\u57fa\u4e8e\u77e2\u91cf\u7eb9\u7406\u7684GPU\u6587\u5b57\u6e32\u67d3","text":"<p>\u9898\u76ee\uff1aGPU text rendering with vector textures  \u539f\u6587\u94fe\u63a5\uff1aGPU text rendering with vector textures \u00b7 Will Dobbie (wdobbie.com)</p> <p>This post presents a new method for high quality text rendering using the GPU. Unlike existing methods it provides antialiased pixel accurate results at all scales with no runtime CPU cost.</p> <p>\u672c\u6587\u4ecb\u7ecd\u4e86\u4e00\u79cd\u4f7f\u7528GPU\u5b9e\u73b0\u9ad8\u8d28\u91cf\u6587\u5b57\u6e32\u67d3\u7684\u65b0\u65b9\u6cd5\u3002\u4e0e\u73b0\u6709\u7684\u5176\u4ed6\u65b9\u6cd5\u4e0d\u540c\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u5728\u4efb\u610f\u7f29\u653e\u6bd4\u4f8b\u4e0b\u4fdd\u6301\u6297\u952f\u9f7f\uff0c\u800c\u4e14\u6ca1\u6709\u8fd0\u884c\u65f6CPU\u6210\u672c\u3002</p> <p>\u70b9\u51fb\u67e5\u770bWebGL demo</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%28%E7%BF%BB%E8%AF%91%29%E5%9F%BA%E4%BA%8E%E7%9F%A2%E9%87%8F%E7%BA%B9%E7%90%86%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#_1","title":"\u80cc\u666f","text":"<p>\u4f20\u7edf\u6587\u5b57\u6e32\u67d3\u6280\u672f\u6709\u4e00\u7cfb\u5217\u95ee\u9898\uff0c\u5982\u952f\u9f7f\u611f\u5f3a\u3001\u6a21\u7cca\u3001\u8017\u5185\u5b58\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%28%E7%BF%BB%E8%AF%91%29%E5%9F%BA%E4%BA%8E%E7%9F%A2%E9%87%8F%E7%BA%B9%E7%90%86%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#font-atlases","title":"Font atlases(\u5b57\u4f53\u7eb9\u7406\u96c6)","text":"<p>The standard way of rendering text with the GPU is to use a font atlas. Each glyph is rendered on the CPU and packed into a texture. Here\u2019s an example from freetype-gl:</p> <p>\u4f7f\u7528GPU\u7ed8\u5236\u6587\u5b57\u7684\u5e38\u89c4\u65b9\u6cd5\u662f\u4f7f\u7528\u5b57\u4f53\u7eb9\u7406\u96c6\uff08Font atlases\uff0c\u5b57\u4f53\u7cbe\u7075\u56fe\uff09\u3002\u6bcf\u4e2aFont\u90fd\u5728CPU\u4e0a\u6e32\u67d3\uff0c\u5e76\u6253\u5305\u5230\u7eb9\u7406\u5f53\u4e2d\uff0c\u4ee5\u4e0b\u5373\u662f\u4e00\u4e2a\u6765\u81eaFreeType-gl\u7684\u4f8b\u5b50\uff1a</p> <p></p> <p>Packed font atlas. Source:\u00a0freetype-gl. - \u6253\u5305\u7684\u5b57\u4f53\u7eb9\u7406\uff0c\u6e90\u7801\u67e5\u770b_freetype-gl </p> <p>The drawback with atlases is that you can\u2019t store every glyph at every possible size or you\u2019ll run out of memory. As you zoom in the glyphs will start to get blurry due to interpolation.</p> <p>\u7eb9\u7406\u96c6\u7684\u7f3a\u70b9\u662f\u65e0\u6cd5\u5728\u6bcf\u4e2a\u5c3a\u5bf8\u4e0b\u5b58\u50a8\u6bcf\u4e2a\u5b57\uff0c\u5426\u5219\u4f60\u5c06\u4f1a\u975e\u5e38\u6d88\u8017\u5185\u5b58\u3002\u800c\u4e14\uff0c\u968f\u7740\u7f29\u653e\uff0c\u7531\u4e8e\u63d2\u503c\u7684\u539f\u56e0\uff0c\u5b57\u53d8\u5f97\u8d8a\u6765\u8d8a\u6a21\u7cca\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%28%E7%BF%BB%E8%AF%91%29%E5%9F%BA%E4%BA%8E%E7%9F%A2%E9%87%8F%E7%BA%B9%E7%90%86%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#signed-distance-fields","title":"Signed distance fields(\u7b26\u53f7\u8ddd\u79bb\u573a)","text":"<p>One solution to this is to store the glyphs as a signed distance field. This became popular after a\u00a02007 paper by Chris Green of Valve Software. Using this technique you can get fonts with crisp edges no matter how far you zoom in. The drawback is that sharp corners become rounded. To prevent this you\u2019ll need to keep storing higher resolution signed distance fields for each glyph, the same problem we had before.</p> <p>\u53e6\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u5c06\u5b57\u5f62(glyphs)\u5b58\u50a8\u4e3a\u7b26\u53f7\u8ddd\u79bb\u573a\uff08SDF\uff09\u3002\u8fd9\u79cd\u6280\u672f\u5728\u300a2007 paper by Chris Green of Valve Software \u300b\u4e4b\u540e\u6d41\u5f62\u8d77\u6765\u3002\u4f7f\u7528\u8fd9\u79cd\u6280\u672f\uff0c\u65e0\u8bba\u4f60\u7f29\u653e\u591a\u5c11\u500d\uff0c\u90fd\u53ef\u4ee5\u5f97\u5230\u5177\u6709\u6e05\u6670\u8fb9\u754c\u7684\u5b57\u4f53\u3002\u7f3a\u70b9\u662f\u5c16\u9510\u7684\u89d2\u53d8\u5f97\u5706\u6da6\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u9700\u8981\u4e3a\u6bcf\u4e2a\u5b57\u5f62\u4fdd\u7559\u66f4\u9ad8\u5206\u8fa8\u7387\u7684SDF\uff0c\u4f46\u4e5f\u975e\u5e38\u6d88\u8017\u5185\u5b58\u3002</p> <p></p> <p>Artifacts from low resolution signed distance field. Source:\u00a0Wolfire Games Blog.</p> <p>\u6765\u81ea\u4f4e\u5206\u8fa8\u7387\u7b26\u53f7\u8ddd\u79bb\u573a\u7684Artifacts\uff08\u5c16\u9510\u7684\u89d2\u53d8\u5706\u6da6\uff09\u3002\u6765\u6e90\uff1a\u00a0Wolfire Games Blog</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%28%E7%BF%BB%E8%AF%91%29%E5%9F%BA%E4%BA%8E%E7%9F%A2%E9%87%8F%E7%BA%B9%E7%90%86%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#vector-textures","title":"vector textures(\u77e2\u91cf\u7eb9\u7406)","text":"<p>The previous two techniques were based on taking the original glyph description, which is a list of bezier curves, and using the CPU to produce an image of it that can be consumed by the GPU. What if we let the GPU render from the original vector data?</p> <p>\u4e0a\u6587\u4ecb\u7ecd\u7684\u4e24\u79cd\u65b9\u5f0f\u6709\u4e00\u4e2a\u5171\u540c\u70b9\uff0c\u5b83\u4eec\u90fd\u662f\u83b7\u53d6\u6587\u5b57\u7684\u8f6e\u5ed3\uff08\u4e00\u7cfb\u5217\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\uff09\uff0c\u5e76\u5728CPU\u4e2d\u751f\u6210\u7eb9\u7406\u56fe\uff0c\u6700\u540e\u5c06\u7eb9\u7406\u56fe\u53d1\u9001\u5230GPU\uff0c\u5728GPU\u4e0a\u6e32\u67d3\u3002\u5982\u679c\u6211\u4eec\u8ba9GPU\u76f4\u63a5\u57fa\u4e8e\u6587\u5b57\u8fb9\u6846\uff08\u539f\u59cb\u7684\u77e2\u91cf\u6570\u636e\uff09\u8fdb\u884c\u6e32\u67d3\uff0c\u4f1a\u600e\u4e48\u6837\u5462\uff1f</p> <p></p> <p>32 bezier curves forming the letter H.</p> <p>\u5b57\u6bcdH\u753132\u6761\u8d1d\u585e\u5c14\u66f2\u7ebf\u7ec4\u6210\u3002</p> <p>GPUs like to calculate lots of pixels in parallel and we want to reduce the amount of work required for each pixel. We can chop up each glyph into a grid and in each cell store just the bezier curves that intersect it. If we do that for all the glyphs used in\u00a0a sample pdf\u00a0we get an atlas that looks like this:</p> <p>GPU\u559c\u6b22\u5e76\u884c\u8ba1\u7b97\u5927\u91cf\u50cf\u7d20\uff0c\u6211\u4eec\u5e0c\u671b\u51cf\u5c11\u6bcf\u4e2a\u50cf\u7d20\u6240\u9700\u7684\u5de5\u4f5c\u91cf\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u5b57\u5f62\u5212\u5206\u6210\u7f51\u683c\uff0c\u5e76\u5728\u6bcf\u4e2a\u5355\u5143\u683c\u4e2d\u4ec5\u5b58\u50a8\u76f8\u4ea4\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\u3002\u5982\u679c\u6211\u4eec\u5bf9\u300aa sample pdf\u300b\u4e2d\u6d89\u53ca\u5230\u7684\u5b57\u90fd\u8fd9\u4e48\u505a\uff0c\u5c31\u80fd\u83b7\u5f97\u5982\u4e0b\u7eb9\u7406\u96c6\uff1a</p> <p></p> <p>Vector atlas for 377 glyphs.</p> <p>\u6b64\u77e2\u91cf\u7eb9\u7406\u96c6\u5305\u542b\u4e86377\u4e2a\u5b57\u5f62\u3002</p> <p>Despite looking like a download error, this image is an atlas where the top part has a bunch of tiny grids, one for each glyph. To avoid repetition, each grid cell stores just the indices of the bezier curves that intersect it. Bezier curves are described by three control points each: a start point, an end point and an off-curve point1. The bottom half of the image stores the control points for all beziers in all glyphs2. All we need to do now is write a shader that reads the bezier curve control points from the atlas and determines what color the pixel should be.</p> <p>\u5c3d\u7ba1\u8fd9\u4e2a\u56fe\u770b\u8d77\u6765\u602a\u602a\u7684\uff0c\u4f46\u8fd9\u4e2a\u56fe\u50cf\u662f\u4e00\u4e2a\u56fe\u96c6\uff0c\u5176\u4e2d\u9876\u90e8\u6709\u4e00\u5806\u5c0f\u7f51\u683c\uff0c\u6bcf\u4e2a\u5b57\u5f62\u4e00\u4e2a\u7f51\u683c\u3002\u4e3a\u907f\u514d\u91cd\u590d\uff0c\u6bcf\u4e2a\u7f51\u683c\u5355\u5143\u683c\u5b58\u50a8\u4e0e\u5176\u76f8\u4ea4\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u7d22\u5f15\u3002\u8d1d\u585e\u5c14\u66f2\u7ebf\u7531\u4e09\u4e2a\u63a7\u5236\u70b9\u63cf\u8ff0\uff1a\u8d77\u70b9\u3001\u7ec8\u70b9\u548c\u66f2\u7ebf\u5916\u70b9\u3002\u56fe\u50cf\u7684\u4e0b\u534a\u90e8\u5206\u5b58\u50a8\u6240\u6709\u5b57\u5f62\u4e2d\uff0c\u6240\u6709\u8d1d\u585e\u5c14\u7684\u63a7\u5236\u70b9\u3002\u6211\u4eec\u73b0\u5728\u9700\u8981\u505a\u7684\u5c31\u662f\u7f16\u5199\u4e00\u4e2a\u7740\u8272\u5668\uff0c\u4ece\u56fe\u96c6\u4e2d\u8bfb\u53d6\u8d1d\u585e\u5c14\u66f2\u7ebf\u63a7\u5236\u70b9\u5e76\u786e\u5b9a\u50cf\u7d20\u5e94\u8be5\u662f\u4ec0\u4e48\u989c\u8272\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%28%E7%BF%BB%E8%AF%91%29%E5%9F%BA%E4%BA%8E%E7%9F%A2%E9%87%8F%E7%BA%B9%E7%90%86%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#a-bezier-curve-shader","title":"A bezier curve shader(\u8d1d\u585e\u5c14\u66f2\u7ebf\u7740\u8272\u5668)","text":"<p>Our shader will run for every pixel we need to output. Its goal is to figure out what fraction of the pixel is covered by the glyph and assign this to the pixel alpha value3. If the glyph only partially covers the pixel we will output an alpha value somewhere between 0 and 1 \u2014 this is what gives us smooth antialiasing.</p> <p>\u6bcf\u4e2a\u50cf\u7d20\u90fd\u4f1a\u8fd0\u884c\u4e00\u6b21\u8fd9\u4e2a\u7740\u8272\u5668\u3002\u8fd9\u4e2a\u7740\u8272\u5668\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u50cf\u7d20\u88ab\u5b57\u4f53\u8986\u76d6\u7684\u767e\u5206\u6bd4\uff0c\u5e76\u5c06\u8fd9\u4e2a\u767e\u5206\u6bd4\u8d4b\u503c\u4e3a\u50cf\u7d20\u7684alpha\u503c\uff083\uff09\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5b9e\u73b0\u5e73\u6ed1\u6297\u952f\u9f7f\u7684\u539f\u7406\u3002</p> <ol> <li>\u5982\u679c\u50cf\u7d20\u5b8c\u5168\u5728\u5b57\u4f53\u5185\u90e8\uff0c\u5219alpha=1</li> <li>\u5982\u679c\u50cf\u7d20\u53ea\u88ab\u8986\u76d6\u4e86\u90e8\u5206\uff0c\u5219\u5c06\u8ba1\u7b97\u4e00\u4e2a\u6570\u503c\uff0c\u6b64\u6570\u503c\u5728(0, 1)\u9608\u503c\u5185\uff0c\u5e76\u8d4b\u503c\u7ed9alpha</li> <li>\u5982\u679c\u50cf\u7d20\u5b8c\u5168\u5728\u5b57\u4f53\u5916\u90e8\uff0c\u5219alpha=0</li> </ol> <p></p> <p>We can treat each pixel as a circular window over some part of the glyph. We want to calculate the area of the part of the circle that is covered by the glyph.</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u50cf\u7d20\u7b80\u5316\u4e3a\u5706\u5f62\u7a97\u53e3\u3002\u6211\u4eec\u53ea\u9700\u8ba1\u7b97\u8fd9\u4e2a\u5706\u88ab\u5b57\u4f53\u8986\u76d6\u7684\u9762\u79ef\u5373\u53ef\u3002</p> <p></p> <p>The desired result at 16 by 16 pixels.</p> <p>\u6211\u4eec\u671f\u671b\u7684\u7ed3\u679c\u662f\u4e00\u4e2a16x16\u7684\u50cf\u7d20\u3002</p> <p>Treating the pixel window as a circle4, our task is to compute the area of the shape formed by the circle boundary and any bezier curves passing through it. It\u2019s possible to compute this exactly using\u00a0Green\u2019s theorem, but we\u2019d need to clip our curves to the window and make sure we have a closed loop. It all gets a bit tricky to implement in a shader, especially if we want to use an arbitrary\u00a0window function\u00a0for better quality5. However if we reduce the problem to one dimension it becomes a lot more tractable.</p> <p>\u5c06\u4e00\u4e2a\u50cf\u7d20\u7b80\u5316\u4e3a\u4e00\u4e2a\u5706\uff084\uff09\uff0c\u6211\u4eec\u7684\u4efb\u52a1\u5373\u662f\u8ba1\u7b97\u6587\u5b57\u8f6e\u5ed3\uff08\u8d1d\u585e\u5c14\u66f2\u7ebf\uff09\u5728\u5706\u4e2d\u7684\u9762\u79ef\u3002\u4f7f\u7528Green\u2019s theorem\u5373\u53ef\u7cbe\u786e\u5730\u8ba1\u7b97\u51fa\u8fd9\u4e00\u70b9\u3002</p> <p></p> <p>Two curves passing through a pixel window. The area of the shaded region can be approximated by looking at its intersections with a ray passing from left to right. Source: MS Paint.</p> <p>\u4e24\u6761\u66f2\u7ebf\u901a\u8fc7\u4e00\u4e2a\u50cf\u7d20\u7a97\u53e3\u3002\u9634\u5f71\u533a\u57df\u7684\u9762\u79ef\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u5b83\u4e0e\u4ece\u5de6\u5230\u53f3\u5c04\u7ebf\u7684\u4ea4\u70b9\u6765\u8fd1\u4f3c\u3002\u6765\u6e90\uff1aMS Paint</p> <p>The idea is to take a ray passing from left to right. We can find all the intersections of this ray with all the bezier curves6. Each time the ray enters the glyph we add the distance between the intersection and the right side of the window. Each time the ray exits the glyph we subtract the distance to the right side of the window7. This gives us the total length of the line that is inside the glyph, and will work for any number of intersections or bezier curves.</p> <p>\u5b9a\u4e49\u4e00\u6761\u4ece\u5de6\u5230\u53f3\u7684\u5c04\u7ebf\u3002\u53ef\u4ee5\u8ba1\u7b97\u8fd9\u6761\u5c04\u7ebf\u4e0e\u6240\u6709\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u6240\u6709\u4ea4\u70b9</p> <ol> <li>\u6bcf\u6b21\u5c04\u7ebf\u8fdb\u5165\u8f6e\u5ed3\u65f6\uff0c\u5219\u52a0\u4e0a\u4ea4\u70b9\u4e0e\u50cf\u7d20\u7a97\u53e3\u53f3\u4fa7\u7684\u8ddd\u79bb</li> <li>\u6bcf\u6b21\u5c04\u7ebf\u79bb\u5f00\u8f6e\u5ed3\u65f6\uff0c\u5219\u51cf\u53bb\u4ea4\u70b9\u4e0e\u50cf\u7d20\u7a97\u53e3\u53f3\u4fa7\u7684\u8ddd\u79bb</li> </ol> <p>\u8ba1\u7b97\u5b8c\u6210\u540e\uff0c\u5373\u662f\u5b57\u5f62\u5185\uff0c\u7ebf\u7684\u603b\u957f\u5ea6\u3002\u8fd9\u9002\u7528\u4e8e\u4efb\u610f\u6570\u91cf\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%28%E7%BF%BB%E8%AF%91%29%E5%9F%BA%E4%BA%8E%E7%9F%A2%E9%87%8F%E7%BA%B9%E7%90%86%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/#more-samples-for-more-accuracy","title":"More samples for more accuracy()","text":"<p>The result may be inaccurate if our horizontal ray intersects the bezier curves at a glancing angle. We can compensate for this by sampling several angles and averaging the results8. This gives a robust approximation of the 2D integral9.</p> <p>\u5982\u679c\u6211\u4eec\u7684\u6c34\u5e73\u5c04\u7ebf\u4ee5\u4e00\u4e2a\u63a0\u5c04\u89d2(glancing angle)\u4e0e\u8d1d\u585e\u5c14\u66f2\u7ebf\u76f8\u4ea4\uff0c\u7ed3\u679c\u53ef\u80fd\u662f\u4e0d\u51c6\u786e\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9\u51e0\u4e2a\u89d2\u5ea6\u8fdb\u884c\u91c7\u6837\u5e76\u6c42\u5e73\u5747\u503c\u6765\u5f25\u8865\u8fd9\u4e00\u70b9\u3002\u8fd9\u7ed9\u51fa\u4e86\u4e8c\u7ef4\u79ef\u5206\u7684\u4e00\u4e2a\u7a33\u5065\u8fd1\u4f3c\u3002</p> <p></p> <p>Underestimation of covered area due to a curve intersecting the horizontal ray at a glancing angle. The shaded area is close to half the pixel but the estimate from this horizontal ray is much lower.</p> <p>\u7531\u4e8e\u66f2\u7ebf\u4ee5\u63a0\u5c04\u89d2(glancing angle)\u4e0e\u6c34\u5e73\u5c04\u7ebf\u76f8\u4ea4\u800c\u4f4e\u4f30\u4e86\u8986\u76d6\u9762\u79ef\u3002\u9634\u5f71\u533a\u57df\u63a5\u8fd1\u50cf\u7d20\u7684\u4e00\u534a\uff0c\u4f46\u8fd9\u6761\u6c34\u5e73\u5c04\u7ebf\u7684\u4f30\u8ba1\u8981\u4f4e\u5f97\u591a\u3002</p> <p></p> <p>Increasing accuracy by sampling at several angles.</p> <p>\u901a\u8fc7\u5728\u591a\u4e2a\u89d2\u5ea6\u91c7\u6837\u6765\u63d0\u9ad8\u7cbe\u5ea6\u3002</p> <p>In practice only a few samples gives a high quality result. To see why supersampling helps we can make the pixel window very large:</p> <p>\u5728\u5b9e\u8df5\u4e2d\uff0c\u53ea\u9700\u5c11\u91cf\u6837\u672c\u5c31\u80fd\u5f97\u5230\u9ad8\u8d28\u91cf\u7684\u7ed3\u679c\u3002\u4e3a\u4e86\u4e86\u89e3\u4e3a\u4ec0\u4e48\u8d85\u91c7\u6837\u6709\u5e2e\u52a9\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u50cf\u7d20\u7a97\u53e3\u975e\u5e38\u5927:</p> <p></p> <p>Why supersampling is needed. Clockwise from top left: 2, 4, 8, 16 samples. The integration window here is larger than it should be to make the errors more visible. The error is less noticeable when the window is only one pixel \u2014 the demo uses four samples.</p> <p>\u4e3a\u4ec0\u4e48\u9700\u8981\u8d85\u91c7\u6837\uff1f\u987a\u65f6\u9488\u4ece\u5de6\u4e0a\u5f00\u59cb\uff1a2\u30014\u30018\u300116\u4e2a\u6837\u672c\u3002\u8fd9\u91cc\u7684\u56fe\u7247\u6bd4\u8f83\u5927\uff0c\u4ee5\u4fbf\u4f7f\u9519\u8bef\u66f4\u660e\u663e\u3002\u5982\u679c\u4e00\u4e2a\u56fe\u7247\u53ea\u6709\u4e00\u4e2a\u50cf\u7d20\u65f6\uff0c\u9519\u8bef\u5c31\u4e0d\u660e\u663e\u4e86\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93%E4%B9%8B%E5%91%A8%E8%BE%B9%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/","title":"GPU\u6587\u5b57\u6e32\u67d3\u4e4b\u5468\u8fb9\u529f\u80fd\u5b9e\u73b0","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93%E4%B9%8B%E5%91%A8%E8%BE%B9%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_1","title":"\u80cc\u666f\u8272","text":"<p>\u5728\u7247\u5143\u7740\u8272\u5668\u5f53\u4e2d\uff0c\u5982\u679c\u8986\u76d6\u7387\u4e3a0\uff0c\u5219\u8d4b\u503c\u4e3a\u80cc\u666f\u8272\u5373\u53ef</p> <pre><code>void main() {\nfloat alpha = 0;\n//\u904d\u5386\u5b57\u4f53\u7684\u8f6e\u5ed3\nGlyph glyph = loadGlyph(vertex_glyph_index);\nfor (int i = 0; i &lt; glyph.count; i++) {\nCurve curve = loadCurve(glyph.start + i);\nvec2 p0 = curve.p0 - vert_uv;\nvec2 p1 = curve.p1 - vert_uv;\nvec2 p2 = curve.p2 - vert_uv;\n//\u8ba1\u7b97\u8986\u76d6\u7387\nalpha += computeCoverage(inverseDiameter.x, p0, p1, p2);\n}\nalpha = clamp(alpha, 0.0, 1.0);\nif (alpha &lt; 0.01)\n{\nfrag_color = vert_backgroud_color;\n}\nelse\n{\nfrag_color = vert_color * alpha;\n}\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93%E4%B9%8B%E5%91%A8%E8%BE%B9%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_2","title":"\u6587\u5b57\u5e03\u5c40","text":"<p>\u5047\u8bbe\uff0c\u5b57\u7b26\u4e32\u5728\u7f16\u6392\u4e4b\u540e\u7684\u5750\u6807\u7cfb\u5982\u4e0b\u6240\u793a\uff1a</p> <ul> <li>\u5750\u6807\u7cfb\u539f\u70b9\u5728\u6587\u5b57\u7684\u5de6\u4e0a\u89d2</li> <li>\u6587\u5b57\u6240\u5728Box\u5728\u5750\u6807\u7cfb\u7684\u7b2c\u56db\u8c61\u9650</li> </ul> <p>![[\u5b57\u7b26\u4e32\u7f16\u6392.png]]</p> <p>\u90a3\u4e48\u6587\u5b57\u5e03\u5c40\u7b97\u6cd5\u5982\u4e0b\uff0c\u5728\u83b7\u5f97\u504f\u79fb\u91cf\u4e4b\u540e\uff0c\u6784\u9020\u4e00\u4e2a\u504f\u79fb\u77e9\u9635\u5373\u53ef</p> <pre><code>//\u83b7\u53d6\u5e03\u5c40\u7684\u504f\u79fb\u503c\nstatic Vec3f getAlignmentOffset(\nconst Box&amp; box, //\u6587\u5b57\u7684Box\nconst Alignment&amp;  alignment //\u5e03\u5c40\n)\n{\n//# \u5e03\u5c40\u8c03\u6574\nVec3f algin_offset{ 0,0,0 };\n//y\u65b9\u5411\u4e0a\u504f\u79fb\nauto y_len = box.max.y() - box.min.y();\nswitch (alignment)\n{\ncase LEFT_BOTTOM:\ncase BOTTOM:\ncase RIGHT_BOTTOM:\n//Bottom =&gt; \u6587\u5b57\u5728\u653e\u7f6e\u70b9\u4e0b\u65b9 =&gt; y\u5c0f\u4e8e\u7b49\u4e8e0\n// \u5f53\u524d\u5c31\u662f\uff0c\u65e0\u9700\u8f6c\u6362\nbreak;\ncase LEFT:\ncase CENTER:\ncase RIGHT:\n//\u6587\u5b57\u4e2d\u5fc3\u4e0e\u653e\u7f6e\u70b9\u91cd\u5408 =&gt; \u5f80\u4e0a\u79fb\u4e00\u534a\nalgin_offset.y() = +y_len/2;\nbreak;\ncase LEFT_TOP:\ncase TOP:\ncase RIGHT_TOP:\n//top =&gt; \u4e0a\u65b9\nalgin_offset.y() = +y_len;\nbreak;\ndefault:\nbreak;\n}\n//x\u65b9\u5411\u4e0a\u7684\u504f\u79fb\nauto x_len = box.max.x() - box.min.x();\nswitch (alignment)\n{\ncase RIGHT_TOP:\ncase RIGHT:\ncase RIGHT_BOTTOM:\n//right =&gt; \u539f\u5148\u5c31\u5728\u53f3\u8fb9\uff0c\u65e0\u9700\u8f6c\u6362\nbreak;\ncase TOP:\ncase CENTER:\ncase BOTTOM:\n//\u4e2d\u95f4 =&gt; \u5f80\u5de6\u5e73\u79fb\u4e00\u534a\nalgin_offset.x() = -x_len/2;\nbreak;\ncase LEFT_TOP:\ncase LEFT:\ncase LEFT_BOTTOM:\n//\u6700\u5de6\u8fb9 =&gt; \u5f80\u5de6\u5e73\u79fb\u5168\u90e8\nalgin_offset.x() = -x_len;\nbreak;\ndefault:\nbreak;\n}\nreturn algin_offset;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93%E4%B9%8B%E5%91%A8%E8%BE%B9%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_3","title":"\u7c97\u4f53","text":"<p>FreeType\u672c\u8eab\u652f\u6301\u7c97\u4f53\uff0c\u53ea\u9700\u5728\u83b7\u53d6\u8f6e\u5ed3\u4e4b\u524d\uff0c\u8c03\u7528<code>FT_Outline_Embolden</code>\u51fd\u6570\u5373\u53ef\u3002</p> <pre><code>if (key.bold)\n{\nif (_face-&gt;glyph-&gt;format == FT_GLYPH_FORMAT_OUTLINE)\n{\nFT_Outline_Embolden(&amp;_face-&gt;glyph-&gt;outline, 10); //\u52a0\u7c97\n}\n}\n</code></pre> <p>\u4f46\u662f\uff0c\u4e00\u4e2a\u5b57\u7b26\u8981\u51c6\u5907\u4e24\u4e2a\u8f6e\u5ed3\uff0c\u5373\u7c97\u4f53\u65f6\u7684\u8f6e\u5ed3\u3001\u975e\u7c97\u4f53\u65f6\u7684\u8f6e\u5ed3\uff0c\u800c\u4e14\u4e24\u79cd\u8f6e\u5ed3\u8981\u533a\u5206\u5f00\u3002</p> <p>\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8981\u66f4\u65b0\u5b57\u7b26\u63cf\u8ff0\u4fe1\u606f\u7684\u89c4\u683c\u5c5e\u6027\u3002\u56e0\u4e3a\u8fd9\u4e9b\u5c5e\u6027\u4e0d\u4f1a\u56e0\u4e3a\u8c03\u7528\u4e86<code>FT_Outline_Embolden</code>\u51fd\u6570\u800c\u6539\u53d8\uff0c\u800c\u5b9e\u9645\u4e0a\u7c97\u4f53\u4e4b\u540e\uff0c\u5b57\u4f53\u7684\u5bbd\u3001\u9ad8\u662f\u53d8\u5316\u7684\u3002</p> <pre><code>// \u5b57\u7b26\u7684\u63cf\u8ff0\u4fe1\u606f\nstruct Glyph\n{\nFT_UInt glyphIndex;     //\u53ef\u7531FT_Get_Char_Index\u83b7\u5f97\nint32_t bufferIndex;    //\u5728m_GlyphBuffer\u4e2d\u7684\u7d22\u5f15\nint32_t curveCount;     //\u8be5\u5b57\u5f62\u7684\u66f2\u7ebf\u4e2a\u6570\n//\u6b64\u5b57\u7b26\u7684\u89c4\u683c\n// Important glyph metrics in font units.\nFT_Pos width, height;\nFT_Pos bearingX;\nFT_Pos bearingY;\nFT_Pos advance;\n};\n</code></pre> <p>\u5177\u4f53\u505a\u6cd5\u662f\uff1a</p> <pre><code>//\u5728\u5c06\u8f6e\u5ed3\u8f6c\u6210\u4e8c\u9636\u8d1d\u585e\u5c14\u66f2\u7ebf\u65f6\uff0c\u7edf\u8ba1\u5176\u65b0\u7684\u5bbd\u5ea6\nFT_Pos width = 0;\nfor (int i = 0; i &lt; _face-&gt;glyph-&gt;outline.n_contours; i++)\n{\n// Note: The end indices in face-&gt;glyph-&gt;outline.contours are inclusive.\n_convertContour(\n//...\nwidth //\u5c06\u5bbd\u5ea6\u4f5c\u4e3a\u5f15\u7528\u4f20\u5165\n);\n//...\n}\n//\u6309\u7167\u539f\u5148\u7684\u65b9\u5f0f\uff0c\u83b7\u53d6\u6587\u5b57\u89c4\u683c\nGlyphDescriptionValue glyph;\nglyph.glyphIndex = glyphIndex;\nglyph.bufferIndex = bufferIndex;\nglyph.curveCount = bufferGlyph.count;\nglyph.width = _face-&gt;glyph-&gt;metrics.width;\nglyph.height = _face-&gt;glyph-&gt;metrics.height;\nglyph.bearingX = _face-&gt;glyph-&gt;metrics.horiBearingX;\nglyph.bearingY = _face-&gt;glyph-&gt;metrics.horiBearingY;\nglyph.advance = _face-&gt;glyph-&gt;metrics.horiAdvance;\n//\u5b57\u4f53\u52a0\u7c97\u4e4b\u540e\uff0c\u5b57\u5f62\u7684\u5bbd\u5ea6\u5176\u5b9e\u53d1\u751f\u4e86\u53d8\u6362\n// \u4f46metrics\u5185\u90e8\u662f\u539f\u5148\u5b57\u4f53\u7684\u89c4\u683c\uff0c\u4e0d\u4f1a\u53d1\u751f\u53d8\u6362\n// \u56e0\u6b64\u9700\u8981\u7279\u6b8a\u5904\u7406\nauto oldWidth = _face-&gt;glyph-&gt;metrics.width;\nif (width &lt; oldWidth)\n{\nwidth = oldWidth;\n}\nglyph.width = width;\nglyph.advance += (width - oldWidth)/2;\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93%E4%B9%8B%E5%91%A8%E8%BE%B9%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/#_4","title":"\u659c\u4f53","text":"<p>\u867d\u7136FreeType\u652f\u6301\u659c\u4f53\uff0c\u4f46\u4e0d\u5efa\u8bae\u4f7f\u7528\u3002\u5982\u679c\u4f7f\u7528FreeType\u7684\u659c\u4f53\uff0c\u90a3\u4e5f\u8981\u50cf\u7c97\u4f53\u4e00\u6837\uff0c\u591a\u4fdd\u5b58\u548c\u7ef4\u62a4\u4e00\u4efd\u8f6e\u5ed3\u4e86\uff0c\u5982\u6b64\u6570\u636e\u91cf\u5c31\u5927\u4e86\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e8c\u7ef4\u7684\u201c\u9519\u5207\u201d\u4eff\u5c04\u53d8\u6362\u5373\u53ef\uff0c\u5b83\u7528\u4e00\u4e2a2x2\u7684\u77e9\u9635\u5c31\u53ef\u4ee5\u89e3\u51b3</p> <pre><code>//\u659c\u4f53\nif (text_desc.italic)\n{\nconst static Matrixd shearMatrix(\n1, 0, 0, 0,\n0.30, 1, 0, 0, //tan\u03b8=0.3\n0, 0, 1, 0,\n0, 0, 0, 1\n); //\u6cbfX\u8f74\u6b63\u65b9\u5411\u9519\u5207\u03b8\u89d2\u5ea6\ntextMesh.matrix *= shearMatrix; //\u8d4b\u503c\u7ed9\u6a21\u578b\u77e9\u9635\u5373\u53ef\n}\n</code></pre> <p>\u5982\u4e0b\u56fe\u6240\u793a</p> <ol> <li>\u5de6\u4e0a\u89d2\u6587\u5b57\uff1a\u52a0\u7c97\u3001\u7ea2\u8272\u80cc\u666f\u8272</li> <li>\u53f3\u4e0b\u89d2\u6587\u5b57\uff1a\u659c\u4f53\u3001\u7ea2\u8272\u80cc\u666f\u8272</li> </ol> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/","title":"\u57fa\u4e8eOpenGL\u5b9e\u73b0GPU\u6587\u5b57\u6e32\u67d3","text":"<p>\u4ed3\u5e93\u5730\u5740\uff1agpu-font-rendering</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/#gpu-font-rendering","title":"GPU Font Rendering","text":"<p>This is a demonstration of rendering text directly on the GPU using the vector outlines defined by the font.</p> <p>\u8fd9\u4e2ademo\u5c55\u793a\u4e86\uff0c\u76f4\u63a5\u5728GPU\u4e0a\uff0c\u4f7f\u7528\u5b57\u4f53\u7684\u77e2\u91cf\u8f6e\u5ed3\u7ebf\u6765\u5b8c\u6210\u6587\u5b57\u6e32\u67d3\u3002</p> <p></p> <p>This demo is based on the method described by Will Dobbie in GPU text rendering with vector textures</p> <p>with some modifications/simplifications based on publications from Eric Lengyel (GPU Font Rendering: Current State of the Art, Poster for the Slug Font Rendering Library, Slug Algorithm Paper).</p> <p>Other related work includes</p> <p>Improved Alpha-Tested Magnification for Vector Textures and Special Effects (signed distance fields) by Chris Green and Easy Scalable Text Rendering on the GPU by Evan Wallace.</p> <p>\u8fd9\u4e2ademo\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u662fWill Dobbie\u5728\u300aGPU text rendering with vector textures\u300b\u4e2d\u6240\u63cf\u8ff0\u7684\uff0c\u5b83\u662f\u4e00\u4e2a\u4fee\u6539/\u7b80\u5316\u7248\u672c\uff0c\u5176\u539f\u6587\u662f\u6765\u81eaEric Lengyel\u7684\u6587\u7ae0\uff08\u300aGPU Font Rendering: Current State of the Art\u300b\uff09\uff0c\u53d1\u8868\u5728Slug Algorithm Paper, Slug Font Rendering Library\u3002</p> <p>\u76f8\u5173\u5f15\u7528\u8fd8\u6709</p> <ol> <li>Chris Green\u7684\u7b26\u53f7\u8ddd\u79bb\u573a\uff1aImproved Alpha-Tested Magnification for Vector Textures and Special Effects</li> <li>Evan Wallace\u7684Easy Scalable Text Rendering on the GPU</li> </ol> <p>This technique is useful for rendering large text or rendering text with arbitrary transforms (e.g. in a 3D scene) and produces pixel-perfect and anti-aliased results.  </p> <p>\u8be5\u6280\u672f\u5bf9\u4e8e\u6e32\u67d3\u5927\u578b\u6587\u672c\u6216\u5e26\u6709\u4efb\u610f\u53d8\u6362\u7684\u6587\u672c\u975e\u5e38\u6709\u7528\uff08\u4f8b\u5982\u57283D\u573a\u666f\u5f53\u4e2d\uff09\uff0c\u6e32\u67d3\u51fa\u7684\u50cf\u7d20\u975e\u5e38\u5b8c\u7f8e\uff0c\u6297\u952f\u9f7f\u6548\u679c\u597d\u3002</p> <p>It has a slightly higher GPU runtime cost, but does not require rasterizing glyphs on the CPU.</p> <p>\u5b83\u6709\u7a0d\u9ad8\u7684GPU\u8fd0\u884c\u65f6\u6210\u672c\uff0c\u4f46\u4e0d\u9700\u8981\u5728CPU\u4e0a\u5149\u6805\u5316\u6587\u5b57\u3002</p> <p>In contrast to signed distance fields, it preserves sharp corners at all scales.</p> <p>\u4e0e\u7b26\u53f7\u8ddd\u79bb\u573a\u76f8\u6bd4\uff0c\u5b83\u5728\u6240\u6709\u7684\u6bd4\u4f8b\u5c3a\u4e0b\u90fd\u4fdd\u7559\u4e86\u5c16\u89d2\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/#method","title":"Method","text":"<p>A glyph outline is described by one or more closed contours.</p> <p>\u5b57\u5f62(Glyph)\u7684\u5f62\u72b6\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5c01\u95ed\u7684\u8f6e\u5ed3\u6240\u7ec4\u6210\u3002</p> <p>A contour consists of line segments and bezier curve segments defined by a list of points.</p> <p>\u4e00\u4e2a\u5c01\u95ed\u7684\u8f6e\u5ed3\u7531\u4e00\u7cfb\u5217\u7531\u9876\u70b9\u5b9a\u4e49\u7684\u7ebf\u6bb5\u548c\u8d1d\u585e\u5c14\u66f2\u7ebf\u6240\u7ec4\u6210\u3002</p> <p>Following the TrueType convention, outside contours are oriented in clockwise direction and inside contours are oriented in counterclockwise direction.</p> <p>\u9075\u5faaTrueType\u7684\u7ea6\u5b9a\uff0c\u5916\u90e8\u8f6e\u5ed3\u7684\u9876\u70b9\u4ee5\u987a\u65f6\u9488\u65b9\u5411\u73af\u7ed5\uff0c\u5185\u90e8\u7684\u8f6e\u5ed3\u9876\u70b9\u4ee5\u9006\u65f6\u9488\u65b9\u5411\u73af\u7ed5\u3002</p> <p>In other words, when following the direction of the contour, the filled area is always to the right.</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53\u6cbf\u7740\u8f6e\u5ed3\u7ebf\u7684\u65b9\u5411\u65f6\uff0c\u586b\u5145\u533a\u57df\u603b\u662f\u5411\u53f3\u3002</p> <p></p> <p>The contours of a glyph are converted into a list of individual quadratic bezier curves (defined by their control points), which are uploaded to the GPU.</p> <p>\u5b57\u5f62\u7684\u8f6e\u5ed3\u88ab\u8f6c\u6362\u6210N\u4e2a\u5355\u72ec\u7684\u4e8c\u6b21\u8d1d\u585e\u5c14\u66f2\u7ebf\uff08\u7531\u5b83\u4eec\u7684\u63a7\u5236\u70b9\u5b9a\u4e49\uff09\uff0c\u5e76\u76f4\u63a5\u4f20\u9001\u5230GPU\u4e0a\u3002</p> <p></p> <p>A quad is generated for each glyph and the pixel shader determines whether each pixel is inside or outside the glyph.</p> <p>\u4e3a\u6bcf\u4e2a\u5b57\u5f62\u751f\u6210\u4e00\u4e2a\u56db\u8fb9\u5f62\uff0c\u50cf\u7d20\u7740\u8272\u5668\u786e\u5b9a\u6bcf\u4e2a\u50cf\u7d20\u662f\u5728\u5b57\u5f62\u5185\u90e8\u8fd8\u662f\u5728\u5916\u90e8\u3002</p> <p>To do this, the winding number of the pixel is calculated by intersecting a ray with the bezier curves.</p> <p>\u4e3a\u4e86\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u8981\u8ba1\u7b97\u4e00\u4e2a\u503c\uff0c\u5373\u50cf\u7d20\u7684\u5708\u6570(the winding number of the pixel)\uff0c\u5b83\u662f\u901a\u8fc7\u5c04\u7ebf\u4e0e\u8d1d\u585e\u5c14\u66f2\u7ebf\u76f8\u4ea4\u7684\u5c04\u7ebf\u6765\u8ba1\u7b97\u7684\u3002</p> <p>At every intersection the ray either enters or exits the filled area as determined by the direction of the bezier curve relative to the ray.</p> <p>\u5728\u6bcf\u4e2a\u4ea4\u70b9\u4e0a\uff0c\u5c04\u7ebf\u8981\u4e48\u8fdb\u5165\u586b\u5145\u533a\u57df\u3001\u8981\u4e48\u9000\u51fa\u586b\u5145\u533a\u57df\uff0c\u8fd9\u7531\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u7ed5\u5411\u4e0e\u5c04\u7ebf\u65b9\u5411\u6240\u51b3\u5b9a\u7684\u3002</p> <p>At every exit the winding number is increased by one and at every entry the winding number is decreased by one.</p> <p>\u5728\u9000\u51fa\u586b\u5145\u533a\u57df\u7684\u5730\u65b9\u50cf\u7d20\u5708\u6570+1\uff0c\u5728\u8fdb\u5165\u586b\u5145\u533a\u57df\u7684\u5730\u65b9\u50cf\u7d20\u5708\u6570-1.</p> <p>After considering all intersections, the winding number will be non-zero if the pixel is inside the outline.</p> <p>\u8003\u8651\u6240\u6709\u4ea4\u70b9\u4e4b\u540e\uff0c\u5982\u679c\u50cf\u7d20\u5728\u8f6e\u5ed3\u7ebf\u5185\uff0c\u5219\u50cf\u7d20\u5708\u6570\u975e0\u3002</p> <p></p> <p>The direction of the rays does not matter for this winding number computation, but the math can be greatly simplified by using rays parallel to the x-axis.</p> <p>\u5c04\u7ebf\u65b9\u5411\u5bf9\u5708\u6570\u7684\u8ba1\u7b97\u65e0\u5149\u7d27\u8981\uff08\u53ef\u4ee5\u671d\u4e0a\u4e0b\u5de6\u53f3\u3001\u6216\u4efb\u610f\u4e00\u4e2a\u65b9\u5411\uff09\uff0c\u4f46\u662f\u901a\u8fc7\u4f7f\u7528\u5e73\u884c\u4e8eX\u8f74\u7684\u5c04\u7ebf\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u8ba1\u7b97\u91cf\u3002</p> <p>By subtracting the sample position from the control points of the bezier curves, the coordinate system is shifted so that the origin of the ray is at \\((0, 0)\\) and the ray coincides with the positive x-axis.</p> <p>\u901a\u8fc7\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u63a7\u5236\u70b9\u6765\u51cf\u5c11\u66f2\u7ebf\u7684\u6837\u672c\u70b9\uff0c\u79fb\u52a8\u5750\u6807\u7cfb\uff0c\u4f7f\u5f97\u5c04\u7ebf\u7684\u8d77\u70b9\u5728\u539f\u70b9\uff0c\u5e76\u4e14\u5c04\u7ebf\u4e0eX\u8f74\u7684\u6b63\u65b9\u5411\u91cd\u5408\u3002</p> <p>For an intersection between the ray and a bezier curve the conditions \\(y = 0\\) and \\(x \\ge 0\\) must then be true.</p> <p>\u5982\u4f55\u8ba1\u7b97\u5c04\u7ebf\u4e0e\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u4ea4\u70b9\uff1f\u4f7f \\(y=0 \\ and \\ x \\ge 0\\)\u5373\u53ef\u3002</p> <p>Anti-aliasing (see below) will happen along the direction of the rays, but other directions can be achieved by first rotating the control points of the bezier curves around the origin so that the rays align with the x-axis again.</p> <p>[?] \u6297\u952f\u9f7f\u5c06\u6cbf\u7740\u5c04\u7ebf\u7684\u65b9\u5411\u4ea7\u751f\uff0c\u5176\u4ed6\u65b9\u5411\u53ef\u4ee5\u901a\u8fc7 \u56f4\u7ed5\u539f\u70b9\u65cb\u8f6c\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u63a7\u5236\u70b9 \u6240\u5b9e\u73b0\uff0c\u5982\u6b64\u5c04\u7ebf\u5c31\u53ef\u4ee5\u518d\u6b21\u4e0eX\u8f74\u5bf9\u9f50\u3002</p> <p>To find the intersections between a ray and a single bezier curve, recall that a quadratic bezier curve is described by the following formula (for background on bezier curves see Beauty and Primer):</p> <p>\u63a5\u4e0b\u6765\u8ba8\u8bba\uff0c\u5982\u4f55\u8ba1\u7b97\u4e00\u6761\u5c04\u7ebf\u4e0e\u4e00\u6761\u8d1d\u585e\u5c14\u66f2\u7ebf\u4e4b\u95f4\u7684\u4ea4\u70b9\u3002\u56de\u60f3\u4e00\u4e0b\uff0c\u4e8c\u6b21\u8d1d\u585e\u5c14\u66f2\u7ebf\u7531\u4ee5\u4e0b\u516c\u5f0f\u63cf\u8ff0\uff08\u5173\u4e8e\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u80cc\u666f\u77e5\u8bc6\uff0c\u53ef\u53c2\u9605Beauty and Primer\uff09</p> \\[ \\textbf{C}(t) = (1-t)^2 \\textbf{P}_0 + 2(1-t)t \\textbf{P}_1 + t^2 \\textbf{P}_2 \\] <p>Taking only the y-component and applying the condition \\(y = 0\\) results in a simple quadratic equation:</p> <p>\u53ea\u8003\u8651y\u5206\u91cf\uff08x\u5206\u91cf\u6682\u4e0d\u8003\u8651\uff09\uff0c\u5e76\u8ba9\\(y=0\\)\uff0c\u53ef\u4ee5\u7b80\u5316\u65b9\u7a0b</p> \\[ (1-t)^2 \\textrm{y}_0 + 2(1-t)t \\textrm{y}_1 + t^2 \\textrm{y}_2 = 0 \\] <p>Which can be rearranged into:</p> <p>\u6574\u7406\u5f0f\u5b50\u53ef\u5f97\uff1a</p> \\[ \\textrm{y}_0 -2t \\textrm{y}_0 + t^2 \\textrm{y}_0 + 2t \\textrm{y}_1 - 2t^2 \\textrm{y}_1 + t^2 \\textrm{y}_2 = 0 \\] \\[ (\\textrm{y}_0 - 2\\textrm{y}_1 + \\textrm{y}_2) t^2 - 2(\\textrm{y}_0 - \\textrm{y}_1) t + \\textrm{y}_0 = 0 \\] <p>So that it can be solved using the quadratic formula:</p> <p>\u56e0\u6b64\uff0c\u53ef\u4ee5\u7528\u4e8c\u6b21\u65b9\u7a0b\u5f00\u6839\u516c\u5f0f\u6c42\u89e3\uff1a</p> \\[ t_{0/1} = {-B \\pm \\sqrt{B^2-4ac} \\over 2a} \\] \\[ a = \\textrm{y}_0 - 2\\textrm{y}_1 + \\textrm{y}_2 \\quad B = -2(\\textrm{y}_0 - \\textrm{y}_1) \\quad c = \\textrm{y}_0 \\] <p>Substituting \\(B = -2b\\) yields:</p> <p>\u5c06\\(B = -2b\\) \u4ee3\u5165\uff1a</p> \\[ t_{0/1} = {-(-2b) \\pm \\sqrt{(-2b)^2-4ac} \\over 2a} = {2b \\pm \\sqrt{4b^2-4ac} \\over 2a} = {b \\pm \\sqrt{b^2-ac} \\over a} \\] \\[ a = \\textrm{y}_0 - 2\\textrm{y}_1 + \\textrm{y}_2 \\quad b = \\textrm{y}_0 - \\textrm{y}_1 \\quad c = \\textrm{y}_0 \\] <p>The quadratic equation may have zero, one or two solutions. Furthermore, a solution \\(t\\) has to satisfy \\(0 \\le t &lt; 1\\) to be on the segment described by the control points (the end point is excluded since it is part of the next segment of the outline).</p> <p>\u4e8c\u6b21\u65b9\u7a0b\u53ef\u80fd\u67090\u30011\u30012\u4e2a\u89e3\u3002\u6b64\u5916\uff0c\\(t\\)\u8981\u6ee1\u8db3\\(0 \\le t &lt; 1\\)\u624d\u80fd\u5728\u8d1d\u585e\u5c14\u66f2\u7ebf\u4e0a\uff08\u7aef\u70b9\u88ab\u6392\u9664\u5728\u5916\uff0c\u56e0\u4e3a\u6211\u4eec\u628a\u5b83\u5f52\u4e3a\u4e0b\u4e00\u4e2a\u7ebf\u6bb5\uff09</p> <p>Finally, given a solution \\(t\\) the corresponding x-coordinate can be calculated as \\(\\mathbf{C}_x(t)\\) to check the second condition \\(x \\ge 0\\) for an intersection.</p> <p>\u6700\u540e\uff0c\u5c06\u6c42\u89e3\u51fa\u6765\u7684\\(t\\)\u4ee3\u5165\\(\\mathbf{C}(t)\\)\u7684X\u5206\u91cf\uff0c\u5982\u679c\\(x \\ge 0\\)\u5219\u4ee3\u8868\u5c04\u7ebf\u4e0e\u66f2\u7ebf\u76f8\u4ea4\u3002</p> <p>At this point, the intersections between the ray and bezier curve have been identified, but they still need to be classified as entry or exit. The demo provided by Dobbie explicitly calculates the derivative of the bezier curve for each \\(t\\) value to do this. However, the derivative can also be computed in general for both potential solutions \\(t_0/t_1\\):</p> <p>\u6b64\u65f6\uff0c\u5c04\u7ebf\u548c\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u4ea4\u70b9\u5df2\u7ecf\u8ba1\u7b97\u5f97\u51fa\uff0c\u4f46\u4ecd\u9700\u8981\u5224\u65ad\u5b83\u662f\u5165\u53e3\u3001\u8fd8\u662f\u51fa\u53e3\u3002\u7531Dobbie\u63d0\u4f9b\u7684demo\u4e2d\uff0c\u663e\u793a\u5730\u8ba1\u7b97\u6bcf\u4e2at\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\u5bfc\u6570\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u89e3\u7684\u60c5\u51b5\uff08\\(t_0/t_1\\)\uff09\u4e5f\u53ef\u4ee5\u8ba1\u7b97\u5bfc\u6570\u3002</p> \\[ \\mathbf{C}_y(t) = (\\textrm{y}_0 - 2\\textrm{y}_1 + \\textrm{y}_2) t^2 - 2(\\textrm{y}_0 - \\textrm{y}_1) t + \\textrm{y}_0 \\] \\[ \\mathbf{C}_y(t) = a t^2 - 2b t + c \\] \\[ \\frac{d\\mathbf{C}_y(t)}{dt} = 2at - 2b \\] \\[ \\frac{d\\mathbf{C}_y(t_0)}{dt} = 2a{b - \\sqrt{b^2-ac} \\over a} - 2b = 2b - 2\\sqrt{b^2-ac} - 2b = -2\\sqrt{b^2-ac} \\le 0 \\] \\[ \\frac{d\\mathbf{C}_y(t_1)}{dt} = 2a{b + \\sqrt{b^2-ac} \\over a} - 2b = 2b + 2\\sqrt{b^2-ac} - 2b = 2\\sqrt{b^2-ac} \\ge 0 \\] <p>Therefore, the bezier curve crosses the x-axis in a fixed direction at each solution, and, combined with the convention for the orientation of the contour, \\(t_0\\) is always an exit and \\(t_1\\) is always an entry.</p> <p>\u56e0\u6b64\uff0c\u8d1d\u585e\u5c14\u66f2\u7ebf\u5728\u6bcf\u4e2a\u89e3\u5904\uff0c\u90fd\u4ee5\u56fa\u5b9a\u65b9\u5411\u7a7f\u8fc7X\u8f74\uff0c\u7ed3\u5408\u8f6e\u5ed3\u65b9\u5411\u7684\u5b9a\u4e49\uff0c\\(t_0\\)\u59cb\u7ec8\u662f\u51fa\u53e3\uff0c\\(t_1\\)\u59cb\u7ec8\u662f\u5165\u53e3\u3002</p> <p>A different approach to understanding this relationship is to notice that, because of the different signs used in the solutions and the square root being non-negative, \\(t_0\\) has to come first along the curve \\((t_0 &lt;= t_1)\\) if \\(a &gt; 0\\). Conversely, if \\(a &lt; 0\\), then the order is reversed and \\(t_1\\) has to come first \\((t_1 &lt;= t_0)\\).</p> <p>\u53e6\u4e00\u79cd\u7406\u89e3\u662f\uff0c\u7531\u4e8e\u89e3\u4e2d\u4f7f\u7528\u7684\u7b26\u53f7\u4e0d\u540c\uff0c\u4e14\u5e73\u65b9\u6839\u975e\u8d1f</p> <ol> <li>\u5982\u679c\\(a &gt; 0\\)\uff0c\u5219\\(t_0\\)\u5fc5\u5728\u66f2\u7ebf\u4e0a\u5148\u51fa\u73b0\uff0c\u5373\\((t_0 &lt;= t_1)\\)</li> <li>\u76f8\u53cd\uff0c\u5982\u679c\\(a &lt; 0\\)\uff0c\u5219\u987a\u5e8f\u98a0\u5012\uff0c\\(t_1\\)\u5728\u524d\u9762\uff0c\u5373\\((t_1 &lt;= t_0)\\)</li> </ol> <p>The parameter \\(a\\) can be rewritten as \\(2(\\frac{\\textrm{y}_0 + \\textrm{y}_2}{2} - \\textrm{y}_1)\\), so its sign depends on whether the second control point is above or below the midpoint of the first and third control point.</p> <p>\u53c2\u6570\\(a\\)\u53ef\u4ee5\u88ab\u91cd\u5199\u6210\\(2(\\frac{\\textrm{y}_0 + \\textrm{y}_2}{2} - \\textrm{y}_1)\\)\uff0c\u56e0\u6b64\u5b83\u7684\u7b26\u53f7\u53d6\u51b3\u4e8e\u7b2c\u4e8c\u4e2a\u63a7\u5236\u70b9\u662f\u5728\u7b2c\u4e00\u4e2a\u63a7\u5236\u70b9\u548c\u7b2c\u4e09\u4e2a\u63a7\u5236\u70b9\u7684\u4e2d\u70b9\uff0c\u4e2d\u70b9\u524d\u3001\u4e2d\u70b9\u540e\u3002</p> <p>The following figure shows that the solutions are always correctly classified for all combinations of the direction of the curve and the sign of parameter \\(a\\). Notice how the order of the solutions along the curve changes, but the ray always enters at a \\(t_1\\) solution and exits at a \\(t_0\\) solution.</p> <p>\u4e0b\u56fe\u663e\u793a\uff0c\u5bf9\u4e8e\u66f2\u7ebf\u65b9\u5411\u548c\u53c2\u6570\\(a\\)\u7b26\u53f7\u7684\u6240\u6709\u7ec4\u5408\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u7ed3\u8bba\u662f\u6b63\u786e\u7684\u3002 \u6ce8\u610f\u66f2\u7ebf\u4e0a\u89e3\u7684\u987a\u5e8f\u662f\u5982\u4f55\u53d8\u5316\u7684\uff0c\u4f46\u662f\u5c04\u7ebf\u603b\u662f\u4ee5\\(t_1\\)\u8fdb\u5165\uff0c\u4ee5\\(t_0\\)\u9000\u51fa\u3002</p> <p></p> <p>If the parameter \\(a\\) is 0 (or sufficiently small in floating-point calculations), there is a linear relationship between \\(t\\) and \\(y\\) (this is true for linear segments, but also for some non-linear curves), and the quadratic formula can no longer be used because of the division by \\(a\\).</p> <p>\u82e5\u53c2\u6570 \\(a = 0\\)\uff08\u6216\u8005\u5728\u6d6e\u70b9\u8ba1\u7b97\u4e2d\u8db3\u591f\u5c0f\uff09\uff0c\u5219 \\(t\\) \u548c \\(y\\) \u4e4b\u95f4\u5b58\u5728\u7ebf\u6027\u5173\u7cfb\uff08\u8fd9\u9002\u7528\u4e8e\u7ebf\u6027\u7ebf\u6bb5\uff0c\u4f46\u4e5f\u9002\u7528\u4e8e\u4e00\u4e9b\u975e\u7ebf\u6027\u66f2\u7ebf\uff09\uff0c\u4e8c\u6b21\u516c\u5f0f\u4e0d\u80fd\u518d\u7528\u4e86\uff0c\u56e0\u4e3a\u8981\u9664\u4ee5 \\(a\\)\u3002</p> <p>However, because the relationship is now linear, there can be at most one solution, which is easily computed and classified.</p> <p>\u7136\u800c\uff0c\u7531\u4e8e\u73b0\u5728\u7684\u5173\u7cfb\u662f\u7ebf\u6027\u7684\uff0c\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u89e3\uff0c\u56e0\u6b64\u5f88\u5bb9\u6613\u8ba1\u7b97\u548c\u5206\u7c7b\u3002</p> <p>Anti-aliasing along the ray direction is implemented by considering a window the size of a pixel around the ray origin.</p> <p>\u6cbf\u5c04\u7ebf\u65b9\u5411\u7684\u6297\u952f\u9f7f\u662f\u901a\u8fc7\u8003\u8651\u5c04\u7ebf\u539f\u70b9\u5468\u56f4\u50cf\u7d20\u5927\u5c0f\u7684\u7a97\u53e3\u6765\u5b9e\u73b0\u7684</p> <p>If an intersection falls into this window, then the winding number is changed only fractionally to compute the coverage of the pixel.</p> <p>\u5982\u679c\u4e00\u4e2a\u4ea4\u70b9\u843d\u5728\u8fd9\u4e2a\u7a97\u53e3\u5185\uff0c\u90a3\u4e48\u5708\u6570\u53ea\u6539\u53d8\u4e00\u70b9\u70b9\u6765\u8ba1\u7b97\u50cf\u7d20\u7684\u8986\u76d6\u8303\u56f4\u3002</p> <p>The fractional weight is determined by the distance from the left edge of the pixel (this is consistent with the rays pointing to the right).</p> <p>\u5206\u6570\u6743\u91cd\u7531\u8ddd\u79bb\u50cf\u7d20\u5de6\u8fb9\u7f18\u7684\u8ddd\u79bb\u6240\u51b3\u5b9a\uff08\u8fd9\u4e0e\u6307\u5411\u53f3\u4fa7\u7684\u5c04\u7ebf\u4e00\u81f4\uff09</p> <p>By considering the individual sections, one can see that this calculates the one-dimensional coverage exactly.</p> <p>\u901a\u8fc7\u8003\u8651\u5404\u4e2a\u90e8\u5206\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u51c6\u786e\u5730\u8ba1\u7b97\u4e86\u4e00\u7ef4\u8986\u76d6\u7387\u3002</p> <p></p> <p>Note, that we have to also consider intersections slightly behind the ray origin now, but the implementation first calculates any intersection with the x-axis and then verifies the x-position, so it does not change much.</p> <p>\u6ce8\u610f\uff0c\u6211\u4eec\u73b0\u5728\u8fd8\u8981\u8003\u8651\u5c04\u7ebf\u539f\u70b9\u540e\u9762\u7684\u4ea4\u70b9\uff0c\u4f46\u662f\u8be5\u5b9e\u73b0\u9996\u5148\u8ba1\u7b97\u4e0eX\u8f74\u7684\u4efb\u4f55\u4ea4\u70b9\uff0c\u7136\u540e\u9a8c\u8bc1x\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u53d1\u751f\u592a\u5927\u53d8\u5316\u3002</p> <p>A different way of thinking about this is that the condition \\(x \\ge 0\\) implies a weighting function that is 0 for \\(x &lt; 0\\) and 1 for \\(x \\ge 0\\). We can remove the discontinuity by introducing a linear segment over the width of one pixel.</p> <p>\u53e6\u4e00\u79cd\u601d\u8003\u65b9\u5f0f\u662f\uff0c\u6761\u4ef6\\(x \\ge 0\\)\u6697\u793a\u4e86\u4e00\u4e2a\u52a0\u6743\u51fd\u6570</p> <ol> <li>\\(x&lt;0\\)\u65f6\uff0c\u4e3a0</li> <li>\\(x \\ge 0\\)\u65f6\uff0c\u4e3a1</li> </ol> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u4e00\u4e2a\u50cf\u7d20\u7684\u5bbd\u5ea6\u4e0a\u5f15\u5165\u4e00\u4e2a\u7ebf\u6027\u7ebf\u6bb5\u6765\u6d88\u9664\u4e0d\u8fde\u7eed\u3002</p> <p>For full anti-aliasing we can use multiple rays along different directions (e.g. one along the x-axis and one along the y-axis).</p> <p>\u4e3a\u4e86\u5b8c\u5168\u6297\u952f\u9f7f\uff0c\u6211\u4eec\u53ef\u4ee5\u6cbf\u4e0d\u540c\u65b9\u5411\u4f7f\u7528\u591a\u6761\u5c04\u7ebf(\u4f8b\u5982\uff0c\u4e00\u6761\u6cbfx\u8f74\uff0c\u4e00\u6761\u6cbfy\u8f74)\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/#notes","title":"Notes","text":"<p>This kind of technique is subject to artifacts from the limited numerical precision of floating point numbers.</p> <p>\u8fd9\u79cd\u6280\u672f\u6536\u5230\u6d6e\u70b9\u6570\u6709\u9650\u7cbe\u5ea6\u7684\u5f71\u54cd\u3002</p> <p>The image below shows an instance of such artifacts when fully zoomed in (and knowing where to look). Nevertheless, I have found this implementation to be quite numerically stable already. Any remaining artifacts could be eliminated using the Slug algorithm, which is not implemented here due to the associated patent.</p> <p>\u4e0b\u56fe\u663e\u793a\u4e86\u4e00\u4e2a\u5b8c\u5168\u653e\u5927\u7684\u5de5\u4ef6\u5b9e\u4f8b\u3002\u7136\u800c\uff0c\u6211\u53d1\u73b0\u8fd9\u4e2a\u5b9e\u73b0\u5728\u6570\u503c\u4e0a\u5df2\u7ecf\u76f8\u5f53\u7a33\u5b9a\u3002\u4efb\u4f55\u5269\u4f59\u7684\u5de5\u4ef6\u90fd\u53ef\u4ee5\u4f7f\u7528Slug\u7b97\u6cd5\u6d88\u9664\uff0c\u7531\u4e8e\u76f8\u5173\u4e13\u5229\uff0c\u8fd9\u91cc\u6ca1\u6709\u5b9e\u73b0\u8be5\u7b97\u6cd5\u3002</p> <p>This demo also does not implement any performance optimizations (like banding) and might have high GPU usage in some scenarios and when using very complex fonts.</p> <p>\u6b64demo\u4e5f\u6ca1\u6709\u5b9e\u73b0\u4efb\u4f55\u6027\u80fd\u4f18\u5316\uff08\u5982banding\uff09\uff0c\u5e76\u4e14\u5728\u67d0\u4e9b\u573a\u666f\u548c\u4f7f\u7528\u975e\u5e38\u590d\u6742\u7684\u5b57\u4f53\u65f6\uff0c\u53ef\u80fd\u4f1a\u6709\u5f88\u9ad8\u7684GPU\u4f7f\u7528\u7387\u3002</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/#build-instructions","title":"Build Instructions","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/#1-init-submodules","title":"1. Init submodules","text":"<p>Clone the project recursively to initialize the submodules for the dependencies (or run <code>git submodule update --init</code> if you have already cloned the repo):</p> <pre><code>git clone --recursive https://github.com/GreenLightning/gpu-font-rendering.git\ncd gpu-font-rendering\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/#2-use-cmake","title":"2. Use CMake","text":"<pre><code># Note: CMake will create the build directory.\ncmake -S . -B build\nmake -j8 --directory build\n</code></pre> <p>On Windows you might want to use CMake GUI and/or Visual Studio instead.</p> <p>On Linux you might have to install additional packages for OpenGL development (e.g. <code>sudo apt-get install xorg-dev libgl1-mesa-dev</code> for Ubuntu).</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/#3-run-from-the-main-project-directory","title":"3. Run from the main project directory","text":"<pre><code>./build/main\n</code></pre> <p>The program requires the <code>fonts</code> and <code>shaders</code> directories to be in the current directory to load its resources. If you only get a black window, this is most likely the issue. Check your working directory and check the console for errors.</p> <p>Tested on Windows 10, MacOS Monterey and Ubuntu 22.04.</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/%E5%9F%BA%E4%BA%8E%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E6%9D%A5%E4%BC%A0%E9%80%92%E5%AD%97%E4%BD%93%E7%9A%84%E8%BD%AE%E5%BB%93%E4%BF%A1%E6%81%AF/","title":"\u57fa\u4e8e\u7eb9\u7406\u7f13\u5b58\u6765\u4f20\u9012\u5b57\u4f53\u7684\u8f6e\u5ed3\u4fe1\u606f","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/%E5%9F%BA%E4%BA%8E%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E6%9D%A5%E4%BC%A0%E9%80%92%E5%AD%97%E4%BD%93%E7%9A%84%E8%BD%AE%E5%BB%93%E4%BF%A1%E6%81%AF/#title-gpu","title":"title: [GPU\u77e2\u91cf\u7eb9\u7406] \u57fa\u4e8e\u7eb9\u7406\u7f13\u5b58\u6765\u4f20\u9012\u5b57\u4f53\u7684\u8f6e\u5ed3\u4fe1\u606f","text":"<p>\u5728\u201cGPU\u77e2\u91cf\u7eb9\u7406\u201c\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u4f1a\u5c06 \u6587\u5b57\u7684\u8f6e\u5ed3\u4fe1\u606f \u901a\u8fc7 Texture Buffer \u4f20\u9001\u5230GPU\u5f53\u4e2d\uff0c\u4ee5\u4fbf\u5728GPU\u4e2d\u6e32\u67d3\u51fa\u6587\u5b57\u3002</p> <p>\u672c\u6587\u5c06\u91cd\u70b9\u4ecb\u7ecd\u5728\u201cGPU\u77e2\u91cf\u7eb9\u7406\u201d\u6848\u4f8b\u4e2d\uff0c\u5bf9OpenGL Texture Buffer\u7684\u4f7f\u7528\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/%E5%9F%BA%E4%BA%8E%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E6%9D%A5%E4%BC%A0%E9%80%92%E5%AD%97%E4%BD%93%E7%9A%84%E8%BD%AE%E5%BB%93%E4%BF%A1%E6%81%AF/#_1","title":"\u7740\u8272\u5668","text":"<p>\u5148\u770b\u5728\u7740\u8272\u5668\u4e2d\u5982\u4f55\u4f7f\u7528Texture Buffer\u3002</p> <pre><code>#version 330 core\n//\u5b57\u5f62\u63cf\u8ff0\nstruct Glyph {\nint start, count; //Curves\u4e2d\u7684\u7d22\u5f15\n};\n//\u4e8c\u6b21\u8d1d\u585e\u5c14\u66f2\u7ebf\nstruct Curve {\nvec2 p0, p1, p2;\n};\nuniform isamplerBuffer glyphs;  //\u5b57\u5f62\u7f13\u5b58\u7eb9\u7406\uff08\u5b58\u50a8\u6240\u6709\u7684\u5b57\u5f62\u63cf\u8ff0\uff09\nuniform samplerBuffer curves;   //\u66f2\u7ebf\u7f13\u5b58\u7eb9\u7406\uff08\u5b58\u50a8\u6240\u6709\u5b57\u5f62\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\uff09\n// \u6839\u636e\u7d22\u5f15\uff0c\u4eceglyphs\u4e2d\u52a0\u8f7dGlyph\nGlyph loadGlyph(int index) {\nGlyph result;\nivec2 data = texelFetch(glyphs, index).xy; //texelFetch\u76f4\u63a5\u4ece\u7f13\u51b2\u533a\u4e2d\u53d6\u51fa\u50cf\u7d20\u503c\uff0c\u4e0d\u8fdb\u884c\u63d2\u503c\u5904\u7406\nresult.start = data.x;\nresult.count = data.y;\nreturn result;\n}\n// \u6839\u636e\u7d22\u5f15\uff0c\u4ececurves\u4e2d\u52a0\u8f7dCurve\nCurve loadCurve(int index) {\nCurve result;\nresult.p0 = texelFetch(curves, 3*index+0).xy;\nresult.p1 = texelFetch(curves, 3*index+1).xy;\nresult.p2 = texelFetch(curves, 3*index+2).xy;\nreturn result;\n}\n</code></pre> <p>\u4e0e\u4f7f\u75282D\u7eb9\u7406\u4e0d\u540c\u7684\u662f</p> Texture Buffer Texture 2D \u7533\u660e <code>uniform sampler2D texture1;</code> <code>uniform isamplerBuffer glyphs;</code> \u53d6\u503c <code>in vec2 TexCoord; //[0, 1]</code><code>texture(texture1, TexCoord);</code> <code>int index; //\u6ca1\u6709\u6620\u5c04\u5230[0,1]</code><code>texelFetch(glyphs, index).xy;</code>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/%E5%9F%BA%E4%BA%8E%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E6%9D%A5%E4%BC%A0%E9%80%92%E5%AD%97%E4%BD%93%E7%9A%84%E8%BD%AE%E5%BB%93%E4%BF%A1%E6%81%AF/#cpu","title":"\u5728CPU\u4e2d\u5982\u4f55\u51c6\u5907\u6570\u636e","text":"<p>\u63a5\u4e0b\u6765\u770b\uff0c\u5982\u4f55\u5728CPU\u4e2d\u51c6\u5907GPU\u6240\u9700\u6570\u636e\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/%E5%9F%BA%E4%BA%8E%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E6%9D%A5%E4%BC%A0%E9%80%92%E5%AD%97%E4%BD%93%E7%9A%84%E8%BD%AE%E5%BB%93%E4%BF%A1%E6%81%AF/#gpu","title":"\u521b\u5efa\u4e0eGPU\u6240\u6620\u5c04\u7684\u6570\u636e\u7ed3\u6784","text":"<pre><code>//\u5b57\u5f62\uff08\u5728Buffer\u4e2d\u7684\u4f4d\u7f6e\uff09\nstruct BufferGlyph {\n//start \u5f00\u59cb\u4f4d\u7f6e\n//count \u66f2\u7ebf\u4e2a\u6570\nint32_t start, count; // range of bezier curves belonging to this glyph\n};\n//\u66f2\u7ebf\uff08\u5373\u4e3a\u8d1d\u585e\u5c14\u66f2\u7ebf\uff0c\u7531\u4e09\u4e2a\u63a7\u5236\u70b9\u6240\u7ec4\u6210\uff09\nstruct BufferCurve {\n//\u4e09\u4e2a\u9876\u70b9\u5750\u6807\nfloat x0, y0, x1, y1, x2, y2;\n};\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/%E5%9F%BA%E4%BA%8E%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E6%9D%A5%E4%BC%A0%E9%80%92%E5%AD%97%E4%BD%93%E7%9A%84%E8%BD%AE%E5%BB%93%E4%BF%A1%E6%81%AF/#texture-buffer","title":"\u521b\u5efa\u4e0eTexture Buffer\u6240\u6620\u5c04\u7684\u6570\u636e\u7ed3\u6784","text":"<pre><code>std::vector&lt;BufferGlyph&gt; bufferGlyphs;  //N\u4e2a\u5b57\u5f62\uff08\u5bf9bufferCurves\u7684\u7d22\u5f15\uff09\nstd::vector&lt;BufferCurve&gt; bufferCurves;  //N\u4e2a\u5b57\u5f62\u7684\u8f6e\u5ed3\u7ebf\u90fd\u5b58\u50a8\u5728\u8fd9\u91cc\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/%E5%9F%BA%E4%BA%8E%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E6%9D%A5%E4%BC%A0%E9%80%92%E5%AD%97%E4%BD%93%E7%9A%84%E8%BD%AE%E5%BB%93%E4%BF%A1%E6%81%AF/#_2","title":"\u586b\u5145\u6570\u636e","text":"<p>\u6839\u636e\u9700\u6c42\uff0c\u521b\u5efa\u6570\u636e\uff0c\u5e76\u4fdd\u5b58\u5230<code>bufferGlyphs</code>\u4e0e<code>bufferCurves</code>\u4e2d\u5373\u53ef\u3002</p> <ol> <li>\u7ec4\u7ec7<code>BufferGlyph</code>\uff0c\u5e76\u4fdd\u5b58\u5230<code>bufferGlyphs</code></li> </ol> <pre><code>// \u6784\u5efa\u4e00\u4e2a\u5b57\u7b26\nvoid buildGlyph(uint32_t charcode, FT_UInt glyphIndex) {\n//# \u7ec4\u7ec7BufferGlyph\nBufferGlyph bufferGlyph;\n//...\nfor (int i = 0; i &lt; face-&gt;glyph-&gt;outline.n_contours; i++) {\nconvertContour(); //\u7ec4\u7ec7BufferCurve\n//...\n}\n//...\nbufferGlyphs.push_back(bufferGlyph);\n//...\n}\n</code></pre> <ol> <li>\u7ec4\u7ec7<code>BufferCurve</code>\uff0c\u5e76\u4fdd\u5b58\u5230<code>bufferCurves</code></li> </ol> <pre><code>void convertContour(...)\n{\nauto makeCurve = [](const glm::vec2&amp; p0, const glm::vec2&amp; p1, const glm::vec2&amp; p2) {\nBufferCurve result;\nresult.x0 = p0.x;\nresult.y0 = p0.y;\nresult.x1 = p1.x;\nresult.y1 = p1.y;\nresult.x2 = p2.x;\nresult.y2 = p2.y;\nreturn result;\n};\n//...\ncurves.push_back(makeCurve(b0, c0, d));\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/%E5%9F%BA%E4%BA%8E%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E6%9D%A5%E4%BC%A0%E9%80%92%E5%AD%97%E4%BD%93%E7%9A%84%E8%BD%AE%E5%BB%93%E4%BF%A1%E6%81%AF/#cpugpu","title":"\u5c06\u6570\u636e\u4eceCPU\u4f20\u9012\u5230GPU","text":"<p>\u90a3\u4e48\uff0c\u5982\u4f55\u5c06CPU\u4e2d\u7684\u6570\u636e\u5982\u4f55\u4f20\u9012\u5230GPU\u4e2d\u5462\uff1f</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/%E5%9F%BA%E4%BA%8E%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E6%9D%A5%E4%BC%A0%E9%80%92%E5%AD%97%E4%BD%93%E7%9A%84%E8%BD%AE%E5%BB%93%E4%BF%A1%E6%81%AF/#_3","title":"\u521b\u5efa\u7eb9\u7406\u4e0e\u7f13\u5b58","text":"<pre><code>/*\n *1. \u672c\u5b57\u4f53\u6240\u6709\u5b57\u5f62\u7684\u8f6e\u5ed3\u7ebf\u90fd\u5b58\u50a8\u5728bufferCurves\u5f53\u4e2d\uff0c\u7528BufferGlyph\u6765\u8bb0\u5f55\u5404\u4e2a\u5b57\u5f62\u7684\u7d22\u5f15\n *2. \u5bf9\u4e8ebufferGlyphs\u3001bufferCurves\uff0c\u662f\u5f53\u6210Texture\u4f20\u5165GPU\u7684\uff0c\u56e0\u6b64\u8fd8\u9700\u8981\u4e24\u4e2a\u7eb9\u7406\u63d2\u69fd\n */\nGLuint glyphTexture, curveTexture;  //glyphBuffer\u3001curveBuffer\u5b9e\u9645\u4e0a\u662f\u4f7f\u7528\u7684Texture\u7684\u7f13\u51b2\u533a\nGLuint glyphBuffer, curveBuffer;    //\u5728GPU\u4e2d\uff0cbufferGlyphs\u3001bufferCurves\u7684\u7f13\u51b2\u533aID\n//\u521b\u5efa\u7eb9\u7406\nglGenTextures(1, &amp;glyphTexture);\nglGenTextures(1, &amp;curveTexture);\n//\u521b\u5efaBuffer\nglGenBuffers(1, &amp;glyphBuffer);\nglGenBuffers(1, &amp;curveBuffer);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/%E5%9F%BA%E4%BA%8E%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E6%9D%A5%E4%BC%A0%E9%80%92%E5%AD%97%E4%BD%93%E7%9A%84%E8%BD%AE%E5%BB%93%E4%BF%A1%E6%81%AF/#_4","title":"\u7ed1\u5b9a\u7eb9\u7406\u4e0e\u7f13\u5b58","text":"<pre><code>//uniform isamplerBuffer glyphs;\nglBindTexture(GL_TEXTURE_BUFFER, glyphTexture);        //\u660e\u786eglyphTexture\u7684\u7c7b\u578b\u662fTexture Buffer\nglTexBuffer(GL_TEXTURE_BUFFER, GL_RG32I, glyphBuffer);\n//\u5c06glyphBuffer\u7ed1\u5b9a\u5230glyphTexture\u4e0a\nglBindTexture(GL_TEXTURE_BUFFER, 0);\n//\u7ed1\u5b9a\u4e00\u4e2a0\u53e5\u67c4\u7684\u7eb9\u7406\uff08\u5373\u89e3\u7ed1glyphTexture\u7684\u610f\u601d\uff09\n//uniform samplerBuffer curves; \nglBindTexture(GL_TEXTURE_BUFFER, curveTexture);\nglTexBuffer(GL_TEXTURE_BUFFER, GL_RG32F, curveBuffer);\nglBindTexture(GL_TEXTURE_BUFFER, 0);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/%E5%9F%BA%E4%BA%8E%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E6%9D%A5%E4%BC%A0%E9%80%92%E5%AD%97%E4%BD%93%E7%9A%84%E8%BD%AE%E5%BB%93%E4%BF%A1%E6%81%AF/#cpugpu_1","title":"\u5c06CPU\u4e2d\u7684\u6570\u636e\u66f4\u65b0\u5230GPU\u4e2d","text":"<pre><code>void uploadBuffers() {\nglBindBuffer(GL_TEXTURE_BUFFER, glyphBuffer);\n//\u7ed1\u5b9a\u7f13\u5b58\nglBufferData(\nGL_TEXTURE_BUFFER, sizeof(BufferGlyph) * bufferGlyphs.size(), bufferGlyphs.data(), GL_STATIC_DRAW\n);\n//\u5c06CPU\u4e2d\u7684\u6570\u636e\u66f4\u65b0\u5230GPU\u4e2d\nglBindBuffer(GL_TEXTURE_BUFFER, 0);\n//\u7ed1\u5b9a\u4e00\u4e2a0\u53e5\u67c4\u7684\u7f13\u5b58\uff08\u5373\u89e3\u7ed1glyphBuffer\u7684\u610f\u601d\uff09\nglBindBuffer(GL_TEXTURE_BUFFER, curveBuffer);\nglBufferData(GL_TEXTURE_BUFFER, sizeof(BufferCurve) * bufferCurves.size(), bufferCurves.data(), GL_STATIC_DRAW\n);\nglBindBuffer(GL_TEXTURE_BUFFER, 0);\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/%E5%9F%BA%E4%BA%8E%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E6%9D%A5%E4%BC%A0%E9%80%92%E5%AD%97%E4%BD%93%E7%9A%84%E8%BD%AE%E5%BB%93%E4%BF%A1%E6%81%AF/#_5","title":"\u7ed8\u5236\u65f6\u7ed1\u5b9a\u7eb9\u7406","text":"<pre><code>GLint location;\nlocation = glGetUniformLocation(program, \"glyphs\");\nglUniform1i(location, 0); //\u7eb9\u7406\u63d2\u69fd 0\nlocation = glGetUniformLocation(program, \"curves\");\nglUniform1i(location, 1); //\u7eb9\u7406\u63d2\u69fd 1\n//0\u7eb9\u7406\u63d2\u69fd\uff0c\u7ed1\u5b9aglyphTexture\nglActiveTexture(GL_TEXTURE0);\nglBindTexture(GL_TEXTURE_BUFFER, glyphTexture);\n//1\u7eb9\u7406\u63d2\u69fd\uff0c\u7ed1\u5b9acurveTexture\nglActiveTexture(GL_TEXTURE1);\nglBindTexture(GL_TEXTURE_BUFFER, curveTexture);\nglActiveTexture(GL_TEXTURE0);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/%E5%9F%BA%E4%BA%8E%E5%AD%97%E4%BD%93%E8%BD%AE%E5%BB%93%E7%9A%84GPU%E6%96%87%E5%AD%97%E6%B8%B2%E6%9F%93/gpu-font-rendering%28GreenLightning%29/%E5%9F%BA%E4%BA%8E%E7%BA%B9%E7%90%86%E7%BC%93%E5%AD%98%E6%9D%A5%E4%BC%A0%E9%80%92%E5%AD%97%E4%BD%93%E7%9A%84%E8%BD%AE%E5%BB%93%E4%BF%A1%E6%81%AF/#_6","title":"\u91ca\u653e\u8d44\u6e90","text":"<pre><code>glDeleteTextures(1, &amp;glyphTexture);\nglDeleteTextures(1, &amp;curveTexture);\nglDeleteBuffers(1, &amp;glyphBuffer);\nglDeleteBuffers(1, &amp;curveBuffer);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E5%8D%8A%E7%90%83%E9%A2%86%E5%9F%9F/","title":"\u534a\u7403\u9886\u57df","text":"<p>\u4e00\u4e2a\u534a\u7403\u9886\u57df\uff08Hemisphere\uff09\u53ef\u4ee5\u63cf\u8ff0\u4e3a\uff0c\u4ee5\u5e73\u9762\u6cd5\u7ebf\\(\\vec{n}\\)\u4e3a\u8f74\uff0c\u6240\u73af\u7ed5\u7684\u534a\u4e2a\u7403\u4f53\u3002</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E5%8D%8A%E7%A8%8B%E5%90%91%E9%87%8F/","title":"\u534a\u7a0b\u5411\u91cf","text":"<p>\u534a\u7a0b\u5411\u91cf(Halfway Vector)\uff0c\u5373\u5149\u7ebf\u4e0e\u89c6\u7ebf\u5939\u89d2\u4e00\u534a\u65b9\u5411\u4e0a\u7684\u4e00\u4e2a\u5355\u4f4d\u5411\u91cf\uff08\u5982\u56fe\u4e2d\u7684 H \uff09\u3002</p> <ol> <li>\u5f53\u534a\u7a0b\u5411\u91cf\u4e0e\u6cd5\u7ebf\u5411\u91cf\u8d8a\u63a5\u8fd1\u65f6\uff0c\u955c\u9762\u5149\u5206\u91cf\u5c31\u8d8a\u5927</li> <li>\u5f53\u89c6\u7ebf\u6b63\u597d\u4e0e\u53cd\u5c04\u5411\u91cf\u5bf9\u9f50\u65f6\uff0c\u534a\u7a0b\u5411\u91cf\u5c31\u4f1a\u4e0e\u6cd5\u7ebf\u5b8c\u7f8e\u5951\u5408\u3002\u6240\u4ee5\u5f53\u89c2\u5bdf\u8005\u89c6\u7ebf\u8d8a\u63a5\u8fd1\u4e8e\u539f\u672c\u53cd\u5c04\u5149\u7ebf\u7684\u65b9\u5411\u65f6\uff0c\u955c\u9762\u9ad8\u5149\u5c31\u4f1a\u8d8a\u5f3a\u3002</li> </ol> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E5%8D%8A%E7%A8%8B%E5%90%91%E9%87%8F/#_1","title":"\u8ba1\u7b97","text":"<p>\u83b7\u53d6\u534a\u7a0b\u5411\u91cf\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5c06\u5149\u7ebf\u7684\u65b9\u5411\u5411\u91cf\u548c\u89c2\u5bdf\u5411\u91cf\u52a0\u5230\u4e00\u8d77\uff0c\u5e76\u5c06\u7ed3\u679c\u6b63\u89c4\u5316(Normalize)\u5c31\u53ef\u4ee5\u4e86\uff1a</p> <p>\\(\\bar{H} = \\frac{\\bar{L} + \\bar{V}}{||\\bar{L} + \\bar{V}||}\\)</p> <pre><code>vec3 lightDir = normalize(lightPos - FragPos); vec3 viewDir = normalize(viewPos - FragPos); vec3 halfwayDir = normalize(lightDir + viewDir);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E5%8D%8A%E7%A8%8B%E5%90%91%E9%87%8F/#_2","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u9ad8\u7ea7\u5149\u7167 - LearnOpenGL CN (learnopengl-cn.github.io)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E6%AC%A1%E8%A1%A8%E9%9D%A2%E6%95%A3%E5%B0%84/","title":"\u6b21\u8868\u9762\u6563\u5c04","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E6%AC%A1%E8%A1%A8%E9%9D%A2%E6%95%A3%E5%B0%84/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u6f2b\u53cd\u5c04\u548c\u6b21\u8868\u9762\u6563\u5c04 - \u77e5\u4e4e (zhihu.com)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E6%B8%B2%E6%9F%93%E6%96%B9%E7%A8%8B/","title":"\u6e32\u67d3\u65b9\u7a0b","text":"<p>\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u9886\u57df\uff0c\u6e32\u67d3\u65b9\u7a0b\uff08Rendering equation\uff09\u63cf\u8ff0\u7684\u662f\u5149\u80fd\u5728\u573a\u666f\u4e2d\u7684\u6d41\u52a8\u3002</p> <ul> <li>\u573a\u666f\u4e2d\u5149\u7ebf\u4f20\u8f93\u884c\u4e3a\u53ef\u4ee5\u7528\u6e32\u67d3\u65b9\u7a0b\u8ba1\u7b97\u51fa</li> </ul> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E6%B8%B2%E6%9F%93%E6%96%B9%E7%A8%8B/#_1","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>wiki \u6e32\u67d3\u65b9\u7a0b</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/","title":"\u8f90\u5c04\u5ea6\u91cf\u5b66","text":"<p>\u8f90\u5c04\u5ea6\u91cf\u5b66\u662f\u4e00\u79cd\u7528\u6765\u5ea6\u91cf\u7535\u78c1\u573a\u8f90\u5c04\uff08\u5305\u62ec\u53ef\u89c1\u5149\uff09\u7684\u624b\u6bb5\u3002</p> \u7269\u7406\u91cf \u8bf4\u660e \u5355\u4f4d \u8f90\u5c04\u901a\u91cf \u5149\u6e90\u6240\u8f93\u51fa\u7684\u603b\u80fd\u91cf \u74e6\u7279 \u7acb\u4f53\u89d2 \u5355\u4f4d\u7403\u4f53\u4e0a\u7684\u4e00\u5757\u9762\u79ef \u8f90\u5c04\u5f3a\u5ea6 \u5149\u6e90\uff08\u5373\u4e00\u675f\u5149\uff09\uff0c\u6253\u5728\u5355\u4f4d\u7acb\u4f53\u89d2\u4e0a\u7684\u80fd\u91cf \u8f90\u5c04\u7387 \u5149\u6e90\uff08\u5373\u4e00\u675f\u5149\uff09\uff0c\u6253\u5728\u5355\u4f4d\u7acb\u4f53\u89d2\u3001\u5355\u4f4d\u9762\u79ef\u4e0a\u7684\u80fd\u91cf \u8f90\u5c04\u7167\u5ea6 \u6240\u6709\u5149\u7ebf\uff0c\u6253\u5728\u5355\u4f4d\u7acb\u4f53\u89d2\u3001\u5355\u4f4d\u9762\u79ef\u4e0a\u7684\u80fd\u91cf"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/%E7%AB%8B%E4%BD%93%E8%A7%92/","title":"\u7acb\u4f53\u89d2","text":"<p>\u7acb\u4f53\u89d2\u7528\\(\\omega\\)\u8868\u793a</p> <ul> <li>\u5b83\u53ef\u4ee5\u4e3a\u6211\u4eec\u63cf\u8ff0\u6295\u5c04\u5230\u5355\u4f4d\u7403\u4f53\u4e0a\u7684\u4e00\u4e2a\u622a\u9762\u7684\u5927\u5c0f\uff08\u6216\u9762\u79ef\uff09</li> <li>\u6295\u5c04\u5230\u8fd9\u4e2a\u5355\u4f4d\u7403\u4f53\u4e0a\u622a\u9762\u7684\u9762\u79ef\u5c31\u88ab\u79f0\u4e3a\u7acb\u65b9\u89d2\uff08Solid Angle\uff09</li> <li>\u4f60\u53ef\u4ee5\u628a\u7acb\u4f53\u89d2\u60f3\u8c61\u6210\u4e3a\u4e00\u4e2a\u5e26\u6709\u4f53\u79ef\u7684\u65b9\u5411</li> </ul> <p>\u53ef\u4ee5\u628a\u81ea\u5df1\u60f3\u8c61\u6210\u4e00\u4e2a\u7ad9\u5728\u5355\u4f4d\u7403\u9762\u4e2d\u5fc3\u7684\u89c2\u5bdf\u8005\uff0c\u5411\u7740\u6295\u5f71\u7684\u65b9\u5411\u770b\u3002\u8fd9\u4e2a\u6295\u5f71\u8f6e\u5ed3\u7684\u5927\u5c0f\u5c31\u662f\u7acb\u4f53\u89d2</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/%E8%BE%90%E5%B0%84%E5%BC%BA%E5%BA%A6/","title":"\u8f90\u5c04\u5f3a\u5ea6","text":"<p>\u8f90\u5c04\u5f3a\u5ea6(Radiant Intensity)\u8868\u793a\u7684\u662f</p> <ol> <li>\u5728\u5355\u4f4d\u7403\u9762\u4e0a</li> <li>\u4e00\u4e2a\u5149\u6e90\u5411\u6bcf\u5355\u4f4d\u7acb\u4f53\u89d2</li> <li>\u6240\u6295\u9001\u7684\u8f90\u5c04\u901a\u91cf</li> </ol> <p>\u5047\u8bbe\u4e00\u4e2a\u5168\u5411\u5149\u6e90\u5411\u56db\u9762\u516b\u65b9\u5747\u5300\u8f90\u5c04\u80fd\u91cf\uff0c\u8f90\u5c04\u5f3a\u5ea6 \u5c31\u80fd\u5e2e\u6211\u4eec\u8ba1\u7b97\u51fa\u5149\u6e90\u6253\u5728\u4e00\u4e2a\u5355\u4f4d\u9762\u79ef\uff08\u5355\u4f4d\u7acb\u4f53\u89d2\uff09\u4e0a\u7684\u80fd\u91cf\u5927\u5c0f\u3002</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/%E8%BE%90%E5%B0%84%E5%BC%BA%E5%BA%A6/#_1","title":"\u5982\u4f55\u8ba1\u7b97\u8f90\u5c04\u5f3a\u5ea6","text":"<p>\u8ba1\u7b97\u8f90\u5c04\u5f3a\u5ea6</p> <ol> <li><code>I</code>\u8f90\u5c04\u5f3a\u5ea6</li> <li>\\(\\Phi\\)\u8f90\u5c04\u901a\u91cf</li> <li>\\(\\omega\\)\u7acb\u4f53\u89d2</li> </ol> \\[ I = \\frac{d\\Phi}{d\\omega} \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/%E8%BE%90%E5%B0%84%E7%85%A7%E5%BA%A6%EF%BC%88%E8%BE%90%E7%85%A7%E5%BA%A6%EF%BC%89/","title":"\u8f90\u5c04\u7167\u5ea6\uff08\u8f90\u7167\u5ea6\uff09","text":"<p>\u8f90\u5c04\u7387\u6c42\u7684\u662f\uff0c\u5728\u5355\u4e2a\u70b9\\(p\\)\u4e0a\uff0c\u5355\u675f\u5149\u7ebf\u7684\u5f3a\u5ea6\u3002</p> <p>\u800c\u8ba1\u7b97\u6295\u5c04\u5230\u70b9\\(p\\)\u4e0a\uff0c\u6240\u6709\u5149\u7ebf\u5f3a\u5ea6\u603b\u548c\uff0c\u5c31\u79f0\u4e3a\u8f90\u5c04\u7167\u5ea6\uff08\u6216\u8f90\u7167\u5ea6\uff09\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/%E8%BE%90%E5%B0%84%E7%8E%87/","title":"\u8f90\u5c04\u7387","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/%E8%BE%90%E5%B0%84%E7%8E%87/#_1","title":"\u5f15\u8a00","text":"<p>\u5bf9\u4e8e\u7528\u6765\u6d4b\u91cf\u66f2\u9762\u6216\u67d0\u4e2a\u65b9\u5411\u4e0a\u7684\u5149\uff0c\u8f90\u5c04\u5ea6\u91cf\u5b66\u6709\u5f88\u591a\u79cd\u8f90\u5c04\u5ea6\u91cf(radiometric quantities)\u3002 \u4f46\u6211\u4eec\u53ea\u8ba8\u8bba\u4e00\u79cd\uff0c\u5b83\u548c\u6e32\u67d3\u65b9\u7a0b\u6709\u5173\uff0c\u5b83\u5373\u662f\u8f90\u5c04\u7387(Radiance)\uff0c\u5728\u8fd9\u91cc\u7528\\(L\\)\u6765\u8868\u793a\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/%E8%BE%90%E5%B0%84%E7%8E%87/#_2","title":"\u8f90\u5c04\u7387","text":"<p>\u8f90\u5c04\u7387\u88ab\u7528\u6765\u91cf\u5316\u6765\u81ea\u5355\u4e00\u65b9\u5411\u4e0a\u7684\u5149\u7ebf\u7684\u5927\u5c0f\u6216\u8005\u5f3a\u5ea6\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/%E8%BE%90%E5%B0%84%E7%8E%87/#_3","title":"\u8f90\u5c04\u7387\u65b9\u7a0b","text":"<p>\u8f90\u5c04\u7387\u65b9\u7a0b</p> <ul> <li>\u4e00\u4e2a\u62e5\u6709 \u8f90\u5c04\u5f3a\u5ea6\\(\\Phi\\) \u7684\u5149\u6e90</li> <li>\u5728\u5355\u4f4d\u9762\u79ef\\(A\\)\u3001\u5355\u4f4d\u7acb\u4f53\u89d2\\(\\omega\\)\u4e0a</li> <li>\u8f90\u5c04\u51fa\u7684\u603b\u80fd\u91cf</li> </ul> \\[ L=\\frac{d^2\\Phi}{ dA d\\omega \\cos\\theta} \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/%E8%BE%90%E5%B0%84%E7%8E%87/#_4","title":"\u7269\u7406\u610f\u4e49","text":"<p>\u5728\u8f90\u5c04\u5ea6\u91cf\u5b66\u4e2d\uff0c\u8f90\u5c04\u7387\u8868\u793a\uff0c\u4e00\u4e2a\u533a\u57df\u5185\u5149\u7ebf\u603b\u91cf\uff0c\u7684\u7269\u7406\u91cf\u3002</p> <p>\u5b83\u53d7\u5230 \u5165\u5c04\u5149\u7ebf\u4e0e\u5e73\u9762\u6cd5\u5411\u91cf \u5939\u89d2 \u7684\u5f71\u54cd\uff0c\u5177\u4f53\u662f\u53d7\\(\\cos \\theta\\)\u7684\u5f71\u54cd</p> <ol> <li>\u5f53\u5149\u7ebf\u5b8c\u5168\u5782\u76f4\u4e8e\u5e73\u9762\u65f6\uff0c\u5f3a\u5ea6\u6700\u9ad8</li> <li>\u5f53\u5149\u7ebf\u5e73\u884c\u4e8e\u5e73\u9762\u65f6\uff0c\u5f3a\u5ea6\u6700\u4f4e</li> </ol> <p>\u5176\u4e2d\uff0c\\(\\cos \\theta\\) = \u5149\u7ebf\u7684\u65b9\u5411\u5411\u91cf \u4e0e \u5e73\u9762\u6cd5\u5411\u91cf \u7684\u70b9\u79ef</p> <pre><code>float cosTheta = dot(lightDir, N);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/%E8%BE%90%E5%B0%84%E7%8E%87/#_5","title":"\u5bf9\u4e8e\u56fe\u5f62\u5b66\u7684\u610f\u4e49","text":"<p>\u8f90\u5c04\u7387\u65b9\u7a0b\u5bf9\u4e8e\u56fe\u5f62\u5b66\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u628a\u5927\u90e8\u5206\u6211\u4eec\u611f\u5174\u8da3\u7684\u7269\u7406\u91cf\u90fd\u5305\u542b\u8fdb\u53bb\u4e86\u3002</p> <p>\u628a\u7acb\u4f53\u89d2\\(\\omega\\)\u548c\u9762\u79ef\\(A\\)\u770b\u4f5c\u662f\u65e0\u7a77\u5c0f\uff0c\u90a3\u4e48\u5c31\u80fd\u7528\u8f90\u5c04\u7387\u6765\u8868\u793a\uff0c\u5355\u675f\u5149\u7ebf\u7a7f\u8fc7\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u7684\u901a\u91cf</p> <p>\u7c7b\u4f3c\uff0c\u6211\u4eec\u53ef\u4ee5\u501f\u52a9\u8f90\u5c04\u7387\uff0c\u5e2e\u52a9\u6211\u4eec\u8ba1\u7b97\uff0c\u5355\u675f\u5149\u7ebf\u5bf9\u6bcf\u4e2a\u7247\u6bb5\u7684\u4f5c\u7528</p> <ul> <li>\u628a\u7acb\u4f53\u89d2\\(\\omega\\)\u8f6c\u4e3a\u65b9\u5411\u5411\u91cf</li> <li>\u628a\u9762\\(A\\)\u8f6c\u4e3a\u70b9\\(p\\)</li> <li>\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa\uff0c\u4f5c\u7528\u4e8e\u5355\u4e2a\u7247\u6bb5\u4e0a\u7684\uff0c\u5355\u675f\u5149\u7ebf\u7684\u8f90\u5c04\u7387</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A6%82%E5%BF%B5/%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/%E8%BE%90%E5%B0%84%E9%80%9A%E9%87%8F/","title":"\u8f90\u5c04\u901a\u91cf","text":"<p>\u8f90\u5c04\u901a\u91cf\\(\\Phi\\)\u8868\u793a\u7684\u662f\u4e00\u79cd \u5149\u6e90\u6240\u8f93\u51fa\u7684\u80fd\u91cf\uff0c\u4ee5\u74e6\u7279\u4e3a\u5355\u4f4d\u3002</p> <p>\u53ef\u89c1\u5149</p> <ul> <li>\u6ce2\u957f\u4ecb\u4e8e390nm\u5230700nm\uff08\u7eb3\u7c73\uff09\u7684\u5149\u88ab\u8ba4\u4e3a\u662f\u5904\u4e8e\u53ef\u89c1\u5149\u5149\u8c31\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u4eec\u662f\u4eba\u773c\u53ef\u89c1\u7684\u6ce2\u957f</li> <li>\u5728\u56fe\u5f62\u5b66\u4e2d\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u6e32\u67d3\uff0c\u4e3a\u4eba\u773c\u6240\u670d\u52a1\uff0c\u56e0\u6b64\u9ed8\u8ba4\u8ba8\u8bba\u7684\u90fd\u662f\u201c\u53ef\u89c1\u5149\u201d</li> <li>\u4e0b\u56fe\u5c55\u793a\u4e86\uff0c\u65e5\u5149\u4e2d\u4e0d\u540c\u6ce2\u957f\u7684\u5149\u6240\u5177\u6709\u7684\u80fd\u91cf</li> </ul> <p></p> <p>\u5149 == \u4e0d\u540c\u6ce2\u957f\u80fd\u91cf\u4e4b\u201c\u548c\u201d</p> <ul> <li>\u5149\u662f\u7531\u591a\u79cd\u4e0d\u540c\u6ce2\u957f\u7684\u80fd\u91cf\u6240\u96c6\u5408\u800c\u6210\u7684\uff0c\u800c\u6bcf\u79cd\u6ce2\u957f\u5219\u4e0e\u4e00\u79cd\u989c\u8272\u76f8\u5173</li> <li>\u56e0\u6b64\uff0c\u4e00\u4e2a\u5149\u6e90\u6240\u653e\u5c04\u51fa\u6765\u7684\u80fd\u91cf\u53ef\u4ee5\u88ab\u89c6\u4f5c\u8fd9\u4e2a\u5149\u6e90\u5305\u542b\u7684\u6240\u6709\u5404\u79cd\u6ce2\u957f\u7684\u4e00\u4e2a\u51fd\u6570</li> </ul> <p>\u901a\u5e38\uff0c\u6211\u4eec\u4e0d\u76f4\u63a5\u4f7f\u7528\u6ce2\u957f\u7684\u5f3a\u5ea6\uff0c\u800c\u662f \u4f7f\u7528\u4e09\u539f\u8272\u7f16\u7801 \u6765\u7b80\u5316\u5b83\uff0c\u4e5f\u5c31\u662fRGB\uff08\u6216\u79f0\uff1a\u5149\u8272\uff09</p> <ul> <li>\u8f90\u5c04\u901a\u91cf\u5c06\u4f1a\u8ba1\u7b97 \u8fd9\u4e2a\u7531\u4e0d\u540c\u6ce2\u957f\u6784\u6210\u7684\u51fd\u6570 \u7684\u603b\u9762\u79ef\uff08\u6ce2\u957f\u51fd\u6570\u7684\u79ef\u5206\uff1f\uff09</li> <li>\u76f4\u63a5\u5c06\u8fd9\u79cd\u4e0d\u540c\u6ce2\u957f\u7684\u8ba1\u91cf\u4f5c\u4e3a\u53c2\u6570\u8f93\u5165\u56fe\u5f62\u5b66\u6709\u4e00\u4e9b\u4e0d\u5207\u5b9e\u9645\u3002\u56e0\u6b64\u6211\u4eec\u7528RGB\u7b80\u5316\u5b83</li> <li>\u4e09\u539f\u8272\u7f16\u7801\u786e\u5b9e\u4f1a\u5e26\u6765\u4e00\u4e9b\u4fe1\u606f\u4e0a\u7684\u635f\u5931\uff0c\u4f46\u8fd9\u5728\u89c6\u89c9\u6548\u679c\u4e0a\u7684\u5f71\u54cd\u57fa\u672c\u53ef\u4ee5\u5ffd\u7565</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A8%A1%E6%9D%BF%E6%B5%8B%E8%AF%95/","title":"\u6a21\u677f\u6d4b\u8bd5","text":"<p>\u3010\u76ee\u7684\u3011\u5229\u7528\u672c\u6b21\u7ed8\u5236\u7684\u7269\u4f53\uff0c\u4ea7\u751f\u4e00\u4e2a\u533a\u57df\uff0c\u5728\u4e0b\u6b21\u7ed8\u5236\u4e2d\u5229\u7528\u8fd9\u4e2a\u533a\u57df\u505a\u4e00\u4e9b\u6548\u679c</p> <p>\u3010\u6b65\u9aa4\u3011</p> <ol> <li>\u6a21\u677f\u7f13\u51b2\u66f4\u65b0\uff1a\u7528\u4e8e\u521b\u5efa\u51fa\u4e00\u4e2a\u6a21\u677f\u533a\u57df\uff0c\u5728\u4e0b\u4e00\u5e27\u518d\u505a\u4f7f\u7528</li> <li>\u6a21\u677f\u6d4b\u8bd5\uff1a\u7528\u4e0a\u4e00\u5e27\u7684\u6a21\u677f\u7f13\u51b2\uff0c\u505a\u4e00\u4e9b\u64cd\u4f5c</li> </ol> <p>\u3010\u6a21\u677f\u7f13\u51b2\u533a\u3011\u4e0e\u989c\u8272\u7f13\u51b2\u533a\u3001\u6df1\u5ea6\u7f13\u51b2\u533a\u7c7b\u4f3c\uff0c\u6a21\u677f\u7f13\u51b2\u533a\u53ef\u4ee5\u4e3a\u5c4f\u5e55\u4e0a\u7684\u6bcf\u4e2a\u50cf\u7d20\u4fdd\u5b58\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\u503c\uff088\u4f4d\u4e8c\u8fdb\u5236\uff0c\u5373256\u5341\u8fdb\u5236\uff09</p> <p>\u3010\u6a21\u677f\u63a9\u7801\u51fd\u6570\u3011</p> <ol> <li><code>glStencilMask(0xFF);</code> \u6bcf\u4e00\u4f4d\u90fd\u53ef\u4ee5\u88ab\u4fee\u6539\uff0c\u5373\u542f\u7528\u6a21\u677f\u7f13\u51b2\u533a\u7684\u5199\u5165</li> <li><code>glStencilMask(0x00);</code> \u6bcf\u4e00\u4f4d\u90fd\u4e0d\u53ef\u4ee5\u88ab\u4fee\u6539\uff0c\u5373\u7981\u7528\u6a21\u677f\u7f13\u51b2\u5199\u5165</li> </ol> <p>\u3010\u6a21\u677f\u6d4b\u8bd5\u7684\u51fd\u6570\u3011\u4ec0\u4e48\u60c5\u51b5\u901a\u8fc7\u6a21\u677f\u6d4b\u8bd5\uff0c\u901a\u8fc7\u6a21\u677f\u6d4b\u8bd5\u7684\u50cf\u7d20\u624d\u4f1a\u88ab\u663e\u793a\u51fa\u6765</p> <ol> <li>\u63a9\u7801\u503cmask\u548c\u53c2\u8003\u503cref\u503c\u5148\u505a\u4e0e\u64cd\u4f5c</li> <li>\u518d\u628a\u5f53\u524d\u6a21\u677f\u4e2d\u7684\u503cstencil\u4e0e\u63a9\u7801\u503cmask\u505a\u4e0e\u64cd\u4f5c</li> <li>\u53c2\u8003func\u4e2d\u7684\u65b9\u6cd5\u662f\u5426\u53ef\u4ee5\u901a\u8fc7</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A8%A1%E6%9D%BF%E6%B5%8B%E8%AF%95/#_1","title":"\u793a\u4f8b\uff1a\u7ed8\u5236\u7269\u4f53\u8f6e\u5ed3","text":"<ol> <li>\u5f00\u542f\u5e76\u8bbe\u7f6e\u6a21\u677f\u6d4b\u8bd5\u6761\u4ef6\uff1a\u53ea\u662f\u901a\u8fc7\u6d4b\u8bd5\uff0c\u5373\u672c\u6b21\u7ed8\u5236\u7684\u6240\u6709\u7247\u6bb5\u90fd\u4f1a\u901a\u8fc7\u6d4b\u8bd5\u5e76\u66f4\u65b0\u6a21\u677f\u503c</li> <li>\u7ed8\u5236\u7269\u4f53\u5e76\u66f4\u65b0\u6a21\u677f\u503c</li> <li>\u7981\u7528\u6a21\u677f\u7f13\u51b2\u5199\u5165</li> <li>\u4fee\u6539\u6a21\u677f\u6d4b\u8bd5\u6761\u4ef6\uff1a\u6ca1\u6709\u6a21\u677f\u503c\u5f97\u7247\u6bb5\u624d\u901a\u8fc7\u6d4b\u8bd5\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u6b21\u7ed8\u5236\u4f1a\u4e22\u6389\u4e4b\u524d\u7ed8\u5236\u7684\u533a\u57df\uff08\u5e76\u4e0d\u5f71\u54cd\u4e0a\u6b21\u7ed8\u5236\uff0c\u53ea\u4f1a\u5f71\u54cd\u63a5\u4e0b\u6765\u7684\u7ed8\u5236\uff09</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%A8%A1%E6%9D%BF%E6%B5%8B%E8%AF%95/#_2","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u6a21\u677f\u6d4b\u8bd5 - LearnOpenGL CN (learnopengl-cn.github.io)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/","title":"\u6e32\u67d3\u7ba1\u7ebf\u6982\u8ff0","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/#_1","title":"\u6e32\u67d3\u7ba1\u7ebf\u7b80\u4ecb","text":"<p>\u6e32\u67d3\u7ba1\u7ebf\u7684\u4e3b\u8981\u529f\u80fd\u662f\u51b3\u5b9a\u5728\u7ed9\u5b9a\u865a\u62df\u76f8\u673a\u3001\u4e09\u7ef4\u7269\u4f53\u3001\u5149\u6e90\u3001\u7167\u660e\u6a21\u5f0f\uff0c\u4ee5\u53ca\u7eb9\u7406\u7b49\u8bf8\u591a\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u751f\u6210\u6216\u7ed8\u5236\u4e00\u5e45\u4e8c\u7ef4\u56fe\u50cf\u7684\u8fc7\u7a0b\u3002</p> <p>\u4e3b\u8981\u53ef\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5</p> \u9636\u6bb5 \u8bf4\u660e \u5e94\u7528\u7a0b\u5e8f\u9636\u6bb5 \u901a\u8fc7\u8f6f\u4ef6\u7684\u65b9\u5f0f\u5b9e\u73b0\u67d0\u4e9b\u64cd\u4f5c\uff08\u5982\u78b0\u649e\u68c0\u6d4b\uff09\uff0c\u5c06\u9700\u8981\u5728\u5c4f\u5e55\u4e0a\u7ed8\u5236\u7684\u51e0\u4f55\u4f53\u4f20\u8f93\u5230GPU\u6e32\u67d3\u7ba1\u7ebf\u5f53\u4e2d\uff0c\u4ee5\u6b64\u4f18\u5316\u6e32\u67d3\u6027\u80fd \u51e0\u4f55\u9636\u6bb5 \u8fdb\u884c\u9010\u9876\u70b9\u3001\u9010\u591a\u8fb9\u5f62\u7684\u64cd\u4f5c\uff0c\u5305\u62ecMVP\u53d8\u6362\u3001\u88c1\u526a\u3001\u5c4f\u5e55\u6620\u5c04\u7b49\u64cd\u4f5c\u3002\u8fd9\u9636\u6bb5\u4f1a\u8f93\u51fa\u6bcf\u4e2a\u9876\u70b9\u7684\u5c4f\u5e55\u5750\u6807\u3001\u6df1\u5ea6\u503c\u4ee5\u53ca\u4e0e\u7740\u8272\u6709\u5173\u7684\u4fe1\u606f \u5149\u6805\u5316\u9636\u6bb5 \u5bf9\u5c4f\u5e55\u5750\u6807\u4e0a\u7684\u56fe\u5143\u8fdb\u884c\u5149\u6805\u5316\uff0c\u8f6c\u6210\u50cf\u7d20\uff1b\u518d\u9010\u50cf\u7d20\u8fdb\u884c\u7740\u8272\u5668\uff1b\u6700\u540e\u8fdb\u884c\u6df7\u5408\u7b49\u64cd\u4f5c <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/#_2","title":"\u5e94\u7528\u7a0b\u5e8f\u9636\u6bb5","text":"<p>\u5e94\u7528\u7a0b\u5e8f\u9636\u6bb5\u53d1\u751f\u5728CPU\u5f53\u4e2d\uff0c\u5b83\u7684\u76ee\u7684\u5728\u4e8e\u5c06\u9700\u8981\u6e32\u67d3\u7684\u6570\u636e\u4f20\u8f93\u7ed9GPU\u3001\u63a7\u5236GPU\u5b8c\u6210\u6e32\u67d3\u6d41\u7a0b\u3002\u56e0\u6b64\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u5b8c\u6210CPU\u4e0eGPU\u4e4b\u95f4\u7684\u901a\u4fe1\u3002</p> <p>\u5e94\u7528\u7a0b\u5e8f\u9636\u6bb5\u5927\u81f4\u4e5f\u53ef\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5</p> \u5e94\u7528\u7a0b\u5e8f\u9636\u6bb5 \u8bf4\u660e \u628a\u6570\u636e\u52a0\u8f7d\u5230\u663e\u5b58\u5f53\u4e2d 1. \u6e32\u67d3\u6570\u636e\u53ef\u80fd\u6765\u81ea\u786c\u76d8\u6216\u7f51\u7edc\uff0c\u9700\u8981\u5c06\u5b83\u4eec\u52a0\u8f7d\u5230\u7cfb\u7edf\u5185\u5b58\uff08RAM\uff09\u5f53\u4e2d2. \u4e3a\u63d0\u9ad8\u6027\u80fd\uff0c\u53ef\u4ee5\u505a\u4e00\u4e9b\u7c97\u7c92\u5ea6\u7684\u5254\u9664\u64cd\u4f5c\uff0c\u628a\u4e0d\u53ef\u89c1\u7684\u7269\u4f53\u5254\u9664\uff0c\u53ef\u89c1\u7684\u7269\u4f53\u624d\u4f20\u8f93\u5230\u663e\u5b58\u5f53\u4e2d\uff08\u8fd8\u53ef\u505a\u4e00\u4e9b\u5176\u4ed6\u64cd\u4f5c\u4f18\u5316\u6548\u7387\uff0c\u5982LOD\u8c03\u5ea6\uff09 \u8bbe\u7f6e\u6e32\u67d3\u72b6\u6001 \u544a\u8bc9GPU\uff0c\u6570\u636e\u5e94\u8be5\u5982\u4f55\u88ab\u6e32\u67d3\uff0c\u4f8b\u5982\u4f7f\u7528\u54ea\u4e2a\u9876\u70b9\u3001\u7247\u5143\u7740\u8272\u5668\uff0c\u5149\u6e90\u5c5e\u6027\u3001\u6750\u8d28\u662f\u4ec0\u4e48\uff08\u5728\u540c\u4e00\u4efd\u6e32\u67d3\u72b6\u6001\uff0c\u4e0d\u540c\u7f51\u683c\u6e32\u67d3\u51fa\u6765\u7684\u5916\u89c2\u662f\u4e00\u6837\u7684\uff09 \u8c03\u7528Draw Call \u7ed9GPU\u53d1\u9001\u6307\u4ee4\uff0c\u901a\u77e5\u5b83\u6e32\u67d3\u54ea\u4e2a\u7f51\u683c <ol> <li>\u628a\u6570\u636e\u52a0\u8f7d\u5230\u663e\u5b58\u5f53\u4e2d</li> </ol> <p></p> <ol> <li>\u8bbe\u7f6e\u6e32\u67d3\u72b6\u6001</li> </ol> <p></p> <ol> <li>\u8c03\u7528Draw Call</li> </ol> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/#gpu","title":"GPU\u6e32\u67d3\u7ba1\u7ebf","text":"<p>\u9664\u4e86\u5e94\u7528\u7a0b\u5e8f\u9636\u6bb5\u5728CPU\u4e0a\u6267\u884c\u5916\uff0c\u5269\u4e0b\u7684\u51e0\u4f55\u9636\u6bb5\u4e0e\u5149\u6805\u5316\u9636\u6bb5\u90fd\u5728GPU\u4e2d\u6267\u884c\uff0c\u56e0\u6b64\u4e5f\u628a\u5b83\u4fe9\u5408\u8d77\u6765\u79f0\u4e3aGPU\u6e32\u67d3\u7ba1\u7ebf\u3002</p> <p>\u4e0e\u5e94\u7528\u7a0b\u5e8f\u9636\u6bb5\u6240\u4e0d\u540c\u7684\u662f\uff0c\u5f00\u53d1\u8005\u5bf9GPU\u6e32\u67d3\u7ba1\u7ebf\u65e0\u6cd5\u62e5\u6709\u7edd\u5bf9\u7684\u63a7\u5236\u6743</p> <ol> <li>\u7eff\u8272\uff1a\u53ef\u7f16\u7a0b\u3002\u5f00\u53d1\u8005\u53ef\u7f16\u5199\u7740\u8272\u5668\u7a0b\u5e8f\uff0c\u901a\u8fc7\u7740\u8272\u5668\u7a0b\u5e8f\u6765\u63a7\u5236\u6b64\u9636\u6bb5</li> <li>\u9ec4\u8272\uff1a\u53ef\u914d\u7f6e\u3002\u5f00\u53d1\u8005\u53ef\u901a\u8fc7\u4e00\u4e9b\u6307\u4ee4\u63a7\u5236\u6b64\u9636\u6bb5\u7684\u4e00\u4e9b\u64cd\u4f5c</li> <li>\u84dd\u8272\uff1a\u56fa\u5b9a\u9636\u6bb5\u3002\u5f00\u53d1\u8005\u65e0\u6cd5\u63a7\u5236\u8fd9\u4e24\u4e2a\u9636\u6bb5\uff0c\u884c\u4e3a\u90fd\u662fGPU\u56fa\u5b9a\u7684</li> </ol> <p></p> \u8f93\u5165\u3001\u9636\u6bb5\u3001\u8f93\u51fa \u8bf4\u660e \u9876\u70b9\u6570\u636e \u7531\u5e94\u7528\u7a0b\u5e8f\u9636\u6bb5\u4f20\u8f93\u5230\u663e\u5b58\u4e2d\uff0c\u5e76\u7531DrawCall\u6307\u5b9a\uff0c\u518d\u4f20\u8f93\u5230\u9876\u70b9\u7740\u8272\u5668\u5f53\u4e2d \u9876\u70b9\u7740\u8272\u5668 \u9010\u9876\u70b9\u5904\u7406\uff0c\u901a\u5e38\u5b9e\u73b0MVP\u53d8\u6362\uff08\u6a21\u578b\u5750\u6807\u8f6c\u5230\u9f50\u6b21\u88c1\u526a\u7a7a\u95f4\uff09 \u66f2\u9762\u7ec6\u5206\u7740\u8272\u5668 \u53ef\u9009\u9636\u6bb5\u3002\u7528\u4e8e\u7ec6\u5206\u56fe\u5143 \u51e0\u4f55\u7740\u8272\u5668 \u53ef\u9009\u9636\u6bb5\u3002\u9010\u56fe\u5143\u64cd\u4f5c\u3001\u6216\u88ab\u7528\u4e8e\u4ea7\u751f\u66f4\u591a\u56fe\u5143\uff0c\u5373\u80fd\u591f\u9ad8\u6548\u5730\u521b\u5efa\u548c\u9500\u6bc1\u9876\u70b9 \u88c1\u526a \u5bf9\u4e0e\u89c6\u9525\u76f8\u4ea4\u7684\u4e09\u89d2\u5f62\u8fdb\u884c\u88c1\u526a\u3002\u6b64\u9636\u6bb5\u662f\u53ef\u914d\u7f6e\u7684\uff0c\u4f8b\u59821. \u4f7f\u7528\u81ea\u5b9a\u4e49\u88c1\u526a\u5e73\u9762\u6765\u914d\u7f6e\u88c1\u526a\u533a\u57df2. \u901a\u8fc7\u6307\u4ee4\u63a7\u5236\u88c1\u526a\u4e09\u89d2\u56fe\u5143\u7684\u6b63\u9762\u8fd8\u662f\u80cc\u9762 \u5c4f\u5e55\u6620\u5c04 \u5c06\u56fe\u5143\u7684\u9876\u70b9\u5750\u6807\u8f6c\u6362\u5230\u5c4f\u5e55\u5750\u6807\u7cfb\u4e2d \u4e09\u89d2\u5f62\u8bbe\u7f6e \u8ba1\u7b97\u4e09\u89d2\u5f62\u8868\u9762\u7684\u5dee\u5f02\u548c\u5176\u4ed6\u76f8\u5173\u6570\u636e \u4e09\u89d2\u5f62\u904d\u5386 \u904d\u5386\u4e09\u89d2\u5f62\u5185\u6240\u6709\u7684\u50cf\u7d20 \u7247\u5143\u7740\u8272\u5668 \u9010\u50cf\u7d20\u8c03\u7528\u7247\u5143\u7740\u8272\u5668\uff0c\u53ef\u4ee5\u5728\u7247\u5143\u7740\u8272\u5668\u91cc\u5b8c\u6210\u4e00\u4e9b\u8ba1\u7b97\uff0c\u5982\u8ba1\u7b97\u590d\u6742\u7684\u7740\u8272\u65b9\u7a0b \u5408\u5e76\u9636\u6bb5 \u5bf9\u6bcf\u4e2a\u7247\u5143\u7ed3\u679c\u8fdb\u884c\u5408\u5e76\uff0c\u6d89\u53ca\u7684\u64cd\u4f5c\u6709\uff1a\u6a21\u677f\u7f13\u51b2\u3001Z\u7f13\u51b2\u3001\u989c\u8272\u6df7\u5408\u7b49\u7b49"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/#gpu_1","title":"\u9644\uff1aGPU\u6e32\u67d3\u7ba1\u7ebf\u6709\u4e24\u79cd\u6a21\u5f0f","text":"<p>\u65e9\u671f\u7684\u6e32\u67d3\u7ba1\u7ebf\u91c7\u7528\u7684\u662f\u7acb\u5373\u6e32\u67d3\u6a21\u5f0f(Immediate mode\uff0c\u4e5f\u5c31\u662f\u56fa\u5b9a\u6e32\u67d3\u7ba1\u7ebf)\uff0c\u5b83\u4e0d\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u6539\u53d8GPU\u6e32\u67d3\u7684\u65b9\u5f0f\u3002</p> <p>\u6838\u5fc3\u6e32\u67d3\u9ed8\u8ba4(Core-profile mode)\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u5b9a\u5236\u5316GPU\u7684\u6e32\u67d3\u65b9\u5f0f\uff0c\u4e0a\u6587\u8ba8\u8bba\u7684\u90fd\u662f\u8fd9\u79cd\u6a21\u5f0f</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/#_3","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u300aUnity Shader\u5165\u95e8\u7cbe\u8981\u300b</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/%E7%89%87%E6%AE%B5%E7%9D%80%E8%89%B2%E5%99%A8%EF%BC%88%E5%83%8F%E7%B4%A0%E7%9D%80%E8%89%B2%E5%99%A8%EF%BC%89/","title":"\u7247\u6bb5\u7740\u8272\u5668\uff08\u50cf\u7d20\u7740\u8272\u5668\uff09","text":"<p>\u50cf\u7d20\u7740\u8272\u5668\u7528\u6765\u5904\u7406\u573a\u666f\u5149\u7167\u548c\u4e0e\u4e4b\u76f8\u5173\u7684\u6548\u679c\uff0c\u5982\u51f8\u51f9\u7eb9\u7406\u6620\u5c04\u548c\u8c03\u8272\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/%E7%89%87%E6%AE%B5%E7%9D%80%E8%89%B2%E5%99%A8%EF%BC%88%E5%83%8F%E7%B4%A0%E7%9D%80%E8%89%B2%E5%99%A8%EF%BC%89/#_1","title":"\u201c\u7247\u6bb5\u201d\u8fd8\u662f\u201c\u50cf\u7d20\u201d","text":"<p>\u7247\u6bb5\u7740\u8272\u5668\u4f3c\u4e4e\u66f4\u4e3a\u51c6\u5907\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u7740\u8272\u5668\u7684\u8c03\u7528\u548c\u5c4f\u5e55\u4e0a\u50cf\u7d20\u7684\u663e\u793a\u5e76\u975e\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u50cf\u7d20\uff0c\u7247\u6bb5\u7740\u8272\u5668\u53ef\u80fd\u4f1a\u88ab\u8c03\u7528\u82e5\u5e72\u6b21\u6765\u51b3\u5b9a\u5b83\u6700\u7ec8\u7684\u989c\u8272\uff0c\u90a3\u4e9b\u88ab\u906e\u6321\u7684\u7269\u4f53\u4e5f\u4f1a\u88ab\u8ba1\u7b97\uff0c\u76f4\u5230\u6700\u540e\u7684\u6df1\u5ea6\u7f13\u51b2\u624d\u5c06\u5404\u4e2a\u7269\u4f53\u524d\u540e\u6392\u5e8f\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E7%BA%B9%E7%90%86%E8%B4%B4%E5%9B%BE/","title":"\u7eb9\u7406\u8d34\u56fe\u53ca\u76f8\u5173\u6280\u672f","text":"<p>\u3010\u7eb9\u7406\u3011\u7eb9\u7406\uff08Texturing\uff09\u662f\u4e00\u79cd\u9488\u5bf9\u7269\u4f53\u8868\u9762\u5c5e\u6027\u8fdb\u884c\u201c\u5efa\u6a21\u201d\u7684\u9ad8\u6548\u6280\u672f\u3002</p> <p>\u3010\u7eb9\u7d20\u3011\u56fe\u50cf\u7eb9\u7406\u4e2d\u7684\u50cf\u7d20\u88ab\u79f0\u4e3a\u7eb9\u7d20\uff08Texels\uff09\uff0c\u533a\u522b\u4e8e\u5c4f\u5e55\u4e0a\u7684\u50cf\u7d20\u3002</p> <p>\u3010\u8d34\u56fe\u3011\u6839\u636eKershaw\u7684\u672f\u8bed\uff0c\u901a\u8fc7\u5c06\u6295\u5f71\u65b9\u7a0b\u8fd0\u7528\u4e8e\u7a7a\u95f4\u4e2d\u7684\u70b9\uff0c\u4ece\u800c\u5f97\u5230\u4e00\u7ec4\u79f0\u4e3a\u53c2\u6570\u7a7a\u95f4\u503c\u7684\u5173\u4e8e\u7eb9\u7406\u7684\u6570\u503c\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u79f0\u4e3a\u8d34\u56fe</p> <ul> <li>\u8d34\u56fe\uff0cMapping\uff0c\u4e5f\u79f0\u6620\u5c04\uff0c\u4e5f\u79f0\u7eb9\u7406\u6620\u5c04\uff08Texture Mapping\uff09</li> </ul> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%A3%81%E5%89%AA%E6%8A%80%E6%9C%AF/","title":"\u88c1\u526a\u6280\u672f\uff08Culling\uff09","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%A3%81%E5%89%AA%E6%8A%80%E6%9C%AF/#_1","title":"\u76f8\u5173\u6587\u7ae0","text":"<ol> <li>\u6e32\u67d3\u6027\u80fd\u4f18\u5316\u4e4bCulling \u5254\u9664_vtk \u89c6\u9525\u5254\u9664_\u5fae\u5c0f\u7684\u9c7c\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/ssloy-tinyrenderer/","title":"TinyRenderer(ssloy)","text":"","tags":["\u8f6f\u6e32\u67d3"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/ssloy-tinyrenderer/#_1","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>https://github.com/ssloy/tinyrenderer</li> <li>Home \u00b7 ssloy/tinyrenderer Wiki (github.com)</li> <li>\u7ffb\u8bd1</li> </ol>","tags":["\u8f6f\u6e32\u67d3"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/zauonlok-renderer/","title":"\u8f6f\u6e32\u67d3\u5668(zauonlok)","text":"","tags":["\u8f6f\u6e32\u67d3"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/zauonlok-renderer/#_1","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>zauonlok/renderer</li> <li>\u5982\u4f55\u5f00\u59cb\u7528 C++ \u5199\u4e00\u4e2a\u5149\u6805\u5316\u6e32\u67d3\u5668\uff1f</li> </ol>","tags":["\u8f6f\u6e32\u67d3"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/%E3%80%8AGAMES101%E3%80%8B/","title":"GAMES101\uff1a\u73b0\u4ee3\u56fe\u5f62\u5b66\u5165\u95e8","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/%E3%80%8AGAMES101%E3%80%8B/#_1","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u5165\u95e8\u6559\u7a0b\u2014\u2014GAMES101</li> <li>\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u7cfb\u5217\u7b14\u8bb0\u2014\u2014\u5b59\u5c0f\u78ca</li> <li>\u4f5c\u4e1a\u5730\u5740\uff1b\u4f5c\u4e1a\u63d0\u4ea4\u7cfb\u7edf\uff082021\u5e74\uff09\uff08\u63a8\u8350\u4f7f\u7528VSCode\uff09</li> <li>\u5728\u7ebf\u7b54\u7591\u5e73\u53f0</li> <li>604856939\uff082021\u5e74\u6625\u5b63\u4ea4\u6d41\u7fa4\uff09\uff1b\u8bba\u575b</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/%E3%80%8AGAMES101%E3%80%8B/#_2","title":"\u53c2\u8003\u4e66\u7c4d","text":"<ol> <li>\u864e\u4e66\uff1a\u5efa\u8bae\u2265\u7b2c3\u7248\u3002\u4e2d\u6587\u7248\u53ea\u6709\u5230\u7b2c\u4e8c\u7248\uff0c\u4f46\u82f1\u6587\u7248\u6bd4\u8f83\u597d\u3002\u5efa\u8bae\u5bf9\u6bd4\u6765\u770b</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/%E3%80%8AGAMES101%E3%80%8B/#_3","title":"\u56fe\u5f62\u5b66\u7684\u5e94\u7528","text":"\u5e94\u7528 ** \u4f8b\u5b50** \u6e38\u620f \u53ea\u90ce\u3001Borderlands 3(2019) \u7535\u5f71 1. \u300a\u9ed1\u5ba2\u5e1d\u56fd\u300b1999\uff1a\u201c\u5b50\u5f39\u65f6\u95f4\u201d2. \u300a\u963f\u51e1\u8fbe\u300b\uff1a\u5f15\u5165\u4e86\u4eba\u7684\u9762\u90e8\u52a8\u4f5c\uff0c\u6f14\u5458\u505a\u771f\u5b9e\u8868\u60c5\uff0c\u7136\u540e\u6620\u5c04\u5230\u865a\u62df\u4eba\u7269\u8138\u4e0a\u901a\u8fc7\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u7684\u6280\u672f\u5408\u6210\u51fa\u6765\uff1b\u7279\u6548\u662f\u6700\u7b80\u5355\u7684\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u7684\u5e94\u7528 \u52a8\u753b 1. \u300a\u75af\u72c2\u52a8\u7269\u57ce\u300b\u6bdb\u53d1\u7279\u6548\uff1a\u6bdb\u53d1\u5f88\u591a\uff0c\u6bcf\u4e2a\u5934\u53d1\u8981\u548c\u5149\u7ebf\u4f5c\u7528\uff1b\u5934\u53d1\u4e1d\u548c\u5934\u53d1\u4e1d\u4e4b\u95f4\u5149\u7684\u4f5c\u75282. \u300a\u51b0\u96ea\u5947\u7f18\u300b\u56fe\u5f62\u5b66\u6a21\u62df\uff1a\u6a21\u62df\u98ce\u7b49 \u8bbe\u8ba1 CAD\uff1a\u4e0d\u540c\u7684\u73af\u5883\u5149\u3001\u6e32\u67d3 \u53ef\u89c6\u5316 1. \u865a\u62df\u73b0\u5b9e\uff1a\u4f60\u770b\u4e0d\u5230\u73b0\u5b9e\uff0c\u773c\u524d\u7684\u90fd\u662f\u865a\u62df\u7684\u73b0\u5b9e2. \u589e\u5f3a\u73b0\u5b9e\uff1a\u4f60\u80fd\u770b\u5230\u73b0\u5b9e\u5f53\u4e2d\u7684\u4e1c\u897f\uff0c\u6709\u4e00\u4e9b\u865a\u62df\u7684\u4e1c\u897f\u53e0\u52a0\u5728\u73b0\u5b9e\u4e2d \u6570\u5b57\u7ed8\u753b \u6a21\u62df\uff08\u4eff\u771f\uff09 \u56fe\u5f62\u7528\u6237\u63a5\u53e3 \u5b57\u4f53Typography \u77e2\u91cf\u56fe\u5b57\u4f53\u7ecf\u5178\u6d4b\u8bd5\u8bed\u53e5\uff1aThe Quick Brown Fox Jumps Over The Lazy Dog\uff08\u8fd9\u53e5\u8bdd\u7528\u5c3d\u4e86\u82f1\u6587\u4e2d\u768426\u4e2a\u5b57\u6bcd\uff0c\u6240\u4ee5\u7ecf\u5e38\u7528\u4e00\u53e5\u5168\u5927\u5199\uff0c\u4e00\u53e5\u5168\u5c0f\u5199\u6765\u6d4b\u8bd5\u5b57\u4f53\u7684\u5b8c\u6574\u6027\uff09"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/%E3%80%8AGAMES101%E3%80%8B/#_4","title":"\u4ece\u6280\u672f\u4e0a\u6765\u8bf4\uff0c\u4ec0\u4e48\u662f\u597d\u7684\u753b\u9762\u5462\uff1f","text":"<p>\u753b\u9762\u7684\u4eae\u5ea6\uff0c\u753b\u9762\u662f\u4e0d\u662f\u8db3\u591f\u4eae</p> <ol> <li>\u4f53\u73b0\u56fe\u5f62\u5b66\u6e32\u67d3\u4e2d\u7684\u5168\u5c40\u5149\u7167\u3002\u5982\u679c\u5168\u5c40\u5149\u7167\u505a\u7684\u597d\uff0c\u6574\u4e2a\u753b\u9762\u5c31\u4f1a\u4eae\uff0c\u770b\u8d77\u6765\u5f88\u8212\u670d\uff1b\u5982\u679c\u6574\u4e2a\u753b\u9762\u5f88\u6697\uff0c\u5c31\u4f1a\u8868\u73b0\u51fa\u6280\u672f\u4e2d\u7684\u4e0d\u8db3\u3002</li> <li>\u56e0\u4e3a\u4eae\u7684\u65f6\u5019\uff0c\u7ec6\u8282\u5c31\u4f1a\u66b4\u9732\u51fa\u6765\uff0c\u6e32\u67d3\u7684\u662f\u4e0d\u662f\u5f88\u7c97\u7cd9</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/%E3%80%8AGAMES101%E3%80%8B/#_5","title":"\u56fe\u5f62\u5b66\u7684\u96be\u70b9","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/%E3%80%8AGAMES101%E3%80%8B/#_6","title":"\u56fe\u5f62\u5b66\u7684\u5185\u5bb9","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/%E3%80%8AGAMES101%E3%80%8B/#_7","title":"\u8ba1\u7b97\u673a\u89c6\u89c9/\u6df1\u5ea6\u5b66\u4e60/\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66 \u7684\u533a\u522b","text":"<ol> <li>\u8ba1\u7b97\u673a\u89c6\u89c9\uff1a\u4e00\u5207\u9700\u8981\u731c\u6d4b\u7684\u5185\u5bb9\uff0c\u57fa\u672c\u90fd\u662f\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u5185\u5bb9</li> <li>\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\uff1a\u6d89\u53ca\u5230\u7406\u89e3\u3001\u731c\u6d4b\u3001\u610f\u4e49\u8fd9\u65b9\u9762\u7684\u4e8b\u60c5\uff0c\u4e0d\u5c5e\u4e8eCG</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/%E3%80%8AGAMES101%E3%80%8B/#_8","title":"\u56fe\u5f62\u5b66\u4f9d\u8d56","text":"<ol> <li>\u57fa\u7840\u6570\u5b66\uff1a\u7ebf\u6027\u4ee3\u6570\u3001\u5fae\u79ef\u5206\u3001\u7edf\u8ba1\u5b66</li> <li>\u57fa\u7840\u7269\u7406\uff1a\u5149\u5b66\u3001\u529b\u5b66</li> <li>\u5176\u4ed6\uff1a\u4fe1\u53f7\u5904\u7406\u3001\u6570\u503c\u5206\u6790</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/%E3%80%8AGAMES101%E3%80%8B/#games101","title":"GAMES101\u4e0d\u8bb2\u4ec0\u4e48\u5185\u5bb9","text":"<ol> <li>\u4e0d\u8bb2OpenGL\u3001DirectX\u3001Vulkan\uff08\u8fd9\u4e9b\u53ea\u662f\u56fe\u5f62\u5b66\u7684\u4e00\u4e2aAPI\uff0c\u8fd9\u95e8\u8bfe\u53ea\u5b66\u80cc\u540e\u7684\u77e5\u8bc6\uff09</li> <li>\u4e0d\u8bb23D\u5efa\u6a21</li> <li>\u4e0d\u8bb2\u6e38\u620f\u5f15\u64ce</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/%E3%80%8AReal-Time%20Rendering%E3%80%8B/","title":"\u300aReal-Time Rendering, Fourth Edition\u300b","text":"<p>\u5b9e\u65f6\u6e32\u67d3\u7684\u767e\u79d1\u5168\u4e66\uff0c\u5173\u4e8e\u56fe\u5f62\u5b66\u7684\u57fa\u7840\u77e5\u8bc6\u5728\u8fd9\u672c\u4e66\u91cc\u90fd\u6709\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E8%B5%84%E6%96%99/%E3%80%8AReal-Time%20Rendering%E3%80%8B/#_1","title":"\u76f8\u5173\u6587\u7ae0","text":"<ol> <li>\u300aReal-Time Rendering 3rd\u63d0\u70bc\u603b\u7ed3\u300b\u6bdb\u661f\u4e91\uff08\u6d45\u58a8\uff09 </li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E9%80%8F%E6%98%8E%E6%B8%B2%E6%9F%93/","title":"\u900f\u660e\u6e32\u67d3\u4e0e\u6392\u5e8f","text":"<p>\u7b80\u5355\u5730\u8bf4</p> <ol> <li>\u5148\u7ed8\u5236\u6240\u6709\u4e0d\u900f\u660e\u7684\u4e1c\u897f</li> <li>\u4ece\u8fdc\u5230\u8fd1\u6392\u5e8f\u900f\u660e\u7269\u4f53</li> <li>\u4f9d\u6b21\u7ed8\u5236\u900f\u660e\u7269\u4f53</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/2-%E6%B8%B2%E6%9F%93%E6%A6%82%E8%BF%B0/%E9%80%8F%E6%98%8E%E6%B8%B2%E6%9F%93/#_1","title":"\u900f\u660e\u6e32\u67d3","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/MeshLib/","title":"MeshLib","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/MeshLib/#_1","title":"\u76f8\u5173\u94fe\u63a5","text":"<ul> <li>MeshLib\u4ed3\u5e93: Geometry processing library (github.com)</li> <li>MeshLib\u5e2e\u52a9\u6587\u6863</li> <li>MeshInspector\u57fa\u4e8eMeshLib\u7684\u95ed\u6e90\u8f6f\u4ef6</li> <li>MeshInspector Wasm demo</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/MeshLib/#_2","title":"\u7b80\u4ecb","text":"<p>Meshlib\u7684\u76ee\u6807\u662f\u7b80\u5355\u6027\u548c\u6027\u80fd\uff0c\u540c\u65f6\u63d0\u4f9b\u5927\u91cf\u6709\u7528\u7684\u51e0\u4f55\u7b97\u6cd5\u3002\u652f\u6301\u5f53\u4eca\u4f20\u611f\u5668\u6240\u4ea7\u751f\u7684\u91cd\u8981\u6570\u636e\u7ed3\u6784\u2014\u2014\u70b9\u4e91\u3001\u9762\u7f51\u683c\u3001\u4f53\u7f51\u683c\uff08volume\uff09</p> <ul> <li>\u9762\u7f51\u683c\u662f\u7528\u534a\u8fb9\u6570\u636e\u7ed3\u6784\u8868\u793a\uff0c\u4e0d\u652f\u6301\u975e\u6d41\u884c</li> <li>\u652f\u6301C++\u3001Python\u3001Wasm</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/MeshLib/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/CMake%E5%BC%95%E7%94%A8MeshLib/","title":"CMake\u5f15\u7528MeshLib","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/MeshLib/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/CMake%E5%BC%95%E7%94%A8MeshLib/#windows","title":"Windows","text":"<p>\u76ee\u5f55\u7ed3\u6784 <pre><code>CMakeLists.txt\nthirdparty\\\n    expected\\\n        include\\\n            tl\\\n                expected.hpp\n        Findexpected.cmake\n    meshlib\\\n        ...\n        Findmeshlib.cmake\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/MeshLib/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/CMake%E5%BC%95%E7%94%A8MeshLib/#meshlib","title":"MeshLib","text":"<p>\u4e00\u3001\u4e0b\u8f7d\u9884\u7f16\u8bd1\u7248\u672c\uff0c\u653e\u5230<code>meshlib</code>\u76ee\u5f55\u4e0b</p> <p>https://github.com/MeshInspector/MeshLib/releases</p> <p>\u4e8c\u3001\u7f16\u5199<code>Findmeshlib.cmake</code></p> <pre><code>if(TARGET MeshLib)\nreturn()\nendif()\nIF (WIN32)\nif(CMAKE_SIZEOF_VOID_P EQUAL 8)\nset(MeshLib_Lib ${CMAKE_CURRENT_LIST_DIR}/lib/Release/*.lib)\nelse()\nmessage(FATAL_ERROR \"Todo: Win32\")\nendif()\nELSEIF(APPLE)\nmessage(FATAL_ERROR \"Todo: Apple\")\nELSEIF(UNIX)\nmessage(FATAL_ERROR \"Todo: UNIX\")\nENDIF()\nadd_library(MeshLib SHARED IMPORTED)\nset_property(\nTARGET MeshLib PROPERTY IMPORTED_IMPLIB ${MeshLib_Lib}\n) target_include_directories(\nMeshLib\nINTERFACE ${CMAKE_CURRENT_LIST_DIR}/include\n)\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/MeshLib/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/CMake%E5%BC%95%E7%94%A8MeshLib/#expected","title":"expected","text":"<p>\u4e00\u3001\u4e0b\u8f7d\u6e90\u7801\uff0c\u53d6<code>include</code>\u76ee\u5f55\u5373\u53ef\uff0c\u653e\u5230<code>expected</code>\u76ee\u5f55\u4e0b</p> <p>TartanLlama/expected: C++11/14/17 std::expected with functional-style extensions (github.com)</p> <p>\u4e8c\u3001\u7f16\u5199<code>Findexpected.cmake</code>\u6587\u4ef6</p> <pre><code>if(TARGET expected)\nreturn()\nendif()\nadd_library(expected INTERFACE)\ntarget_include_directories(expected INTERFACE ${CMAKE_CURRENT_LIST_DIR}/include)\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/MeshLib/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/CMake%E5%BC%95%E7%94%A8MeshLib/#_1","title":"\u4f7f\u7528","text":"<p><code>CMakeLists.txt</code>\u6587\u4ef6</p> <pre><code>cmake_minimum_required(VERSION 3.16 FATAL_ERROR)\nproject(cmake-example)\nset(CMAKE_CXX_STANDARD 20)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n# \u641c\u7d22\u76ee\u5f55\nlist(APPEND CMAKE_MODULE_PATH \"${CMAKE_SOURCE_DIR}/thirdparty/expected\")\nset(BOOST_ROOT \"D:/install/boost_1_71_0\")\nlist(APPEND CMAKE_MODULE_PATH \"${CMAKE_SOURCE_DIR}/thirdparty/meshlib\")\nfind_package(expected)\nfind_package(Boost COMPONENTS REQUIRED)\nfind_package(meshlib)\nfile(GLOB SrcFiles \"*.cpp\")\nadd_executable(${PROJECT_NAME} ${SrcFiles})\ntarget_link_libraries(${PROJECT_NAME} Boost::boost expected MeshLib)\nadd_compile_definitions(DATA_PATH=\"${CMAKE_SOURCE_DIR}/data/\")\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/MeshLib/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E7%BC%96%E8%AF%91/","title":"\u7f16\u8bd1","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/MeshLib/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/%E7%BC%96%E8%AF%91/#windows","title":"Windows","text":"<pre><code>git clone https://github.com/MeshInspector/MeshLib.git\ncd MeshLib\ngit submodule update --init --recursive\ncd ..\n</code></pre> <p>\u4f7f\u7528Vcpkg\u5b89\u88c5\u7b2c\u4e09\u65b9\u5e93</p> <pre><code># \u5b89\u88c5vcpkg\ngit clone https://github.com/Microsoft/vcpkg.git\ncd vcpkg\ngit checkout 2022.11.14  #\u627e\u52302022.11.14\u7248\u672c\n.\\bootstrap-vcpkg.bat    #\u4e0b\u8f7dvcpkg.exe\n.\\vcpkg integrate install #(with admin rights)\n#\u5c06vcpgk\u96c6\u6210\u5230\u5168\u5c40\uff0cVS\u5de5\u7a0b\u624d\u80fd\u627e\u5230\u5b83\u4eec\ncd ..\n\n# \u5b89\u88c5\u4f9d\u8d56\u5305\ncd vcpkg # or add vcpkg to PATH\n../thirdparty/install.bat\n</code></pre> <p>\u3010VS2019\u3011\u4f9d\u8d56\u5e93\u5b89\u88c5\u4e4b\u540e\uff0c\u7528VS2019\u6253\u5f00<code>MeshInspector/source/MeshLib.sln</code>\uff0c\u7f16\u8bd1\u548c\u8fd0\u884c\u5b83\u3002</p> <p>\u3010VS2022\u3011\u4e0eVS2019\u76f8\u540c\uff0c\u53ea\u9700\u5c06<code>MeshLib/source/platform.props</code>\u4e2d\u7684<code>PlatformToolset</code>\uff0c\u4ece<code>v142</code>\u6539\u4e3a<code>v143</code></p> <p>todo: \u7f16\u8bd1\u4e0d\u8fc7</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/MeshLib/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E6%8F%92%E4%BB%B6%E7%B3%BB%E7%BB%9F/","title":"\u8de8\u5e73\u53f0\u63d2\u4ef6\u7cfb\u7edf","text":"<p>\u914d\u7f6e\u63d2\u4ef6\u7684\u914d\u7f6e\u6587\u4ef6\uff1a<code>pluginLibraryList.json</code></p> <pre><code>{\n\"Windows\": [\n\"MRCommonPlugins\"\n],\n\"Linux\": [\n\"MRCommonPlugins\"\n]\n}\n</code></pre> <p>\u83b7\u5f97\u63d2\u4ef6\u5217\u8868</p> <pre><code>std::optional&lt;std::vector&lt;std::filesystem::path&gt;&gt; getPluginLibraryList()\n{\nauto resDir = GetResourcesDirectory();\nauto libsDir = GetLibsDirectory();\nauto pluginLibraryList = resDir / \"pluginLibraryList.json\";\nJson::Value pluginLibraryListJson;\nstd::error_code ec;\nif ( std::filesystem::exists( pluginLibraryList, ec ) )\n{\nauto readRes = deserializeJsonValue( pluginLibraryList );\nif ( !readRes.has_value() )\nspdlog::error( readRes.error() );\nelse\npluginLibraryListJson = readRes.value();\n#if _WIN32\nif ( pluginLibraryListJson[\"Windows\"].isArray() )\npluginLibraryListJson = pluginLibraryListJson[\"Windows\"];\n#else\nif ( pluginLibraryListJson[\"Linux\"].isArray() )\npluginLibraryListJson = pluginLibraryListJson[\"Linux\"];\n#endif\nelse\n{\nspdlog::error( \"Json has no Value for current OS!\" );\nreturn std::nullopt;\n}\n}\nelse\nspdlog::warn( \"Failed to open json config file \" + utf8string( pluginLibraryList ) + \" with \" + systemToUtf8( ec.message() ) );\nif ( pluginLibraryListJson.isArray() )\n{\nstd::vector&lt;std::filesystem::path&gt; res;\nfor ( auto&amp; v : pluginLibraryListJson )\n{\n#if _WIN32\nres.push_back( libsDir / ( v.asString() + \".dll\" ) );\n#elif defined __APPLE__\nres.push_back( libsDir / ( \"lib\" + v.asString() + \".dylib\" ) );\n#else\nres.push_back( libsDir / ( \"lib\" + v.asString() + \".so\" ) );\n#endif\n}\nreturn res;\n}\nelse\n{\nspdlog::warn( \"Json file with viewer plugin library list was not found or corrupted. Empty list returned.\" );\nreturn {};\n}\n}\n</code></pre> <p>\u52a0\u8f7d\u63d2\u4ef6</p> <pre><code>void ViewerSetup::setupExtendedLibraries() const\n{\nconst auto pluginLibraryList = getPluginLibraryList();\nif ( !pluginLibraryList )\nreturn;\nfor (const auto&amp; pluginLib : *pluginLibraryList)\n{\n#if _WIN32\nauto result = LoadLibraryW( pluginLib.wstring().c_str() );\nif ( !result )\n{\nauto error = GetLastError();\nspdlog::error( \"Load library {} error: {}\", utf8string( pluginLib ), error );\nassert( false );\n}\n#else\nvoid* result = dlopen( utf8string( pluginLib ).c_str(), RTLD_LAZY );\nif ( !result )\n{\nauto error = dlerror();\nspdlog::error( \"Load library {} error: {}\", utf8string( pluginLib ), error );\nassert( false );\n}\n#endif\n}\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/MeshLib/%E7%A4%BA%E4%BE%8B/MRMesh%E7%9A%84IO%E7%A4%BA%E4%BE%8B/","title":"MRMesh\u7684IO\u793a\u4f8b","text":"<pre><code>#include&lt;iostream&gt;\n#include \"MRMesh/MRMesh.h\"\n#include \"MRMesh/MRMeshLoad.h\"\n#include \"MRMesh/MRMeshSave.h\"\n#include \"MRMesh/MRMeshDecimate.h\"\nstruct MyTriMesh\n{\nstruct Point\n{\ndouble x, y, z;\n};\nusing PointSet = std::vector&lt;Point&gt;;\nusing TriangleIndices = std::array&lt;int, 3&gt;;\nusing PrimitiveSet = std::vector&lt;TriangleIndices&gt;;\nPointSet        points;\nPrimitiveSet    faces;\nstatic MyTriMesh createTetrahedron(double r = 10)\n{\nMyTriMesh mesh\n{\n.points =\n{\n{0.0, 0.0, r},\n{0, -r, -r / 2},\n{sqrt(3) * r / 2, r / 2, -r / 2},\n{-sqrt(3) * r / 2, r / 2, -r / 2}\n},\n.faces = {\n{0, 1, 2},\n{0, 1, 3},\n{0, 2, 3},\n{1, 2, 3}\n}\n};\nreturn mesh;\n}\n//[reference] MRMeshLoadObj.cpp fromSceneObjFile\nMR::Mesh toMRMesh() const\n{\nstd::vector&lt;MR::Vector3f&gt; mr_points;\nMR::Triangulation mr_tris;\nfor (const auto&amp; p : points)\n{\nmr_points.emplace_back(MR::Vector3f(p.x, p.y, p.z));\n}\nfor (const auto&amp; face : faces)\n{\nMR::ThreeVertIds mr_tri{\nMR::VertId(face[0]),\nMR::VertId(face[1]),\nMR::VertId(face[2])\n};\nmr_tris.emplace_back(mr_tri);\n}\nreturn MR::Mesh::fromTrianglesDuplicatingNonManifoldVertices(\nMR::VertCoords(mr_points.begin(), mr_points.end()), mr_tris);\n}\n};\n//\u904d\u5386MR::Mesh\u7684\u5185\u5bb9\n// [reference] MRMeshSaveObj.cpp toObj\nvoid print(const MR::Mesh&amp; mesh)\n{\nMR::VertId lastValidPoint = mesh.topology.lastValidVert();\nstd::cout &lt;&lt; \"# points:\" &lt;&lt; std::endl;\nfor (MR::VertId i{ 0 }; i &lt;= lastValidPoint; ++i)\n{\nauto p = mesh.points[i];\nstd::cout &lt;&lt; \"v \" &lt;&lt; p.x &lt;&lt; \" \" &lt;&lt; p.y &lt;&lt; \" \" &lt;&lt; p.z &lt;&lt; std::endl;\n}\nstd::cout &lt;&lt; \"# faces:\" &lt;&lt; std::endl;\nconst float facesNum = float(mesh.topology.edgePerFace().size());\nsize_t faceIndex = 0;\nfor (const auto&amp; e : mesh.topology.edgePerFace())\n{\n++faceIndex;\nif (!e.valid())\n{\ncontinue;\n}\n// \u4e09\u4e2a\u9876\u70b9\u7684\u7d22\u5f15\uff0c\u4ece0\u5f00\u59cb\nMR::VertId a, b, c;\nmesh.topology.getLeftTriVerts(e, a, b, c);\nassert(a.valid() &amp;&amp; b.valid() &amp;&amp; c.valid());\n//\u8f93\u51fa\u6210Obj\u7d22\u5f15\uff0c\u68c0\u67e5\u662f\u5426\u6b63\u786e\n// Obj\u7d22\u5f15\u4ece1\u5f00\u59cb\nstd::cout &lt;&lt; \"f \" &lt;&lt; a + 1 &lt;&lt; ' ' &lt;&lt; b + 1 &lt;&lt; ' ' &lt;&lt; c + 1 &lt;&lt; '\\n';\n}\n}\nint main()\n{\nstd::string mrmesh_out_file = DATA_PATH \"myMesh_to_mrMesh.obj\";\nauto myMesh = MyTriMesh::createTetrahedron();\nauto mesh = myMesh.toMRMesh();\nMR::MeshSave::toAnySupportedFormat(mesh, mrmesh_out_file);\nprint(mesh);\nreturn 0;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/MeshLib/%E7%A4%BA%E4%BE%8B/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96/","title":"\u7f51\u683c\u7b80\u5316","text":"<pre><code>#include &lt;iostream&gt;\n#include \"MRMesh/MRMesh.h\"\n#include \"MRMesh/MRMeshLoad.h\"\n#include \"MRMesh/MRMeshSave.h\"\n#include \"MRMesh/MRMeshDecimate.h\"\nint main()\n{\nstd::string in_file = DATA_PATH \"in.obj\";\nstd::string out_file = DATA_PATH \"out.obj\";\ndouble face_ratio = 0.9; //\u7b80\u5316\u6bd4\u7387\n// load mesh\nMR::Mesh mesh = MR::MeshLoad::fromAnySupportedFormat(in_file).value();\nstd::cout &lt;&lt; \"faces size:\" &lt;&lt; mesh.topology.faceSize() &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"vertex size:\" &lt;&lt; mesh.points.size() &lt;&lt; std::endl;\nauto faceSize = mesh.topology.faceSize();\nMR::DecimateSettings settings;\nsettings.maxError = FLT_MAX;\nsettings.maxDeletedFaces = faceSize * face_ratio;\nauto result = MR::decimateMesh(mesh, settings);\nstd::cout &lt;&lt; \"faces deleted: \" &lt;&lt; result.facesDeleted &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"vertex deleted: \" &lt;&lt; result.vertsDeleted &lt;&lt; std::endl;\n// Save\nMR::MeshSave::toAnySupportedFormat(mesh, out_file);\nreturn 0;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%AE%80%E5%8D%95%E5%87%A0%E4%BD%95%E4%BD%93/%E6%AD%A3%E5%9B%9B%E9%9D%A2%E4%BD%93/","title":"\u6b63\u56db\u9762\u4f53","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%AE%80%E5%8D%95%E5%87%A0%E4%BD%95%E4%BD%93/%E6%AD%A3%E5%9B%9B%E9%9D%A2%E4%BD%93/#_1","title":"\u7ed8\u5236","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E5%87%A0%E4%BD%95%E6%A6%82%E8%BF%B0/%E7%AE%80%E5%8D%95%E5%87%A0%E4%BD%95%E4%BD%93/%E6%AD%A3%E5%9B%9B%E9%9D%A2%E4%BD%93/#_2","title":"\u7ebf\u6846","text":"<pre><code>struct MyTriMesh\n{\nstruct Point\n{\ndouble x, y, z;\n};\nusing PointSet = std::vector&lt;Point&gt;;\nusing TriangleIndices = std::array&lt;int, 3&gt;;\nusing PrimitiveSet = std::vector&lt;TriangleIndices&gt;;\nPointSet        points;\nPrimitiveSet    faces;\nstatic MyTriMesh createTetrahedron(double r = 10)\n{\nMyTriMesh mesh\n{\n.points =\n{\n{0.0, 0.0, r},\n{0, -r, -r / 2},\n{sqrt(3) * r / 2, r / 2, -r / 2},\n{-sqrt(3) * r / 2, r / 2, -r / 2}\n},\n.faces = {\n{0, 1, 2},\n{0, 1, 3},\n{0, 2, 3},\n{1, 2, 3}\n}\n};\nreturn mesh;\n}\n};\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%89%B9%E6%95%88/EDL%E7%82%B9%E4%BA%91%E8%BE%B9%E7%95%8C%E5%A2%9E%E5%BC%BA/","title":"EDL\u70b9\u4e91\u8fb9\u754c\u589e\u5f3a","text":"<p>EDL\uff0c\u5168\u79f0Eye-Dome Lighting\uff0c\u6709\u6587\u7ae0\u8bd1\u4e3a\u201c\u9e70\u773c\u7a79\u9876\u5e03\u5149\u201d\u3002EDL\u662f\u4e00\u79cd\u540e\u5904\u7406\u6280\u672f\uff0c\u5b83\u57fa\u4e8e\u6df1\u5ea6\u56fe\u4e2d\u7684\u6df1\u5ea6\u4fe1\u606f\uff0c\u5bf9\u5e27\u56fe\u50cf\u4e2d\u67d0\u4e9b\u8fb9\u7f18\u505a\u4e00\u4e2a\u589e\u5f3a\uff08\u7c7b\u4f3c\u4e8e\u5f04\u4e00\u4e2a\u9ed1\u8fb9\uff09\uff0c\u5e38\u7528\u4e8e\u70b9\u4e91\u6570\u636e\u5f53\u4e2d\u3002</p> <p> </p> <p>\u7b80\u800c\u8a00\u4e4b\uff0cEDL\u5bf9\u5e27\u56fe\u50cf\u6bcf\u4e2a\u50cf\u7d20\u505a\u4e86\u4e00\u4e2a\u52a0\u6743\u5904\u7406</p> <ol> <li>\u6743\u91cd\u53d6\u51b3\u4e8e\u50cf\u7d20\u5468\u8fb9\u7684\u6df1\u5ea6\u503c\uff0c\u5982\u679c\u4e0e\u5468\u8fb9\u6df1\u5ea6\u76f8\u5dee\u8d8a\u5927\uff0c\u5219\u6743\u91cd\u8d8a\u5c0f\u3002</li> <li>result = \u6743\u91cd * \u50cf\u7d20\u503c\u3002\u56e0\u6b64\uff0c\u6743\u91cd\u8d8a\u5c0f\uff0c\u50cf\u7d20\u503c\u5c31\u8d8a\u5c0f\u3002\u50cf\u7d20\u503c\u8d8a\u5c0f\uff0c\u5c31\u8d8a\u9ed1\u3002</li> <li>\u56e0\u6b64\uff0c\u6df1\u5ea6\u53d8\u5316\u5927\u7684\u5730\u65b9\u5c31\u4f1a\u4ea7\u751f\u201c\u63cf\u8fb9\u201d\u3002</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%89%B9%E6%95%88/EDL%E7%82%B9%E4%BA%91%E8%BE%B9%E7%95%8C%E5%A2%9E%E5%BC%BA/#edl","title":"EDL\u7b97\u6cd5\u6d41\u7a0b","text":"<p>EDL\u7b97\u6cd5\u5171\u6709\u4e09\u4e2a\u5de5\u5e8f</p> <ol> <li>\u7b97\u6cd5\u8f93\u5165\u5373\u662f\u5e27\u56fe\u50cf\u3001\u6df1\u5ea6\u56fe\uff0c\u4ee5\u53ca\u5e27\u56fe\u50cf\u7684\u957f\u5bbd</li> <li>\u7b2c\u4e00\u4e2a\u5de5\u5e8f\u662fshade\uff0c\u662fEDL\u7684\u5173\u952e\u6b65\u9aa4\u3002\u5b83\u4f1a\u6839\u636e\u90bb\u8fd1\u50cf\u7d20\u7684\u6df1\u5ea6\u89e3\u7b97\u6743\u91cd\uff0c\u5e76\u8fdb\u884c\u52a0\u6743\u5904\u7406\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u6b65\u9aa4\u4f1a\u505a\u4e09\u6b21shade\uff0c\u6bcf\u6b21\u7684\u5206\u8fa8\u7387\u4e0d\u540c\u3002</li> <li>\u7b2c\u4e8c\u4e2a\u5de5\u5e8f\u662fbilateral\uff0c\u5206\u522b\u5bf9\u4e09\u4e2ashade\u7ed3\u679c\u505a\u4e00\u6b21\u5e73\u6ed1</li> <li>\u7b2c\u4e09\u4e2a\u5de5\u5e8f\u662fmix\uff0c\u5c06\u4e09\u79cd\u5206\u8fa8\u7387\u7684\u7ed3\u679c\u8fdb\u884c\u6df7\u5408\uff0c\u83b7\u5f97EDL\u7684\u6700\u7ec8\u7ed3\u679c</li> </ol> <p>\u6ce8\uff1abilateral\u5de5\u5e8f\u4e5f\u53ef\u7701\u7565\uff0c\u76f4\u63a5\u5c06shade\u7684\u7ed3\u679c\u8fdb\u884cmix\u4e5f\u884c\u3002</p> <p></p> <p>\u4e8b\u5b9e\u4e0a\uff0cEDL\u5373\u662f\u628a\u6bcf\u4e00\u5e27\u7684\u6e32\u67d3\u7ed3\u679c\uff08\u5e27\u56fe\u50cf\u4e0e\u6df1\u5ea6\u56fe\uff09\u505a \u56fe\u50cf\u5904\u7406 \uff0c\u5bf9\u201c\u6df1\u5ea6\u5dee\u5f02\u5927\u7684\u5730\u65b9\u201d\u8fdb\u884c\u63cf\u8fb9\u3002</p> <ol> <li>\u56e0\u6b64EDL\u53ef\u4ee5\u5728CPU\u4e0a\u505a\uff0c\u66b4\u529b\u904d\u5386\u6bcf\u4e2a\u50cf\u7d20\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u518d\u5c06\u7ed3\u679c\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\uff0c\u4f46\u5f88\u8017\u65f6</li> <li>\u5927\u5bb6\u4e00\u822c\u90fd\u5728GPU\u4e0a\u505a\u3002\u76f4\u63a5\u7ed8\u5236\u4e00\u4e2a\u4e0e\u6e32\u67d3\u7ed3\u679c\u957f\u5bbd\u76f8\u540c\u7684\u957f\u65b9\u5f62\uff08\u4e24\u4e2a\u4e09\u89d2\u5f62\uff09\uff0c\u7136\u540e\u5c06\u5e27\u56fe\u50cf\u5f53\u6210\u7eb9\u7406\uff0c\u8d34\u5728\u957f\u65b9\u5f62\u4e0a\uff1b\u7136\u540e\u5c06EDL\u7b97\u6cd5\u5199\u5728\u7740\u8272\u5668\u4e0a\uff1b\u6e32\u67d3\u51fa\u4e00\u5e27\uff0c\u5373\u662fEDL\u7279\u6548\u7684\u7ed3\u679c\u3002</li> </ol> <p>\u63a5\u4e0b\u6765\u5c06\u4ecb\u7ecd\u57fa\u4e8e\u7740\u8272\u5668\u5b9e\u73b0EDL\u7684\u65b9\u6848\u3002\u4ee5\u4e0b\u7740\u8272\u5668\u90fd\u6458\u81eaCloudCompare\u8f6f\u4ef6\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%89%B9%E6%95%88/EDL%E7%82%B9%E4%BA%91%E8%BE%B9%E7%95%8C%E5%A2%9E%E5%BC%BA/#mesh","title":"Mesh","text":"<p>\u6784\u5efa\u4e0e\u6e32\u67d3\u7ed3\u679c\u957f\u5bbd\u76f8\u540c\u7684\u957f\u65b9\u5f62\uff0c\u5e76\u901a\u8fc7UV\u5750\u6807\u5c06\u8f93\u5165\u56fe\u50cf\u6620\u5c04\u4e0a\u53bb\u3002 <pre><code>//\u7269\u4f53\u7684\u5bbd\u9ad8\u4e0e\u6e32\u67d3\u7ed3\u679c\u7684\u76f8\u540c\nauto result_resolution = resultResolution();\nint _width = result_resolution.width();\nint _height = result_resolution.height();\nVec3f vertices[4] =\n{\nVec3f(0, 0, 0),\nVec3f(_width, 0, 0),\nVec3f(_width, _height, 0),\nVec3f(0, _height, 0)\n};\nVec2f texcoords[4] =\n{\nVec2f(0.0f, 0.0f),\nVec2f(1.0f, 0.0f),\nVec2f(1.0f, 1.0f),\nVec2f(0.0f, 1.0f)\n};\nint indices[] = {\n0, 1, 2,\n0, 2, 3\n};\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%89%B9%E6%95%88/EDL%E7%82%B9%E4%BA%91%E8%BE%B9%E7%95%8C%E5%A2%9E%E5%BC%BA/#mvp","title":"MVP\u77e9\u9635","text":"<p>\u6784\u5efa\u4e00\u4e2a\u6b63\u4ea4\u6295\u5f71\uff0c\u6b63\u5bf9\u7740Mesh\u5373\u53ef\u3002</p> <ol> <li>ModelView\u4e3a\u5355\u4f4d\u77e9\u9635\u5373\u53ef</li> <li>\u6295\u5f71\u77e9\u9635\u4e3a\u6b63\u4ea4\u6295\u5f71\uff0c\u53c2\u6570\u5982\u4e0b\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7684\u957f\u5bbd\u662f\u5c4f\u5e55\u7684\u957f\u5bbd\uff08\u5373\u4e00\u5f00\u59cb\u8f93\u5165\u7684\u201c\u5e27\u56fe\u50cf\u201d\u7684\u957f\u5bbd\uff09</li> </ol> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cOpenGL\u4e0eVulkan\u7684NDC\u5750\u6807\u7cfb\u4e0d\u540c\uff0cY\u8f74\u76f8\u53cd\u3002</p> <p></p> <p>\u56e0\u6b64\u5728\u8bbe\u7f6e\u6295\u5f71\u77e9\u9635\u65f6\u8981\u6ce8\u610ftop\u4e0ebottom\u7684\u8bbe\u7f6e\uff0c\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>//\u5c4f\u5e55\u7684\u957f\u5bbd\nauto width = static_cast&lt;double&gt;(sceneResolution().width());\nauto height = static_cast&lt;double&gt;(sceneResolution().height());\nif (isVulkanRenderer()) //vulkan\n{\northo = {\n0.0,    //left\nwidth,  //right\nheight, //bottom\n0.0,    //top\n-1.0,   //near\n1.0     //far\n};\n}\nelse //opengl\n{\northo = {\n0.0,    //left\nwidth,  //right\n0.0,    //bottom\nheight, //top\n-1.0,   //near\n1.0     //far\n};\n}\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%89%B9%E6%95%88/EDL%E7%82%B9%E4%BA%91%E8%BE%B9%E7%95%8C%E5%A2%9E%E5%BC%BA/#_1","title":"\u9876\u70b9\u7740\u8272\u5668","text":"<p>\u4e09\u4e2a\u5de5\u5e8f\u7684\u9876\u70b9\u7740\u8272\u5668\u76f8\u540c\uff0c\u800c\u4e14\u90fd\u5f88\u7b80\u5355\uff08<code>edl_shade.vert</code>\u3001<code>bilateral.vert</code>\u3001<code>edl_mix.vert</code>\uff09\uff0c\u5e76\u6ca1\u6709\u505a\u7279\u6b8a\u5904\u7406\u3002</p> <ol> <li>\u8ba1\u7b97\u6b64\u9876\u70b9\u7684uv</li> <li>\u8ba1\u7b97\u6b64\u9876\u70b9\u7684\u76f8\u673a\u5750\u6807</li> </ol> <pre><code>void    main ()\n{\ngl_TexCoord[0]    =   gl_MultiTexCoord0;  gl_Position     = ftransform ();\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%89%B9%E6%95%88/EDL%E7%82%B9%E4%BA%91%E8%BE%B9%E7%95%8C%E5%A2%9E%E5%BC%BA/#shadefrag","title":"shade.frag","text":"<p>shade\u5de5\u5e8f\u7684\u7247\u5143\u7740\u8272\u5668\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>//#extension GL_ARB_draw_buffers : enable\n//#version 110\n/**************************************************/\nuniform sampler2D   s1_color;   //\u5e27\u56fe\u50cf\nuniform sampler2D   s2_depth;   //\u5e27\u56fe\u50cf\u5bf9\u5e94\u7684\u6df1\u5ea6\u56fe\n/*\u56fe\u50cf\u7684\u7f29\u653e\u56e0\u5b50\n    1\u4e0d\u7f29\u653e\uff1b\n    2\u539f\u6765\u50cf\u7d20\u7684\u4e00\u534a\uff1b\n    4\u539f\u6765\u50cf\u7d20\u7684\u4e00\u534a\u7684\u4e00\u534a\n */\nuniform float       Pix_scale;                  // (relative) pixel scale in image\n//\u516b\u9886\u57df\u7684\u65b9\u5411\u5411\u91cf\nuniform vec2        Neigh_pos_2D[8];        // array of neighbors (2D positions)\n//\u989c\u8272\u52a0\u6df1\u7684\u56e0\u5b50\nuniform float       Exp_scale;                  // exponential scale factor (for computed AO)\n//\u6df1\u5ea6\u56fe\u7684\u6700\u5c0f\u503c\u3001\u6700\u5927\u503c\uff08PerspectiveMode=1\u65f6\uff0c\u624d\u4f1a\u4f7f\u7528\uff09\nuniform float       Zm;                     // minimal depth in image\nuniform float       ZM;                     // maximal depth in image\n//\u5c4f\u5e55\u7684\u9ad8\u5bbd\uff0c\u5373\u5e27\u56fe\u50cf\u7684\u9ad8\u5bbd\nuniform float       Sx;                     // screen width (pix)\nuniform float       Sy;                     // screen height (pix)\n//\u8ba1\u7b97\u90bb\u57df\u65f6\u7684\u641c\u7d22\u8ddd\u79bb\uff08\u50cf\u7d20\u5355\u4f4d\uff09\nuniform float       Dist_to_neighbor_pix;   // distance to neighbors (in pixel)\n//\u900f\u5c04\u6295\u5f71\uff1a\u5f00\u542f\u4e3a1\uff1b\u672a\u5f00\u542f\u4e3a0\uff08\u5f00\u542f\u7684\u8bdd\uff0c\u4f1a\u6839\u636eZm\u4e0eZM\u52a0\u5de5\u6df1\u5ea6\uff09\nuniform int         PerspectiveMode;        // whether perspective mode is enabled (1) or not (0) - for z-Buffer compensation\n//\u5149\u7ebf\u65b9\u5411\nuniform vec3        Light_dir;\n/**************************************************/\n//\u4fee\u6b63\u6df1\u5ea6\nfloat fixDepth(float depth)\n{\nif (PerspectiveMode == 1) {\n//\u5982\u679c\u662f\u900f\u89c6\uff0c\u5219\u4f1a\u6839\u636e\u6df1\u5ea6\u503c\u7684\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u52a0\u5de5\u6df1\u5ea6\n//\u7b80\u5355\u7406\u89e3\uff0c\u5c31\u662f\u5c06\u6df1\u5ea6\u5728\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u8303\u56f4\u5185\u505a\u4e86\u4e00\u4e2a\u5f52\u4e00\u5316\n//'1/z' depth-buffer transformation correction\nfloat z_n = 2.0 * depth - 1.0;\ndepth = (2.0 * ZM * Zm) / ((ZM + Zm) - z_n * (ZM - Zm));\n//eventually we want the depth to fall between 0 and 1\ndepth = depth / (ZM - Zm);\n}\n//\u6df1\u5ea6\u8d8a\u5927 =&gt; \u79bbcarmea\u8d8a\u8fdc\u3002\u56e0\u6b64\u8fd9\u91cc\u505a\u4e86\u4e00\u4e2a\u53d6\u53cd\uff0c\u5373\u79bbcarmea\u8d8a\u8fd1\uff0cdepth\u8d8a\u5927\nreturn clamp(1.0 - depth, 0.0, 1.0);\n}\n//\u8ba1\u7b97\u906e\u6321\uff08Obscurance\uff09\n//\u7ed3\u5408\u5468\u8fb9\u90bb\u57df\uff0c\u8ba1\u7b97\u4e00\u4e2a\u6743\u91cd\nfloat computeObscurance(float depth, float scale)\n{\n// light-plane point\nvec4 P = vec4( Light_dir.xyz , -dot(Light_dir.xyz,vec3(0.0, 0.0, depth)) );\nfloat sum = 0.0;\n//\u8ba1\u7b978\u90bb\u57df\n// contribution of each neighbor\nfor(int c = 0; c &lt; 8; c++)\n{\n//\u90bb\u57df\u7684\u76f8\u5bf9\u5750\u6807\nvec2 N_rel_pos = scale * Dist_to_neighbor_pix / vec2(Sx, Sy) * Neigh_pos_2D[c]; //neighbor relative position\n//\u90bb\u57df\u7684\u7edd\u5bf9\u5750\u6807\nvec2 N_abs_pos = gl_TexCoord[0].st + N_rel_pos;                 //neighbor absolute position\n// version with background shading\nfloat Zn = fixDepth(texture2D(s2_depth, N_abs_pos).r);          //depth of the real neighbor\nfloat Znp = dot(vec4(N_rel_pos, Zn, 1.0), P);                   //depth of the in-plane neighbor\n// obscurance (pseudo angle version)\nsum +=  max(0.0, Znp) / scale;\n}\nreturn  sum;\n}\nvoid main (void)\n{\n// ambient occlusion\nvec3 rgb = texture2D(s1_color, gl_TexCoord[0].st).rgb;                      //\u539f\u59cb\u989c\u8272\nfloat depth = fixDepth(texture2D(s2_depth, gl_TexCoord[0].st).r);   //\u4fee\u6b63\u6df1\u5ea6\nif (depth &gt; 0.001)\n{\n//\u7ed3\u5408\u5468\u8fb9\u90bb\u57df\u7684\u6df1\u5ea6\uff0c\u8ba1\u7b97\u51faf\uff0cf\u8d8a\u5927\uff0c\u8868\u793a\u6df1\u5ea6\u53d8\u5316\u8d8a\u5927\nfloat f = computeObscurance(depth, Pix_scale);\n//\u5bf9f\u8fdb\u884c\u52a0\u5de5\uff08\u505a\u4e86\u4e00\u4e2a\u5012\u6570\uff09 =&gt; f\u8d8a\u5c0f\uff0c\u6743\u91cd\u8d8a\u5c0f\nf = exp(-Exp_scale*f);\ngl_FragData[0] = vec4(f*rgb, 1.0);  //depth&gt;0.001\uff0c\u5219\u7528\u6743\u91cdf\u76f8\u4e58\n}\nelse\n{\ngl_FragData[0] = vec4(rgb, 1.0);    //depth&lt;=0.001,\u5219\u7528\u539f\u6765\u7684\u989c\u8272\n}\n}\n</code></pre> <p>\u6ce8\uff1a<code>clamp(v, left, right);</code></p> <ol> <li>\u82e5v&lt;left\uff0c\u5219\u8fd4\u56deleft</li> <li>\u82e5v&gt;right\uff0c\u5219\u8fd4\u56deright</li> <li>\u5426\u5219\uff0c\u8fd4\u56dev</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%89%B9%E6%95%88/EDL%E7%82%B9%E4%BA%91%E8%BE%B9%E7%95%8C%E5%A2%9E%E5%BC%BA/#bilateralfrag","title":"bilateral.frag","text":"<p>bilateral\u5de5\u5e8f\u7684\u7740\u8272\u5668\u5982\u4e0b\u6240\u793a <pre><code>//#extension GL_ARB_draw_buffers : enable\n/****************************************************/\nuniform sampler2D   s2_I;   //shade\u5de5\u5e8f\u7684\u7ed3\u679c\nuniform sampler2D   s2_D;   //\u6df1\u5ea6\u56fe\n//\u5c4f\u5e55\u7684\u5bbd\u9ad8\n//\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u4e0d\u662fs2_I\u7684\u5bbd\u9ad8\u3002\u800c\u662fshade\u8f93\u5165\u5e27\u56fe\u50cf\u7684\u5bbd\u9ad8\uff0c\u5373\u5c4f\u5e55\u7684\u5bbd\u9ad8\nuniform float       SX; uniform float       SY;\nuniform int       NHalf;                        //  half filter size (&lt;= 7!)\nuniform float       DistCoefs[64];      //  pixel distance based damping coefs (max = 8*8).\nuniform float       SigmaDepth;             //  pixel depth distribution variance\n/****************************************************/\nvoid main (void)\n{\nfloat   z       = texture2D(s2_D,gl_TexCoord[0].st).r;\nfloat   wsum    =   0.0;                // sum of all weights\nvec3    csum    =   vec3(0.0);          // sum of all contributions\nvec2    coordi  =   vec2(0.0,0.0);      // ith neighbor position\nfor(int c=-NHalf; c&lt;=NHalf; c++)\n{\n//neighbor position (X)\ncoordi.x = float(c)/SX;\nint cabs;\nif (c &lt; 0)\ncabs = -c;\nelse\ncabs = c;\nfor(int d=-NHalf; d&lt;=NHalf; d++)\n{\n//neighbor position (Y)\ncoordi.y    = float(d)/SY;\n//neighbor color\nvec3 ci =   texture2D(s2_I,gl_TexCoord[0].st+coordi).rgb;\n//pixel distance based damping\nint dabs;\nif (d &lt; 0)\ndabs = -d;\nelse\ndabs = d;\nfloat fi    =   DistCoefs[cabs*(NHalf+1)+dabs];\n//pixel depth difference based damping\nif (SigmaDepth &gt; 0.0)\n{\n//neighbor depth\nfloat zi    =   texture2D(s2_D,gl_TexCoord[0].st+coordi).r;\nfloat dz    =   (z-zi)/SigmaDepth;\nfi          *=  exp(-dz*dz/2.0);\n}\ncsum    +=  ci * fi;\nwsum    +=  fi;\n}\n}\n//output\ngl_FragColor = vec4(csum/wsum,1.0);\n}\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%89%B9%E6%95%88/EDL%E7%82%B9%E4%BA%91%E8%BE%B9%E7%95%8C%E5%A2%9E%E5%BC%BA/#edl_mixfrag","title":"edl_mix.frag","text":"<p>mix\u5de5\u5e8f\u7684\u7740\u8272\u5668\u5982\u4e0b <pre><code>//#extension GL_ARB_draw_buffers : enable\n/**************************************************/\n//W*H\u5206\u8fa8\u7387\u7684EDL\u7ed3\u679c\uff08\u53ef\u4ee5\u662fshade\u7ed3\u679c\uff0c\u4e5f\u53ef\u4ee5\u662fbilateral\u7684\u7ed3\u679c\uff09\nuniform sampler2D   s2_I1;  //  X1 scale\n//W/2 * H/2\u5206\u8fa8\u7387\u7684EDL\u7ed3\u679c\nuniform sampler2D   s2_I2;  //  X2 scale\n//W/4 * H/4\u5206\u8fa8\u7387\u7684ELD\u7ed3\u679c\nuniform sampler2D   s2_I4;  //  X4 scale\n//\u6df1\u5ea6\u56fe\nuniform sampler2D   s2_D;       // initial depth texture\n//\u6df7\u5408\u56e0\u5b50\nuniform float       A0;\nuniform float       A1;\nuniform float       A2;\n/**************************************************/\nvoid main (void)\n{\nfloat d = texture2D(s2_D,gl_TexCoord[0].st).r;\nif( d &gt; 0.999)\n{\ngl_FragData[0].rgb = texture2D(s2_I1,gl_TexCoord[0].st).rgb;\ngl_FragData[0].a = 1.;\nreturn;\n}\n//color version\nvec3 C1 = texture2D(s2_I1,gl_TexCoord[0].st).rgb;\nvec3 C2 = texture2D(s2_I2,gl_TexCoord[0].st).rgb;\nvec3 C4 = texture2D(s2_I4,gl_TexCoord[0].st).rgb;\nvec3 C = (A0*C1 + A1*C2 + A2*C4) / (A0+A1+A2);\ngl_FragData[0] = vec4(C.x,C.y,C.z,1.);\n}\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%89%B9%E6%95%88/EDL%E7%82%B9%E4%BA%91%E8%BE%B9%E7%95%8C%E5%A2%9E%E5%BC%BA/#_2","title":"\u6e32\u67d3\u6d41\u7a0b","text":"<p>\u5728\u6e32\u67d3\u6d41\u7a0b\u4e2d\uff0c\u9700\u8981\u907f\u514dEDL\u5904\u7406\u5230\u5149\u6807\u3001\u5e27\u7387\u3001\u6587\u5b57\u6807\u7b7e\uff08\u6587\u5b57\u6807\u7b7e\u603b\u662f\u6b63\u5bf9\u7740\u6444\u50cf\u673a\uff09\u7b49\u5185\u5bb9\u3002\u4e0b\u56fe\u4e2d\uff0c\u6587\u5b57\u6807\u7b7e\u4e5f\u53c2\u4e0e\u4e86EDL\u7279\u6548\uff0c\u8fd9\u663e\u7136\u4e0d\u662f\u4ea7\u54c1\u8981\u7684\u6548\u679c\u3002</p> <p></p> <p>\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728SmartGIS\u81ea\u4e3b\u6e32\u67d3\u5f15\u64ce\u4e2d\uff0c\u5bf9\u4e8e\u573a\u666f\u6570\u636e\u3001\u5149\u6807\u3001\u5e27\u7387\u3001\u6587\u5b57\u6807\u7b7e\u7b49\u5185\u5bb9\u5206\u5f00\u7ba1\u7406\uff0c\u800cEDL\u53ea\u5904\u7406\u573a\u666f\u6570\u636e\uff0c\u4e0d\u5904\u7406\u6587\u5b57\u6807\u7b7e\u7b49\u5176\u4ed6\u5185\u5bb9\u3002</p> <p></p> <p>\u6211\u4eec\u5728Vulkan\u4e2d\u9047\u5230\u4e86\u4e0d\u540c\u7740\u8272\u5668\u4e4b\u95f4uniform buffer\u91cd\u53e0\u7684\u95ee\u9898\uff08OpenGL\u6ca1\u6709\uff09\uff1aEDL Mix\u7684uniform\u4e0e\u53e6\u4e00\u4e2a\u7740\u8272\u5668\u7684uniform\u6709\u91cd\u53e0\u3002\u7ecf\u67e5\u8bc1\uff0c\u4e24\u4e2auniform\u7684\u5730\u5740\u90fd\u4e0d\u540c\uff0c\u4f46\u5374\u4f1a\u88ab\u538b\u76d6\uff0c\u8fd9\u5f88\u5947\u602a\u3002\u6211\u4eec\u672a\u80fd\u627e\u5230\u539f\u56e0\uff0c\u6700\u7ec8\u6211\u4eec\u4f18\u5316\u6e32\u67d3\u6d41\u7a0b\uff0c\u4ece\u800c\u907f\u514d\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u4e3a\u907f\u514d\u4e0d\u540c\u7740\u8272\u5668\u4e4b\u95f4uniform buffer\u7684\u91cd\u53e0\uff0c\u5efa\u8bae\u6e32\u67d3\u6d41\u7a0b\u5982\u4e0b\u3002\u5b9e\u9645\u4e0a\u5c31\u662f\u5206\u4e24\u5e27\u6e32\u67d3\uff0c\u8fd9\u6837\u4e24\u4e2auniform buffer\u5c31\u4e0d\u4f1a\u6709\u51b2\u7a81</p> <ol> <li>\u7b2c\u4e00\u5e27\u6e32\u67d3EDL\u7684\u7ed3\u679c</li> <li>\u62e6\u622a\u573a\u666f\u6570\u636e\u7684\u6e32\u67d3\u7ed3\u679c</li> <li>\u5bf9\u573a\u666f\u6570\u636e\u7684\u6e32\u67d3\u7ed3\u679c\u8fdb\u884cEDL\u5904\u7406</li> <li>\u7b2c\u4e8c\u5e27\u52a0\u4e0a\u9f20\u6807\u3001\u6587\u5b57\u6807\u7b7e\u7b49\u5185\u5bb9</li> <li>\u5c06EDL\u7684\u7ed3\u679c\u76f4\u63a5\u7ed8\u5236\u5728\u5c4f\u5e55\u4e0a</li> <li>\u6e32\u67d3\u9f20\u6807\u3001\u6587\u5b57\u6807\u7b7e\u7b49\u5185\u5bb9</li> </ol> <p>PS\uff1a\u5728vulkan\u4e2d\uff0c\u5c06\u547d\u4ee4\u961f\u5217<code>submit</code>\uff0c\u5373\u6807\u5fd7\u6e32\u67d3\u4e00\u5e27\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%89%B9%E6%95%88/EDL%E7%82%B9%E4%BA%91%E8%BE%B9%E7%95%8C%E5%A2%9E%E5%BC%BA/#_3","title":"\u6548\u679c","text":"<p>\u6574\u4f53\u6d41\u7a0b\u56de\u987e\uff1a</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%89%B9%E6%95%88/EDL%E7%82%B9%E4%BA%91%E8%BE%B9%E7%95%8C%E5%A2%9E%E5%BC%BA/#_4","title":"\u8f93\u5165","text":"<p>\u6df1\u5ea6\u56fe\uff1a\u6df1\u5ea6\u653e\u5728R\u901a\u9053\uff0cGB\u901a\u9053\u4e3a0\u3002\u56e0\u6b64\uff0c\u79bb\u6444\u50cf\u673a\u8d8a\u8fdc =&gt; \u6df1\u5ea6\u8d8a\u5927 =&gt; \u8d8a\u7ea2</p> <ul> <li> <p>\u5e27\u56fe\u50cf </p> </li> <li> <p>\u6df1\u5ea6\u56fe </p> </li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%89%B9%E6%95%88/EDL%E7%82%B9%E4%BA%91%E8%BE%B9%E7%95%8C%E5%A2%9E%E5%BC%BA/#shadebilateral","title":"shade\u4e0ebilateral","text":"<ul> <li> <p>shade1(W*H) </p> </li> <li> <p>bilateral1(W*H)  </p> </li> <li> <p>shade2(W/2 * H/2) </p> </li> <li> <p>bilateral1(W/2*H/2)  </p> </li> <li> <p>shade3(W/4 * H/4)  </p> </li> <li> <p>bilateral1(W/4*H/4) </p> </li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%89%B9%E6%95%88/EDL%E7%82%B9%E4%BA%91%E8%BE%B9%E7%95%8C%E5%A2%9E%E5%BC%BA/#mix","title":"\u8f93\u51fa\uff08mix\uff09","text":"<ul> <li> <p>\u8f93\u5165\uff08\u5e27\u56fe\u50cf\uff09 </p> </li> <li> <p>mix(W*H)  </p> </li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%89%B9%E6%95%88/EDL%E7%82%B9%E4%BA%91%E8%BE%B9%E7%95%8C%E5%A2%9E%E5%BC%BA/#_5","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u7a20\u5bc6\u7684\u65e0\u4eba\u673a\u6fc0\u5149\u96f7\u8fbe\u70b9\u4e91\u6570\u636e\u5904\u7406\u4e0e\u5206\u6790\u65b9\u6cd5\u4e0e\u5de5\u5177\u79d1\u666e\u7cfb\u5217\uff08\u4e09\uff09</li> <li>[VTK] Eye-Dome Lighting: a non-photorealistic shading technique</li> <li>[UE] Eye-Dome Lighting Mode for Point Clouds</li> <li>[ArcGIS] Eye-Dome Lighting Enhanced Point Cloud Rendering in ArcGIS Pro</li> <li>cloudcompare EDL (shader)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E7%9B%B8%E5%85%B3%E5%BA%A6%E9%87%8F%E5%80%BC/%E7%82%B9%E4%BA%91%E8%B4%A8%E5%BF%83/","title":"\u70b9\u4e91\u8d28\u5fc3","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E7%9B%B8%E5%85%B3%E5%BA%A6%E9%87%8F%E5%80%BC/%E7%82%B9%E4%BA%91%E8%B4%A8%E5%BF%83/#_1","title":"\u70b9\u4e91\u8d28\u5fc3","text":"<p>\u8d28\u5fc3\u6307\u7684\u662f\u8d28\u91cf\u7684\u4e2d\u5fc3\uff0c\u8ba4\u4e3a\u662f\u7269\u4f53\u8d28\u91cf\u96c6\u4e2d\u4e8e\u6b64\u70b9\u7684\u5047\u60f3\u70b9\u3002</p> <p>\u901a\u5e38\u7269\u4f53\u7684\u8d28\u5fc3\u5750\u6807\u5982\u4e0b</p> <ol> <li>\\(r_i = (x_i, y_i, z_i), i=1,2,...,n\\) \u4e3a\u5404\u8d28\u70b9\u7684\u5750\u6807</li> <li>\\(m_i\\) \u4e3a\u8d28\u70b9\u6240\u5bf9\u5e94\u7684\u8d28\u91cf</li> </ol> \\[ P_c = \\frac{1}{M} \\sum_{n}^{i=0}m_ir_i \\] <p>\u70b9\u4e91\u8d28\u5fc3</p> <ol> <li>\\(m_i=1\\)\u5373\u53ef\uff0c\u5219\\(M=n\\)</li> <li>\u8d28\u70b9\u5373\u70b9\u4e91\u4e2d\u7684\u6bcf\u4e2a\u9876\u70b9</li> </ol> \\[ P_c = \\frac{1}{n}(\\sum_{i=0}^{n}x_i, \\sum_{i=0}^{n}j_i, \\sum_{i=0}^{n}z_i) \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E7%9B%B8%E5%85%B3%E5%BA%A6%E9%87%8F%E5%80%BC/%E7%82%B9%E4%BA%91%E8%B4%A8%E5%BF%83/#c","title":"C++\u4ee3\u7801","text":"<pre><code>//# \u8ba1\u7b97\u8d28\u5fc3\nstd::vector&lt;cv::Point3d&gt; A;\nint numOfPnts = A.size(); //\u70b9\u4e2a\u6570\ncv::Point3d centroidA;\nfor (int i{ 0 }; i &lt; numOfPnts; ++i)\n{\ncentroidA += A[i];\n}\ncentroidA /= numOfPnts;\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/","title":"\u70b9\u4e91\u914d\u51c6","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/#_1","title":"\u70b9\u4e91\u914d\u51c6\u5206\u7c7b","text":"<p>\u901a\u5e38\uff0c\u70b9\u4e91\u914d\u51c6\u5206\u4e3a\u4e24\u6b65\uff0c\u5148\u505a\u7c97\u914d\u51c6\uff0c\u518d\u505a\u7cbe\u914d\u51c6</p> <ul> <li>\u7c97\u914d\u51c6\uff08Coarse registration\uff09\uff1a\u57fa\u4e8e\u5c40\u90e8\u51e0\u4f55\u7279\u5f81</li> <li>\u7cbe\u914d\u51c6\uff08Fine registration\uff09\uff1a\u9700\u8981\u521d\u59cb\u4f4d\u59ff\uff08initial alignment\uff09</li> </ul> \u65b9\u6cd5 \u539f\u7406\u7b80\u4ecb \u4f18\u70b9 \u7f3a\u70b9 Iterative Closest Point(ICP) \u8fed\u4ee3\u6700\u8fd1\u70b9\u4f9d\u6b21\u5339\u914d\u70b9\u5bf9 1.\u8981\u5254\u9664\u4e0d\u5408\u9002\u7684\u70b9\u5bf9\uff08\u8ddd\u79bb\u8fc7\u5927\u3001\u5728\u8fb9\u754c\u4e0a\u7684\u70b9\u5bf9\uff092. \u57fa\u4e8e\u70b9\u5bf9\u7684\u914d\u51c6\uff0c\u4e0d\u5305\u542b\u5c40\u90e8\u5f62\u72b6\u4fe1\u606f3. \u6bcf\u6b21\u8fed\u4ee3\u90fd\u8981\u641c\u7d22\u6700\u8fd1\u70b9\uff0c\u8017\u65f6\u8ba1\u7b97\u91cf\u5927 IDC ICP\u7684\u4e00\u79cd\u6539\u8fdb\uff0c\u91c7\u7528\u6781\u5750\u6807\u4ee3\u66ff\u7b1b\u5361\u5c14\u5750\u6807\u8fdb\u884c\u6700\u8fd1\u70b9\u641c\u7d22 PIC \u8003\u8651\u4e86\u70b9\u4e91\u7684\u566a\u97f3\u548c\u521d\u59cb\u4f4d\u7f6e\u7684\u4e0d\u786e\u5b9a\u6027 Point-based probabilistic registration \u9700\u8981\u9996\u5148\u5efa\u7acb\u6df1\u5ea6\u56fe\u7684\u4e09\u89d2\u9762\u7247 NDT\u6b63\u6001\u5206\u5e03\u53d8\u6362 \u4e0d\u9700\u8981\u53cd\u590d\u53bb\u627e\u6700\u8fd1\u70b9\uff0c\u53ea\u9700\u8981\u4e00\u6b21\u8ba1\u7b97\u3002\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u5728\u4e24\u5e45\u56fe\u50cf\u91c7\u96c6\u4e4b\u95f4\u7684\u65f6\u95f4\u53ef\u4ee5\u79bb\u7ebf\u8ba1\u7b97\u51fa\u6765 Gaussian fields \u548cNDT\u7c7b\u4f3c\uff0c\u5229\u7528\u9ad8\u65af\u6df7\u5408\u6a21\u578b\u8003\u5bdf\u70b9\u4e0e\u70b9\u7684\u8ddd\u79bb\u548c\u70b9\u5468\u56f4\u8868\u9762\u7684\u76f8\u4f3c\u6027 Quadratic patches Likelihood-field matching\u968f\u673a\u573a\u5339\u914d CRF\u5339\u914d \u8fd0\u884c\u901f\u5ea6\u6162\uff0c\u57283d\u4e2d\u5b9e\u65f6\u6027\u80fd\u4e0d\u597d\uff0c\u8bef\u5dee\u5927 Branch-and-bound registration Registration using local geometric features"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/#_2","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u70b9\u4e91\u914d\u51c6\u7efc\u8ff0 - \u77e5\u4e4e (zhihu.com)</li> <li>NDT \u7b97\u6cd5\uff08\u4e0eICP\u5bf9\u6bd4\uff09\u548c\u4e00\u4e9b\u5e38\u89c1\u914d\u51c6\u7b97\u6cd5</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/%E6%A0%B9%E6%8D%AE%E7%82%B9%E5%AF%B9%E6%B1%82%E8%A7%A3%E5%88%9A%E4%BD%93%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5/","title":"\u6839\u636e\u70b9\u5bf9\u6c42\u89e3\u521a\u4f53\u53d8\u6362\u77e9\u9635","text":"<p>\u521a\u4f53\u53d8\u6362 \u662f\u6307\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u628a\u4e00\u4e2a\u7269\u4f53\u505a\u65cb\u8f6c\u3001\u5e73\u79fb\uff0c\u662f\u4e00\u79cd\u4fdd\u6301\u7269\u4f53\u5927\u5c0f\u548c\u5f62\u72b6\u4e0d\u53d8\u7684\u4eff\u5c04\u53d8\u6362\uff0c\u521a\u4f53\u53d8\u6362\u53c8\u79f0\u4e3a \u6b27\u5f0f\u53d8\u6362\u3001\u9f50\u6b21\u53d8\u6362\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/%E6%A0%B9%E6%8D%AE%E7%82%B9%E5%AF%B9%E6%B1%82%E8%A7%A3%E5%88%9A%E4%BD%93%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5/#_1","title":"\u95ee\u9898\u63cf\u8ff0","text":"<p>\u5728\u70b9\u4e91\u914d\u51c6\u7684\u8bfe\u9898\u4e0b\uff0c\u5f53\u6211\u4eec\u505a\u5b8c\u70b9\u4e91\u5339\u914d\u4e4b\u540e\uff0c\u5c06\u83b7\u5f97N\u4e2a\u70b9\u5bf9\uff08\u4e0b\u6807\u4e00\u4e00\u5bf9\u5e94\uff09</p> <ol> <li>\\(A = \\{p_1, p_2, p_3, ..., p_n\\}\\)</li> <li>\\(B=\\{p'_1, p'_2, p'_3, ..., p'_n\\}\\)</li> </ol> <p>\u6b64\u65f6\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\uff0c\u8fd9N\u4e2a\u70b9\u5bf9\uff0c\u89e3\u7b97\u51fa\u521a\u4f53\u53d8\u6362\u77e9\u9635\u4e2d\uff0c\u65cb\u8f6c\u77e9\u9635\\(R\\)\u3001\u504f\u79fb\u91cf\\(t\\)\uff0c\u4f7f\u5f97</p> \\[ {\\forall}_{i}, p_i = R*p'_i + t \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/%E6%A0%B9%E6%8D%AE%E7%82%B9%E5%AF%B9%E6%B1%82%E8%A7%A3%E5%88%9A%E4%BD%93%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5/#svd","title":"SVD\u65b9\u6cd5","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/%E6%A0%B9%E6%8D%AE%E7%82%B9%E5%AF%B9%E6%B1%82%E8%A7%A3%E5%88%9A%E4%BD%93%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5/#_2","title":"\u6d41\u7a0b\u7b80\u4ecb","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/%E6%A0%B9%E6%8D%AE%E7%82%B9%E5%AF%B9%E6%B1%82%E8%A7%A3%E5%88%9A%E4%BD%93%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5/#_3","title":"\u8ba1\u7b97\u4e24\u4e2a\u70b9\u4e91\u7684\u8d28\u5fc3","text":"<p>\u9996\u5148\uff0c\u5206\u522b\u8ba1\u7b97\u4e24\u4e2a\u70b9\u4e91\u7684\u8d28\u5fc3\uff0c\u8bb0 \\(c\\)\u4e3a\\(A\\)\u7684\u8d28\u5fc3\uff0c\\(c'\\)\u4e3aB\u7684\u8d28\u5fc3</p> <p>\u8ba1\u7b97\u65b9\u6cd5\uff1a<code>\u8d28\u5fc3 = \u70b9\u4e91\u7684\u5750\u6807\u7b97\u6570\u5e73\u5747\u503c</code></p> <pre><code>Point centroid; //A\u8d28\u5fc3\nfor pnt in A:\ncentroid += pnt\ncentroid /= A.size();\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/%E6%A0%B9%E6%8D%AE%E7%82%B9%E5%AF%B9%E6%B1%82%E8%A7%A3%E5%88%9A%E4%BD%93%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5/#_4","title":"\u53bb\u8d28\u5fc3\u5750\u6807","text":"<p>\u5c06\u6bcf\u4e2a\u70b9\u7684\u5750\u6807\u8f6c\u6362\u4e3a**\u53bb\u8d28\u5fc3\u5750\u6807**\uff0c\u8ba1\u7b97\u65b9\u6cd5</p> <ol> <li>\u8bb0\\(q_i\\)\u4e3a\\(A\\)\u7684\u53bb\u8d28\u5fc3\u5750\u6807\uff1a\\(q_i = p_i - c\\)</li> <li>\u8bb0\\(q'_i\\)\u4e3a\\(B\\)\u7684\u53bb\u8d28\u5fc3\u5750\u6807\uff1a\\(q'_i = p'_i - c'\\)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/%E6%A0%B9%E6%8D%AE%E7%82%B9%E5%AF%B9%E6%B1%82%E8%A7%A3%E5%88%9A%E4%BD%93%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5/#_5","title":"\u8ba1\u7b97\u65cb\u8f6c\u77e9\u9635","text":"<ol> <li>\u9996\u5148\uff0c\u8ba1\u7b97 \\(W\\)\uff0c\u8fd9\u91cc\\(W\\)\u663e\u7136\u662f3x3\u7684\u77e9\u9635</li> </ol> \\[ W = \\sum_{i}q_i * (\\sum_i q'_i)^{T} \\] <ol> <li>\u5bf9\\(W\\)\u8fdb\u884cSVD\u5206\u89e3\uff0c\u5f97\u5230</li> </ol> \\[ W = U \\sum V^T \\] <ol> <li>\u5f53\\(W\\)\u6ee1\u79e9\u65f6\uff0c\u5219\\(R=UV^T\\)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/%E6%A0%B9%E6%8D%AE%E7%82%B9%E5%AF%B9%E6%B1%82%E8%A7%A3%E5%88%9A%E4%BD%93%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5/#_6","title":"\u6c42\u5e73\u79fb\u91cf","text":"\\[ t = p - R*p' \\] <p>\u539f\u7406\u53ef\u53c2\u8003\u6587\u732e</p> <ol> <li>K. S. Arun, T. S. Huang, and S. D. Blostein, \u201cLeast-squares fitting of two 3-d point sets,\u201d PatternAnalysisandMachineIntelligence, IEEETransactionson,no.5,pp.698\u2013700,1987.</li> <li>F. Pomerleau, F. Colas, and R. Siegwart, \u201cA review of point cloud registration algorithms for mobile robotics,\u201d Foundations and Trends in Robotics (FnTROB), vol. 4, no. 1, pp. 1\u2013 104, 2015.</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/%E6%A0%B9%E6%8D%AE%E7%82%B9%E5%AF%B9%E6%B1%82%E8%A7%A3%E5%88%9A%E4%BD%93%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5/#opencv","title":"opencv\u4ee3\u7801","text":"<p>\u5b8c\u6574\u4ee3\u7801\uff1aopencv-examples/solve_transform_matrix.cpp</p> <pre><code>#include&lt;opencv2/opencv.hpp&gt;\ncv::Mat solveTransformMatrix(const std::vector&lt;cv::Point3d&gt;&amp; A, const std::vector&lt;cv::Point3d&gt;&amp; B)\n{\nint numOfPnts = A.size();\n//# \u81f3\u5c113\u4e2a\u70b9\u5bf9\nif(numOfPnts &lt; 3 || numOfPnts != B.size())\n{\nreturn {};\n}\n//# \u8ba1\u7b97\u8d28\u5fc3\ncv::Point3d centroidA, centroidB;\n{\nfor (int i{ 0 }; i &lt; numOfPnts; ++i)\n{\ncentroidA += A[i];\ncentroidB += B[i];\n}\ncentroidA /= numOfPnts;\ncentroidB /= numOfPnts;\n}\n//# \u53bb\u8d28\u5fc3\u5750\u6807\ncv::Mat ASubCentroid(3, numOfPnts, CV_64FC1);\ncv::Mat BSubCentroid(3, numOfPnts, CV_64FC1);\nfor (int i = 0; i &lt; numOfPnts; ++i)//N\u7ec4\u70b9\n{\n//\u4e09\u884c\nASubCentroid.at&lt;double&gt;(0, i) = A[i].x - centroidA.x;\nASubCentroid.at&lt;double&gt;(1, i) = A[i].y - centroidA.y;\nASubCentroid.at&lt;double&gt;(2, i) = A[i].z - centroidA.z;\nBSubCentroid.at&lt;double&gt;(0, i) = B[i].x - centroidB.x;\nBSubCentroid.at&lt;double&gt;(1, i) = B[i].y - centroidB.y;\nBSubCentroid.at&lt;double&gt;(2, i) = B[i].z - centroidB.z;\n}\n//# \u8ba1\u7b97\u65cb\u8f6c\u77e9\u9635\ncv::Mat matS = ASubCentroid * BSubCentroid.t();\ncv::Mat matU, matW, matV;\ncv::SVDecomp(matS, matW, matU, matV);\ncv::Mat matTemp = matU * matV;\ndouble det = cv::determinant(matTemp);//\u884c\u5217\u5f0f\u7684\u503c\ndouble datM[] = { 1, 0, 0, 0, 1, 0, 0, 0, det };\ncv::Mat matM(3, 3, CV_64FC1, datM);\ncv::Mat matR = matV.t() * matM * matU.t();\n//# \u8ba1\u7b97\u5e73\u79fb\u91cf\ndouble* datR = (double*)(matR.data);\ndouble delta_X = centroidB.x - (centroidA.x * datR[0] + centroidA.y * datR[1] + centroidA.z * datR[2]);\ndouble delta_Y = centroidB.y - (centroidA.x * datR[3] + centroidA.y * datR[4] + centroidA.z * datR[5]);\ndouble delta_Z = centroidB.z - (centroidA.x * datR[6] + centroidA.y * datR[7] + centroidA.z * datR[8]);\n//# \u8f6c\u62104x4\u77e9\u9635\ncv::Mat R_T = (cv::Mat_&lt;double&gt;(4, 4) &lt;&lt;\nmatR.at&lt;double&gt;(0, 0), matR.at&lt;double&gt;(0, 1), matR.at&lt;double&gt;(0, 2), delta_X,\nmatR.at&lt;double&gt;(1, 0), matR.at&lt;double&gt;(1, 1), matR.at&lt;double&gt;(1, 2), delta_Y,\nmatR.at&lt;double&gt;(2, 0), matR.at&lt;double&gt;(2, 1), matR.at&lt;double&gt;(2, 2), delta_Z,\n0, 0, 0, 1\n);\nreturn R_T;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/%E6%A0%B9%E6%8D%AE%E7%82%B9%E5%AF%B9%E6%B1%82%E8%A7%A3%E5%88%9A%E4%BD%93%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5/#eigen","title":"Eigen\u4ee3\u7801","text":"<p>\u5b8c\u6574\u4ee3\u7801\uff1acgal-examples/solve_transform_matrix.cpp</p> <pre><code>#include&lt;CGAL/Simple_cartesian.h&gt;\nusing Kernel = CGAL::Simple_cartesian&lt;double&gt;;\nusing Point3 = Kernel::Point_3;\n#include&lt;Eigen/Core&gt;\n#include&lt;Eigen/Dense&gt; //Matrix.determinant\n#include&lt;Eigen/SVD&gt;\nEigen::Matrix4d solveTransformMatrix(const std::vector&lt;Point3&gt;&amp; A, const std::vector&lt;Point3&gt;&amp; B)\n{\nint numOfPnts = A.size();\n//# \u81f3\u5c113\u4e2a\u70b9\u5bf9\nif (numOfPnts &lt; 3 || numOfPnts != B.size())\n{\nreturn {};\n}\n//# \u8ba1\u7b97\u8d28\u5fc3\ndouble centroidA[3] = {0}, centroidB[3] = {0};\n{\nfor (int i{ 0 }; i &lt; numOfPnts; ++i)\n{\nfor (int j{ 0 }; j &lt; 3; ++j)\n{\ncentroidA[j] += A[i][j];\ncentroidB[j] += A[i][j];\n}\n}\nfor (int j{ 0 }; j &lt; 3; ++j)\n{\ncentroidA[j] /= numOfPnts;\ncentroidB[j] /= numOfPnts;\n}\n}\n//# \u53bb\u8d28\u5fc3\u5750\u6807\nEigen::MatrixXd ASubCentroid(3, numOfPnts);\nEigen::MatrixXd BSubCentroid(3, numOfPnts);\nfor (int i = 0; i &lt; numOfPnts; ++i)//N\u7ec4\u70b9\n{\n//\u4e09\u884c\nASubCentroid(0, i) = A[i].x() - centroidA[0];\nASubCentroid(1, i) = A[i].y() - centroidA[1];\nASubCentroid(2, i) = A[i].z() - centroidA[2];\nBSubCentroid(0, i) = B[i].x() - centroidB[0];\nBSubCentroid(1, i) = B[i].y() - centroidB[1];\nBSubCentroid(2, i) = B[i].z() - centroidB[2];\n}\n//# \u8ba1\u7b97\u65cb\u8f6c\u77e9\u9635\nauto matS = ASubCentroid * BSubCentroid.transpose();\nEigen::JacobiSVD&lt;Eigen::MatrixXd&gt; svd(matS, Eigen::ComputeFullU | Eigen::ComputeFullV);\nauto matU = svd.matrixU();\nauto matV = svd.matrixV().transpose();\nauto matTemp = matU * matV;\ndouble det = matTemp.determinant();//\u884c\u5217\u5f0f\u7684\u503c\nEigen::Matrix3d matM;\nmatM &lt;&lt; 1, 0, 0, 0, 1, 0, 0, 0, det;\nauto matR = matV.transpose() * matM * matU.transpose();\n////# \u8ba1\u7b97\u5e73\u79fb\u91cf\ndouble delta_X = centroidB[0] - (centroidA[0] * matR(0, 0) + centroidA[1] * matR(0, 1) + centroidA[2] * matR(0, 2));\ndouble delta_Y = centroidB[1] - (centroidA[0] * matR(1, 0) + centroidA[1] * matR(1, 1) + centroidA[2] * matR(1, 2));\ndouble delta_Z = centroidB[2] - (centroidA[0] * matR(2, 0) + centroidA[1] * matR(2, 1) + centroidA[2] * matR(2, 2));\n//# \u8f6c\u62104x4\u77e9\u9635\nEigen::Matrix4d RT;\nRT &lt;&lt;\nmatR(0, 0), matR(0, 1), matR(0, 2), delta_X,\nmatR(1, 0), matR(1, 1), matR(1, 2), delta_Y,\nmatR(2, 0), matR(2, 1), matR(2, 2), delta_Z,\n0, 0, 0, 1;\nreturn RT;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/%E6%A0%B9%E6%8D%AE%E7%82%B9%E5%AF%B9%E6%B1%82%E8%A7%A3%E5%88%9A%E4%BD%93%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5/#_7","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u62df\u5408\u4e09\u7ef4\u7a7a\u95f4\u4e00\u7ec4\u70b9\u4e91\u5230\u53e6\u4e00\u7ec4\u70b9\u4e91\u7684\u521a\u4f53\u53d8\u6362\u4e4b\u4e00\uff1a\u68af\u5ea6\u4e0b\u964d</li> <li>\u62df\u5408\u4e09\u7ef4\u7a7a\u95f4\u4e00\u7ec4\u70b9\u4e91\u5230\u53e6\u4e00\u7ec4\u70b9\u4e91\u7684\u521a\u4f53\u53d8\u6362\u4e4b\u4e8c\uff1aSVD\u65b9\u6cd5</li> <li>\u76f8\u5f53\u901a\u4fd7\u6613\u61c2\u7684SVD\u5947\u5f02\u503c\u5206\u89e3</li> <li>Eigen \u77e9\u9635\u7684SVD\u5206\u89e3</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/ICP%E7%AE%97%E6%B3%95/","title":"Iterative Closest Point","text":"","tags":["ICP","\u70b9\u4e91\u5339\u914d"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/ICP%E7%AE%97%E6%B3%95/#icp","title":"ICP\u7b80\u4ecb","text":"<p>ICP\u5e38\u7528\u7684\u70b9\u4e91\u7cbe\u914d\u51c6\u7b97\u6cd5\u3002 </p> <ul> <li>ICP, Iterative Closest Point, \u8fed\u4ee3\u6700\u8fd1\u70b9\u3002\u987e\u540d\u601d\u4e49\uff0cICP\u662f\u901a\u8fc7\u6700\u8fd1\u90bb\u6cd5\u6765\u627e \u914d\u5bf9\u70b9 \u7684</li> <li>ICP\u7ecf\u5178\u8bba\u6587\uff1aA method for registration of 3-D shapes | IEEE Journals &amp; Magazine | IEEE Xplore</li> </ul> <p>\u4f18\u7f3a\u70b9</p> <ul> <li>\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u8f83\u597d\u7684\u521d\u503c\uff0c\u540c\u65f6\u7531\u4e8e\u7b97\u6cd5\u672c\u8eab\u7f3a\u9677\uff0c\u6700\u7ec8\u8fed\u4ee3\u7ed3\u679c\u53ef\u80fd\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u4f18</li> </ul>","tags":["ICP","\u70b9\u4e91\u5339\u914d"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/ICP%E7%AE%97%E6%B3%95/#_1","title":"\u539f\u7406\u7b80\u4ecb","text":"<p>ICP \u7b97\u6cd5\u6d41\u7a0b</p> <ol> <li>\u9996\u5148\uff0c\u627e\u5230 Source \u70b9\u4e91\u4e0e Target \u70b9\u4e91\u4e2d\u7684\u5bf9\u5e94\u70b9\uff08corresponding point sets\uff09</li> <li>\u7136\u540e\uff0c\u9488\u5bf9\u5bf9\u5e94\u70b9\uff0c\u901a\u8fc7\u6700\u5c0f\u4e8c\u4e58\u6cd5\u6784\u5efa\u76ee\u6807\u51fd\u6570\uff0c\u8fdb\u884c\u8fed\u4ee3\u4f18\u5316</li> </ol>","tags":["ICP","\u70b9\u4e91\u5339\u914d"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/ICP%E7%AE%97%E6%B3%95/#_2","title":"\u4f30\u8ba1\u5bf9\u5e94\u70b9","text":"<p>\u5bf9Source\u70b9\u4e91\u4e2d\u7684\u4e00\u70b9\uff0c\u6c42\u89e3\u5176\u4e0eTarget\u70b9\u4e91\u4e2d\u8ddd\u79bb\u6700\u8fd1\u7684\u90a3\u4e2a\u70b9\uff0c\u4f5c\u4e3a\u5176\u5bf9\u5e94\u70b9\u3002\u5982\u6b64\u64cd\u4f5c\u5f88\u8d39\u65f6\u95f4\uff0c\u56e0\u6b64\u901a\u5e38\u4f1a\u901a\u8fc7\u4e00\u4e9b\u529e\u6cd5\u6765\u52a0\u901f</p> <ol> <li>\u9608\u503c\u5224\u65ad\uff1a\u53ef\u4ee5\u8bbe\u5b9a\u4e00\u4e2a\u9608\u503c\uff0c\u5f53\u8ddd\u79bb\u5c0f\u4e8e\u9608\u503c\u65f6\uff0c\u5c31\u5c06\u5176\u4f5c\u4e3a\u5bf9\u5e94\u70b9</li> <li>ANN(Approximate Nearest Neighbor)</li> </ol>","tags":["ICP","\u70b9\u4e91\u5339\u914d"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/ICP%E7%AE%97%E6%B3%95/#_3","title":"\u8fed\u4ee3\u4f18\u5316","text":"<ol> <li>\u5728\u201c\u4f30\u8ba1\u5bf9\u5e94\u70b9\u201d\u4e4b\u540e\uff0c\u5c31\u83b7\u5f97\u4e86\u4e24\u7ec4\u5bf9\u5e94\u7684\u70b9\u96c6\uff08N\u4e2a\u70b9\u5bf9\uff09</li> <li>\u7136\u540e\u6839\u636eN\u4e2a\u70b9\u5bf9\uff0c\u8ba1\u7b97\u51fa\u6b27\u5f0f\u53d8\u6362\\(R\\)\u3001\\(t\\)</li> <li>\u57fa\u4e8e\u6700\u5c0f\u4e8c\u4e58\u6cd5\u8fdb\u884c\u8fed\u4ee3\u8ba1\u7b97\uff0c\u4f7f\u5f97\u8bef\u5dee\u5e73\u65b9\u548c\u8fbe\u5230\u6781\u5c0f\u503c\uff0c\u4ece\u800c\u5f97\u5230\u6700\u4f18\u7684\\(R\\)\u3001\\(t\\)</li> </ol>","tags":["ICP","\u70b9\u4e91\u5339\u914d"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/ICP%E7%AE%97%E6%B3%95/#_4","title":"\u76f8\u5173\u5e93","text":"\u5e93\u540d \u8bf4\u660e \u76f8\u5173\u94fe\u63a5 PCL OpenCV SurfaceMatching ICP libpointmatcher libpointmatcher SLAM6D SLAM6D 3DTK libicp Andreas Geiger (cvlibs.net) g-icp avsegal/gicp: Generalized ICP reference implementation (github.com) n-icp Normal ICP - Normal Iterative Closest Point (jacoposerafin.com)","tags":["ICP","\u70b9\u4e91\u5339\u914d"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/ICP%E7%AE%97%E6%B3%95/#_5","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>\u3010\u70b9\u4e91\u7cbe\u914d\u51c6\u3011Iterative Closest Point\uff08ICP\uff09 - \u77e5\u4e4e (zhihu.com)</li> </ol>","tags":["ICP","\u70b9\u4e91\u5339\u914d"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/NDT%E7%AE%97%E6%B3%95/","title":"NDT\u7b97\u6cd5","text":"<p>NDT, Normal Distribution Transform\uff0c\u6b63\u6001\u5206\u5e03\u53d8\u6362\u7b97\u6cd5</p> <ul> <li>\u5c06\u70b9\u4e91\u7f51\u683c\u5316\uff1b\u6c42\u89e3\u6bcf\u4e2a\u683c\u5b50\u7684\u591a\u7ef4\u6b63\u6001\u5206\u5e03\u5e76\u8ba1\u7b97\u5176\u6982\u7387\u5206\u5e03\u6a21\u578b\uff1b\u8ba1\u7b97\u4e24\u70b9\u4e91\u95f4\u7684\u5339\u914d\u7a0b\u5ea6\uff1b\u6c42\u89e3\u5339\u914d\u5ea6\u6700\u9ad8\u65f6\u7684\u53d8\u6362\u5173\u7cfb</li> <li>IEEE\u7684\u8bba\u6587\uff1a\u300aThe Normal Distributions Transform: A New Approach to Laser Scan Matching\u300b-Peter Biber</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/NDT%E7%AE%97%E6%B3%95/#_1","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>SLAM\u7b97\u6cd5\u5de5\u7a0b\u5e08\u4e4b\u8def\uff1aNDT\u7b97\u6cd5\u8be6\u89e3\u4e0eC++\u5b9e\u73b0 - \u77e5\u4e4e (zhihu.com)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/","title":"OpenCV Surface Matching\u6a21\u5757","text":"<p>\u672c\u7ae0\u4ee3\u7801\u5730\u5740\uff1aopencv-examples/examples/SurfaceMatching</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/#_1","title":"\u95ee\u9898\u5b9a\u4e49","text":"<p>\u8f93\u5165</p> <ol> <li>\u76ee\u6807\u6a21\u578b\\(M\\)</li> <li>\u573a\u666f\u6570\u636e\\(S\\)</li> </ol> <p>\u76ee\u6807\uff1a\u5f53\u573a\u666f\\(S\\)\u5b58\u5728\u76ee\u6807\u6a21\u578b\\(M\\)\u65f6\uff0c\u4f30\u7b97\u51fa\u76ee\u6807\u5728\u573a\u666f\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5e76\u8ba1\u7b97\u51fa\u53d8\u6362\u77e9\u9635</p> <p>\u65b9\u6cd5</p> <ol> <li>\u6839\u636e\\(M\\)\uff0c\u8bad\u7ec3\u4e00\u4e2a\u76ee\u6807\u6a21\u578b</li> <li>\u5728\u573a\u666f\u4e2d\u68c0\u6d4b3D\u7279\u5f81\u70b9</li> <li>\u5229\u7528PPF\u7b97\u6cd5\uff0c\u5339\u914d\u7279\u5f81\u70b9\uff0c\u8ba1\u7b97\u51fa\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u5e94\u7528\u53d8\u6362\u77e9\u9635\u5f97\u5230\u521d\u59cb\u59ff\u6001\\(p0\\)\u3002\u8fd9\u4e00\u6b65\u5373\u662f\u7c97\u914d\u51c6</li> <li>\u5229\u7528ICP\u7b97\u6cd5\uff0c\u5c06\\(p_0\\)\u4f5c\u4e3a\u521d\u59cb\u8f93\u5165\uff0c\u5bf9\u6c42\u5f97\u7684\u59ff\u6001\u8fdb\u4e00\u6b65\u7cbe\u914d\u51c6\uff0c\u5f97\u5230\u66f4\u51c6\u786e\u7684\u7ed3\u679c\\(p\\)\u3002\u8fd9\u4e00\u6b65\u5373\u662f\u7cbe\u914d\u51c6</li> </ol> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/#_2","title":"\u6548\u679c","text":"<p>\u89c6\u9891\u6f14\u793a\uff1aGSoC 2014 - New Surface Matching in OpenCV using Point Pair Features - YouTube</p> <p></p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/#_3","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>OpenCV: Surface Matching\u5b98\u65b9\u6587\u6863</li> <li>PPF\u7b97\u6cd5-OpenCV\u4e09\u7ef4\u70b9\u5339\u914d(Surface Matching)_\u5339\u914d\u56fe\u50cf\u548c\u4e09\u7ef4\u6a21\u578b\u4e0a\u7684\u70b9</li> <li>c++ - Opencv Surface Matching - Stack Overflow</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/ICP/","title":"OpenCV SurfaceMatching ICP","text":"<p>\u4f9d\u8d56\uff1aOpenCV contrib\uff08\u6269\u5c55\u6a21\u5757\uff09</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/ICP/#icp","title":"ICP\u7b80\u4ecb","text":"<p>ICP\u7528\u4e8e\u8ba1\u7b97\u51fa\u4e00\u4e2a\u53d8\u6362\u77e9\u9635\uff0c\u4f7f\u4e00\u4e2a\u70b9\u4e91\u5339\u914d\u5230\u53e6\u4e00\u4e2a\u70b9\u4e91\u4e0a\u3002</p> <p>\u8f93\u5165</p> <ol> <li>\u573a\u666f3D\u70b9\u7684\u5750\u6807\u96c6\u5408\\(A\\)</li> <li>\u573a\u666f3D\u70b9\u7684\u5750\u6807\u96c6\u5408\\(B\\)</li> </ol> <p>\u8f93\u51fa</p> <ol> <li>\u70b9\u5bf9\u96c6\u5408\\(C = \\{ (i,j) | a_i\u2208A, b_j \u2208B \\}\\)</li> <li>\u6216\u8005\uff0c\\(A\\)\u3001\\(B\\)\u4e24\u4e2a\u70b9\u51fb\u95f4\u7684\u53d8\u6362\u53c2\u6570\\(R\\)\u3001\\(t\\)</li> </ol> <p>\u65b9\u6cd5\uff1aICP\u53caICP\u7b97\u6cd5\u7684\u53d8\u79cd\u6709\u5f88\u591a\uff0cOpenCV SurfaceMatching\u4f7f\u7528\u7684\u662fPicky ICP\u7b97\u6cd5</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/ICP/#picky-icp","title":"Picky ICP\u7b97\u6cd5\u7b80\u4ecb","text":"<p>Pickly ICP\u7b97\u6cd5\u4e0d\u540c\u4e8e\u5176\u4ed6ICP\u7b97\u6cd5\uff0c\u5b83\u91c7\u7528\u5206\u5c42\u7684\u601d\u60f3</p> <ul> <li>\u6bcf\u6b21\u53ea\u5bf9\u8f93\u5165\u70b9\u96c6A\u4e2d\u7684\u4e00\u90e8\u5206\u70b9\u8fdb\u884c\u8fed\u4ee3\u8ba1\u7b97</li> <li>\u5f53\u7b97\u6cd5\u6536\u655b\u65f6\uff0c\u518d\u5bf9\u4e0b\u4e00\u5c42\u7684\u70b9\u8fdb\u884c\u540c\u6837\u7684\u8ba1\u7b97\uff0c\u5e76\u5c06\u5f53\u524d\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u8ba1\u7b97\u7684\u521d\u59cb\u503c</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/ICP/#_1","title":"\u9009\u53d6\u63a7\u5236\u70b9","text":"<p>\u5bf9\u8f93\u5165\u573a\u666f\u70b9\u96c6\uff0c\u5c06\u5176\u5206\u4e3a\\(h+1\\)\u5c42</p> <ol> <li>\u7b2c\u4e00\u6b21\u9009\u53d6\u4e0b\u6807\u4e3a\\(2^h\\)\u7684\u500d\u6570\u7684\u70b9\u4f5c\u4e3a\u63a7\u5236\u70b9</li> <li>\u4e4b\u540e\u9010\u5c42\u9009\u53d6\u4e0b\u6807\u4e3a\\(2^{h-1}\\), \\(2^{h-2}\\), ..., \\(2^0\\)\u7684\u70b9\u4f5c\u4e3a\u63a7\u5236\u70b9\uff0c\u76f4\u5230\u6240\u6709\u70b9\u90fd\u88ab\u9009\u4e3a\u63a7\u5236\u70b9</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/ICP/#_2","title":"\u8ba1\u7b97\u5bf9\u5e94\u70b9\u5bf9","text":"<p>\u5bf9\u6bcf\u4e00\u4e2a\u63a7\u5236\u70b9\uff0c\u8ba1\u7b97\u6a21\u578b\u70b9\u96c6\\(B\\)\u4e2d\u7684\u6700\u8fd1\u70b9\uff0c\u4f5c\u4e3a\u5176\u5bf9\u5e94\u70b9</p> <ul> <li>\u9009\u53d6\u975e\u5e38\u8017\u65f6\uff0c\u53ef\u4ee5\u91c7\u7528k-d\u6811\u8fdb\u884c\u52a0\u901f</li> <li>\u540c\u65f6\uff0c\u5bf9\u4e8e\u5b58\u5728\u591a\u4e2a\u5bf9\u5e94\u70b9\u5bf9\u7684\u60c5\u51b5\uff0c\u53ea\u4fdd\u7559\u8ddd\u79bb\u6700\u8fd1\u7684\u70b9\u5bf9\uff08ICP\u7684\u540d\u5b57\u7531\u6b64\u800c\u6765\uff0c\u201c\u8fed\u4ee3\u6700\u8fd1\u70b9\u201d\uff09</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/ICP/#_3","title":"\u5220\u9664\u79bb\u7fa4\u70b9","text":"<p>\u5bf9\u7b2c\u4e8c\u6b65\u5f97\u5230\u7684\u6240\u6709\u70b9\u5bf9\uff0c\u901a\u8fc7\u70b9\u5bf9\u8ddd\u79bb\u9608\u503c\u5224\u65ad\u7684\u65b9\u6cd5\uff0c\u5220\u9664\u4e00\u4e9b\u79bb\u7fa4\u70b9\u5bf9\uff0c\u589e\u52a0\u7b97\u6cd5\u7684\u9c81\u68d2\u6027\u3002</p> <ol> <li>\u8ba1\u7b97\u6240\u6709\u70b9\u5bf9\u7684\u6807\u51c6\u5dee \u03c3</li> <li>\u5f53\\(dist(a_i, b_j) &gt; SCALE *\u03c3\\)\u65f6\uff0c\u8be5\u70b9\u88ab\u8ba4\u4e3a\u662f\u79bb\u7fa4\u503c\u3002\u5728\u540e\u7eed\u7684\u8ba1\u7b97\u4e2d\uff0c\u8be5\u70b9\u88ab\u5ffd\u7565</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/ICP/#_4","title":"\u8fed\u4ee3\u8ba1\u7b97\u6a21\u578b\u53c2\u6570","text":"<p>\u57fa\u4e8e\u8bef\u5dee\u5e73\u6cd5\uff0c\u8fed\u4ee3\u6c42\u89e3\u51fa\u8bef\u5dee\u6700\u5c0f\u7684\u60c5\u51b5\uff0c\u5e76\u83b7\u53d6\\((R, t)\\)\u3002</p> <p>\u5f53\\((R, t)\\)\u7684\u53c2\u6570\u53d8\u5316\u5c0f\u4e8e\u67d0\u4e2a\u9608\u503c\uff0c\u6216\u8005\u8fed\u4ee3\u6b21\u6570\u8fbe\u5230\uff0c\u5219\u505c\u6b62\u8ba1\u7b97\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/ICP/#icp-api","title":"ICP API\u4ecb\u7ecd","text":"<p>OpenCV ICP API</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/ICP/#_5","title":"\u7c7b\u4ecb\u7ecd","text":"<pre><code>/**\n* @brief This class implements a very efficient and robust variant of the iterative closest point (ICP) algorithm.\n* The task is to register a 3D model (or point cloud) against a set of noisy target data. The variants are put together\n* by myself after certain tests. The task is to be able to match partial, noisy point clouds in cluttered scenes, quickly.\n* You will find that my emphasis is on the performance, while retaining the accuracy.\n* This implementation is based on Tolga Birdal's MATLAB implementation in here:\n* http://www.mathworks.com/matlabcentral/fileexchange/47152-icp-registration-using-efficient-variants-and-multi-resolution-scheme\n* The main contributions come from:\n* 1. Picky ICP:\n* http://www5.informatik.uni-erlangen.de/Forschung/Publikationen/2003/Zinsser03-ARI.pdf\n* 2. Efficient variants of the ICP Algorithm:\n* http://docs.happycoders.org/orgadoc/graphics/imaging/fasticp_paper.pdf\n* 3. Geometrically Stable Sampling for the ICP Algorithm: https://graphics.stanford.edu/papers/stabicp/stabicp.pdf\n* 4. Multi-resolution registration:\n* http://www.cvl.iis.u-tokyo.ac.jp/~oishi/Papers/Alignment/Jost_MultiResolutionICP_3DIM03.pdf\n* 5. Linearization of Point-to-Plane metric by Kok Lim Low:\n* https://www.comp.nus.edu.sg/~lowkl/publications/lowk_point-to-plane_icp_techrep.pdf\n*/\nclass CV_EXPORTS_W ICP;\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/ICP/#_6","title":"\u6784\u9020\u51fd\u6570","text":"<pre><code>/**\n *  \\brief ICP constructor with default arguments.\n *  @param [in] iterations\n    \u8fed\u4ee3\u6b21\u6570\n *  @param [in] tolerence Controls the accuracy of registration at each iteration of ICP.\n    \u63a7\u5236ICP\u6bcf\u6b21\u8fed\u4ee3\u7684\u914d\u51c6\u7cbe\u5ea6\n *  @param [in] rejectionScale Robust outlier rejection is applied for robustness. This value actually corresponds to the standard deviation coefficient. Points with rejectionScale * &amp;sigma are ignored during registration.\n    \u6807\u51c6\u5dee\u7cfb\u6570\uff0c\u7528\u4e8e\u9c81\u68d2\u6027\u3002\u5728ICP\u7b97\u6cd5\u7684 '\u5220\u9664\u79bb\u7fa4\u70b9(reject outliers)' \u6b65\u9aa4\u4e2d\u7684scale\u7cfb\u6570\n *  @param [in] numLevels Number of pyramid levels to proceed. Deep pyramids increase speed but decrease accuracy. Too coarse pyramids might have computational overhead on top of the inaccurate registrtaion. This parameter should be chosen to optimize a balance. Typical values range from 4 to 10.\n    \u91d1\u5b57\u5854\u5c42\u6570\u3002numLevels\u8d8a\u5927\uff0c\u901f\u5ea6\u8d8a\u5feb\uff0c\u4f46\u7cbe\u5ea6\u8d8a\u5dee\u3002\u5e94\u9009\u62e9\u8fd9\u4e2a\u53c2\u6570\u6765\u4f18\u5316\u5e73\u8861\uff0c\u5178\u578b\u503c4~10\n *  @param [in] sampleType Currently this parameter is ignored and only uniform sampling is applied. Leave it as 0.\n    \u76ee\u524d\u8be5\u53c2\u6570\u88ab\u5ffd\u7565\n *  @param [in] numMaxCorr Currently this parameter is ignored and only PickyICP is applied. Leave it as 1.\n    \u76ee\u524d\u8be5\u53c2\u6570\u88ab\u5ffd\u7565\n */\nCV_WRAP ICP(const int iterations, const float tolerence = 0.05f, const float rejectionScale = 2.5f, const int numLevels = 6, const int sampleType = ICP::ICP_SAMPLING_TYPE_UNIFORM, const int numMaxCorr = 1);\n</code></pre> <pre><code>&lt;ppf_match_3d_ICP object&gt; = cv.ppf_match_3d_ICP( iterations[, tolerence[, rejectionScale[, numLevels[, sampleType[, numMaxCorr]]]]] )\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/ICP/#_7","title":"\u914d\u51c6","text":"<pre><code>/**\n * @brief: \u4f7f\u7528 'Picky ICP' \u7b97\u6cd5\u5bf9\u9f50\u573a\u666f\u548c\u6a21\u578b\u70b9\uff0c\u540c\u65f6\u8fd4\u56de\u6b8b\u5dee\u548c\u59ff\u6001 \n * @param srcPc/dstPc: \u6a21\u578b/\u573a\u666f3D\u5750\u6807+\u6cd5\u5411\u91cf\u96c6\u5408\u3002\u5927\u5c0f\u4e3a(Nx6)\uff0c\u4e14\u76ee\u524d\u53ea\u652f\u6301 CV_32F \u7c7b\u578b\u3002\n         \u573a\u666f\u548c\u6a21\u578b\u70b9\u6570\u91cf\u4e0d\u7528\u76f8\u540c\u3002\n * @param residual: \u6700\u7ec8\u7684\u6b8b\u5dee\n * @param pose: 'srcPc' \u5230 'dstPc' \u70b9\u96c6 \u7684\u53d8\u6362\u77e9\u9635\n */\nint cv::ppf_match_3d::ICP::registerModelToScene (   const Mat &amp;     srcPC,\nconst Mat &amp;     dstPC,\ndouble &amp;    residual,\nMatx44d &amp;   pose)\n</code></pre> <pre><code>retval, residual, pose = cv.ppf_match_3d_ICP.registerModelToScene(srcPC, dstPC)\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/ICP/#_8","title":"\u793a\u4f8b","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/ICP/#c","title":"C++","text":"<p>\u5b8c\u6574\u4ee3\u7801\uff1aopencv-examples/icp.cpp</p> <p>ICP\u7684\u8f93\u5165\u6570\u636e\u5e94\u662f\u7c97\u914d\u51c6\u4e4b\u540e\u7684\u7ed3\u679c\u3002\u4e24\u4e2a\u6a21\u578b\u5e94\u57fa\u672c\u91cd\u53e0\uff0c\u518d\u505aICP\uff0c\u83b7\u5f97\u7cbe\u786e\u7684\u53d8\u6362\u77e9\u9635\u3002</p> <ul> <li>\u672c\u4f8b\u5b50\u7684\u8f93\u5165\u6570\u636e\u4e0d\u6b63\u786e\uff01\u4e24\u4e2a\u6a21\u578b\u6ca1\u6709\u505a\u4efb\u4f55\u5904\u7406\uff0c\u79bb\u7684\u592a\u8fdc\uff0cICP\u4e0d\u662f\u5e94\u7528\u8fd9\u79cd\u573a\u666f\u4e0b\u7684\u3002\u4f46\u6b64\u4f8b\u5b50\u4e5f\u80fd\u8dd1\u51fa\u6765\u7ed3\u679c\uff0c\u8fd9\u5012\u662f\u5f88\u610f\u5916\u7684\u4e8b\u60c5\uff0c\u5b83\u521a\u597d\u7528ICP\u539f\u7406\u6765\u505a\u662f\u6b63\u786e\u7684\u3002</li> </ul> <p></p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include \"opencv2/core/utility.hpp\"\n#include \"opencv2\\opencv_modules.hpp\"\n#include \"opencv2\\surface_matching.hpp\"\n#include \"opencv2\\surface_matching\\ppf_helpers.hpp\"\nusing namespace std;\nusing namespace cv;\nusing namespace cv::ppf_match_3d;\nint main(int argc, char** argv)\n{\nstring modelAPath = DATA_PATH \"ICP/1.ply\";\nstring modelBPath = DATA_PATH \"ICP/2.ply\";\nstring modelATransformPath = DATA_PATH \"ICP/1_transform.ply\";\nMat modelA = loadPLYSimple(modelAPath.c_str(), 1);\n//Mat\u662f6*N\u7684\u77e9\u9635\uff0c\u5305\u542bN\u4e2a\u9876\u70b9\uff0c6\u8868\u793a\uff1a\u70b9xyz \u6cd5\u5411\u91cfxyz\nMat modelB = loadPLYSimple(modelBPath.c_str(), 1);\nICP icp(100, 0.005f, 2.5f, 8);\nint64 t1 = cv::getTickCount();\ndouble residual;\nMatx44d pose;\nicp.registerModelToScene(modelA, modelB, residual, pose);\nstd::cout &lt;&lt; \"ICP residual \" &lt;&lt; residual &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"ICP pose \" &lt;&lt; pose &lt;&lt; std::endl;\nMat result = transformPCPose(modelA, pose);\nwritePLY(result, modelATransformPath.c_str());\nint64 t2 = cv::getTickCount();\ncout &lt;&lt; endl &lt;&lt; \"ICP Elapsed Time \" &lt;&lt; (t2 - t1) / cv::getTickFrequency() &lt;&lt; \" sec\" &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>ICP residual 0.019302\nICP pose [0.9999801698090472, -9.037320064110299e-05, 0.0062969692196677, 1.765833327267956;\n 8.518909416652164e-05, 0.9999996572676749, 0.0008235334548834371, 0.134204716080859;\n -0.006297041486846941, -0.0008229806909539528, 0.9999798347823297, -10.98554184876832;\n 0, 0, 0, 1]\n\nICP Elapsed Time 0.0063701 sec\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/ICP/#_9","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>https://docs.opencv.org/4.x/dc/d9b/classcv_1_1ppf__match__3d_1_1ICP.html</li> <li>PPF\u7b97\u6cd5-OpenCV\u4e09\u7ef4\u70b9\u5339\u914d(Surface Matching)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/PPF/","title":"OpenCV SurfaceMatching PPF","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/PPF/#ppf-api","title":"PPF API\u4ecb\u7ecd","text":"<p>PPF3DDetector API</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/PPF/#_1","title":"\u6784\u9020\u51fd\u6570","text":"<pre><code>/**\n * @brief: \u521b\u5efa3D PPF \u7279\u5f81\u68c0\u6d4b\u5668\uff0c\u5e76\u6307\u5b9a\u76f8\u5173\u53c2\u6570\n * @param relativeSamplingStep: \u76f8\u5bf9\u4e8e\u6a21\u578b\u76f4\u5f84\u7684\u91c7\u6837\u6b65\u957f\n    \u5728\u5bf9\u6a21\u578b\u8fdb\u884c\u6a21\u578b\u63cf\u8ff0\u5efa\u6a21\u65f6\uff0c\u7528\u4e8e\u5728\u6a21\u578b\u4e0a\u91c7\u6837\u7684\u6b65\u957f\n        \u503c\u8d8a\u5c0f\uff0c\u6a21\u578b\u8d8a\u7a20\u5bc6\uff0c\u59ff\u6001\u4f30\u8ba1\u8d8a\u51c6\u786e\uff0c\u4f46\u662f\u5185\u5b58\u8981\u6c42\u4ee5\u53ca\u8bad\u7ec3\u65f6\u95f4\u8d8a\u957f\n        \u503c\u8d8a\u5927\uff0c\u6a21\u578b\u8d8a\u7a00\u758f\uff0c\u59ff\u6001\u4f30\u8ba1\u7cbe\u5ea6\u964d\u4f4e\uff0c\u4f46\u662f\u5185\u5b58\u8981\u6c42\u4ee5\u53ca\u8bad\u7ec3\u65f6\u95f4\u548c\u5339\u914d\u65f6\u95f4\u66f4\u77ed\u3002\n * @param relativeDistanceStep: \u76f8\u5bf9\u4e8e\u6a21\u578b\u76f4\u5f84\u7684\u79bb\u6563\u6b65\u957f\n    \u5728\u5bf9\u6a21\u578b\u8fdb\u884c\u6a21\u578b\u63cf\u8ff0\u5efa\u6a21\u65f6\uff0c\u7528\u4e8e\u5bf9PPF\u7279\u5f81\u5411\u91cf\u8fdb\u884c\u79bb\u6563\u5316\u7684\u6b65\u957f\n        \u503c\u8d8a\u5c0f\uff0c\u5219\u79bb\u6563\u5316\u8d8a\u7cbe\u7ec6\uff0c\u54c8\u5e0c\u8868\u8d8a\u5927\uff0c\u4f46\u662f\u54c8\u5e0c\u8868\u6bcf\u4e2abin\u4e4b\u95f4\u7684\u5173\u7cfb\u8d8a\u6a21\u7cca\n        \u503c\u8d8a\u5927\uff0c\u7ec6\u5316\u8d8a\u7c97\u7cd9\uff0c\u54c8\u5e0c\u8868\u8d8a\u5c0f\uff0c\u4f46\u662f\u4e24\u4e2a\u4e0d\u540cPPF\u7279\u5f81\u5411\u91cf\u53ef\u80fd\u4f1a\u56e0\u4e3a\u8fc7\u5927\u7684\u6b65\u957f\u800c\u88ab\u653e\n \u5165\u76f8\u540c\u7684\u54c8\u5e0c\u69fd\u4e2d\u3002\n        \u9ed8\u8ba4\u8be5\u503c\u4e0e 'relativeSamplingStep'\u76f8\u540c\n        \u5bf9\u4e8e\u5b58\u5728\u8f83\u591a\u566a\u58f0\u7684\u573a\u666f\uff0c\u8be5\u53c2\u6570\u53ef\u4ee5\u8bbe\u5f97\u8f83\u5927\u4ee5\u63d0\u9ad8\u5bf9\u566a\u70b9\u7684\u9c81\u68d2\u6027\n  *@param numAngles:\n      \u5728PPF\u7279\u5f81\u68c0\u6d4b\u7684'voting scheme' \u6b65\u9aa4\u4e2d\uff0c\u9700\u8981\u5bf9\u89d2\u5ea6\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u4ece\u800c\u5f97\u4ee5\u4f7f\u7528GHT\u7b97\u6cd5\u3002\n      \u89d2\u5ea6\u79bb\u6563\u5316\u7684\u533a\u95f4\u6570\u5373\u4e3a 'numAngles'\u3002\n      \u53c2\u8003\u8bba\u6587\u4e2d\u5efa\u8bae\u503c\u4e3a'30'\uff0c\u5bf9\u4e8e\u5b58\u5728\u8f83\u591a\u566a\u58f0\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u5c06\u8be5\u53c2\u6570\u8bbe\u4e3a '25' \u6216 '20' \u4ee5\u63d0\u9ad8\u5bf9\u566a\u70b9\u7684\u9c81\u68d2\u6027\u3002\n */\ncv::ppf_match_3d::PPF3DDetector::PPF3DDetector ( const double    relativeSamplingStep,\nconst double    relativeDistanceStep = 0.05,\nconst double    numAngles = 30 )\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/PPF/#_2","title":"\u8bad\u7ec3\u6a21\u578b","text":"<pre><code>/**\n * @brief: \u4f7f\u7528\u8f93\u5165\u7684 'Model' \u6570\u636e\uff0c\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u6a21\u578b\n * @param Model: \u6a21\u578b\u76843D\u5750\u6807+\u6cd5\u5411\u91cf\u70b9\u96c6(Nx6, CV_32F)\n */\nvoid cv::ppf_match_3d::PPF3DDetector::trainModel (const Mat &amp;Model)\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/PPF/#_3","title":"\u5339\u914d","text":"<pre><code>/**\n * @brief: \u5728\u63d0\u4f9b\u7684\u573a\u666f 'scene' \u4e2d\uff0c\u4f7f\u7528\u4ee5\u8bad\u7ec3\u7684\u6a21\u578b\u8fdb\u884c\u5339\u914d\uff0c\u5e76\u8fd4\u56de\u5339\u914d\u5f97\u5230\u7684\u6240\u6709\u53ef\u80fd\u59ff\u6001\n * @param scene: \u76ee\u6807\u573a\u666f\u76843D\u5750\u6807+\u6cd5\u5411\u91cf\u70b9\u96c6(Nx6, CV_32F)\n * @param results: \u6700\u7ec8\u6c42\u5f97\u7684\u59ff\u6001\u5217\u8868\u3002\n * @param relativeSceneSampleStep: \n     \u76f8\u5bf9\u4e8e\u573a\u666f\u70b9\u96c6\u6570\u91cf\u7684\u91c7\u6837\u6b65\u957f\u3002\n     \u5982\u679c\u8bbe\u4e3a 1.0/5.0\uff0c\u5219\u573a\u666f\u70b9\u96c6\u4e2d\u7684 5-th \u7684\u70b9\u88ab\u7528\u4e8e\u8ba1\u7b97\u3002\u8be5\u53c2\u6570\u63d0\u4f9b\u4e86\u4e00\u79cd\u8c03\u6574\u7b97\u6cd5\u901f\u5ea6\u548c\u7cbe\u5ea6\u7684\u65b9\u6cd5\u3002\u8f83\u5927\u7684\u503c\u53ef\u4ee5\u63d0\u9ad8\u901f\u5ea6\uff0c\u4f46\u662f\u964d\u4f4e\u7cbe\u5ea6\u3002\u53cd\u4e4b\uff0c\u8f83\u5c0f\u7684\u503c\u4f1a\u63d0\u9ad8\u7cbe\u5ea6\uff0c\u4f46\u964d\u4f4e\u901f\u5ea6\u3002\n * @param relativeSceneDistance: \n     \u76f8\u5bf9\u4e8e\u6a21\u578b\u76f4\u5f84\u7684\u8ddd\u79bb\u9608\u503c\u3002\u53c2\u6570\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684'relativeSamplingStep' \u53c2\u6570\u7684\u4f5c\u7528\u3002\n */\nvoid cv::ppf_match_3d::PPF3DDetector::match (   const Mat &amp;     scene,\nstd::vector&lt; Pose3DPtr &gt; &amp;  results,\nconst double    relativeSceneSampleStep = 1.0/5.0,\nconst double    relativeSceneDistance = 0.03 )  </code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/PPF/#_4","title":"\u793a\u4f8b","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/PPF/#c","title":"C++","text":"<p>\u5b8c\u6574\u4ee3\u7801\uff1aopencv-examples/ppf_match.cpp</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/","title":"OpenCV SurfaceMatching\u6a21\u5757\u7684\u76f8\u5173\u5de5\u5177","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/#_1","title":"\u8ba1\u7b97\u6cd5\u5411\u91cf","text":"<p>OpenCV Compute Normals API</p> <pre><code>/**\n * @brief: \u4f7f\u7528\u5e73\u9762\u62df\u5408\u7684\u65b9\u6cd5\uff0c\u8ba1\u7b97\u4e00\u4e2a3D\u70b9\u4e91\u4e2d\u4efb\u610f\u70b9\u7684\u6cd5\u5411\u91cf\u3002\n * @param PC: \u8f93\u5165\u76843D\u70b9\u4e91\u3002\u5fc5\u987b\u4e3a (Nx3) \u6216 (Nx6)\n * @param PCNormals: \u8f93\u51fa\u70b9\u4e91\u3002(Nx6)\n * @param NumNeighbors: \u5e73\u9762\u62df\u5408\u65f6\u8003\u8651\u7684\u70b9\u7684\u6570\u91cf\n * @param FlipViewpoint: \u5982\u679c\u4e3a 'true'\uff0c\u5219\u8ba1\u7b97\u5f97\u5230\u7684\u6cd5\u5411\u91cf\u4f1a\u88ab\u7ffb\u8f6c\u5230\u6307\u5411 'viewpoint' \u7684\n \u65b9\u5411\u3002\u4e3a 'fasle' \u5219\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\n * @param viewpoint: \u89c6\u70b9\u4f4d\u7f6e\n */\nint cv::ppf_match_3d::computeNormalsPC3d ( const Mat &amp;     PC,\nMat &amp;   PCNormals,\nconst int   NumNeighbors,\nconst bool  FlipViewpoint,\nconst Vec3f &amp;   viewpoint )\n</code></pre> <pre><code>retval, PCNormals = cv.ppf_match_3d.computeNormalsPC3d(\nPC, \nNumNeighbors, \nFlipViewpoint, \nviewpoint\n[, PCNormals] \n)\n</code></pre> <p>\u793a\u4f8b <pre><code>  cv::Mat points, pointsAndNormals;\ncout &lt;&lt; \"Loading points\\n\";\ncv::ppf_match_3d::loadPLYSimple(modelFileName.c_str(), 1).copyTo(points);\ncout &lt;&lt; \"Computing normals\\n\";\ncv::Vec3d viewpoint(0, 0, 0);\ncv::ppf_match_3d::computeNormalsPC3d(points, pointsAndNormals, 6, false, viewpoint);\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/OpenCV%20SurfaceMatching/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/#plyloadplysimple","title":"\u8bfb\u53d6Ply\u6570\u636e\uff08loadPLYSimple\uff09","text":"<p>\u53ef\u53c2\u8003<code>loadPLYSimple</code>\u51fd\u6570\uff0c\u5c06\u81ea\u5df1\u7684\u6570\u636e\u7ed3\u6784\u8f6c\u6210<code>Mat</code>\u3002</p> <pre><code>Mat loadPLYSimple(const char* fileName, int withNormals)\n{\nMat cloud;\nint numVertices = 0;\nint numCols = 3;\nint has_normals = 0;\nstd::ifstream ifs(fileName);\nif (!ifs.is_open())\nCV_Error(Error::StsError, String(\"Error opening input file: \") + String(fileName) + \"\\n\");\nstd::string str;\nwhile (str.substr(0, 10) != \"end_header\")\n{\nstd::vector&lt;std::string&gt; tokens = split(str,' ');\nif (tokens.size() == 3)\n{\nif (tokens[0] == \"element\" &amp;&amp; tokens[1] == \"vertex\")\n{\nnumVertices = atoi(tokens[2].c_str());\n}\nelse if (tokens[0] == \"property\")\n{\nif (tokens[2] == \"nx\" || tokens[2] == \"normal_x\")\n{\nhas_normals = -1;\nnumCols += 3;\n}\nelse if (tokens[2] == \"r\" || tokens[2] == \"red\")\n{\n//has_color = true;\nnumCols += 3;\n}\nelse if (tokens[2] == \"a\" || tokens[2] == \"alpha\")\n{\n//has_alpha = true;\nnumCols += 1;\n}\n}\n}\nelse if (tokens.size() &gt; 1 &amp;&amp; tokens[0] == \"format\" &amp;&amp; tokens[1] != \"ascii\")\nCV_Error(Error::StsBadArg, String(\"Cannot read file, only ascii ply format is currently supported...\"));\nstd::getline(ifs, str);\n}\nwithNormals &amp;= has_normals;\ncloud = Mat(numVertices, withNormals ? 6 : 3, CV_32FC1);\nfor (int i = 0; i &lt; numVertices; i++)\n{\nfloat* data = cloud.ptr&lt;float&gt;(i);\nint col = 0;\nfor (; col &lt; (withNormals ? 6 : 3); ++col)\n{\nifs &gt;&gt; data[col];\n}\nfor (; col &lt; numCols; ++col)\n{\nfloat tmp;\nifs &gt;&gt; tmp;\n}\nif (withNormals)\n{\n// normalize to unit norm\ndouble norm = sqrt(data[3]*data[3] + data[4]*data[4] + data[5]*data[5]);\nif (norm&gt;0.00001)\n{\ndata[3]/=static_cast&lt;float&gt;(norm);\ndata[4]/=static_cast&lt;float&gt;(norm);\ndata[5]/=static_cast&lt;float&gt;(norm);\n}\n}\n}\n//cloud *= 5.0f;\nreturn cloud;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/PCL%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/","title":"PCL\u70b9\u4e91\u914d\u51c6","text":"<p>PCL\u5e93\u4e2d\u5305\u542b\u4e86\u8bb8\u591a\u70b9\u4e91\u914d\u51c6\u7684\u7b97\u6cd5\uff0c\u6db5\u76d6\u7c97\u914d\u51c6\u4e0e\u7cbe\u914d\u51c6\u3002</p> <p></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%82%B9%E4%BA%91%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98/%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/PCL%E7%82%B9%E4%BA%91%E9%85%8D%E5%87%86/#_1","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>\u70b9\u4e91\u914d\u51c6\u2014\u2014\uff081\uff09\u51e0\u79cd\u70b9\u4e91\u914d\u51c6\u7b97\u6cd5\u6bd4\u8f83_\u5c0f\u4fee\u52fe\u7684\u535a\u5ba2-CSDN\u535a\u5ba2_\u70b9\u4e91\u914d\u51c6\u7b97\u6cd5</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/PCL/","title":"PCL","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/PCL/#pcl","title":"PCL","text":"<p>PCL, Point Cloud Library\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/PCL/#_1","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>PointCloudLibrary/pcl: Point Cloud Library (PCL) (github.com)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/PCL/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/CMake%E5%BC%95%E7%94%A8PCL/","title":"CMake\u5f15\u7528PCL","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/PCL/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/CMake%E5%BC%95%E7%94%A8PCL/#cmakepcl","title":"CMake\u5f15\u7528PCL","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/PCL/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/CMake%E5%BC%95%E7%94%A8PCL/#pcl","title":"\u5f15\u5165PCL","text":"<pre><code>#\n# \u5f15\u5165PCL\n#\nif(WIN32)\nadd_definitions(-D_CRT_SECURE_NO_DEPRECATE)\nfind_path(PCL_DIR PCLConfig.cmake PATHS $ENV{PCL_DIR}\n\"D:/install/PCL 1.13.0\"\n)\nendif()\nfind_package(PCL REQUIRED)\nMESSAGE(STATUS \"[PCL_INCLUDE_DIRS] ${PCL_INCLUDE_DIRS}\")\nMESSAGE(STATUS \"[PCL_LIBRARY_DIRS] ${PCL_LIBRARY_DIRS}\")\nMESSAGE(STATUS \"[PCL_LIBRARIES] ${PCL_LIBRARIES}\")\nMESSAGE(STATUS \"[PCL_DEFINITIONS] ${PCL_DEFINITIONS}\")\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/PCL/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/CMake%E5%BC%95%E7%94%A8PCL/#_1","title":"\u94fe\u63a5","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/PCL/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/CMake%E5%BC%95%E7%94%A8PCL/#pcl_1","title":"\u65b9\u5f0f\u4e00\uff1a\u4f7f\u7528PCL\u81ea\u5e26\u7684\u53d8\u91cf","text":"<pre><code>add_executable(pcd_write_test pcd_write.cpp)\ntarget_include_directories(pcd_write_test PRIVATE ${PCL_INCLUDE_DIRS})\ntarget_link_directories(pcd_write_test PRIVATE ${PCL_LIBRARY_DIRS})\ntarget_link_libraries(pcd_write_test PRIVATE ${PCL_LIBRARIES})\n# add_compile_definitions(PCL PRIVATE ${PCL_DEFINITIONS})\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/PCL/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/CMake%E5%BC%95%E7%94%A8PCL/#target","title":"\u65b9\u6cd5\u4e8c\uff1a\u81ea\u5df1\u521b\u5efaTarget\uff0c\u65b9\u4fbf\u94fe\u63a5","text":"<pre><code># \u81ea\u5df1\u521b\u5efa\u4e00\u4e2aPCL Target\nadd_library(PCL INTERFACE)\ntarget_include_directories(PCL INTERFACE ${PCL_INCLUDE_DIRS})\ntarget_link_directories(PCL INTERFACE ${PCL_LIBRARY_DIRS})\ntarget_link_libraries(PCL INTERFACE ${PCL_LIBRARIES})\n# add_compile_definitions(PCL INTERFACE ${PCL_DEFINITIONS})\n# \u5b50\u5de5\u7a0b\u76f4\u63a5\u5f15\u7528PCL\u5373\u53ef\nadd_executable(pcd_write_test pcd_write.cpp)\ntarget_link_libraries(pcd_write_test PRIVATE PCL)\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E7%82%B9%E4%BA%91/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/PCL/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/CMake%E5%BC%95%E7%94%A8PCL/#pcl_2","title":"\u5bf9\u4e8ePCL\u7684\u4f9d\u8d56\u5e93","text":"<p>\u5982\u679c\u6211\u4eec\u8fd8\u9700\u8981\u4f7f\u7528\u5230PCL\u7684\u4e00\u4e9b\u4f9d\u8d56\u5e93\uff0c\u5982boost\u7b49\u3002 \u8fd9\u5c31\u9700\u8981\u6211\u4eec\u624b\u52a8\u94fe\u63a5\u5b83\u4eec\uff0c\u56e0\u4e3a<code>${PCL_LIBRARIES}</code>\u53d8\u91cf\u4e2d\u5e76\u4e0d\u5305\u542b<code>boost</code>\u3002</p> <pre><code>find_package(PCL REQUIRED)\n# \u5728PCL find_package\u4e4b\u540e\u5373\u53ef\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5c06\u4f9d\u8d56\u5e93\u7684\u76f8\u5173\u5185\u5bb9\u52a0\u5165\u8fdb\u6765\nfind_package(Boost REQUIRED COMPONENTS thread)\n# \n# \u94fe\u63a5 \n#\nadd_executable(pcd_write_test pcd_write.cpp)\ntarget_link_libraries(pcd_write_test PRIVATE PCL Boost::thread #\u624b\u52a8\u94fe\u63a5\n)\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/","title":"\u9762\u7f51\u683c\u7b80\u5316","text":"","tags":["mesh decimation","mesh optimizer","mesh simplification","mesh approximation"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/#_1","title":"\u7b97\u6cd5","text":"\u7b97\u6cd5 \u8bf4\u660e \u8bc4\u4ef7 \u9876\u70b9\u805a\u7c7b\u7b97\u6cd5 \u62e5\u6709\u5f88\u9ad8\u7684\u6548\u7387\u548c\u9c81\u68d2\u6027(Robust)\uff0c\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u662f\u7ebf\u6027\u7684\u5176\u7f3a\u70b9\u5728\u4e8e\u751f\u6210\u7f51\u683c\u7684\u8d28\u91cf\u4e0d\u662f\u7279\u522b\u4ee4\u4eba\u6ee1\u610f\u3002 \u589e\u91cf\u7b97\u6cd5 \u901a\u8fc7\u4e0d\u65ad\u5730\u8fed\u4ee3\u6765\u9010\u6e10\u79fb\u9664\u6389\u7f51\u683c\u4e0a\u7684\u9876\u70b9 \u751f\u6210\u7684\u7f51\u683c\u8d28\u91cf\u5f88\u9ad8\uff0c\u5e76\u4e14\u6bcf\u6b21\u8fed\u4ee3\u7684\u8fc7\u7a0b\u4e2d\u80fd\u591f\u4f7f\u7528\u4efb\u610f\u7528\u6237\u5b9a\u4e49\u7684\u6807\u51c6\u6765\u8fdb\u884c\u4e0b\u6b21\u7b80\u5316\u7f51\u683c\u64cd\u4f5c\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u4e3aO(nlogn)\uff0c\u6700\u5dee\u590d\u6742\u5ea6\u4e3aO(n\u00b2) \u91cd\u91c7\u6837 \u6700\u5e38\u7528\u7684\u7b97\u6cd5\u3002\u65b0\u7684\u91c7\u6837\u70b9\u88ab\u653e\u7f6e\u5728\u7f51\u683c\u66f2\u9762\u4e0a\uff0c\u901a\u8fc7\u91cd\u91c7\u6837\uff0c\u83b7\u5f97\u6211\u4eec\u60f3\u8981\u7684\u7f51\u683c\u8fde\u63a5\u7ed3\u6784 \u5982\u679c\u91c7\u6837\u6a21\u5f0f\u4e0e\u7f51\u683c\u533a\u57df\u6ca1\u6709\u5bf9\u9f50\uff0c\u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0\u8d70\u6837(Aliasing)\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u5c06\u7f51\u683c\u6839\u636e\u5176\u7279\u5f81\u5c06\u5176\u5206\u5272\u4e3a\u4e0d\u540c\u7684\u533a\u57df\u3002 \u7f51\u683c\u903c\u8fd1 \u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u7f51\u683c\u4f18\u5316\u7b56\u7565\u6765\u6700\u5c0f\u5316\u67d0\u4e2a\u5b9a\u4e49\u660e\u786e\u7684\u9519\u8bef\u91cf","tags":["mesh decimation","mesh optimizer","mesh simplification","mesh approximation"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/#_2","title":"\u8f6f\u4ef6\u4e0e\u5de5\u5177","text":"\u8f6f\u4ef6\u540d \u5de5\u5177\u540d \u8bf4\u660e Meshlab <code>Filters &gt; Remeshing, Simplification and Reconstruction &gt; Simplification: Quadric Edge Collapse Decimation(with texture)</code>","tags":["mesh decimation","mesh optimizer","mesh simplification","mesh approximation"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/#_3","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>Polygon Mesh Processing\u9605\u8bfb\u7b14\u8bb0\uff087\uff09 \u7f51\u683c\u7684\u7b80\u5316\u4e0e\u903c\u8fd1\uff08Simplification&amp;Approximation\uff09</li> </ol>","tags":["mesh decimation","mesh optimizer","mesh simplification","mesh approximation"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/","title":"meshoptimizer","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/#_1","title":"\u7b80\u4ecb","text":"<p>When a GPU renders triangle meshes, various stages of the GPU pipeline have to process vertex and index data. The efficiency of these stages depends on the data you feed to them; this library provides algorithms to help optimize meshes for these stages, as well as algorithms to reduce the mesh complexity and storage overhead.</p> <p>\u5f53GPU\u6e32\u67d3\u4e09\u89d2\u7f51\u65f6\uff0c\u5728GPU\u7ba1\u7ebf\u4e2d\u6709\u5f88\u591a\u4e2a\u9636\u6bb5\u9700\u8981\u5904\u7406\u9876\u70b9\u548c\u7d22\u5f15\u6570\u636e\uff0c\u8fd9\u4e9b\u9636\u6bb5\u7684\u6548\u7387\u53d6\u51b3\u4e8e\u4f60\u63d0\u4f9b\u7ed9GPU\u7684\u6570\u636e\u3002\u6b64\u5e93\u63d0\u4f9b\u4e86\u5e2e\u52a9\u4f18\u5316\u8fd9\u4e9b\u9636\u6bb5\u7684\u7f51\u683c\u7b97\u6cd5\uff0c\u4ee5\u53ca\u964d\u4f4e\u7f51\u683c\u590d\u6742\u5ea6\u548c\u5b58\u50a8\u5f00\u9500\u7684\u7b97\u6cd5\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/#_2","title":"\u76f8\u5173\u7f51\u7ad9","text":"<ol> <li>meshoptimizer github</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/Deinterleaved%20geometry/","title":"Deinterleaved geometry","text":"<p>All of the examples above assume that geometry is represented as a single vertex buffer and a single index buffer. This requires storing all vertex attributes - position, normal, texture coordinate, skinning weights etc. - in a single contiguous struct. However, in some cases using multiple vertex streams may be preferable. In particular, if some passes require only positional data - such as depth pre-pass or shadow map - then it may be beneficial to split it from the rest of the vertex attributes to make sure the bandwidth use during these passes is optimal. On some mobile GPUs a position-only attribute stream also improves efficiency of tiling algorithms.</p> <p>Most of the functions in this library either only need the index buffer (such as vertex cache optimization) or only need positional information (such as overdraw optimization). However, several tasks require knowledge about all vertex attributes.</p> <p>For indexing, <code>meshopt_generateVertexRemap</code> assumes that there's just one vertex stream; when multiple vertex streams are used, it's necessary to use <code>meshopt_generateVertexRemapMulti</code> as follows:</p> <pre><code>meshopt_Stream streams[] = {\n{&amp;unindexed_pos[0], sizeof(float) * 3, sizeof(float) * 3},\n{&amp;unindexed_nrm[0], sizeof(float) * 3, sizeof(float) * 3},\n{&amp;unindexed_uv[0], sizeof(float) * 2, sizeof(float) * 2},\n};\nstd::vector&lt;unsigned int&gt; remap(index_count);\nsize_t vertex_count = meshopt_generateVertexRemapMulti(&amp;remap[0], NULL, index_count, index_count, streams, sizeof(streams) / sizeof(streams[0]));\n</code></pre> <p>After this <code>meshopt_remapVertexBuffer</code> needs to be called once for each vertex stream to produce the correctly reindexed stream.</p> <p>Instead of calling <code>meshopt_optimizeVertexFetch</code> for reordering vertices in a single vertex buffer for efficiency, calling <code>meshopt_optimizeVertexFetchRemap</code> and then calling <code>meshopt_remapVertexBuffer</code> for each stream again is recommended.</p> <p>Finally, when compressing vertex data, <code>meshopt_encodeVertexBuffer</code> should be used on each vertex stream separately - this allows the encoder to best utilize corellation between attribute values for different vertices.</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/Mesh%20shading/","title":"Mesh shading","text":"<p>Modern GPUs are beginning to deviate from the traditional rasterization model. NVidia GPUs starting from Turing and AMD GPUs starting from RDNA2 provide a new programmable geometry pipeline that, instead of being built around index buffers and vertex shaders, is built around mesh shaders - a new shader type that allows to provide a batch of work to the rasterizer.</p> <p>Using mesh shaders in context of traditional mesh rendering provides an opportunity to use a variety of optimization techniques, starting from more efficient vertex reuse, using various forms of culling (e.g. cluster frustum or occlusion culling) and in-memory compression to maximize the utilization of GPU hardware. Beyond traditional rendering mesh shaders provide a richer programming model that can synthesize new geometry more efficiently than common alternatives such as geometry shaders. Mesh shading can be accessed via Vulkan or Direct3D 12 APIs; please refer to Introduction to Turing Mesh Shaders and Mesh Shaders and Amplification Shaders: Reinventing the Geometry Pipeline for additional information.</p> <p>To use mesh shaders for conventional rendering efficiently, geometry needs to be converted into a series of meshlets; each meshlet represents a small subset of the original mesh and comes with a small set of vertices and a separate micro-index buffer that references vertices in the meshlet. This information can be directly fed to the rasterizer from the mesh shader. This library provides algorithms to create meshlet data for a mesh, and - assuming geometry is static - can compute bounding information that can be used to perform cluster culling, a technique that can reject a meshlet if it's invisible on screen.</p> <p>To generate meshlet data, this library provides two algorithms - <code>meshopt_buildMeshletsScan</code>, which creates the meshlet data using a vertex cache-optimized index buffer as a starting point by greedily aggregating consecutive triangles until they go over the meshlet limits, and <code>meshopt_buildMeshlets</code>, which doesn't depend on any other algorithms and tries to balance topological efficiency (by maximizing vertex reuse inside meshlets) with culling efficiency (by minimizing meshlet radius and triangle direction divergence). <code>meshopt_buildMeshlets</code> is recommended in cases when the resulting meshlet data will be used in cluster culling algorithms.</p> <pre><code>const size_t max_vertices = 64;\nconst size_t max_triangles = 124;\nconst float cone_weight = 0.0f;\nsize_t max_meshlets = meshopt_buildMeshletsBound(indices.size(), max_vertices, max_triangles);\nstd::vector&lt;meshopt_Meshlet&gt; meshlets(max_meshlets);\nstd::vector&lt;unsigned int&gt; meshlet_vertices(max_meshlets * max_vertices);\nstd::vector&lt;unsigned char&gt; meshlet_triangles(max_meshlets * max_triangles * 3);\nsize_t meshlet_count = meshopt_buildMeshlets(meshlets.data(), meshlet_vertices.data(), meshlet_triangles.data(), indices.data(),\nindices.size(), &amp;vertices[0].x, vertices.size(), sizeof(Vertex), max_vertices, max_triangles, cone_weight);\n</code></pre> <p>To generate the meshlet data, <code>max_vertices</code> and <code>max_triangles</code> need to be set within limits supported by the hardware; for NVidia the values of 64 and 124 are recommended. <code>cone_weight</code> should be left as 0 if cluster cone culling is not used, and set to a value between 0 and 1 to balance cone culling efficiency with other forms of culling like frustum or occlusion culling.</p> <p>Each resulting meshlet refers to a portion of <code>meshlet_vertices</code> and <code>meshlet_triangles</code> arrays; this data can be uploaded to GPU and used directly after trimming:</p> <pre><code>const meshopt_Meshlet&amp; last = meshlets[meshlet_count - 1];\nmeshlet_vertices.resize(last.vertex_offset + last.vertex_count);\nmeshlet_triangles.resize(last.triangle_offset + ((last.triangle_count * 3 + 3) &amp; ~3));\nmeshlets.resize(meshlet_count);\n</code></pre> <p>However depending on the application other strategies of storing the data can be useful; for example, <code>meshlet_vertices</code> serves as indices into the original vertex buffer but it might be worthwhile to generate a mini vertex buffer for each meshlet to remove the extra indirection when accessing vertex data, or it might be desirable to compress vertex data as vertices in each meshlet are likely to be very spatially coherent.</p> <p>After generating the meshlet data, it's also possible to generate extra data for each meshlet that can be saved and used at runtime to perform cluster culling, where each meshlet can be discarded if it's guaranteed to be invisible. To generate the data, <code>meshlet_computeMeshletBounds</code> can be used:</p> <pre><code>meshopt_Bounds bounds = meshopt_computeMeshletBounds(&amp;meshlet_vertices[m.vertex_offset], &amp;meshlet_triangles[m.triangle_offset],\nm.triangle_count, &amp;vertices[0].x, vertices.size(), sizeof(Vertex));\n</code></pre> <p>The resulting <code>bounds</code> values can be used to perform frustum or occlusion culling using the bounding sphere, or cone culling using the cone axis/angle (which will reject the entire meshlet if all triangles are guaranteed to be back-facing from the camera point of view):</p> <pre><code>if (dot(normalize(cone_apex - camera_position), cone_axis) &gt;= cone_cutoff) reject();\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E4%B8%89%E8%A7%92%E6%9D%A1%E5%B8%A6%E8%BD%AC%E6%8D%A2/","title":"\u4e09\u89d2\u6761\u5e26\u8f6c\u6362","text":"<p>On most hardware, indexed triangle lists are the most efficient way to drive the GPU. However, in some cases triangle strips might prove beneficial:</p> <ul> <li>On some older GPUs, triangle strips may be a bit more efficient to render</li> <li>On extremely memory constrained systems, index buffers for triangle strips could save a bit of memory</li> </ul> <p>This library provides an algorithm for converting a vertex cache optimized triangle list to a triangle strip:</p> <pre><code>std::vector&lt;unsigned int&gt; strip(meshopt_stripifyBound(index_count));\nunsigned int restart_index = ~0u;\nsize_t strip_size = meshopt_stripify(&amp;strip[0], indices, index_count, vertex_count, restart_index);\n</code></pre> <p>Typically you should expect triangle strips to have ~50-60% of indices compared to triangle lists (~1.5-1.8 indices per triangle) and have ~5% worse ACMR. Note that triangle strips can be stitched with or without restart index support. Using restart indices can result in ~10% smaller index buffers, but on some GPUs restart indices may result in decreased performance.</p> <p>To reduce the triangle strip size further, it's recommended to use <code>meshopt_optimizeVertexCacheStrip</code> instead of <code>meshopt_optimizeVertexCache</code> when optimizing for vertex cache. This trades off some efficiency in vertex transform for smaller index buffers.</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7/","title":"\u5176\u4ed6\u5de5\u5177","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7/#_1","title":"\u6027\u80fd\u5206\u6790\u5668","text":"<p>While the only way to get precise performance data is to measure performance on the target GPU, it can be valuable to measure the impact of these optimization in a GPU-independent manner. To this end, the library provides analyzers for all three major optimization routines. For each optimization there is a corresponding analyze function, like <code>meshopt_analyzeOverdraw</code>, that returns a struct with statistics.</p> <p><code>meshopt_analyzeVertexCache</code> returns vertex cache statistics. The common metric to use is ACMR - average cache miss ratio, which is the ratio of the total number of vertex invocations to the triangle count. The worst-case ACMR is 3 (GPU has to process 3 vertices for each triangle); on regular grids the optimal ACMR approaches 0.5. On real meshes it usually is in [0.5..1.5] range depending on the amount of vertex splits. One other useful metric is ATVR - average transformed vertex ratio - which represents the ratio of vertex shader invocations to the total vertices, and has the best case of 1.0 regardless of mesh topology (each vertex is transformed once).</p> <p><code>meshopt_analyzeVertexFetch</code> returns vertex fetch statistics. The main metric it uses is overfetch - the ratio between the number of bytes read from the vertex buffer to the total number of bytes in the vertex buffer. Assuming non-redundant vertex buffers, the best case is 1.0 - each byte is fetched once.</p> <p><code>meshopt_analyzeOverdraw</code> returns overdraw statistics. The main metric it uses is overdraw - the ratio between the number of pixel shader invocations to the total number of covered pixels, as measured from several different orthographic cameras. The best case for overdraw is 1.0 - each pixel is shaded once.</p> <p>Note that all analyzers use approximate models for the relevant GPU units, so the numbers you will get as the result are only a rough approximation of the actual performance.</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7/#_2","title":"\u5185\u5b58\u7ba1\u7406","text":"<p>Many algorithms allocate temporary memory to store intermediate results or accelerate processing. The amount of memory allocated is a function of various input parameters such as vertex count and index count. By default memory is allocated using <code>operator new</code> and <code>operator delete</code>; if these operators are overloaded by the application, the overloads will be used instead. Alternatively it's possible to specify custom allocation/deallocation functions using <code>meshopt_setAllocator</code>, e.g.</p> <pre><code>meshopt_setAllocator(malloc, free);\n</code></pre> <p>Note that the library expects the allocation function to either throw in case of out-of-memory (in which case the exception will propagate to the caller) or abort, so technically the use of <code>malloc</code> above isn't safe. If you want to handle out-of-memory errors without using C++ exceptions, you can use <code>setjmp</code>/<code>longjmp</code> instead.</p> <p>Vertex and index decoders (<code>meshopt_decodeVertexBuffer</code>, <code>meshopt_decodeIndexBuffer</code>, <code>meshopt_decodeIndexSequence</code>) do not allocate memory and work completely within the buffer space provided via arguments.</p> <p>All functions have bounded stack usage that does not exceed 32 KB for any algorithms.</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E7%82%B9%E4%BA%91%E5%8E%8B%E7%BC%A9/","title":"\u70b9\u4e91\u538b\u7f29","text":"<p>The vertex encoding algorithms can be used to compress arbitrary streams of attribute data; one other use case besides triangle meshes is point cloud data. Typically point clouds come with position, color and possibly other attributes but don't have an implied point order.</p> <p>To compress point clouds efficiently, it's recommended to first preprocess the points by sorting them using the spatial sort algorithm:</p> <pre><code>std::vector&lt;unsigned int&gt; remap(point_count);\nmeshopt_spatialSortRemap(&amp;remap[0], positions, point_count, sizeof(vec3));\n// for each attribute stream\nmeshopt_remapVertexBuffer(positions, positions, point_count, sizeof(vec3), &amp;remap[0]);\n</code></pre> <p>After this the resulting arrays should be quantized (e.g. using 16-bit fixed point numbers for positions and 8-bit color components), and the result can be compressed using <code>meshopt_encodeVertexBuffer</code> as described in the previous section. To decompress, <code>meshopt_decodeVertexBuffer</code> will recover the quantized data that can be used directly or converted back to original floating-point data. The compression ratio depends on the nature of source data, for colored points it's typical to get 35-40 bits per point as a result.</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E9%92%88%E5%AF%B9%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%9A%84%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/","title":"\u9488\u5bf9\u6e32\u67d3\u7ba1\u7ebf\u7684\u4f18\u5316\u7b97\u6cd5","text":"<p>\u8fd9\u90e8\u5206\u662fmeshoptimizer\u9488\u5bf9\u6e32\u67d3\u7ba1\u7ebf\u6240\u63d0\u51fa\u7684\u4f18\u5316\u7b97\u6cd5\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E9%92%88%E5%AF%B9%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%9A%84%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/#_1","title":"\u6570\u636e\u5904\u7406\u6d41\u7a0b","text":"<p>When optimizing a mesh, you should typically feed it through a set of optimizations (the order is important!): 1.  Indexing 2.  (optional, discussed last) Simplification 3.  Vertex cache optimization 4.  Overdraw optimization 5.  Vertex fetch optimization 6.  Vertex quantization 7.  (optional) Vertex/index buffer compression</p> <p>\u5f53\u4f18\u5316\u4e00\u4e2a\u7f51\u683c\u65f6\uff0c\u4f60\u901a\u5e38\u9700\u8981\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u4f18\u5316\u64cd\u4f5c\uff08\u987a\u5e8f\u662f\u5f88\u91cd\u8981\u7684\uff09\uff1a</p> <ol> <li>\u5efa\u7acb\u7d22\u5f15</li> <li>\uff08\u53ef\u9009\uff09\u7b80\u5316</li> <li>\u9876\u70b9\u7f13\u5b58\u7684\u4f18\u5316</li> <li>\u8fc7\u5ea6\u7ed8\u5236\u4f18\u5316</li> <li>\u9876\u70b9\u83b7\u53d6\u4f18\u5316</li> <li>\u9876\u70b9\u91cf\u5316</li> <li>\uff08\u53ef\u9009\uff09\u9876\u70b9/\u7d22\u5f15\u7f13\u51b2\u533a\u538b\u7f29</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E9%92%88%E5%AF%B9%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%9A%84%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/#_2","title":"\u5efa\u7acb\u7d22\u5f15","text":"<p>Most algorithms in this library assume that a mesh has a vertex buffer and an index buffer. For algorithms to work well and also for GPU to render your mesh efficiently, the vertex buffer has to have no redundant vertices; you can generate an index buffer from an unindexed vertex buffer or reindex an existing (potentially redundant) index buffer as follows:</p> <p>\u6b64\u5e93\u7684\u5927\u591a\u6570\u7b97\u6cd5\u90fd\u8981\u6c42\u7f51\u683c\u6709\u9876\u70b9\u7f13\u51b2\u533a\u548c\u7d22\u5f15\u7f13\u51b2\u533a\u3002\u4e3a\u4e86\u8ba9GPU\u6709\u6548\u5730\u6e32\u67d3\u4f60\u7684\u7f51\u683c\uff0c\u9876\u70b9\u7f13\u51b2\u533a\u4e2d\u5fc5\u987b\u6ca1\u6709\u591a\u4f59\u7684\u9876\u70b9\u3002</p> <p>\u4f60\u53ef\u4ee5</p> <ol> <li>\u4ece\u6ca1\u6709\u5efa\u7acb\u7d22\u5f15\u7684\u9876\u70b9\u7f13\u51b2\u533a\u5f53\u4e2d\u5efa\u7acb\u7d22\u5f15</li> <li>\u4e5f\u53ef\u4ee5\u4ece\u5df2\u6709\u7d22\u5f15\u7f13\u51b2\u533a\uff08\u4f46\u6709\u591a\u4f59\u9876\u70b9\uff09\u4e2d\u91cd\u65b0\u5efa\u7acb\u7d22\u5f15\u7f13\u51b2\u533a</li> </ol> <pre><code>size_t index_count = face_count * 3;\nstd::vector&lt;unsigned int&gt; remap(index_count); // allocate temporary memory for the remap table\nsize_t vertex_count = meshopt_generateVertexRemap(\n&amp;remap[0], NULL, index_count, &amp;unindexed_vertices[0], index_count, sizeof(Vertex));\n</code></pre> <p>Note that in this case we only have an unindexed vertex buffer; the remap table is generated based on binary equivalence of the input vertices, so the resulting mesh will render the same way. Binary equivalence considers all input bytes, including padding which should be zero-initialized if the vertex structure has gaps.</p> <p>After generating the remap table, you can allocate space for the target vertex buffer (<code>vertex_count</code>\u00a0elements) and index buffer (<code>index_count</code>\u00a0elements) and generate them:</p> <pre><code>meshopt_remapIndexBuffer(\nindices, NULL, index_count, &amp;remap[0]);\nmeshopt_remapVertexBuffer(\nvertices, &amp;unindexed_vertices[0], index_count, sizeof(Vertex), &amp;remap[0]);\n</code></pre> <p>You can then further optimize the resulting buffers by calling the other functions on them in-place.</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E9%92%88%E5%AF%B9%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%9A%84%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/#_3","title":"\u9876\u70b9\u7f13\u5b58\u4f18\u5316","text":"<p>When the GPU renders the mesh, it has to run the vertex shader for each vertex; usually GPUs have a built-in fixed size cache that stores the transformed vertices (the result of running the vertex shader), and uses this cache to reduce the number of vertex shader invocations. This cache is usually small, 16-32 vertices, and can have different replacement policies; to use this cache efficiently, you have to reorder your triangles to maximize the locality of reused vertex references like so:</p> <p>\u5f53GPU\u6e32\u67d3\u7f51\u683c\u65f6\uff0c\u5b83\u4f1a\u4e3a\u6240\u6709\u9876\u70b9\u8fd0\u884c\u4e00\u6b21\u9876\u70b9\u7740\u8272\u5668\u3002\u901a\u5e38GPU\u6709\u4e00\u4e2a\u5185\u7f6e\u56fa\u5b9a\u5927\u5c0f\u7684\u7f13\u5b58\u6765\u5b58\u50a8\u8f6c\u6362\u540e\u7684\u9876\u70b9\uff08\u8fd0\u884c\u9876\u70b9\u7740\u8272\u5668\u7684\u7ed3\u679c\uff09\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e2a\u7f13\u5b58\u6765\u51cf\u5c11\u8c03\u7528\u9876\u70b9\u7740\u8272\u5668\u7684\u6b21\u6570\u3002</p> <p>\u8fd9\u4e2a\u7f13\u5b58\u901a\u5e38\u5f88\u5c0f\uff0c\u53ea\u670916-32\u4e2a\u9876\u70b9\uff0c\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u66ff\u6362\u7b56\u7565\uff1b\u4e3a\u4e86\u6709\u6548\u5730\u4f7f\u7528\u8fd9\u4e2a\u7f13\u5b58\uff0c\u4f60\u5fc5\u987b\u91cd\u65b0\u6392\u5217\u4f60\u7684\u4e09\u89d2\u5f62\uff0c\u4ee5\u6700\u5927\u5316\u91cd\u7528\u9876\u70b9\u5f15\u7528\u7684\u5c40\u90e8\u6027\uff0c\u5982\u4e0b\u6240\u793a:</p> <pre><code>meshopt_optimizeVertexCache(indices, indices, index_count, vertex_count);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E9%92%88%E5%AF%B9%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%9A%84%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/#_4","title":"\u8fc7\u5ea6\u7ed8\u5236\u4f18\u5316","text":"<p>After transforming the vertices, GPU sends the triangles for rasterization which results in generating pixels that are usually first ran through the depth test, and pixels that pass it get the pixel shader executed to generate the final color. As pixel shaders get more expensive, it becomes more and more important to reduce overdraw. While in general improving overdraw requires view-dependent operations, this library provides an algorithm to reorder triangles to minimize the overdraw from all directions, which you should run after vertex cache optimization like this:</p> <p>\u5728\u8f6c\u6362\u9876\u70b9\u4e4b\u540e\uff0cGPU\u53d1\u9001\u4e09\u89d2\u5f62\u8fdb\u884c\u5149\u6805\u5316\uff0c\u5148\u751f\u6210\u7528\u4e8e\u6df1\u5ea6\u6d4b\u8bd5\u7684\u6df1\u5ea6\u56fe\uff0c\u901a\u8fc7\u6df1\u5ea6\u6d4b\u8bd5\u7684\u50cf\u7d20\u518d\u6267\u884c\u7247\u5143\u7740\u8272\u5668\uff0c\u4ee5\u751f\u6210\u6700\u7ec8\u7684\u989c\u8272\u3002\u7247\u5143\u7740\u8272\u5668\u7684\u5f00\u9500\u5f88\u5927\uff0c\u5982\u4f55\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u7ed8\u5236\u5f88\u91cd\u8981\u3002</p> <p>\u867d\u7136\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u7ed8\u5236\uff0c\u901a\u5e38\u9700\u8981\u4f9d\u8d56\u4e8e\u89c6\u56fe\u3002\u4f46\u8fd9\u4e2a\u5e93\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b97\u6cd5\u6765\u91cd\u65b0\u6392\u5e8f\u4e09\u89d2\u5f62\uff0c\u4ece\u800c\u6700\u5c0f\u5316\u5404\u4e2a\u65b9\u5411\u4e0a\u7684\u8fc7\u5ea6\u7ed8\u5236\u3002\u4f60\u53ef\u4ee5\u5728\u9876\u70b9\u7f13\u5b58\u4f18\u5316\u4e4b\u540e\u8fd0\u884c\u8fd9\u4e2a\u7b97\u6cd5\uff1a</p> <pre><code>meshopt_optimizeOverdraw(\nindices, indices, index_count, &amp;vertices[0].x, vertex_count, sizeof(Vertex), 1.05f);\n</code></pre> <p>The overdraw optimizer needs to read vertex positions as a float3 from the vertex; the code snippet above assumes that the vertex stores position as\u00a0<code>float x, y, z</code>.</p> <p>When performing the overdraw optimization you have to specify a floating-point threshold parameter. The algorithm tries to maintain a balance between vertex cache efficiency and overdraw; the threshold determines how much the algorithm can compromise the vertex cache hit ratio, with 1.05 meaning that the resulting ratio should be at most 5% worse than before the optimization.</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E9%92%88%E5%AF%B9%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%9A%84%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/#_5","title":"\u9876\u70b9\u83b7\u53d6\u4f18\u5316","text":"<p>After the final triangle order has been established, we still can optimize the vertex buffer for memory efficiency. Before running the vertex shader GPU has to fetch the vertex attributes from the vertex buffer; the fetch is usually backed by a memory cache, and as such optimizing the data for the locality of memory access is important. You can do this by running this code:</p> <p>\u5728\u6700\u7ec8\u7684\u4e09\u89d2\u5f62\u987a\u5e8f\u5efa\u7acb\u4e4b\u540e\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u4f18\u5316\u9876\u70b9\u7f13\u51b2\u533a\u4ee5\u63d0\u9ad8\u5185\u5b58\u6548\u7387\u3002\u5728\u8fd0\u884c\u9876\u70b9\u7740\u8272\u5668\u4e4b\u524d\uff0cGPU\u5fc5\u987b\u4ece\u9876\u70b9\u7f13\u51b2\u533a\u4e2d\u83b7\u53d6\u9876\u70b9\u5c5e\u6027\uff1b\u8bfb\u53d6\u901a\u5e38\u7531\u5185\u5b58\u7f13\u5b58\u652f\u6301\uff0c\u56e0\u6b64\u4f18\u5316\u5185\u5b58\u8bbf\u95ee\u4f4d\u7f6e\u7684\u6570\u636e\u975e\u5e38\u91cd\u8981\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u5b9e\u73b0:</p> <p>To optimize the index/vertex buffers for vertex fetch efficiency, call:</p> <p>\u4e3a\u4e86\u4f18\u5316\u7d22\u5f15/\u9876\u70b9\u7f13\u51b2\u533a\u7684\u9876\u70b9\u83b7\u53d6\u6548\u7387\uff0c\u8c03\u7528:</p> <pre><code>meshopt_optimizeVertexFetch(\nvertices, indices, index_count, vertices, vertex_count, sizeof(Vertex));\n</code></pre> <p>This will reorder the vertices in the vertex buffer to try to improve the locality of reference, and rewrite the indices in place to match; if the vertex data is stored using multiple streams, you should use\u00a0<code>meshopt_optimizeVertexFetchRemap</code>\u00a0instead. This optimization has to be performed on the final index buffer since the optimal vertex order depends on the triangle order.</p> <p>\u8fd9\u5c06\u91cd\u65b0\u6392\u5e8f\u9876\u70b9\u7f13\u51b2\u533a\u4e2d\u7684\u9876\u70b9\uff0c\u4ee5\u5c1d\u8bd5\u6539\u5584\u8bbf\u95ee\u5c40\u90e8\u6027\uff0c\u5e76\u91cd\u5199\u7d22\u5f15\u5728\u9002\u5f53\u7684\u5730\u65b9\u5339\u914d\u3002</p> <p>Note that the algorithm does not try to model cache replacement precisely and instead just orders vertices in the order of use, which generally produces results that are close to optimal.</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E9%92%88%E5%AF%B9%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%9A%84%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/#_6","title":"\u9876\u70b9\u91cf\u5316","text":"<p>To optimize memory bandwidth when fetching the vertex data even further, and to reduce the amount of memory required to store the mesh, it is often beneficial to quantize the vertex attributes to smaller types. While this optimization can technically run at any part of the pipeline (and sometimes doing quantization as the first step can improve indexing by merging almost identical vertices), it generally is easier to run this after all other optimizations since some of them require access to float3 positions.</p> <p>\u4e3a\u4e86\u5728\u8fdb\u4e00\u6b65\u63d0\u53d6\u9876\u70b9\u6570\u636e\u65f6\u4f18\u5316\u5185\u5b58\u5e26\u5bbd\uff0c\u5e76\u51cf\u5c11\u5b58\u50a8\u7f51\u683c\u6240\u9700\u7684\u5185\u5b58\u91cf\uff0c\u5c06\u9876\u70b9\u5c5e\u6027\u91cf\u5316\u5230\u8f83\u5c0f\u7c7b\u578b\u901a\u5e38\u662f\u6709\u76ca\u7684\u3002\u867d\u7136\u8fd9\u79cd\u4f18\u5316\u5728\u6280\u672f\u4e0a\u53ef\u4ee5\u5728\u7ba1\u9053\u7684\u4efb\u4f55\u90e8\u5206\u8fd0\u884c(\u6709\u65f6\u4f5c\u4e3a\u7b2c\u4e00\u6b65\u8fdb\u884c\u91cf\u5316\u53ef\u4ee5\u901a\u8fc7\u5408\u5e76\u51e0\u4e4e\u76f8\u540c\u7684\u9876\u70b9\u6765\u6539\u8fdb\u7d22\u5f15) \uff0c\u4f46\u662f\u5728\u6240\u6709\u5176\u4ed6\u4f18\u5316\u4e4b\u540e\u8fd0\u884c\u8fd9\u79cd\u4f18\u5316\u901a\u5e38\u66f4\u5bb9\u6613\uff0c\u56e0\u4e3a\u5176\u4e2d\u4e00\u4e9b\u4f18\u5316\u9700\u8981\u8bbf\u95ee float3\u4f4d\u7f6e\u3002</p> <p>Quantization is usually domain specific; it's common to quantize normals using 3 8-bit integers but you can use higher-precision quantization (for example using 10 bits per component in a 10_10_10_2 format), or a different encoding to use just 2 components. For positions and texture coordinate data the two most common storage formats are half precision floats, and 16-bit normalized integers that encode the position relative to the AABB of the mesh or the UV bounding rectangle.</p> <p>The number of possible combinations here is very large but this library does provide the building blocks, specifically functions to quantize floating point values to normalized integers, as well as half-precision floats. For example, here's how you can quantize a normal:</p> <pre><code>unsigned int normal =\n(meshopt_quantizeUnorm(v.nx, 10) &lt;&lt; 20) |\n(meshopt_quantizeUnorm(v.ny, 10) &lt;&lt; 10) |\nmeshopt_quantizeUnorm(v.nz, 10);\n</code></pre> <p>and here's how you can quantize a position:</p> <pre><code>unsigned short px = meshopt_quantizeHalf(v.x);\nunsigned short py = meshopt_quantizeHalf(v.y);\nunsigned short pz = meshopt_quantizeHalf(v.z);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E9%92%88%E5%AF%B9%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%9A%84%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/#_7","title":"\u9876\u70b9\u3001\u7d22\u5f15\u7f13\u51b2\u533a\u538b\u7f29","text":"<p>In case storage size or transmission bandwidth is of importance, you might want to additionally compress vertex and index data. While several mesh compression libraries, like Google Draco, are available, they typically are designed to maximize the compression ratio at the cost of disturbing the vertex/index order (which makes the meshes inefficient to render on GPU) or decompression performance. They also frequently don't support custom game-ready quantized vertex formats and thus require to re-quantize the data after loading it, introducing extra quantization errors and making decoding slower.</p> <p>\u5728\u5b58\u50a8\u5927\u5c0f\u6216\u4f20\u8f93\u5e26\u5bbd\u975e\u5e38\u91cd\u8981\u7684\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u989d\u5916\u538b\u7f29\u9876\u70b9\u548c\u7d22\u5f15\u6570\u636e\u3002\u867d\u7136\u6709\u4e00\u4e9b\u7f51\u683c\u538b\u7f29\u5e93\uff0c\u6bd4\u5982 Google Draco\uff0c\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46\u662f\u5b83\u4eec\u901a\u5e38\u662f\u4e3a\u4e86\u6700\u5927\u5316\u7f51\u683c\u7684\u538b\u7f29\u6bd4\u800c\u8bbe\u8ba1\u7684\uff0c\u4ee3\u4ef7\u662f\u6270\u4e71\u9876\u70b9/\u7d22\u5f15\u987a\u5e8f(\u8fd9\u4f7f\u5f97\u7f51\u683c\u6548\u7387\u4f4e\u4e0b\uff0c\u65e0\u6cd5\u5728 GPU \u4e0a\u6e32\u67d3)\u6216\u8005\u89e3\u538b\u7f29\u6027\u80fd\u3002\u4ed6\u4eec\u4e5f\u7ecf\u5e38\u4e0d\u652f\u6301\u81ea\u5b9a\u4e49\u6e38\u620f\u5c31\u7eea\u7684\u91cf\u5316\u9876\u70b9\u683c\u5f0f\uff0c\u56e0\u6b64\u9700\u8981\u91cd\u65b0\u91cf\u5316\u52a0\u8f7d\u540e\u7684\u6570\u636e\uff0c\u5f15\u5165\u989d\u5916\u7684\u91cf\u5316\u9519\u8bef\uff0c\u4f7f\u89e3\u7801\u66f4\u6162\u3002</p> <p>Alternatively you can use general purpose compression libraries like zstd or Oodle to compress vertex/index data - however these compressors aren't designed to exploit redundancies in vertex/index data and as such compression rates can be unsatisfactory.</p> <p>\u6216\u8005\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u901a\u7528\u7684\u538b\u7f29\u5e93\uff0c\u6bd4\u5982 zstd \u6216\u8005 Ooodle \u6765\u538b\u7f29\u9876\u70b9/\u7d22\u5f15\u6570\u636e\u2014\u2014\u7136\u800c\uff0c\u8fd9\u4e9b\u538b\u7f29\u5668\u5e76\u4e0d\u662f\u4e3a\u4e86\u5229\u7528\u9876\u70b9/\u7d22\u5f15\u6570\u636e\u4e2d\u7684\u5197\u4f59\u800c\u8bbe\u8ba1\u7684\uff0c\u56e0\u6b64\u538b\u7f29\u7387\u53ef\u80fd\u5e76\u4e0d\u4ee4\u4eba\u6ee1\u610f\u3002</p> <p>To that end, this library provides algorithms to \"encode\" vertex and index data. The result of the encoding is generally significantly smaller than initial data, and remains compressible with general purpose compressors - so you can either store encoded data directly (for modest compression ratios and maximum decoding performance), or further compress it with zstd/Oodle to maximize compression ratio.</p> <p>\u4e3a\u6b64\uff0c\u8fd9\u4e2a\u5e93\u63d0\u4f9b\u4e86\u201c\u7f16\u7801\u201d\u9876\u70b9\u548c\u7d22\u5f15\u6570\u636e\u7684\u7b97\u6cd5\u3002\u7f16\u7801\u7684\u7ed3\u679c\u901a\u5e38\u6bd4\u521d\u59cb\u6570\u636e\u8981\u5c0f\u5f97\u591a\uff0c\u800c\u4e14\u901a\u7528\u538b\u7f29\u5668\u4ecd\u7136\u53ef\u4ee5\u538b\u7f29\u2014\u2014\u6240\u4ee5\u4f60\u53ef\u4ee5\u76f4\u63a5\u5b58\u50a8\u7f16\u7801\u6570\u636e(\u4e3a\u4e86\u9002\u5ea6\u7684\u538b\u7f29\u6bd4\u548c\u6700\u5927\u7684\u89e3\u7801\u6027\u80fd) \uff0c\u6216\u8005\u7528 zstd/odle \u8fdb\u4e00\u6b65\u538b\u7f29\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u538b\u7f29\u6bd4\u3002</p> <p>Note: this compression scheme is available as a glTF extension EXT_meshopt_compression.</p> <p>To encode, you need to allocate target buffers (preferably using the worst case bound) and call encoding functions:</p> <pre><code>std::vector&lt;unsigned char&gt; vbuf(meshopt_encodeVertexBufferBound(vertex_count, sizeof(Vertex)));\nvbuf.resize(meshopt_encodeVertexBuffer(&amp;vbuf[0], vbuf.size(), vertices, vertex_count, sizeof(Vertex)));\nstd::vector&lt;unsigned char&gt; ibuf(meshopt_encodeIndexBufferBound(index_count, vertex_count));\nibuf.resize(meshopt_encodeIndexBuffer(&amp;ibuf[0], ibuf.size(), indices, index_count));\n</code></pre> <p>You can then either serialize <code>vbuf</code>/<code>ibuf</code> as is, or compress them further. To decode the data at runtime, call decoding functions:</p> <pre><code>int resvb = meshopt_decodeVertexBuffer(vertices, vertex_count, sizeof(Vertex), &amp;vbuf[0], vbuf.size());\nint resib = meshopt_decodeIndexBuffer(indices, index_count, &amp;ibuf[0], ibuf.size());\nassert(resvb == 0 &amp;&amp; resib == 0);\n</code></pre> <p>Note that vertex encoding assumes that vertex buffer was optimized for vertex fetch, and that vertices are quantized; index encoding assumes that the vertex/index buffers were optimized for vertex cache and vertex fetch. Feeding unoptimized data into the encoders will produce poor compression ratios. Both codecs are lossless - the only lossy step is quantization that happens before encoding.</p> <p>To reduce the data size further, it's recommended to use <code>meshopt_optimizeVertexCacheStrip</code> instead of <code>meshopt_optimizeVertexCache</code> when optimizing for vertex cache, and to use new index codec version (<code>meshopt_encodeIndexVersion(1)</code>). This trades off some efficiency in vertex transform for smaller vertex and index data.</p> <p>Decoding functions are heavily optimized and can directly target write-combined memory; you can expect both decoders to run at 1-3 GB/s on modern desktop CPUs. Compression ratios depend on the data; vertex data compression ratio is typically around 2-4x (compared to already quantized data), index data compression ratio is around 5-6x (compared to raw 16-bit index data). General purpose lossless compressors can further improve on these results.</p> <p>Index buffer codec only supports triangle list topology; when encoding triangle strips or line lists, use <code>meshopt_encodeIndexSequence</code>/<code>meshopt_decodeIndexSequence</code> instead. This codec typically encodes indices into ~1 byte per index, but compressing the results further with a general purpose compressor can improve the results to 1-3 bits per index.</p> <p>The following guarantees on data compatibility are provided for point releases (no guarantees are given for development branch):</p> <ul> <li>Data encoded with older versions of the library can always be decoded with newer versions;</li> <li>Data encoded with newer versions of the library can be decoded with older versions, provided that encoding versions are set correctly; if binary stability of encoded data is important, use <code>meshopt_encodeVertexVersion</code> and <code>meshopt_encodeIndexVersion</code> to 'pin' the data versions.</li> </ul> <p>Due to a very high decoding performance and compatibility with general purpose lossless compressors, the compression is a good fit for the use on the web. To that end, meshoptimizer provides both vertex and index decoders compiled into WebAssembly and wrapped into a module with JavaScript-friendly interface, <code>js/meshopt_decoder.js</code>, that you can use to decode meshes that were encoded offline:</p> <pre><code>// ready is a Promise that is resolved when (asynchronous) WebAssembly compilation finishes\nawait MeshoptDecoder.ready;\n// decode from *Data (Uint8Array) into *Buffer (Uint8Array)\nMeshoptDecoder.decodeVertexBuffer(vertexBuffer, vertexCount, vertexSize, vertexData);\nMeshoptDecoder.decodeIndexBuffer(indexBuffer, indexCount, indexSize, indexData);\n</code></pre> <p>Usage example is available, with source in <code>demo/index.html</code>; this example uses .GLB files encoded using <code>gltfpack</code>.</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96/","title":"meshoptimizer\u7f51\u683c\u7b80\u5316","text":"<p>All algorithms presented so far don't affect visual appearance at all, with the exception of quantization that has minimal controlled impact. However, fundamentally the most effective way at reducing the rendering or transmission cost of a mesh is to make the mesh simpler.</p> <p>\u5230\u76ee\u524d\u4e3a\u6b62\u63d0\u51fa\u7684\u6240\u6709\u7b97\u6cd5\u90fd\u4e0d\u4f1a\u5f71\u54cd\u89c6\u89c9\u5916\u89c2\uff0c\u9664\u4e86\u91cf\u5316\u7b97\u6cd5\u7684\u5f71\u54cd\u6700\u5c0f\u3002\u7136\u800c\uff0c\u4ece\u6839\u672c\u4e0a\u8bf4\uff0c\u964d\u4f4e\u7f51\u683c\u6e32\u67d3\u6216\u4f20\u8f93\u6210\u672c\u7684\u6700\u6709\u6548\u65b9\u6cd5\u662f\u4f7f\u7f51\u683c\u66f4\u7b80\u5355\u3002</p> <p>This library provides two simplification algorithms that reduce the number of triangles in the mesh. Given a vertex and an index buffer, they generate a second index buffer that uses existing vertices in the vertex buffer. This index buffer can be used directly for rendering with the original vertex buffer (preferably after vertex cache optimization), or a new compact vertex/index buffer can be generated using <code>meshopt_optimizeVertexFetch</code> that uses the optimal number and order of vertices.</p> <p>\u8fd9\u4e2a\u5e93\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7b80\u5316\u7b97\u6cd5\u6765\u51cf\u5c11\u7f51\u683c\u4e2d\u7684\u4e09\u89d2\u5f62\u6570\u91cf</p> <ol> <li>meshopt_simplify</li> <li>meshopt_simplifySloppy</li> </ol> <p>\u4e24\u79cd\u65b9\u6cd5\u90fd\u662f\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u9876\u70b9\u7f13\u51b2\u533a\u548c\u4e00\u4e2a\u7d22\u5f15\u7f13\u51b2\u533a\uff0c\u5b83\u4eec\u751f\u6210\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u7f13\u51b2\u533a\uff0c\u8be5\u7d22\u5f15\u7f13\u51b2\u533a\u4f7f\u7528\u9876\u70b9\u7f13\u51b2\u533a\u4e2d\u7684\u73b0\u6709\u9876\u70b9\u3002</p> <ul> <li>\u8fd9\u4e2a\u7d22\u5f15\u7f13\u51b2\u533a\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e\u6e32\u67d3\u539f\u59cb\u7684\u9876\u70b9\u7f13\u51b2\u533a(\u6700\u597d\u662f\u5728\u9876\u70b9\u7f13\u5b58\u4f18\u5316\u4e4b\u540e) </li> <li>\u6216\u8005\u53ef\u4ee5\u4f7f\u7528<code>meshopt_optimizeVertexFetch</code>\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7d27\u51d1\u7684\u9876\u70b9/\u7d22\u5f15\u7f13\u51b2\u533a\uff0c\u8be5\u7f13\u51b2\u533a\u4f7f\u7528\u9876\u70b9\u7684\u6700\u4f73\u6570\u91cf\u548c\u987a\u5e8f</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96/meshopt_simplify/","title":"Meshopt simplify","text":"<p>The first simplification algorithm, <code>meshopt_simplify</code>, follows the topology of the original mesh in an attempt to preserve attribute seams, borders and overall appearance. For meshes with inconsistent topology or many seams, such as faceted meshes, it can result in simplifier getting \"stuck\" and not being able to simplify the mesh fully. Therefore it's critical that identical vertices are \"welded\" together, that is, the input vertex buffer does not contain duplicates. Additionally, it may be possible to preprocess the index buffer (e.g. with <code>meshopt_generateShadowIndexBuffer</code>) to discard any vertex attributes that aren't critical and can be rebuilt later.</p> <p>\u7b2c\u4e00\u4e2a\u7b80\u5316\u7b97\u6cd5<code>meshopt_simplify</code>\u9075\u5faa\u539f\u59cb\u7f51\u683c\u7684\u62d3\u6251\u7ed3\u6784\uff0c\u8bd5\u56fe\u4fdd\u7559\u5c5e\u6027\u63a5\u7f1d\u3001\u8fb9\u754c\u548c\u6574\u4f53\u5916\u89c2\u3002</p> <ul> <li>\u5bf9\u4e8e\u62d3\u6251\u4e0d\u4e00\u81f4\u6216\u6709\u8bb8\u591a\u7f1d\u9699(seams)\u7684\u7f51\u683c\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7b97\u6cd5\u5361\u6b7b(stuck)\uff0c\u5e76\u4e14\u65e0\u6cd5\u5b8c\u6210\u7b80\u5316</li> <li>\u56e0\u6b64\uff0c\u5efa\u8bae\u5bf9\u7d22\u5f15\u7f13\u51b2\u533a\u8fdb\u884c\u9884\u5904\u7406<code>meshopt_generateShadowIndexBuffer</code>\uff0c\u4ee5\u4e22\u5f03\u4e0d\u91cd\u8981\u7684\u3001\u518d\u4e4b\u540e\u8fd8\u53ef\u4ee5\u91cd\u65b0\u7684\u9876\u70b9\u5c5e\u6027\uff08\u5982\u6cd5\u7ebf\uff09\u3002</li> </ul> <pre><code>float threshold = 0.2f;\nsize_t target_index_count = size_t(index_count * threshold);\nfloat target_error = 1e-2f;\nstd::vector&lt;unsigned int&gt; lod(index_count);\nfloat lod_error = 0.f;\nlod.resize(meshopt_simplify(&amp;lod[0], indices, index_count, &amp;vertices[0].x, vertex_count, sizeof(Vertex),\ntarget_index_count, target_error, &amp;lod_error));\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96/meshopt_simplify/#_1","title":"\u53c2\u6570","text":"<p>https://github.com/zeux/meshoptimizer/pull/216 This change adds an extra optional argument, , to that can be used to output the error after the simplification, which - just like target_error - is a measure of the relative (0..1) deviation of the produced result from the source mesh. The argument is optional in C++ but required when C interface is used - NULL can be passed if this information isn't required.result_errormeshopt_simplify When absolute errors are required instead, newly added can be used to scale the input or the output error back into world space.meshopt_simplifyScale</p> <p>https://github.com/zeux/meshoptimizer/issues/59 The error that the simplifier computes is somewhat hard to define exactly because it's based on a normalized quadric error. When just a single edge collapse is involved, it's just a square of the distance, but when multiple collapses are involved it becomes something like a quadratic mean I think. I'm fuzzy about this because the normalization of the quadric is unusal and doesn't occur in the literature, and I haven't derived what exactly happens after a series of collapses :) It's great to know that it's close enough though - it can definitely be useful to determine the LOD switching distances. I will look into exposing this properly.</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96/meshopt_simplify/#target_error","title":"target_error","text":"<p>Target error is an approximate measure of the deviation from the original mesh using distance normalized to <code>[0..1]</code> range (e.g. <code>1e-2f</code> means that simplifier will try to maintain the error to be below 1% of the mesh extents). Note that the simplifier attempts to produce the requested number of indices at minimal error, but because of topological restrictions and error limit it is not guaranteed to reach the target index count and can stop earlier.</p> <p>\u5bf9\u539f\u59cb\u7f51\u683c\u504f\u5dee\u7684\u8fd1\u4f3c\u5ea6\u91cf\u5f52\u4e00\u5316\u5230[0,1]\u4e2d\uff0c\u6545target_error\u7684\u9608\u503c\u662f[0,1] target_error=1e-2f\uff0c\u8868\u793a\u7b80\u5316\u5668\u4f1a\u5c3d\u91cf\u5c06\u8bef\u5dee\u4fdd\u6301\u5728\u7f51\u683c\u8303\u56f4\u76841%\u4ee5\u4e0b</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96/meshopt_simplify/#v011","title":"v0.11","text":"<pre><code>/**\n* Experimental: Mesh simplifier\n* Reduces the number of triangles in the mesh, attempting to preserve mesh appearance as much as possible\n    \u51cf\u5c11\u7f51\u683c\u4e2d\u7684\u4e09\u89d2\u5f62\u6570\u91cf\uff0c\u5c3d\u91cf\u4fdd\u6301\u7f51\u683c\u5916\u89c2\n* The algorithm tries to preserve mesh topology and can stop short of the target goal based on topology constraints or target error.\n    \u5c3d\u91cf\u4fdd\u6301\u7f51\u7edc\u7684\u62d3\u6251\u7ed3\u6784\uff0c\u5e76\u6839\u636e\u62d3\u6251\u7ea6\u675f\u6216\u76ee\u6807\u8bef\u5dee\u6765\u7ec4\u7ec7\u76ee\u6807\u76ee\u7684\u7684\u4e0d\u540c\n* If not all attributes from the input mesh are required, it's recommended to reindex the mesh using meshopt_generateShadowIndexBuffer prior to simplification.\n    \u5982\u679c\u8f93\u5165\u7f51\u683c\u7684\u6240\u6709\u5c5e\u6027\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u5efa\u8bae\u5728\u7b80\u5316\u4e4b\u524d\u4f7f\u7528meshopt_generateShadowIndexBuffer\u91cd\u65b0\u7d22\u5f15\u7f51\u683c\u3002\n* Returns the number of indices after simplification, with destination containing new index data\n    \u8fd4\u56de\u7b80\u5316\u7684\u7d22\u5f15\u6570\uff0c\u76ee\u6807\u5305\u542b\u65b0\u7684\u7d22\u5f15\u6570\u636e\n* The resulting index buffer references vertices from the original vertex buffer.\n    \u4ea7\u751f\u7684\u7d22\u5f15\u7f13\u51b2\u533a\u5f15\u7528\u6765\u81ea\u539f\u59cb\u9876\u70b9\u7f13\u51b2\u533a\u7684\u9876\u70b9\n* If the original vertex data isn't required, creating a compact vertex buffer using meshopt_optimizeVertexFetch is recommended.\n    \u5982\u679c\u4e0d\u9700\u8981\u539f\u59cb\u9876\u70b9\u6570\u636e\uff0c\u5efa\u8bae\u4f7f\u7528meshopt_optimizeVertexFetch\u521b\u5efa\u4e00\u4e2a\u7d27\u51d1\u7684\u9876\u70b9\u7f13\u51b2\u533a\n*\n* destination must contain enough space for the *source* index buffer (since optimization is iterative, this means index_count elements - *not* target_index_count!)\n    destination\u5fc5\u987b\u5305\u542b\u8db3\u591f\u7684\u7a7a\u95f4\u7528\u4e8e*source* index\u7f13\u51b2\u533a(\u56e0\u4e3a\u4f18\u5316\u662f\u8fed\u4ee3\u7684\uff0c\u8fd9\u610f\u5473\u7740index_count\u5143\u7d20- *\u4e0d\u662f* target_index_count!)\n* vertex_positions should have float3 position in the first 12 bytes of each vertex - similar to glVertexPointer\n    vertex_positions\u5e94\u8be5\u6709float3\u4f4d\u7f6e\u5728\u6bcf\u4e2a\u9876\u70b9\u7684\u524d12\u4e2a\u5b57\u8282-\u7c7b\u4f3c\u4e8eglVertexPointer\n*/\nMESHOPTIMIZER_EXPERIMENTAL size_t meshopt_simplify(\nunsigned int* destination,      //\u7b80\u5316\u540e\u7684\u4e09\u89d2\u7f51\u7d22\u5f15\uff0c\u5b58\u5728\u54ea\nconst unsigned int* indices,    //\u539f\u59cb\u4e09\u89d2\u7f51\u7d22\u5f15\nsize_t index_count,             //\u539f\u59cb\u7d22\u5f15\u4e2a\u6570\nconst float* vertex_positions,  //\u539f\u59cb\u9876\u70b9\u5750\u6807\nsize_t vertex_count,            //\u539f\u59cb\u9876\u70b9\u4e2a\u6570\nsize_t vertex_positions_stride, //\u9876\u70b9\u5bf9\u9f50\u5927\u5c0f\nsize_t target_index_count,      //\u76ee\u6807\u7d22\u5f15\u4e2a\u6570\nfloat target_error,             //\u76ee\u6807\u8bef\u5dee\nbool * topologyres=nullptr\n);\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96/meshopt_simplify/#v018","title":"v0.18","text":"<p>v0.18\u7248\u672c\u4ee5\u540e\uff0c\u65b0\u589e\u4e86lod_error\u53c2\u6570 <pre><code>float threshold = 0.2f;\nsize_t target_index_count = size_t(index_count * threshold);\nfloat target_error = 1e-2f;\nstd::vector&lt;unsigned int&gt; lod(index_count);\nfloat lod_error = 0.f;\nlod.resize(meshopt_simplify(&amp;lod[0], indices, index_count, &amp;vertices[0].x, vertex_count, sizeof(Vertex),\ntarget_index_count, target_error, &amp;lod_error));\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/3-%E9%9D%A2%E7%BD%91%E6%A0%BC/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96%E4%B8%8E%E9%80%BC%E8%BF%91/meshoptimizer/%E7%BD%91%E6%A0%BC%E7%AE%80%E5%8C%96/meshopt_simplifySloppy/","title":"meshopt simplifySloppy","text":"<p>The second simplification algorithm, <code>meshopt_simplifySloppy</code>, doesn't follow the topology of the original mesh. This means that it doesn't preserve attribute seams or borders, but it can collapse internal details that are too small to matter better because it can merge mesh features that are topologically disjoint but spatially close.</p> <p>\u7b2c\u4e8c\u4e2a\u7b80\u5316\u7b97\u6cd5<code>meshopt_simplifySloppy</code>\uff0c\u5b83\u6ca1\u6709\u9075\u5faa\u539f\u59cb\u7f51\u683c\u7684\u62d3\u6251\u7ed3\u6784\u3002\u8fd9\u610f\u5473\u7740\u5b83\u4e0d\u4fdd\u7559\u5c5e\u6027\u63a5\u7f1d\u6216\u8fb9\u754c\uff0c\u4f46\u662f\u5b83\u53ef\u4ee5\u6298\u53e0\u5185\u90e8\u7ec6\u8282\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5408\u5e76\u7f51\u683c\u7279\u5f81\uff0c\u8fd9\u4e9b\u7279\u5f81\u5728\u62d3\u6251\u4e0a\u662f\u4e0d\u76f8\u4ea4\u7684\uff0c\u4f46\u662f\u5728\u7a7a\u95f4\u4e0a\u975e\u5e38\u63a5\u8fd1\u3002</p> <pre><code>float threshold = 0.2f;\nsize_t target_index_count = size_t(index_count * threshold);\nfloat target_error = 1e-1f;\nstd::vector&lt;unsigned int&gt; lod(index_count);\nfloat lod_error = 0.f;\nlod.resize(meshopt_simplifySloppy(&amp;lod[0], indices, index_count, &amp;vertices[0].x, vertex_count, sizeof(Vertex),\ntarget_index_count, target_error, &amp;lod_error));\n</code></pre> <p>This algorithm will not stop early due to topology restrictions but can still do so if target index count can't be reached without introducing an error larger than target. It is 5-6x faster than <code>meshopt_simplify</code> when simplification ratio is large, and is able to reach ~20M triangles/sec on a desktop CPU (<code>meshopt_simplify</code> works at ~3M triangles/sec).</p> <p>\u8be5\u7b97\u6cd5\u4e0d\u4f1a\u56e0\u4e3a\u62d3\u6251\u7ed3\u6784\u7684\u9650\u5236\u800c\u63d0\u524d\u505c\u6b62\uff0c\u4f46\u5982\u679c\u4e0d\u80fd\u5728\u4e0d\u5f15\u5165\u5927\u4e8e\u76ee\u6807\u7684\u8bef\u5dee\u7684\u60c5\u51b5\u4e0b\u8fbe\u5230\u76ee\u6807\u7d22\u5f15\u8ba1\u6570\uff0c\u5219\u4ecd\u7136\u53ef\u4ee5\u505c\u6b62\u3002\u5f53\u7b80\u5316\u6bd4\u7387\u5f88\u5927\u65f6\uff0c\u5b83\u6bd4<code>meshopt_simplify</code>\u5feb5-6\u500d\uff0c\u5e76\u4e14\u80fd\u591f\u5728\u684c\u9762 CPU \u4e0a\u8fbe\u5230 ~ 20M \u4e09\u89d2\u5f62/\u79d2(<code>meshopt_simplify</code>\u5de5\u4f5c\u4e8e ~ 3M \u4e09\u89d2\u5f62/\u79d2)\u3002</p> <p>When a sequence of LOD meshes is generated that all use the original vertex buffer, care must be taken to order vertices optimally to not penalize mobile GPU architectures that are only capable of transforming a sequential vertex buffer range. It's recommended in this case to first optimize each LOD for vertex cache, then assemble all LODs in one large index buffer starting from the coarsest LOD (the one with fewest triangles), and call <code>meshopt_optimizeVertexFetch</code> on the final large index buffer. This will make sure that coarser LODs require a smaller vertex range and are efficient wrt vertex fetch and transform.</p> <p>\u5f53\u751f\u6210\u7684 LOD \u7f51\u683c\u5e8f\u5217\u90fd\u4f7f\u7528\u539f\u59cb\u7684\u9876\u70b9\u7f13\u51b2\u533a\u65f6\uff0c\u5fc5\u987b\u6ce8\u610f\u6700\u4f73\u6392\u5e8f\u9876\u70b9\uff0c\u4ee5\u907f\u514d\u60e9\u7f5a\u53ea\u80fd\u8f6c\u6362\u987a\u5e8f\u9876\u70b9\u7f13\u51b2\u533a\u8303\u56f4\u7684\u79fb\u52a8 GPU \u67b6\u6784\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u9996\u5148\u4f18\u5316\u9876\u70b9\u7f13\u5b58\u7684\u6bcf\u4e2a LOD\uff0c\u7136\u540e\u4ece\u6700\u7c97\u7684 LOD (\u4e09\u89d2\u5f62\u6700\u5c11\u7684\u90a3\u4e2a)\u5f00\u59cb\uff0c\u5c06\u6240\u6709 LOD \u7ec4\u88c5\u5230\u4e00\u4e2a\u5927\u578b\u7d22\u5f15\u7f13\u51b2\u533a\u4e2d\uff0c\u5e76\u5728\u6700\u7ec8\u7684\u5927\u578b\u7d22\u5f15\u7f13\u51b2\u533a\u4e2d\u8c03\u7528<code>meshopt_optimizeVertexFetch</code>\u3002\u8fd9\u5c06\u786e\u4fdd\u8f83\u7c97\u7684 LOD \u9700\u8981\u8f83\u5c0f\u7684\u9876\u70b9\u8303\u56f4\uff0c\u5e76\u4e14\u662f\u6709\u6548\u7684 wrt \u9876\u70b9\u83b7\u53d6\u548c\u8f6c\u6362\u3002</p> <p>Both algorithms can also return the resulting normalized deviation that can be used to choose the correct level of detail based on screen size or solid angle; the error can be converted to world space by multiplying by the scaling factor returned by <code>meshopt_simplifyScale</code>.</p> <p>\u8fd9\u4e24\u79cd\u7b97\u6cd5\u8fd8\u53ef\u4ee5\u8fd4\u56de\u5f97\u5230\u7684\u5f52\u4e00\u5316\u504f\u5dee\uff0c\u8fd9\u4e9b\u504f\u5dee\u53ef\u4ee5\u7528\u6765\u6839\u636e\u5c4f\u5e55\u5927\u5c0f\u6216\u7acb\u4f53\u89d2\u5ea6\u9009\u62e9\u6b63\u786e\u7684\u7ec6\u8282\u7ea7\u522b; \u8fd9\u4e9b\u8bef\u5dee\u53ef\u4ee5\u901a\u8fc7\u4e58\u4ee5<code>meshopt_simplifyScale</code>\u8fd4\u56de\u7684\u6bd4\u4f8b\u56e0\u5b50\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%87%BD%E6%95%B0/","title":"GLSL\u51fd\u6570","text":"<ul> <li>GLSL\u4e2d\u7684\u51fd\u6570\uff0c\u5fc5\u987b\u662f\u5728\u5168\u5c40\u8303\u56f4\u5b9a\u4e49\u548c\u58f0\u660e\u7684\u3002\u4e0d\u80fd\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u58f0\u660e\u6216\u5b9a\u4e49\u51fd\u6570\u3002</li> <li>\u51fd\u6570\u5fc5\u987b\u6709\u8fd4\u56de\u7c7b\u578b\uff0c\u53c2\u6570\u662f\u53ef\u9009\u7684\u3002</li> <li>\u53c2\u6570\u7684\u4fee\u9970\u7b26(in, out, inout, const\u7b49\uff09\u662f\u53ef\u9009\u7684\uff0c\u7ed3\u6784\u4f53\u548c\u6570\u7ec4\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u3002\u5982\u679c\u662f\u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5219\u5fc5\u987b\u5236\u5b9a\u5176\u5927\u5c0f\u3002\u5728\u8c03\u7528\u4f20\u53c2\u65f6\uff0c\u53ea\u4f20\u6570\u7ec4\u540d\u5c31\u53ef\u4ee5\u4e86\u3002</li> <li>GLSL\u7684\u51fd\u6570\u662f\u652f\u6301\u91cd\u8f7d\u7684\u3002\u51fd\u6570\u53ef\u4ee5\u540c\u540d\u4f46\u5176\u53c2\u6570\u7c7b\u578b\u6216\u8005\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\u5373\u53ef</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%87%BD%E6%95%B0/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>OpenGL3:\u9ad8\u7ea7\u7bc7 GLSL</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%87%BD%E6%95%B0/fwidth%28%29/","title":"Fwidth()","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%87%BD%E6%95%B0/fwidth%28%29/#_1","title":"\u7b80\u4ecb","text":"<p>\u5728GLSL\u4e2d\uff0c<code>fwidth()</code>\u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u7ed9\u5b9a\u53c2\u6570\u7684\u53d8\u5316\u7387\uff08rate of change\uff09\uff0c\u5373\u8be5\u53c2\u6570\u5728x\u548cy\u65b9\u5411\u4e0a\u7684\u53d8\u5316\u91cf\u4e4b\u548c\u7684\u7edd\u5bf9\u503c\u3002</p> <p>\u5b83\u901a\u5e38\u7528\u4e8e</p> <ol> <li>\u8ba1\u7b97\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u7684\u8fb9\u7f18\uff08edge\uff09\u7c97\u7cd9\u5ea6\uff08roughness\uff09</li> <li>\u8ba1\u7b97\u6a21\u578b\u8868\u9762\u6cd5\u7ebf\u7684\u626d\u66f2\u7a0b\u5ea6</li> <li>\u5e38\u5e38\u4e0e\u8ba1\u7b97\u68af\u5ea6\u7684\u51fd\u6570\uff08\u5982<code>dFdx()</code>\u548c<code>dFdy()</code>\uff09\u4e00\u8d77\u4f7f\u7528\u3002</li> </ol> <pre><code>float fwidth(float p)\nvec2 fwidth(vec2 p)\nvec3 fwidth(vec3 p)\nvec4 fwidth(vec4 p)\n</code></pre> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8e<code>fwidth()</code>\u51fd\u6570\u4f1a\u8ba1\u7b97\u51fa\u53c2\u6570\u5728x\u548cy\u65b9\u5411\u4e0a\u7684\u53d8\u5316\u7387\u4e4b\u548c\uff0c\u56e0\u6b64\u5b83\u53ef\u80fd\u4f1a\u53d7\u5230\u56fe\u50cf\u7684\u65cb\u8f6c\u3001\u7f29\u653e\u7b49\u64cd\u4f5c\u7684\u5f71\u54cd\u3002\u56e0\u6b64\uff0c\u5728\u4f7f\u7528<code>fwidth()</code>\u51fd\u6570\u8ba1\u7b97\u7eb9\u7406\u5750\u6807\u7684\u65f6\u5019\uff0c\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u5f52\u4e00\u5316\u5904\u7406\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%87%BD%E6%95%B0/fwidth%28%29/#fwidth","title":"fwidth()\u4f2a\u4ee3\u7801","text":"<pre><code>float fwidth(float p)\n{\nfloat fx = abs(dFdx(p));\nfloat fy = abs(dFdy(p));\nreturn fx + fy;\n}\nvec2 fwidth(vec2 p)\n{\nvec2 fx = abs(dFdx(p));\nvec2 fy = abs(dFdy(p));\nreturn fx + fy;\n}\nvec3 fwidth(vec3 p)\n{\nvec3 fx = abs(dFdx(p));\nvec3 fy = abs(dFdy(p));\nreturn fx + fy;\n}\nvec4 fwidth(vec4 p)\n{\nvec4 fx = abs(dFdx(p));\nvec4 fy = abs(dFdy(p));\nreturn fx + fy;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%87%BD%E6%95%B0/main%28%29/","title":"Main()","text":"<p>\u5728\u6bcf\u4e2ashader\u4e2d\u5fc5\u987b\u6709\u4e00\u4e2amain\u51fd\u6570 main\u51fd\u6570\u4e2d\u7684void\u53c2\u6570\u662f\u53ef\u9009\u7684\uff0c\u4f46\u662f\u8fd4\u56de\u503c\u5fc5\u987b\u662fvoid <pre><code>void main(void){\n...\n}\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%87%BD%E6%95%B0/mix%28%29/","title":"Mix()","text":"<p>mix\u51fd\u6570\u7528\u4e8e\u989c\u8272\u63d2\u503c\uff0c\u51fd\u6570\u539f\u578b\u4e3a\uff1a <pre><code>genType mix(genType x, genType y, genType a);\n</code></pre></p> <p>\u6700\u7ec8\u503c\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e3a\uff1a</p> \\[ x\u00d7(1\u2212a)+y\u00d7a \\]"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%87%BD%E6%95%B0/texture%28%29/","title":"Texture()","text":"<p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>\u5b98\u65b9\u6587\u6863\uff1atexture\u51fd\u6570</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%B8%8E%E5%86%85%E7%BD%AE%E5%8F%98%E9%87%8F/","title":"GLSL\u53d8\u91cf\u4e0e\u5185\u7f6e\u53d8\u91cf","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%B8%8E%E5%86%85%E7%BD%AE%E5%8F%98%E9%87%8F/#_1","title":"\u53d8\u91cf","text":"<p>GLSL\u7684\u53d8\u91cf\u547d\u540d\u65b9\u5f0f\u4e0eC\u8bed\u8a00\u7c7b\u4f3c</p> <ul> <li>\u53d8\u91cf\u540d\u79f0\u53ef\u4ee5\u4f7f\u7528\u5b57\u6bcd\u3001\u6570\u5b57\u4ee5\u53ca\u4e0b\u5212\u7ebf</li> <li>\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934</li> <li>\u4e0d\u80fd\u4ee5<code>gl_</code>\u4f5c\u4e3a\u524d\u7f00\uff0c\u8fd9\u662fGLSL\u4fdd\u7559\u7684\u524d\u7f00\uff0c\u7528\u4e8eGLSL\u7684\u5185\u90e8\u53d8\u91cf</li> <li>\u8fd8\u6709\u4e00\u4e9bGLSL\u4fdd\u7559\u7684\u540d\u79f0\uff0c\u4e5f\u662f\u4e0d\u5141\u8bb8\u4f7f\u7528\u7684</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%B8%8E%E5%86%85%E7%BD%AE%E5%8F%98%E9%87%8F/#_2","title":"\u5185\u7f6e\u53d8\u91cf","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%B8%8E%E5%86%85%E7%BD%AE%E5%8F%98%E9%87%8F/#_3","title":"\u9876\u70b9\u7740\u8272\u5668","text":"\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 gl_Color vec4 \u8f93\u5165\u5c5e\u6027-\u8868\u793a\u9876\u70b9\u7684\u4e3b\u989c\u8272 gl_SecondaryColor vec4 \u8f93\u5165\u5c5e\u6027-\u8868\u793a\u9876\u70b9\u7684\u8f85\u52a9\u989c\u8272 gl_Normal vec3 \u8f93\u5165\u5c5e\u6027-\u8868\u793a\u9876\u70b9\u7684\u6cd5\u7ebf\u503c gl_Vertex vec4 \u8f93\u5165\u5c5e\u6027-\u8868\u793a\u7269\u4f53\u7a7a\u95f4\uff08\u7269\u4f53\u5750\u6807\u7cfb\uff09\u7684\u9876\u70b9\u4f4d\u7f6e gl_MultiTexCoordn vec4 \u8f93\u5165\u5c5e\u6027-\u8868\u793a\u9876\u70b9\u7684\u7b2cn\u4e2a\u7eb9\u7406\u7684\u5750\u6807 gl_FogCoord float \u8f93\u5165\u5c5e\u6027-\u8868\u793a\u9876\u70b9\u7684\u96fe\u5750\u6807 gl_Position vec4 \u8f93\u51fa\u5c5e\u6027-\u53d8\u6362\u540e\u7684\u9876\u70b9\u7684\u4f4d\u7f6e\uff08\u5c4f\u5e55\u5750\u6807\u7cfb\uff09\uff0c\u7528\u4e8e\u540e\u9762\u7684\u56fa\u5b9a\u7684\u88c1\u526a\u7b49\u64cd\u4f5c\u3002\u6240\u6709\u7684\u9876\u70b9\u7740\u8272\u5668\u90fd\u5fc5\u987b\u5199\u51fa\u8fd9\u4e2a\u503c\u3002 gl_ClipVertex vec4 \u8f93\u51fa\u5750\u6807\uff0c\u7528\u4e8e\u7528\u6237\u88c1\u526a\u5e73\u9762\u7684\u88c1\u526a gl_PointSize float \u70b9\u7684\u5927\u5c0f\uff08\u9ed8\u8ba4\u503c1\uff0c\u901a\u5e38\u8bbe\u7f6e\u7ed8\u56fe\u4e3a\u70b9\u7ed8\u5236\u624d\u6709\u610f\u4e49\uff09 gl_FrontColor vec4 \u6b63\u9762\u7684\u4e3b\u989c\u8272\u7684varying\u8f93\u51fa gl_BackColor vec4 \u80cc\u9762\u4e3b\u989c\u8272\u7684varying\u8f93\u51fa gl_FrontSecondaryColor vec4 \u6b63\u9762\u7684\u8f85\u52a9\u989c\u8272\u7684varying\u8f93\u51fa gl_BackSecondaryColor vec4 \u80cc\u9762\u7684\u8f85\u52a9\u989c\u8272\u7684varying\u8f93\u51fa gl_TexCoord[] vec4 \u7eb9\u7406\u5750\u6807\u7684\u6570\u7ec4varying\u8f93\u51fa gl_FogFragCoord float \u96fe\u5750\u6807\u7684varying\u8f93\u51fa"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%B8%8E%E5%86%85%E7%BD%AE%E5%8F%98%E9%87%8F/#_4","title":"\u7247\u6bb5\u7740\u8272\u5668","text":"\u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 gl_Color vec4 \u5305\u542b\u4e3b\u989c\u8272\u7684\u63d2\u503c\u53ea\u8bfb\u8f93\u5165 gl_SecondaryColor vec4 \u5305\u542b\u8f85\u52a9\u989c\u8272\u7684\u63d2\u503c\u53ea\u8bfb\u8f93\u5165 gl_TexCoord[] vec4 \u5305\u542b\u7eb9\u7406\u5750\u6807\u6570\u7ec4\u7684\u63d2\u503c\u53ea\u8bfb\u8f93\u5165 gl_FogFragCoord float \u5305\u542b\u96fe\u5750\u6807\u7684\u63d2\u503c\u53ea\u8bfb\u8f93\u5165 gl_FragCoord vec4 \u53ea\u8bfb\u8f93\u5165\uff0c\u7a97\u53e3\u7684x,y,z\u548c1/w gl_FrontFacing bool \u53ea\u8bfb\u8f93\u5165\uff0c\u5982\u679c\u662f\u7a97\u53e3\u6b63\u9762\u56fe\u5143\u7684\u4e00\u90e8\u5206\uff0c\u5219\u8fd9\u4e2a\u503c\u4e3atrue gl_PointCoord vec2 \u70b9\u7cbe\u7075\u7684\u4e8c\u7ef4\u7a7a\u95f4\u5750\u6807\u8303\u56f4\u5728(0.0, 0.0)\u5230(1.0, 1.0)\u4e4b\u95f4\uff0c\u4ec5\u7528\u4e8e\u70b9\u56fe\u5143\u548c\u70b9\u7cbe\u7075\u5f00\u542f\u7684\u60c5\u51b5\u4e0b\u3002 gl_FragData[] vec4 \u4f7f\u7528glDrawBuffers\u8f93\u51fa\u7684\u6570\u636e\u6570\u7ec4\u3002\u4e0d\u80fd\u4e0egl_FragColor\u7ed3\u5408\u4f7f\u7528\u3002 gl_FragColor vec4 \u8f93\u51fa\u7684\u989c\u8272\u7528\u4e8e\u968f\u540e\u7684\u50cf\u7d20\u64cd\u4f5c gl_FragDepth float \u8f93\u51fa\u7684\u6df1\u5ea6\u7528\u4e8e\u968f\u540e\u7684\u50cf\u7d20\u64cd\u4f5c\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u6ca1\u6709\u88ab\u5199\uff0c\u5219\u4f7f\u7528\u56fa\u5b9a\u529f\u80fd\u7ba1\u7ebf\u7684\u6df1\u5ea6\u503c\u4ee3\u66ff"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%B8%8E%E5%86%85%E7%BD%AE%E5%8F%98%E9%87%8F/#_5","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>OpenGL3:\u9ad8\u7ea7\u7bc7 GLSL</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/","title":"GLSL\u53d8\u91cf\u4fee\u9970\u7b26","text":"\u4fee\u9970\u7b26 \u63cf\u8ff0 const \u5e38\u91cf\u503c\u5fc5\u987b\u5728\u58f0\u660e\u662f\u521d\u59cb\u5316\u3002\u5b83\u662f\u53ea\u8bfb\u7684\u4e0d\u53ef\u4fee\u6539\u7684\u3002 attribute \u8868\u793a\u53ea\u8bfb\u7684\u9876\u70b9\u6570\u636e\uff0c\u53ea\u7528\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u3002\u6570\u636e\u6765\u81ea\u5f53\u524d\u7684\u9876\u70b9\u72b6\u6001\u6216\u8005\u9876\u70b9\u6570\u7ec4\u3002\u5b83\u5fc5\u987b\u662f\u5168\u5c40\u8303\u56f4\u58f0\u660e\u7684\uff0c\u4e0d\u80fd\u518d\u51fd\u6570\u5185\u90e8\u3002\u4e00\u4e2aattribute\u53ef\u4ee5\u662f\u6d6e\u70b9\u6570\u7c7b\u578b\u7684\u6807\u91cf\uff0c\u5411\u91cf\uff0c\u6216\u8005\u77e9\u9635\u3002\u4e0d\u53ef\u4ee5\u662f\u6570\u7ec4\u6216\u5219\u7ed3\u6784\u4f53 uniform \u4e00\u81f4\u53d8\u91cf\u3002\u5728\u7740\u8272\u5668\u6267\u884c\u671f\u95f4\u4e00\u81f4\u53d8\u91cf\u7684\u503c\u662f\u4e0d\u53d8\u7684\u3002\u4e0econst\u5e38\u91cf\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e2a\u503c\u5728\u7f16\u8bd1\u65f6\u671f\u662f\u672a\u77e5\u7684\u662f\u7531\u7740\u8272\u5668\u5916\u90e8\u521d\u59cb\u5316\u7684\u3002\u4e00\u81f4\u53d8\u91cf\u5728\u9876\u70b9\u7740\u8272\u5668\u548c\u7247\u6bb5\u7740\u8272\u5668\u4e4b\u95f4\u662f\u5171\u4eab\u7684\u3002\u5b83\u4e5f\u53ea\u80fd\u5728\u5168\u5c40\u8303\u56f4\u8fdb\u884c\u58f0\u660e\u3002 varying \u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u3002\u4f8b\u5982\u989c\u8272\u6216\u8005\u7eb9\u7406\u5750\u6807\uff0c\uff08\u63d2\u503c\u540e\u7684\u6570\u636e\uff09\u4f5c\u4e3a\u7247\u6bb5\u7740\u8272\u5668\u7684\u53ea\u8bfb\u8f93\u5165\u6570\u636e\u3002\u5fc5\u987b\u662f\u5168\u5c40\u8303\u56f4\u58f0\u660e\u7684\u5168\u5c40\u53d8\u91cf\u3002\u53ef\u4ee5\u662f\u6d6e\u70b9\u6570\u7c7b\u578b\u7684\u6807\u91cf\uff0c\u5411\u91cf\uff0c\u77e9\u9635\u3002\u4e0d\u80fd\u662f\u6570\u7ec4\u6216\u8005\u7ed3\u6784\u4f53\u3002 centorid varying \u5728\u6ca1\u6709\u591a\u91cd\u91c7\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0evarying\u662f\u4e00\u6837\u7684\u610f\u601d\u3002\u5728\u591a\u91cd\u91c7\u6837\u65f6\uff0ccentorid varying\u5728\u5149\u6805\u5316\u7684\u56fe\u5f62\u5185\u90e8\u8fdb\u884c\u6c42\u503c\u800c\u4e0d\u662f\u5728\u7247\u6bb5\u4e2d\u5fc3\u7684\u56fa\u5b9a\u4f4d\u7f6e\u6c42\u503c\u3002 invariant (\u4e0d\u53d8\u91cf)\u7528\u4e8e\u8868\u793a\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u51fa\u548c\u4efb\u4f55\u5339\u914d\u7247\u6bb5\u7740\u8272\u5668\u7684\u8f93\u5165\uff0c\u5728\u4e0d\u540c\u7684\u7740\u8272\u5668\u4e2d\u8ba1\u7b97\u4ea7\u751f\u7684\u503c\u5fc5\u987b\u662f\u4e00\u81f4\u7684\u3002\u6240\u6709\u7684\u6570\u636e\u6d41\u548c\u63a7\u5236\u6d41\uff0c\u5199\u5165\u4e00\u4e2ainvariant\u53d8\u91cf\u7684\u662f\u4e00\u81f4\u7684\u3002\u7f16\u8bd1\u5668\u4e3a\u4e86\u4fdd\u8bc1\u7ed3\u679c\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u9700\u8981\u653e\u5f03\u90a3\u4e9b\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u4e00\u81f4\u503c\u7684\u6f5c\u5728\u7684\u4f18\u5316\u3002\u9664\u975e\u5fc5\u8981\uff0c\u4e0d\u8981\u4f7f\u7528\u8fd9\u4e2a\u4fee\u9970\u7b26\u3002\u5728\u591a\u901a\u9053\u6e32\u67d3\u4e2d\u907f\u514dz-fighting\u53ef\u80fd\u4f1a\u4f7f\u7528\u5230\u3002 in \u7528\u5728\u51fd\u6570\u7684\u53c2\u6570\u4e2d\uff0c\u8868\u793a\u8fd9\u4e2a\u53c2\u6570\u662f\u8f93\u5165\u7684\uff0c\u5728\u51fd\u6570\u4e2d\u6539\u53d8\u8fd9\u4e2a\u503c\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5bf9\u8c03\u7528\u7684\u51fd\u6570\u4ea7\u751f\u526f\u4f5c\u7528\u3002\uff08\u76f8\u5f53\u4e8eC\u8bed\u8a00\u7684\u4f20\u503c\uff09\uff0c\u8fd9\u4e2a\u662f\u51fd\u6570\u53c2\u6570\u9ed8\u8ba4\u7684\u4fee\u9970\u7b26 out \u7528\u5728\u51fd\u6570\u7684\u53c2\u6570\u4e2d\uff0c\u8868\u793a\u8be5\u53c2\u6570\u662f\u8f93\u51fa\u53c2\u6570\uff0c\u503c\u662f\u4f1a\u6539\u53d8\u7684\u3002 inout \u7528\u5728\u51fd\u6570\u7684\u53c2\u6570\uff0c\u8868\u793a\u8fd9\u4e2a\u53c2\u6570\u5373\u662f\u8f93\u5165\u53c2\u6570\u4e5f\u662f\u8f93\u51fa\u53c2\u6570\u3002"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/#inout","title":"in\u3001out","text":"<p>\u7740\u8272\u5668\u7684\u8f93\u5165\u3001\u8f93\u51fa\uff0c\u4f7f\u5f97\u7740\u8272\u5668\u4e4b\u95f4\u53ef\u4ee5\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u4e0e\u4f20\u9012\u3002</p> <p>\u4f8b\uff1a</p> <ol> <li> <p>\u9876\u70b9\u7740\u8272\u5668 <pre><code>#version 330 core\nlayout (location = 0) in vec3 position; // position\u53d8\u91cf\u7684\u5c5e\u6027\u4f4d\u7f6e\u503c\u4e3a0\nout vec4 vertexColor; // \u4e3a\u7247\u6bb5\u7740\u8272\u5668\u6307\u5b9a\u4e00\u4e2a\u989c\u8272\u8f93\u51fa\nvoid main()\n{\ngl_Position = vec4(position, 1.0); // \u6ce8\u610f\u6211\u4eec\u5982\u4f55\u628a\u4e00\u4e2avec3\u4f5c\u4e3avec4\u7684\u6784\u9020\u5668\u7684\u53c2\u6570\nvertexColor = vec4(0.5f, 0.0f, 0.0f, 1.0f); // \u628a\u8f93\u51fa\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u6697\u7ea2\u8272\n}\n</code></pre></p> </li> <li> <p>\u7247\u5143\u7740\u8272\u5668 <pre><code>#version 330 core\nin vec4 vertexColor; // \u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u6765\u7684\u8f93\u5165\u53d8\u91cf\uff08\u540d\u79f0\u76f8\u540c\u3001\u7c7b\u578b\u76f8\u540c\uff09\nout vec4 color; // \u7247\u6bb5\u7740\u8272\u5668\u8f93\u51fa\u7684\u53d8\u91cf\u540d\u53ef\u4ee5\u4efb\u610f\u547d\u540d\uff0c\u7c7b\u578b\u5fc5\u987b\u662fvec4\nvoid main()\n{\ncolor = vertexColor;\n}\n</code></pre></p> </li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/#uniformattribute","title":"uniform\u4e0eattribute","text":"<p>GLSL\u4e2d<code>uniform</code>\u53d8\u91cf\u4e0e<code>attribute</code>\u53d8\u91cf\uff1a<code>uniform</code>\u53d8\u91cf\u4e0e\u9876\u70b9\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7684\u5c5e\u6027<code>attribute</code>\u53d8\u91cf\u4e0d\u540c</p> <ol> <li><code>uniform</code>\u53d8\u91cf\uff1a\u7c7b\u4f3c\u4e8e\u5168\u5c40\u53d8\u91cf\uff0c\u5728\u6574\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u4e2d\u90fd\u53ef\u89c1</li> <li><code>attribute</code>\u53d8\u91cf\uff1a\u5c5e\u6027\u53d8\u91cf\u9996\u5148\u8fdb\u5165\u9876\u70b9\u7740\u8272\u5668\uff0c\u5982\u679c\u8981\u4f20\u9012\u7ed9\u7247\u5143\u7740\u8272\u5668\uff0c\u9700\u8981\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5b9a\u4e49\u8f93\u51fa\u53d8\u91cf\uff0c\u4ee5\u6b64\u8f93\u51fa\u5230\u7247\u5143\u7740\u8272\u5668</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/#varingflat","title":"varing\u4e0eflat","text":"<p>\u5728GLSL\u4e2d\uff0c<code>varying</code>\u548c<code>flat</code>\u90fd\u7528\u4e8e\u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u9012\u6570\u636e\u5230\u7247\u5143\u7740\u8272\u5668\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4eec\u7684\u63d2\u503c\u65b9\u5f0f\u4e0d\u540c\u3002</p> <p>\u5171\u540c\u70b9\uff1a</p> <ul> <li>\u90fd\u53ef\u4ee5\u7528\u4e8e\u4ece\u9876\u70b9\u7740\u8272\u5668\u5411\u7247\u5143\u7740\u8272\u5668\u4f20\u9012\u6570\u636e\u3002</li> <li>\u90fd\u9700\u8981\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u58f0\u660e\uff0c\u5e76\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u4f7f\u7528\uff0c\u4e14\u53d8\u91cf\u540d\u9700\u76f8\u540c\u3002</li> </ul> <p>\u4e0d\u540c\u70b9\uff1a</p> <ul> <li><code>varying</code>\u53d8\u91cf\u4f1a\u5728\u56fe\u5143\u4e2d\u8fdb\u884c\u63d2\u503c\u8ba1\u7b97\uff0c\u751f\u6210\u4e00\u4e2a\u5e73\u6ed1\u7684\u8fc7\u6e21\u6548\u679c\uff0c\u800c<code>flat</code>\u53d8\u91cf\u5219\u4e0d\u4f1a\u8fdb\u884c\u63d2\u503c\u8ba1\u7b97\uff0c\u4fdd\u6301\u5728\u6574\u4e2a\u56fe\u5143\u4e2d\u5177\u6709\u76f8\u540c\u7684\u5c5e\u6027\u503c</li> <li><code>varying</code>\u53d8\u91cf\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\u7684\uff08\u6807\u91cf\u3001\u5411\u91cf\u6216\u77e9\u9635\uff09\uff0c\u800c<code>flat</code>\u53d8\u91cf\u53ea\u80fd\u662f\u6807\u91cf\u6216\u5411\u91cf</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>OpenGL3:\u9ad8\u7ea7\u7bc7 GLSL</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/uniform/","title":"GLSL uniform","text":"<p>\u7740\u8272\u5668\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u6709\u4e24\u79cd</p> <ol> <li>\u900f\u660e</li> <li>\u4e0d\u900f\u660e\uff1a\u4e0d\u900f\u660e\u7c7b\u578b\u5305\u62ec\u91c7\u6837\u5668\u3001\u56fe\u50cf\u548c\u539f\u5b50\u8ba1\u6570\u5668\u3002</li> </ol> <p>\u4e00\u4e2auniform\u5757\u4e2d\u53ea\u53ef\u4ee5\u5305\u542b\u900f\u660e\u7c7b\u578b\u7684\u53d8\u91cf\u3002\u6b64\u5916\uff0cuniform\u5757\u53d8\u91cf\u5fc5\u987b\u5728\u5168\u5c40\u4f5c\u7528\u57df\u5185\u58f0\u660e\u3002</p>","tags":["GLSL","uniform"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/uniform/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u4ece0\u5f00\u59cb\u7684OpenGL\u5b66\u4e60\uff08\u4e8c\u5341\u56db\uff09-\u6df1\u5165\u63a2\u7a76GLSL</li> <li>OpenGL\u2014\u2014GLSL\u9ad8\u7ea7\u7bc7</li> </ol>","tags":["GLSL","uniform"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/uniform/layout/","title":"layout","text":"","tags":["uniform\u5185\u5b58\u5bf9\u9f50","uniform\u5757\u5e03\u5c40"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/uniform/layout/#_1","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>C\u8bed\u8a00\u5b57\u8282\u5bf9\u9f50</li> </ol>","tags":["uniform\u5185\u5b58\u5bf9\u9f50","uniform\u5757\u5e03\u5c40"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/uniform/layout/#layout","title":"layout","text":"<p>\u8bed\u6cd5\uff1a<code>layout(\u5e03\u5c40\u9650\u5b9a\u7b261, \u5e03\u5c40\u9650\u5b9a\u7b262, ....)</code> \u4f8b\u5982</p> <ol> <li><code>layout(binding = 2) uniform sampler s1_color_sampler;</code></li> <li><code>layout(binding = 6, std140) uniform</code></li> </ol> <p></p>","tags":["uniform\u5185\u5b58\u5bf9\u9f50","uniform\u5757\u5e03\u5c40"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/uniform/layout/#shared","title":"shared\uff08\u9ed8\u8ba4\uff09","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cGLSL\u4f7f\u7528\u7684\u5e03\u5c40\u65b9\u5f0f\u662fshared\uff0c\u5373\u5171\u4eab\u3002</p> <ol> <li>\u5171\u4eab\u7684\u542b\u4e49\uff1a\u4e00\u65e6\u786c\u4ef6\u5b9a\u4e49\u4e86\u504f\u79fb\u91cf\uff0c\u5b83\u4eec\u5728\u591a\u4e2a\u7a0b\u5e8f\u4e2d\u5171\u4eab\u5e76\u4fdd\u6301\u4e00\u81f4</li> <li>shared\u6709\u4e0d\u786e\u5b9a\u6027\uff1a\u51fa\u4e8e\u4f18\u5316\u7684\u76ee\u7684\uff0cGLSL\u6709\u6743\u4f18\u5316\u53d8\u91cf\u6240\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u6b64\u6211\u4eec\u65e0\u6cd5\u4e8b\u5148\u77e5\u9053\u53d8\u91cf\u7684\u504f\u79fb\u503c</li> </ol> <p>\u867d\u7136shared\u5177\u6709\u4e0d\u786e\u5b9a\u6027\uff0c\u4f46GLSL\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u51fd\u6570\u5e2e\u52a9\u6211\u4eec\u67e5\u8be2</p> <ol> <li><code>glGetUniformIndices</code>\u83b7\u53d6\u6307\u5b9a\u540d\u79f0uniform\u53d8\u91cf\u7684\u7d22\u5f15\u4f4d\u7f6e</li> <li><code>glGetActiveUniformsiv</code>\u83b7\u53d6\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u7684\u504f\u79fb\u91cf\u548c\u5927\u5c0f <pre><code>void glGetUniformIndices(GLuint program, GLsizei uniformCount, const char** uniformNames,GLuint* uniformIndices);\n//\u8fd4\u56deuniformCount \u4e2a uniform\u53d8\u91cf\u7684\u7d22\u5f15\u4f4d\u7f6e\uff1b\u53d8\u91cf\u7684\u540d\u79f0\u901a\u8fc7uniformNames\u6765\u6307\u5b9a\uff0c\u6bcf\u4e2a\u540d\u79f0\u90fd\u4ee5NULL\u7ed3\u5c3e\uff1b\n</code></pre></li> </ol> <p>\u4f8b\u5b50\uff1a\u9876\u70b9\u7740\u8272\u5668 \u548c \u7247\u5143\u7740\u8272\u5668 \u5171\u4eab\u4e00\u4e2a\u540d\u4e3aUniform\u7684\u53d8\u91cf</p> <ol> <li> <p>GLSL\u7684uniform\u5b9a\u4e49 <pre><code>//\u672a\u6307\u5b9a\u5e03\u5c40\uff0c\u9ed8\u8ba4\u5373\u4e3ashared\nuniform Uniform{\nvec3 translation;\nfloat scale;\nvec4 rotation;\nbool enabled;\n}\n</code></pre></p> </li> <li> <p>C++\u7a0b\u5e8f\u4ee3\u7801 <pre><code>enum {\nTranslation,\nScale,\nRotation,\nEnabled,\nNumUniforms\n};\n//# \u5bf9\u5e94\u7740\u8272\u5668\u4e2d\u7684uniform \u5757\u4e2d uniform\u7684\u53d8\u91cf\u540d\u79f0\nconst char* names[NumUniforms] = {\n\"translation\",\n\"scale\",\n\"rotation\",\n\"enabled\"\n}\n//# \u53d8\u91cf\u7684\u503c\nGLfloat scale = 0.5;\nGLfloat translation[] = {0.1,0.1;0.0};\nGLfloat rotation[] = {90,0.0,0.0,1.0};\nGLBoolean enabled = GL_TRUE;\n//# \u83b7\u53d6\nGLuint indices[NumUniforms];\nGLuint size[NumUniforms];\nGLuint offset[NumUniforms];\nGLuintt type[NumUniforms];\n//\u83b7\u53d6\u6240\u6709uniform\u53d8\u91cf\u7684\u7d22\u5f15\nglGetUniformIndices(program,NumUniforms,names,indices);\n//\u901a\u8fc7uniform \u53d8\u91cf\u7684\u7d22\u5f15\u6765\u83b7\u53d6\u76f8\u5e94\u7684\u504f\u79fb\u503c\u3001\u5927\u5c0f\u3001\u7c7b\u578b\u7b49\u4fe1\u606f\nglGetActiveUniformsiv(program,NumUniforms,indices,GL_UNIFORM_OFFSET,offset);\nglGetActiveUniformsiv(program,NumUniforms,indices,GL_UNIFORM_SIZE,size);\nglGetActiveUniformsiv(program,NumUniforms,indices,GL_UNIFORM_TYPE,type);\n//# \u4f20\u503c\nGLvoid* buffer;\n//\u83b7\u53d6uniform\u7f13\u5b58\u7684\u7d22\u5f15\uff0c\u5e76\u83b7\u53d6\u6574\u4e2a\u5757\u7684\u5927\u5c0f\nGLuint uboIndex = glGetActiveUniformBlockiv(program,\"Uniforms\");\nglGetActiveUniformBlockiv(program,uboIndex,GL_UNIFORM_BLOCK_DATA_SIZE,&amp;uboSize);\nbuffer = malloc(uboSize);\n//\u7ec4\u88c5buffer\nmemcpy(buffer + offset[Scale],&amp;scale\uff0c size[Scale]*4);\n</code></pre></p> </li> </ol>","tags":["uniform\u5185\u5b58\u5bf9\u9f50","uniform\u5757\u5e03\u5c40"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/uniform/layout/#std140","title":"std140","text":"<p>std140\u6307\u5b9a\u4e86\u4e00\u7cfb\u5217\u89c4\u5219\uff0c\u5728\u8fd9\u4e9b\u89c4\u5219\u4e4b\u4e0b\uff0c\u6211\u4eec\u80fd\u591f\u660e\u786e\u4e00\u4e2auniform\u7684\u5185\u5b58\u5e03\u5c40\u3002\u4fdd\u6301\u552f\u4e00\u6027\u7684\u540c\u65f6\uff0c\u662f\u4f1a\u6d6a\u8d39\u70b9\u5185\u5b58\u3002 \u8ba1\u7b97\u6e05\u695a\u6bcf\u4e2a\u53d8\u91cf\u7684\u504f\u79fb\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528<code>glBufferSubData</code>\u51fd\u6570\u6765\u7ed9\u53d8\u91cf\u8d4b\u503c\uff08\u586b\u5145\u5185\u5b58\u5757\uff09\u4e86\u3002</p> <p>GLSL\u4e2d\u6bcf\u4e2a\u7c7b\u578b\uff0c\u6bd4\u5982int\uff0cfloat\uff0cbool\uff0c\u90fd\u88ab\u5b9a\u4e49\u4e3a4\u5b57\u8282\uff0c\u6bcf4\u4e2a\u5b57\u8282\u7528N\u6765\u8868\u793a\uff1a</p> <p></p> \u53d8\u91cf\u7c7b\u578b \u5e03\u5c40\u89c4\u5219 \u6807\u91cf\u7c7b\u578b\uff08int, bool,float\u7b49\uff09 \u5927\u5c0f\u548c\u5bf9\u9f50\u503c\u90fd\u662f\u57fa\u672c\u673a\u5668\u7c7b\u578b\u7684\u6807\u91cf\u5927\u5c0f \u4e24\u4e2a\u5206\u91cf\u7684\u5411\u91cf\uff08\u5982vec2\uff09 \u5927\u5c0f\u548c\u5bf9\u9f50\u503c\u662f\u57fa\u7840\u7c7b\u578b\u5927\u5c0f\u76842\u500d \u4e09\u5206\u91cf\u5411\u91cf\u548c4\u5206\u91cf\u5411\u91cf(vec3,vec4) \u5927\u5c0f\u548c\u5bf9\u9f50\u503c\u662f\u57fa\u7840\u6807\u91cf\u7c7b\u578b\u5927\u5c0f\u76844\u500d \u6570\u7ec4 \u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u5927\u5c0f\u53d6\u6574\u5230vec4\u5927\u5c0f\u7684\u6574\u6570\u500d \u77e9\u9635 \u7c7b\u4f3c\u4e8e\u5305\u542bn\u4e2a\u5411\u91cf\u7684\u6570\u7ec4\uff0cn\u662f\u5217\u603b\u6570 \u7ed3\u6784\u4f53 \u5bf9\u9f50\u503c\u662f\u6700\u5927\u7ed3\u6784\u6210\u5458\u7684\u5bf9\u9f50\u503c\uff0c\u53d6\u6574\u5230vec4\u5927\u5c0f\u7684\u6574\u6570\u500d <p>\u5176\u4ed6\u89c4\u5219</p> <ol> <li>\u6ca1\u6709\u8bbe\u7f6e\u77e9\u9635\u662f\u884c\u4e3b\u5e8f\u8fd8\u662f\u5217\u4e3b\u5e8f\uff0c\u9ed8\u8ba4\u5c31\u4f7f\u7528\u5217\u4e3b\u5e8f\uff0c\u7b49\u4ef7\u4e8e<code>layout(std140, row_major)</code>\u3002</li> </ol> <p>\u4f8b\uff1a <pre><code>layout (std140) uniform ExampleBlock\n{\nfloat value;      //4 + 12    =16\nvec3 vector;      //16(4*4)   =16\nmat4 matrix;      //4\u4e2a\u5217\u5411\u91cf =64\n//16(4*4) =16\n//16(4*4) =16\n//16(4*4) =16\n//16(4*4) =16\nfloat values[3];  //\u4e00\u4e2afloat\u53d6\u5230vec4\u7684\u6574\u6570\u500d =48\n//values[0]   4\u53d6\u5230vec4\u7684\u6574\u6570\u500d=16\n//values[1]   =16\n//values[2]   =16\nbool boolean;         //1 + 3     =4\nint integer;          //4         =4\n};  //152\n</code></pre></p> <p>\u4f8b\u5b50\uff1a</p> <ol> <li> <p>GLSL <pre><code>layout(binding = 6, std140) uniform Shade\n{\nvec2        Neigh_pos_2D[8];    //16*8=128\n//vec2\u6570\u7ec4\u3002\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u8981\u4e0evec4\u5bf9\u9f50 =&gt; vec2\u6570\u7ec4\u7684\u4e00\u4e2a\u5143\u7d20\u537316\nfloat       Pix_scale;  //4\nfloat       Exp_scale;  //4\nfloat       Zm;         //4\nfloat       ZM;         //4\nfloat       Sx;         //4\nfloat       Sy;         //4\nfloat       Dist_to_neighbor_pix;   //4\nfloat       PerspectiveMode;    //4\nvec3        Light_dir;  //16\n//vec3\u5373vec4 =&gt; 16\u4e2a\n};\n</code></pre></p> </li> <li> <p>C++\u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784 <pre><code>    struct ShaderParams\n{\nfloat       Neigh_pos_2D[8 * 4];\nfloat       Pix_scale;\nfloat       Exp_scale;\nfloat       Zm;\nfloat       ZM;\nfloat       Sx; float       Sy;\nfloat       Dist_to_neighbor_pix;\nfloat       PerspectiveMode;\nfloat       Light_dir[4];\n};\n</code></pre></p> </li> </ol>","tags":["uniform\u5185\u5b58\u5bf9\u9f50","uniform\u5757\u5e03\u5c40"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/uniform/layout/#std430","title":"std430","text":"<p>std430\u53ea\u9002\u7528\u4e8eGLSL 4.30\u6216\u66f4\u9ad8\u7248\u672c\u3002</p> <p> </p>","tags":["uniform\u5185\u5b58\u5bf9\u9f50","uniform\u5757\u5e03\u5c40"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/uniform/layout/#packed","title":"packed","text":"<p>\u5f53\u4f7f\u7528\u7d27\u51d1\uff08Packed\uff09\u5e03\u5c40\u65f6\uff0c\u662f\u4e0d\u80fd\u4fdd\u8bc1\u8fd9\u4e2a\u5e03\u5c40\u5728\u6bcf\u4e2a\u7a0b\u5e8f\u4e2d\u4fdd\u6301\u4e0d\u53d8\u7684\uff08\u5373\u975e\u5171\u4eab\uff09\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u7f16\u8bd1\u5668\u53bb\u5c06uniform\u53d8\u91cf\u4eceuniform \u5757\u4e2d\u4f18\u5316\u6389\uff0c\u8fd9\u5728\u6bcf\u4e2a\u7740\u8272\u5668\u4e2d\u90fd\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002</p>","tags":["uniform\u5185\u5b58\u5bf9\u9f50","uniform\u5757\u5e03\u5c40"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E5%8F%98%E9%87%8F%E4%BF%AE%E9%A5%B0%E7%AC%A6/uniform/layout/#binding","title":"binding","text":"<p>\u4eceOpenGL 4.2\u7248\u672c\u8d77\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u5e03\u5c40\u6807\u8bc6\u7b26\uff0c\u663e\u5f0f\u5730\u5c06Uniform\u5757\u7684\u7ed1\u5b9a\u70b9\u50a8\u5b58\u5728\u7740\u8272\u5668\u4e2d\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u518d\u8c03\u7528glGetUniformBlockIndex\u548cglUniformBlockBinding\u4e86\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u663e\u5f0f\u5730\u8bbe\u7f6e\u4e86Lights Uniform\u5757\u7684\u7ed1\u5b9a\u70b9\u3002 <pre><code>layout(std140, binding = 2) uniform Lights { ... };\n</code></pre></p>","tags":["uniform\u5185\u5b58\u5bf9\u9f50","uniform\u5757\u5e03\u5c40"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E6%8E%A7%E5%88%B6%E6%B5%81/","title":"GLSL\u63a7\u5236\u6d41","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E6%8E%A7%E5%88%B6%E6%B5%81/#_1","title":"\u63a7\u5236\u6d41","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E6%8E%A7%E5%88%B6%E6%B5%81/#_2","title":"\u6761\u4ef6\u5224\u65ad","text":"<pre><code>color = unlitColor;\nif (numLights &gt; 0){\ncolor = litColor;\n} else{\ncolor = unlitColor;\n}\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E6%8E%A7%E5%88%B6%E6%B5%81/#_3","title":"\u5faa\u73af","text":"<p>\u548cC/C++\u76f8\u4f3c\uff0c\u63d0\u4f9bfor\u3001while\u3001do/while\u5faa\u73af\u65b9\u5f0f\u3002\u63d0\u4f9bcontinue\u3001break\u63a7\u5236\u5faa\u73af <pre><code>for (l = 0; l &lt; numLights; l++) {\nif (!lightExists[l]) continue;\ncolor += light[l];\n}\nwhile (i &lt; num){\nsum += color[i];\ni++;\n}\ndo{\ncolor += light[lightNum];\nlightNum--;\n}while (lightNum &gt; 0)\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E6%8E%A7%E5%88%B6%E6%B5%81/#discard","title":"discard","text":"<p>\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u63a7\u5236\u6d41\u3002 \u4f7f\u7528discard\u4f1a\u9000\u51fa\u7247\u6bb5\u7740\u8272\u5668\uff0c\u4e0d\u6267\u884c\u540e\u9762\u7684\u7247\u6bb5\u7740\u8272\u64cd\u4f5c\u3002\u7247\u6bb5\u4e5f\u4e0d\u4f1a\u5199\u5165\u7f13\u51b2\u533a <pre><code>if (color.a &lt; 0.9)\ndiscard;\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E6%8E%A7%E5%88%B6%E6%B5%81/#_4","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>OpenGL3:\u9ad8\u7ea7\u7bc7 GLSL</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E7%9F%A9%E9%98%B5/","title":"GLSL\u77e9\u9635","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E7%9F%A9%E9%98%B5/#opengl","title":"OpenGL\u4e2d\u7684\u77e9\u9635","text":"<p>OpenGL\u6e32\u67d3\u7ba1\u7ebf\u81ea\u5e26\u6709\u4e00\u4e9b\u77e9\u9635\u53d8\u91cf</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E7%9F%A9%E9%98%B5/#gl_modelviewmatrix","title":"gl_ModelViewMatrix","text":"<p>gl_ModelViewMatrix * gl_Vertex(\u6a21\u578b\u5750\u6807\u7cfb\u4e0b\u7684\u5750\u6807) = \u76f8\u673a\u5750\u6807\u7cfb</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E7%9F%A9%E9%98%B5/#gl_modelviewprojectionmatrix","title":"gl_ModelViewProjectionMatrix","text":"<p>gl_ModelViewProjectionMatrix * gl_Vertex(\u6a21\u578b\u5750\u6807\u7cfb\u4e0b\u7684\u5750\u6807) = gl_Position(\u5c4f\u5e55\u5750\u6807)</p> <pre><code>static const char* vert_src =\n{\n\"// gl2_VertexShader\\n\"\n\"#ifdef GL_ES\\n\"\n\"       precision highp float;\\n\"\n\"#endif\\n\"\n\"varying vec2 texCoord;\\n\"\n\"varying vec4 vertexColor;\\n\"\n\"\"\n\"void main(void)\\n\"\n\"{\\n\"\n\"       gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;\\n\"\n\"       texCoord = gl_MultiTexCoord0.xy;\\n\"\n\"       vertexColor = gl_Color;\\n\"\n\"}\\n\"\n};\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E7%9F%A9%E9%98%B5/#gl_normalmatrix","title":"gl_NormalMatrix","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E7%9F%A9%E9%98%B5/#gl_projectionmatrix","title":"gl_ProjectionMatrix","text":"<p>\u6295\u5f71\u77e9\u9635</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E7%9F%A9%E9%98%B5/#viewprojectionmatrix","title":"ViewProjectionMatrix","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E7%9F%A9%E9%98%B5/#opengl33","title":"opengl3.3\u540e","text":"<p>global variable gl_ModelViewProjectionMatrix is deprecated after version 120</p> <p>gl_ModelViewProjectionMatrix\u662f\u4e00\u4e2a\u5185\u7f6eGLSL\u5e38\u91cf\uff0c\u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u7684\u89c6\u56fe\u6295\u5f71\u53d8\u6362\u77e9\u9635\u3002\u53ef\u662f\uff0c\u81ea\u4eceopengl3.3\u540e\u8be5\u5e38\u91cf\u6807\u6ce8\u4e3a\u8fc7\u671fdeprecated\u3002</p> <p>\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u91c7\u7528uniform\u7684\u5f62\u5f0f\u5411\u7740\u8272\u5668\u4f20\u9012\u77e9\u9635</p> <ol> <li> <p>\u8fd9\u6837\u4f7f\u7528\u8d77\u6765\u4e0d\u662f\u5f88\u4e0d\u65b9\u4fbf</p> </li> <li> <p>\u6216\u8005\u4f7f\u7528compatible\u65b9\u5f0f\u7ee7\u7eed\u4f7f\u7528\u8001\u7248\u672c\u5e38\u91cf\u3002</p> </li> </ol> <pre><code>uniform mat4 projMat;\nuniform mat4 viewMat;\nuniform mat4 modelMat;\nlayout (location = 0) in vec3 position;\nvoid main()\n{\ngl_Position = projMat * viewMat * modelMat * vec4(position, 1.0);\n}\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u65b0\u7248\u672c\u7684opengl\u4f1a\u4e22\u5f03\u8fd9\u4e9b\u597d\u7528\u7684\u5e38\u91cf\u5462\uff0c\u7c7b\u4f3c\u7684\u8fd8\u6709gl_ModeView\u3001gl_Vertex\u3001gl_NormalMatrix\u3001gl_ModelViewMatrix\u3001gl_ProjectionMatrix\u7b49\u3002</p> <p>\u8fd9\u4e9b\u5185\u7f6e\u77e9\u9635\u4e0e\u51fd\u6570\u5bf9\u4e8e\u5f00\u53d1\u7b80\u5355\u7684OpenGL\u7a0b\u5e8f\u4e0e\u7406\u89e3\u77e9\u9635\u53d8\u6362\u5f88\u6709\u5e2e\u52a9\u3002\u4e0d\u8fc7\uff0c\u4e00\u65e6\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u53d8\u5f97\u590d\u6742\u8d77\u6765\uff0c\u66f4\u597d\u7684\u9009\u62e9\u662f\u4e3a\u6bcf\u4e00\u4e2a\u53ef\u79fb\u52a8\u6a21\u578b\u5bf9\u8c61\u7ba1\u7406\u81ea\u5df1\u7684\u77e9\u9635\u5b9e\u73b0\u3002\u6b64\u5916\uff0c\u5728OpenGL\u53ef\u7f16\u7a0b\u7ba1\u7ebf\uff08GLSL\uff09\u4e2d\uff0c\u4f60\u4e0d\u80fd\u591f\u4f7f\u7528\u8fd9\u4e9b\u5185\u7f6e\u77e9\u9635\u51fd\u6570\u3002\u5982OpenGL v3.0+\u3001OpenGL ES v2.0+\u4e0eWebGL v1.0+\u3002\u4f60\u5fc5\u987b\u62e5\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684\u77e9\u9635\u5b9e\u73b0\uff0c\u5e76\u4e14\u5411OpenGL\u7740\u8272\u8bed\u8a00\u4f20\u9012\u8be5\u77e9\u9635\u6570\u636e\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E7%9F%A9%E9%98%B5/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>openGL\u4e4bAPI\u5b66\u4e60\uff08\u4e5d\u5341\u4e00\uff09gl_ModelViewProjectionMatrix\u8fc7\u671fdeprecated</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E7%B1%BB%E5%9E%8B/","title":"GLSL\u7c7b\u578b","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E7%B1%BB%E5%9E%8B/#_1","title":"\u57fa\u672c\u7c7b\u578b","text":"<p>GLSL\u5f15\u5165\u4e86\u4e00\u4e9b\u5728\u7740\u8272\u5668\u4e2d\u7ecf\u5e38\u7528\u5230\u7684\u7c7b\u578b\u4f5c\u4e3a\u57fa\u672c\u7c7b\u578b</p> \u7c7b\u578b \u63cf\u8ff0 void \u8ddfC\u8bed\u8a00\u7684void\u7c7b\u4f3c\uff0c\u8868\u793a\u7a7a\u7c7b\u578b\u3002\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u8868\u793a\u8fd9\u4e2a\u51fd\u6570\u4e0d\u8fd4\u56de\u503c\u3002 bool \u5e03\u5c14\u7c7b\u578b\uff0c\u53ef\u4ee5\u662ftrue \u548cfalse\uff0c\u4ee5\u53ca\u53ef\u4ee5\u4ea7\u751f\u5e03\u5c14\u578b\u7684\u8868\u8fbe\u5f0f\u3002 int \u6574\u578b \u4ee3\u8868\u81f3\u5c11\u5305\u542b16\u4f4d\u7684\u6709\u7b26\u53f7\u7684\u6574\u6570\u3002\u53ef\u4ee5\u662f\u5341\u8fdb\u5236\u7684\uff0c\u5341\u516d\u8fdb\u5236\u7684\uff0c\u516b\u8fdb\u5236\u7684\u3002 float \u6d6e\u70b9\u578b bvec2 \u5305\u542b2\u4e2a\u5e03\u5c14\u6210\u5206\u7684\u5411\u91cf bvec3 \u5305\u542b3\u4e2a\u5e03\u5c14\u6210\u5206\u7684\u5411\u91cf bvec4 \u5305\u542b4\u4e2a\u5e03\u5c14\u6210\u5206\u7684\u5411\u91cf ivec2 \u5305\u542b2\u4e2a\u6574\u578b\u6210\u5206\u7684\u5411\u91cf ivec3 \u5305\u542b3\u4e2a\u6574\u578b\u6210\u5206\u7684\u5411\u91cf ivec4 \u5305\u542b4\u4e2a\u6574\u578b\u6210\u5206\u7684\u5411\u91cf mat2 \u6216\u8005 mat2x2 2x2\u7684\u6d6e\u70b9\u6570\u77e9\u9635\u7c7b\u578b mat3\u6216\u8005mat3x3 3x3\u7684\u6d6e\u70b9\u6570\u77e9\u9635\u7c7b\u578b mat4x4 4x4\u7684\u6d6e\u70b9\u77e9\u9635 mat2x3 2\u52173\u884c\u7684\u6d6e\u70b9\u77e9\u9635\uff08OpenGL\u7684\u77e9\u9635\u662f\u5217\u4e3b\u987a\u5e8f\u7684\uff09 mat2x4 2\u52174\u884c\u7684\u6d6e\u70b9\u77e9\u9635 mat3x2 3\u52172\u884c\u7684\u6d6e\u70b9\u77e9\u9635 mat3x4 3\u52174\u884c\u7684\u6d6e\u70b9\u77e9\u9635 mat4x2 4\u52172\u884c\u7684\u6d6e\u70b9\u77e9\u9635 mat4x3 4\u52173\u884c\u7684\u6d6e\u70b9\u77e9\u9635 sampler1D \u7528\u4e8e\u5185\u5efa\u7684\u7eb9\u7406\u51fd\u6570\u4e2d\u5f15\u7528\u6307\u5b9a\u76841D\u7eb9\u7406\u7684\u53e5\u67c4\u3002\u53ea\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u81f4\u53d8\u91cf\u6216\u8005\u51fd\u6570\u53c2\u6570\u4f7f\u7528 sampler2D \u4e8c\u7ef4\u7eb9\u7406\u53e5\u67c4 sampler3D \u4e09\u7ef4\u7eb9\u7406\u53e5\u67c4 samplerCube cube map\u7eb9\u7406\u53e5\u67c4 sampler1DShadow \u4e00\u7ef4\u6df1\u5ea6\u7eb9\u7406\u53e5\u67c4 sampler2DShadow \u4e8c\u7ef4\u6df1\u5ea6\u7eb9\u7406\u53e5\u67c4"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E7%B1%BB%E5%9E%8B/#_2","title":"\u7ed3\u6784\u4f53","text":"<pre><code>struct surface {\nfloat indexOfRefraction;\nvec3 color;float turbulence;\n} mySurface;\nsurface secondeSurface;\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E7%B1%BB%E5%9E%8B/#_3","title":"\u6570\u7ec4","text":"<p>GLSL\u53ea\u6709\u4e00\u7ef4\u6570\u7ec4</p> <ul> <li>\u6570\u7ec4\u4e0b\u6807\u4ece0\u5f00\u59cb\uff0c\u5408\u7406\u7684\u8303\u56f4\u662f[0, size-1]</li> <li>\u4e0eC\u8bed\u8a00\u4e00\u6837\uff0c\u5982\u679c\u6570\u7ec4\u8bbf\u95ee\u8d8a\u754c\uff0c\u90a3\u884c\u4e3a\u662f\u672a\u5b9a\u4e49\u7684\u3002\u5982\u679c\u7740\u8272\u5668\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u671f\u65f6\u77e5\u9053\u6570\u7ec4\u8bbf\u95ee\u8d8a\u754c\uff0c\u5219\u4f1a\u63d0\u793a\u7f16\u8bd1\u5931\u8d25 <pre><code>surface mySurfaces[];\nvec4 lightPositions[8];\nvec4 lightPos[] = lightPositions;\nconst int numSurfaces = 5;\nsurface myFiveSurfaces[numSurfaces];\nfloat[5] values;\nvec4 myColor, ambient, diffuse[6], specular[6];\nmyColor = ambient + diffuse[4] + specular[4];\n</code></pre></li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E7%B1%BB%E5%9E%8B/#_4","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>OpenGL3:\u9ad8\u7ea7\u7bc7 GLSL</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E8%B5%84%E6%96%99/","title":"GLSL\u76f8\u5173\u8d44\u6599","text":"<p>\u76f8\u5173\u7f51\u7ad9</p> <ol> <li>https://www.shadertoy.com/</li> <li>https://github.com/libretro/glsl-shaders</li> </ol> <p>\u76f8\u5173\u6587\u7ae0</p> <ol> <li>\u7740\u8272\u5668\u8be6\u7ec6\u8bf4\u660e-\u5185\u7f6e\u53d8\u91cf\u7b49</li> <li>learnopengl\u7740\u8272\u5668</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E8%B5%84%E6%96%99/vscode%2Bglsl%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/","title":"Vscode+glsl\u5f00\u53d1\u73af\u5883","text":"<p>\u76f8\u5173\u63d2\u4ef6</p> <ol> <li>Shader Toy</li> <li>Shader languages support for VS Code</li> </ol> <p>\u76f8\u5173\u6587\u7ae0</p> <ol> <li>vscode glsl\u914d\u7f6e</li> <li>VsCode\u5b89\u88c5shader glsl\u73af\u5883</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/GLSL/%E8%B5%84%E6%96%99/vscode%2Bglsl%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#shader-toy","title":"Shader Toy","text":"<p>\"show glsl preview\"\u8fbe\u5230\u7c7b\u4f3c\u8bbf\u95eeshadertoy.com\u7684\u6548\u679c</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/glslang/","title":"glslang\uff08GLSL\u7f16\u8bd1\u5668\uff09","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/glslang/#_1","title":"\u7b80\u4ecb","text":"<p>glslang\u662fKhronos Group\u5f00\u6e90\u7684GLSL\u7f16\u8bd1\u5668\u524d\u7aef\uff08front\uff09\u3002glslang\u662fKhronos Group\u5728\u5f00\u53d1\u548c\u6807\u51c6\u5316OpenGL ES\u548cVulkan\u6280\u672f\u65f6\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206</p> <ol> <li>\u5b83\u53ef\u4ee5\u5c06GLSL\u4ee3\u7801\u7f16\u8bd1\u6210OpenGL ES\uff0fWebGL\uff0fVulkan\u53ef\u7528\u7684\u4e2d\u95f4\u8868\u793a(IR)\u3002</li> <li>glslang\u652f\u6301\u5927\u90e8\u5206\u7684GLSL 4.60\uff08OpenGL 4.6\uff09\u8bed\u8a00\u7279\u6027\uff0c\u4ee5\u53ca\u4e00\u4e9bVulkan\u4e13\u6709\u7684\u6269\u5c55</li> <li>\u540c\u65f6\uff0c\u5b83\u4e5f\u652f\u6301\u53cd\u5411\u7f16\u8bd1\uff0c\u5e76\u80fd\u591f\u5c06IR\u8f6c\u6362\u56deGLSL\u4ee3\u7801</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/glslang/#_2","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>Github\u4ed3\u5e93-KhronosGroup/glslang</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/renderdoc/","title":"renderdoc\u67e5\u770bshader","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/renderdoc/#_1","title":"\u5f15\u8a00","text":"<p>\u53ef\u4ee5\u4f7f\u7528renderdoc\u8f6f\u4ef6\uff0c\u901a\u8fc7\u6293\u5e27\u7684\u65b9\u5f0f\u53bb\u770bshader\u4ee3\u7801\u3002</p> <ol> <li>Launch Application &gt; Executable Path\u4e2d\u586b\u5165exe\u8def\u5f84 &gt; \u586b\u5165\u547d\u4ee4\u884c\u53c2\u6570 &gt; \u6309F12\u8fdb\u884c\u6293\u5e27</li> <li>\u53cc\u51fb\u6e32\u67d3\u7ed3\u679c &gt; \u6309\u5de6\u53f3\u952e\uff0c\u5373\u53ef\u5b9a\u4f4d\u5e27</li> <li>\u5b9a\u4f4d\u5230\u5177\u4f53\u5e27\u4e4b\u540e\uff0c\u70b9\u51fbPipeline State\uff0c\u5373\u53ef\u67e5\u770b\u7740\u8272\u5668</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/%E7%9D%80%E8%89%B2%E5%99%A8%E7%B1%BB%E5%9E%8B/","title":"\u7740\u8272\u5668\u7c7b\u578b","text":""},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/%E7%9D%80%E8%89%B2%E5%99%A8%E7%B1%BB%E5%9E%8B/#_1","title":"\u9876\u70b9\u7740\u8272\u5668\u4e0e\u7247\u5143\u7740\u8272\u5668","text":"<ol> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u9876\u70b9\uff0c\u90fd\u4f1a\u8c03\u7528\u4e00\u6b21\u9876\u70b9\u7740\u8272\u5668</li> <li>\u7531\u4e8e\u9876\u70b9\u7740\u8272\u5668\uff0c\u53ea\u5904\u7406\u4e86\u9876\u70b9\uff0c\u6240\u4ee5\u5728\u5149\u6805\u5316\u6b65\u9aa4\u5f53\u4e2d\uff0c\u4f1a\u63d2\u503c\u51fa\u4e09\u89d2\u5f62\u5185\u3001\u9664\u4e09\u89d2\u5f62\u9876\u70b9\u7684\u503c\u3002\u5728\u8fd9\u4e00\u6b65\u5f53\u4e2d\uff0c\u4f1a\u63d2\u503c\u51fa\u6240\u6709<code>varying</code>\u7c7b\u578b\u7684\u53d8\u91cf\u7684\u503c\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48<code>varying</code>\u4e0d\u80fd\u662fbool\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u5b83\u8981\u63d2\u503c\u561b\uff09</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u50cf\u7d20\uff0c\u90fd\u4f1a\u8c03\u7528\u4e00\u6b21\u7247\u5143\u7740\u8272\u5668\u3002\u5728\u7247\u5143\u7740\u8272\u5668\u5f53\u4e2d\uff0c\u53d8\u91cf\u7684\u503c\uff0c\u662f\u5728\u5149\u6805\u5316\u5f53\u4e2d\u63d2\u503c\u6765\u7684\u3002</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/4-%E7%9D%80%E8%89%B2%E5%99%A8/%E7%9D%80%E8%89%B2%E5%99%A8%E7%B1%BB%E5%9E%8B/OpenGL2%E7%9D%80%E8%89%B2%E5%99%A8/","title":"OpenGL2\u7740\u8272\u5668","text":"<p>\u5728OpenGL2\u6d41\u6c34\u7ebf\u5f53\u4e2d\uff0c\u53ea\u6709\u4e24\u79cd\u7740\u8272\u5668\u3002</p> <ol> <li>\u9876\u70b9\u7740\u8272\u5668\uff08Vertex shaders\uff09\uff1a\u6bcf\u4e2a\u9876\u70b9\u5206\u522b\u8c03\u7528\u4e00\u6b21\u7684\u7a0b\u5e8f\uff0c\u8d1f\u8d23\u6267\u884c\u706f\u5149\u3001\u51e0\u4f55\u53d8\u6362\u7b49\u64cd\u4f5c\uff0c\u7b97\u51fa\u9876\u70b9\u7684\u6700\u7ec8\u4f4d\u7f6e</li> <li>\u7247\u6bb5\u7740\u8272\u5668\uff08Fragment shaders\uff09\uff1a \u6bcf\u4e2a\u50cf\u7d20\u5206\u522b\u8c03\u7528\u4e00\u6b21\u7684\u7a0b\u5e8f\uff0c\u8d1f\u8d23\u8ba1\u7b97\u706f\u5149\u7b49\u64cd\u4f5c\uff0c\u6700\u7ec8\u8ba1\u7b97\u51fa\u50cf\u7d20\u7684\u6700\u7ec8\u989c\u8272</li> </ol> <p>\u5728\u8f83\u65b0\u7248\u672c\u7684OpenGL\u4e2d\uff0c\u8fd8\u6709\u5176\u4ed6\u7684\u7740\u8272\u5668\uff0c\u6bd4\u5982\u8bf4\u51e0\u4f55\u7740\u8272\u5668\uff0c\u8ba1\u7b97\u7740\u8272\u5668\u3002</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/","title":"OpenCV","text":"<p>OpenCV \u7684\u5168\u79f0\u662fOpen Source Computer Vision Library\uff0c\u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u5e93</p> <ul> <li>OpenCV\u662f\u7531\u82f1\u7279\u5c14\u516c\u53f8\u53d1\u8d77\u5e76\u53c2\u4e0e\u5f00\u53d1</li> <li>\u4ee5BSD\u8bb8\u53ef\u8bc1\u6388\u6743\u53d1\u884c\uff0c\u53ef\u4ee5\u5728\u5546\u4e1a\u548c\u7814\u7a76\u9886\u57df\u4e2d\u514d\u8d39\u4f7f\u7528</li> <li>OpenCV\u53ef\u7528\u4e8e\u5f00\u53d1\u5b9e\u65f6\u7684\u56fe\u50cf\u5904\u7406\u3001\u8ba1\u7b97\u673a\u89c6\u89c9\u4ee5\u53ca\u6a21\u5f0f\u8bc6\u522b\u7a0b\u5e8f</li> <li>\u8be5\u7a0b\u5e8f\u5e93\u4e5f\u53ef\u4ee5\u4f7f\u7528\u82f1\u7279\u5c14\u516c\u53f8\u7684IPP\u8fdb\u884c\u52a0\u901f\u5904\u7406</li> </ul>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/#opencv","title":"OpenCV\u6269\u5c55\u6a21\u5757","text":"<p>opencv_contrib\u662f\u8d21\u732e\u8005\u6350\u8d60\u7684\u6269\u5c55\u6a21\u5757</p> <ul> <li>\u65b0\u7b97\u6cd5\u7684\u5f00\u53d1\u548c\u5b9e\u9a8c\u90fd\u5728opencv_contrib\u4ed3\u5e93\u4e2d\u5b9e\u73b0\uff0c\u56e0\u6b64\u6b64\u4ed3\u5e93\u5185\u7684\u6a21\u5757\u53ef\u80fd\u5c1a\u672a\u7ecf\u8fc7\u5145\u5206\u6d4b\u8bd5\u3001\u6216\u8005API\u63a5\u53e3\u540e\u7eed\u4f1a\u6539</li> <li>\u5f53\u6a21\u5757\u6210\u719f\u5e76\u83b7\u5f97\u666e\u53ca\u65f6\uff0c\u5b83\u4f1a\u88ab\u79fb\u52a8\u5230OpenCV\u4e3b\u4ed3\u5e93\u4e2d\uff0cOpenCV\u5f00\u53d1\u56e2\u961f\u4e5f\u4f1a\u4e3a\u5b83\u4eec\u63d0\u4f9b\u751f\u4ea7\u8d28\u91cf\u7684\u652f\u6301</li> </ul> <p>\u76f8\u5173\u6587\u6863</p> <ol> <li>\u6269\u5c55\u6a21\u5757\u6587\u6863\uff1aOpenCV: Tutorials for contrib modules</li> <li>Github\u4ed3\u5e93\uff1aopencv/opencv_contrib: Repository for OpenCV's extra modules (github.com)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/#_1","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>OpenCV Documentation (vovkos.github.io)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/#opencv-python","title":"opencv-python","text":"<ol> <li>OpenCV-Python Tutorials \u2014 OpenCV-Python Tutorials beta documentation (opencv24-python-tutorials.readthedocs.io)</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/#_2","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>\u7b2c 9 \u90e8\u5206\uff1aopencv_contrib\u7b80\u4ecb</li> </ol>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/C%2B%2B%E7%BC%96%E8%AF%91opencv-contrib/","title":"C++\u7f16\u8bd1opencv contrib","text":"<p>\u5728\u7f16\u8bd1opencv\u65f6\uff0c\u6307\u5b9acontrib\u7684\u8def\u5f84\uff0c\u4e00\u8d77\u7f16\u8bd1\u5373\u53ef\u3002\u4f46\u8981\u6ce8\u610fopencv\u548ccontrib\u7684\u7248\u672c\u8981\u4e00\u81f4\u3002</p> <pre><code>OPENCV_EXTRA_MODULES_PATH = D:\\opencv3.4.3\\opencv\\opencv_contrib-3.4.3\\modules\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/C%2B%2B%E7%BC%96%E8%AF%91opencv-contrib/#_1","title":"\u53c2\u8003\u94fe\u63a5","text":"<p>OpenCV + OpenCV Contrib\u5b89\u88c5\u6559\u7a0b\uff08windows\uff09</p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/CMake%E5%BC%95%E7%94%A8opencv/","title":"CMake\u5f15\u7528opencv","text":"<pre><code># \u5f15\u5165opencv\nif(WIN32)\nadd_definitions(-D_CRT_SECURE_NO_DEPRECATE)\nfind_path(OpenCV_DIR OpenCVConfig.cmake PATHS $ENV{OpenCV_DIR}\n\"D:/opencv/opencv-4.7.0\" #opencv\u7684install\u76ee\u5f55\n)\nfind_package(OpenCV REQUIRED)\nelse()\nfind_package(OpenCV REQUIRED)\nendif()\n# \u6253\u5370\nMESSAGE(STATUS ${OpenCV_LIBS})\nMESSAGE(STATUS ${OpenCV_INCLUDE_DIRS})\nMESSAGE(STATUS ${OpenCV_SHARED})\n# \u94fe\u63a5\u5230target\ntarget_link_libraries(target_name PRIVATE ${OpenCV_LIBS})\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u521b\u5efa\u4e00\u4e2aOpenCV Target\uff0c\u518d\u540e\u7eed\u94fe\u63a5\u65f6\uff0c\u53ea\u9700\u94fe\u63a5OpenCV\u5373\u53ef <pre><code># \u521b\u5efa\u4e00\u4e2aOpenCV Target\nadd_library(OpenCV INTERFACE)\ntarget_link_libraries(OpenCV INTERFACE ${OpenCV_LIBS})\n# Target\u94fe\u63a5\ntarget_link_libraries(target_name PRIVATE OpenCV)\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/Python%E5%AE%89%E8%A3%85opencv-contrib/","title":"Python\u5b89\u88c5opencv contrib","text":"<p>Contrib\u7248\u672c\u7684OpenCV\u662f\u666e\u901aOpenCV\u7684\u8d85\u96c6\uff0c\u5305\u542b\u4e86\u6240\u6709OpenCV\u6b63\u5e38\u7248\u7684\u529f\u80fd\u3002\u56e0\u6b64\u5728\u5b89\u88c5\u524d\uff0c\u9700\u8981\u5378\u8f7d<code>opencv-python</code> <pre><code>pip uninstall opencv-python\npip install opencv-contrib-python\n</code></pre></p>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/OpenCV/%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/Python%E5%AE%89%E8%A3%85opencv-contrib/#_1","title":"\u793a\u4f8b","text":"<p>\u53c2\u8003\u6587\u7ae0\uff1aOpenCV Contrib\u6269\u5c55\u6a21\u5757\u4ecb\u7ecd\u4e0e\u5b89\u88c5(Python) (zhaoxuhui.top)</p> <p>\u4f7f\u7528<code>cv2.xfeatures2d</code>\u6a21\u5757\u4e2dSIFT\u548cSURF\u7b97\u5b50\u7684\u7b80\u5355\u793a\u4f8b\u4ee3\u7801</p> <pre><code># coding=utf-8\nimport cv2\nimport numpy as np\n# \u8bfb\u53d6\u56fe\u50cf\nimg = cv2.imread(\"camera.png\")\n# \u521b\u5efa\u5bf9\u8c61\n# \u5bf9\u4e8eSIFT\u7b97\u5b50\uff0c\u53ef\u4ee5\u901a\u8fc7nFeatures\u5c5e\u6027\u63a7\u5236\u7279\u5f81\u70b9\u6570\u91cf\n# \u5bf9\u4e8eSURF\u7b97\u5b50\uff0c\u53ef\u4ee5\u901a\u8fc7hessianThreshold\u5c5e\u6027\u63a7\u5236\u7279\u5f81\u70b9\u6570\u91cf\n# \u66f4\u8be6\u7ec6\u7684\u7528\u6cd5\u89c1OpenCV\u5b98\u65b9API\u6587\u6863\nSIFT = cv2.xfeatures2d_SIFT.create()\nSURF = cv2.xfeatures2d_SURF.create()\n# \u63d0\u53d6\u7279\u5f81\u5e76\u8ba1\u7b97\u63cf\u8ff0\u5b50\nkps, des = cv2.xfeatures2d_SIFT.detectAndCompute(SIFT, img, None)\nkps2, des2 = cv2.xfeatures2d_SURF.detectAndCompute(SURF, img, None)\n# \u65b0\u5efa\u4e00\u4e2a\u7a7a\u56fe\u50cf\u7528\u4e8e\u7ed8\u5236\u7279\u5f81\u70b9\nimg_sift = np.zeros(img.shape, np.uint8)\nimg_surf = np.zeros(img.shape, np.uint8)\n# \u7ed8\u5236\u7279\u5f81\u70b9\ncv2.drawKeypoints(img, kps, img_sift)\ncv2.drawKeypoints(img, kps2, img_surf)\n# \u5c55\u793a\ncv2.imshow(\"img\", img)\ncv2.imshow(\"sift\", img_sift)\ncv2.imshow(\"surf\", img_surf)\ncv2.waitKey(0)\n</code></pre>"},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/%E6%A6%82%E5%BF%B5/%E5%BD%A2%E7%8A%B6%E4%B8%8A%E4%B8%8B%E6%96%87%28Shape%20context%29/","title":"\u5f62\u72b6\u4e0a\u4e0b\u6587","text":"","tags":["3dsc","2dsc"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/%E6%A6%82%E5%BF%B5/%E5%BD%A2%E7%8A%B6%E4%B8%8A%E4%B8%8B%E6%96%87%28Shape%20context%29/#_1","title":"\u5f62\u72b6\u4e0a\u4e0b\u6587","text":"<p>\u5f62\u72b6\u4e0a\u4e0b\u6587\u7279\u5f81\u662f\u4e00\u79cd\u5f62\u72b6\u63cf\u8ff0\u5b50\uff0c\u591a\u7528\u4e8e\u5f62\u72b6\u5339\u914d\u3001\u76ee\u6807\u8bc6\u522b</p> <ul> <li>\u91c7\u7528\u4e00\u79cd\u57fa\u4e8e\u5f62\u72b6\u8f6e\u5ed3\u7684\u7279\u5f81\u63cf\u8ff0\u65b9\u6cd5\uff0c\u5728\u6781\u5750\u6807\u7cfb\u4e0b\uff0c\u5229\u7528\u76f4\u65b9\u56fe\u63cf\u8ff0\u5f62\u72b6\u7279\u5f81\uff0c\u80fd\u591f\u5f88\u597d\u7684\u53cd\u6620\u8f6e\u5ed3\u4e0a\u91c7\u6837\u70b9\u7684\u5206\u5e03\u60c5\u51b5</li> </ul> <p></p>","tags":["3dsc","2dsc"]},{"location":"A-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99/3D-Machine-Learning%28timzhang642%29/","title":"3D Machine Learning(timzhang642)","text":"<p>\u8d44\u6599\u5730\u5740\uff1atimzhang642/3D-Machine-Learning: A resource repository for 3D machine learning (github.com)</p> <p>\u76ee\u5f55</p> <ul> <li>Courses</li> <li>Datasets<ul> <li>3D Models</li> <li>3D Scenes</li> </ul> </li> <li>3D Pose Estimation</li> <li>Single Object Classification</li> <li>Multiple Objects Detection</li> <li>Scene/Object Semantic Segmentation</li> <li>3D Geometry Synthesis/Reconstruction<ul> <li>Parametric Morphable Model-based methods</li> <li>Part-based Template Learning methods</li> <li>Deep Learning Methods</li> </ul> </li> <li>Texture/Material Analysis and Synthesis</li> <li>Style Learning and Transfer</li> <li>Scene Synthesis/Reconstruction</li> <li>Scene Understanding</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/0%E6%A6%82%E8%BF%B0/C%2B%2BSTL%E5%85%AD%E5%A4%A7%E9%83%A8%E4%BB%B6/","title":"C++STL\u516d\u5927\u90e8\u4ef6","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/0%E6%A6%82%E8%BF%B0/C%2B%2BSTL%E5%85%AD%E5%A4%A7%E9%83%A8%E4%BB%B6/#_1","title":"\u5f15\u8a00","text":"<p>C\u662f\u4e00\u4e2a\u9762\u5411\u8fc7\u7a0b\u7684\u8bed\u8a00\uff0c\u5b83\u7684\u6807\u51c6\u5e93\u662f\u4e00\u4e2a\u4e00\u4e2a\u5355\u4e00\u7684\u51fd\u6570\uff0c\u5f7c\u6b64\u4e4b\u95f4\u5e76\u6ca1\u6709\u4ec0\u4e48\u5173\u8054\u3002\u800cC++\u7684\u6807\u51c6\u6a21\u677f\u5e93\uff08STL\uff0cStandard Template Library\uff09\u4e3b\u8981\u5206\u4e3a\u4e86\u516d\u5927\u90e8\u4ef6\uff0c\u6bcf\u4e2a\u90e8\u4ef6\u4e4b\u95f4\u90fd\u6709\u7d27\u5bc6\u7684\u8054\u7cfb\u3002\u672c\u6587\u5c06\u4ece\u4e00\u4e2a\u793a\u4f8b\u51fa\u53d1\uff0c\u9010\u4e00\u7b80\u5355\u4ecb\u7ecdC++STL\u7684\u516d\u5927\u90e8\u4ef6\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/0%E6%A6%82%E8%BF%B0/C%2B%2BSTL%E5%85%AD%E5%A4%A7%E9%83%A8%E4%BB%B6/#40","title":"\u793a\u4f8b\uff1a\u7edf\u8ba1\u5bb9\u5668\u4e2d\u5927\u4e8e\u7b49\u4e8e40\u7684\u4e2a\u6570","text":"<p>\u4ee5\u4e0b\u4ee3\u7801\uff0c\u4f1a\u7edf\u8ba1\u51fa<code>vector</code>\u5bb9\u5668\u4e2d\uff0c\u226540\u7684\u4e2a\u6570\u3002\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\uff1a<code>4</code></p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\nint main()\n{\nint ia[6] = {27, 210, 12, 40, 109, 83};\nstd::vector&lt;int, std::allocator&lt;int&gt;&gt; vi(ia, ia+6);\n//std::vector \u3010\u5bb9\u5668\u3011\u7c7b\u578b\n//int \u6570\u636e\u7c7b\u578b\n//std::allocator&lt;int&gt;&gt; \u3010\u5206\u914d\u5668\u3011\u4f7f\u7528STL\u63d0\u4f9b\u7684\u5206\u914d\u5668\nauto result = std::count_if(    //\u3010\u7b97\u6cd5\u3011\u8ba1\u7b97\u6ee1\u8db3\u6761\u4ef6\u7684\u4e2a\u6570\nvi.begin(), vi.end(),   //\u3010\u8fed\u4ee3\u5668\u3011\u6b64\u7b97\u6cd5\u5904\u7406\u54ea\u4e9b\u6570\u636e\uff0c\u4ee5\u8303\u56f4\u7684\u5f62\u5f0f\u63d0\u4f9b\n//\u7b2c\u4e09\u4e2a\u53c2\u6570\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u3010\u4eff\u51fd\u6570\u3011\uff0c\u4f5c\u4e3a\u8c13\u8bcd\u6761\u4ef6\n//  count_if\u4f1a\u904d\u5386\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u5206\u522b\u8c03\u7528\u8fd9\u4e2a\u4eff\u51fd\u6570\uff0c\u5982\u679c\u8fd4\u56detrue\uff0c\u5219count+1\nstd::not1(  //\u3010\u9002\u914d\u5668\u3011\u6761\u4ef6\u53d6\u53cd\uff0c\u5c06\u4f20\u5165\u7684\u53c2\u6570\u53d6\u53cd\nstd::bind2nd(   //\u3010\u9002\u914d\u5668\u3011\u5c0640\u4f20\u5165std::less&lt;int&gt;()\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\nstd::less&lt;int&gt;(),   //\u3010\u4eff\u51fd\u6570\u3011\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u53c2\u6570\u7684\u5927\u5c0f\n//  \u5373std::less&lt;int&gt;(int a, int b)\n//  1. count_if\u4f1a\u904d\u5386\u8303\u56f4\u5185\u7684\u6240\u6709\u5143\u7d20\uff0c\u5e76\u628a\u5b83\u5f53\u6210a\u4f20\u5165less()\u51fd\u6570\n//  2. std::bind2nd\u5c0640\u5f53\u6210b\u4f20\u5165less()\u51fd\u6570\n40\n)\n)\n);\nstd::cout &lt;&lt; result &lt;&lt; std::endl; //\u8f93\u51fa\uff1a4\nreturn 0;\n}\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/0%E6%A6%82%E8%BF%B0/C%2B%2BSTL%E5%85%AD%E5%A4%A7%E9%83%A8%E4%BB%B6/#_2","title":"\u5bb9\u5668","text":"<p><code>std::vector&lt;int&gt; vi(ia, ia+6);</code> \u5373\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5b58\u50a8int\u7c7b\u578b\u7684\u53ef\u53d8\u957f\u6570\u7ec4</p> <ul> <li>\u5bb9\u5668\u5c31\u662f\u7528\u6765\u5b58\u653e\u4e1c\u897f\u7684</li> <li>\u5b58\u653e\u4e1c\u897f\u5c31\u8981\u5360\u7528\u5185\u5b58\uff0c\u4f46\u662f\u5bb9\u5668\u4f1a\u5e2e\u6211\u4eec\u89e3\u51b3\u5185\u5b58\u7684\u4e8b\u60c5\u3002\u4f60\u65e0\u9700\u5173\u5fc3\u5185\u5b58\u5982\u4f55\u7ba1\u7406\uff0c\u53ea\u9700\u8981\u628a\u4e1c\u897f\u4e00\u4e2a\u4e00\u4e2a\u653e\u8fdb\u53bb\u3001\u6216\u8005\u53d6\u51fa\u6765</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/0%E6%A6%82%E8%BF%B0/C%2B%2BSTL%E5%85%AD%E5%A4%A7%E9%83%A8%E4%BB%B6/#_3","title":"\u7a7a\u95f4\u5206\u914d\u5668","text":"<p>\u3010\u4e3a\u4ec0\u4e48\u53eb\u7a7a\u95f4\u5206\u914d\u5668\uff0c\u800c\u4e0d\u53eb\u5185\u5b58\u5206\u914d\u5668\u3011</p> <ul> <li>\u6709\u53ef\u80fd\u4e0d\u662f\u5185\u5b58\uff0c\u6709\u53ef\u80fd\u662f\u786c\u76d8\u3001\u7f51\u7edc\u8d44\u6e90\u7b49\u7b49</li> <li>\u56e0\u6b64\uff0c\u62bd\u8c61\u8c08\u201c\u7a7a\u95f4\u201d\u66f4\u4e3a\u5e7f\u6cdb\u4e0e\u9002\u7528</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/priority_queue/","title":"priority_queue(\u5806\u6392\u5e8f)","text":"<p>priority_queue\u4f18\u5148\u961f\u5217</p> <ul> <li>\u4ece\u540e\u9762\u5165\u961f\uff0c\u4ece\u524d\u9762\u51fa\u961f</li> <li>\u5165\u961f\u65f6\uff0c\u4f1a\u8ba9\u4f18\u5148\u7ea7\u9ad8\u7684\u6392\u5728\u961f\u4f0d\u524d\u9762</li> <li>\u4e0b\u6807\u4e3a0\u7684\u5730\u65b9\u662ftop\u6808\u9876\uff1b\u4e0b\u6807\u4e3asize-1\u7684\u5730\u65b9\u662f\u6808\u5e95bottom</li> <li>\u5185\u90e8\u5b9e\u73b0\u662f\u5806\u6392\u5e8f</li> <li>\u4e0d\u4f1a\u53bb\u91cd</li> </ul> <p></p> <pre><code>#include&lt;queue&gt;\ntemplate &lt;\ntypename T,  //\u5143\u7d20\u7c7b\u578b\ntypename Container=std::vector&lt;T&gt;, //\u4f18\u5148\u961f\u5217\u7684\u5e95\u5c42\u5bb9\u5668\uff0c\u5fc5\u987b\u662f\u6570\u7ec4(\u5982vector\u3001deque)\uff0c\u4e0d\u80fd\u662flist \ntypename Compare=std::less&lt;T&gt;\n//\u9ed8\u8ba4\u662fless\n&gt; class priority_queue;\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/priority_queue/#_1","title":"\u5927\u9876\u5806\u3001\u5c0f\u9876\u5806\u5982\u4f55\u533a\u5206","text":"<p>\u80cc\u666f</p> <ul> <li><code>std::sort</code>\u9ed8\u8ba4\u662f\u4f7f\u7528<code>&lt;</code>\u53f7\u8fdb\u884c\u6392\u5e8f\uff0c\u800c\u4e14\u662f\u5347\u5e8f\uff08\u56e0\u4e3a\u8bbe\u8ba1\u8005\u4eec\u8ba4\u4e3a\uff0c\u5347\u5e8f\u662f\u5e38\u89c1\u7684\u6392\u5e8f\u65b9\u5f0f\uff09\u3002\u5982\u679c\u4f20\u5165<code>&gt;</code>\uff0c\u5219\u662f\u964d\u5e8f</li> <li>\u5bf9\u4e8e<code>priority_queue</code>\uff0c\u65b0\u5143\u7d20\u662f\u4ece\u53f3\u8fb9\u63d2\u961f\uff0c\u56e0\u6b64\u987a\u5e8f\u662f\u4ece\u53f3\u5230\u5de6</li> </ul> <p>\u5982\u4f55\u533a\u5206</p> <pre><code>//\u5927\u9876\u5806\uff08\u9ed8\u8ba4\uff09\npriority_queue &lt;int,vector&lt;int&gt;,less&lt;int&gt; &gt;q;\n//less =&gt; \uff08\u4ece\u53f3\u5230\u5de6\uff09\u5347\u5e8f =&gt; \u961f\u5934\u662f\u5927\u503c\uff08\u5de6\u8fb9\u662f\u961f\u5934\uff09 =&gt; \u5927\u9876\u5806\n// \u5c0f\u9876\u5806\npriority_queue &lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt; q;\n//greater =&gt; \uff08\u4ece\u53f3\u5230\u5de6\uff09\u964d\u5e8f =&gt; \u961f\u5934\u662f\u5c0f\u503c\uff08\u5de6\u8fb9\u662f\u961f\u5934\uff09 =&gt; \u5c0f\u9876\u5806\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/set/","title":"set(\u7ea2\u9ed1\u6811)","text":"<p>set\u662f\u4e00\u4e2a\u53bb\u91cd\u3001\u6709\u5e8f\u7684\u96c6\u5408</p> <ol> <li>set\u57fa\u4e8e\u7ea2\u9ed1\u6811\u5b9e\u73b0\uff0c\u63d2\u5165\u3001\u5220\u9664\u4e0e\u67e5\u627e\u7b49\u64cd\u4f5c\u590d\u6742\u5ea6\u4e3a\u5bf9\u6570\u7ea7</li> <li>\u7ea2\u9ed1\u6811\uff0c\u662f\u4e00\u79cd\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811<ol> <li>\u5e73\u8861\uff0c\u5373\u610f\u5473\u7740\u6bd4\u8f83\uff0c\u56e0\u6b64set\u4e2d\u7684\u5143\u7d20\u662f\u6709\u5e8f\u7684</li> <li>\u5e73\u8861\uff0c\u610f\u5473\u7740\u65e0\u6cd5\u76f4\u63a5\u4fee\u6539Node\u7684\u503c\uff08\u5143\u7d20\u59cb\u7ec8\u662fconst\u7684\uff09\uff0c\u4f46\u4f60\u53ef\u4ee5\u5148\u5220\u9664\u5b83\uff0c\u518d\u63d2\u5165\u65b0\u503c\uff0c\u4ee5\u8fbe\u5230\u4fee\u6539\u7684\u76ee\u7684</li> </ol> </li> <li>set\u5185\u90e8\u5b58\u50a8\u7684\u5143\u7d20\u4e0emap\u4e00\u6837\uff0c\u4e5f\u662f\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u53ea\u4e0d\u8fc7<code>key_type</code>\u4e0e<code>value_type</code>\u76f8\u7b49\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u4f20\u5165\u4e00\u4e2a\u5143\u7d20\u7c7b\u578bT\u5373\u53ef</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/set/#_1","title":"\u6a21\u677f\u53c2\u6570","text":"<pre><code>template &lt;\nclass T, // set::key_type/value_type \nclass Compare = less&lt;T&gt;,        // set::key_compare/value_compare           \nclass Alloc = allocator&lt;T&gt;      // set::allocator_type           \n&gt;\nclass set;\n</code></pre> <ol> <li><code>T</code>\u5373\u5143\u7d20\u7c7b\u578b\u3002set\u5185\u90e8\u5b58\u50a8\u5143\u7d20\u4e5f\u662f\u4e2a\u952e\u503c\u5bf9\uff0c\u53ea\u4e0d\u8fc7key_type\u4e0evalue_type\u76f8\u7b49\uff0c\u90fd\u662fT</li> <li><code>Compare</code>\u5373\u5143\u7d20\u7684\u6bd4\u8f83\u51fd\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a<code>std::less&lt;T&gt;</code></li> <li><code>Alloc</code>\u5206\u914d\u5668\uff0c\u9ed8\u8ba4\u503c\u4e3a<code>std::allocator&lt;T&gt;</code></li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/set/#_2","title":"\u6210\u5458\u51fd\u6570","text":"<pre><code>set::insert(x);        //\u63d2\u5165\niterator set::find(x); //\u67e5\u627e\u5143\u7d20\u503cx\uff0c\u8fd4\u56de\u8fed\u4ee3\u5668\nsize_t set::count(x);  //\u8ba1\u7b97\u5143\u7d20\u503cx\u7684\u6570\u91cf\u3002\u56e0\u4e3aset\u662f\u53bb\u91cd\u6570\u7ec4\uff0c\u56e0\u6b64\u53ea\u4f1a\u8303\u56f40\u62161\nbool set::empty();     //true\u4e3a\u7a7a\uff1bfalse\u4e0d\u4e3a\u7a7a\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/set/#_3","title":"\u76f8\u5173\u6587\u6863","text":"<ol> <li>https://cplusplus.com/reference/set/set/</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/set/set%E5%AE%B9%E5%99%A8%E7%9A%84Compare/","title":"set\u5bb9\u5668\u7684Compare","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/set/set%E5%AE%B9%E5%99%A8%E7%9A%84Compare/#set","title":"set\u7684\u58f0\u660e","text":"<p><code>std::set</code>\u662f\u4e00\u4e2a\u6709\u5e8f\u3001\u53bb\u91cd\u7684\u96c6\u5408\uff0c\u5185\u90e8\u9700\u8981\u6bd4\u8f83\u4e24\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\u3002\u56e0\u6b64\u5728\u5b9a\u4e49\u5b9e\u4f8b\u5316<code>set</code>\u6a21\u677f\u65f6\uff0c\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u6bd4\u8f83\u51fd\u6570\uff0c\u5373<code>Compare</code>\u3002</p> <pre><code>template &lt;\nclass T, // set::key_type/value_type \nclass Compare = less&lt;T&gt;,        // set::key_compare/value_compare           \nclass Alloc = allocator&lt;T&gt;      // set::allocator_type           \n&gt;\nclass set;\n</code></pre> <p><code>Compare</code>\u6709\u9ed8\u8ba4\u503c\uff0c\u5373<code>std::less&lt;T&gt;</code></p> <ul> <li>\u5bf9\u4e8eC++\u5185\u7f6e\u51fd\u6570\uff0cSTL\u63d0\u4f9b\u4e86\u9ed8\u8ba4\u7684less\u3002\u5982<code>std::less&lt;int&gt;</code>\u3001<code>std::less&lt;char&gt;</code>\u7b49\u7b49</li> <li>\u4f46\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u9700\u8981\u81ea\u5df1\u5b9a\u4e49<code>less</code>\u89c4\u5219\uff0c\u4ee5\u544a\u8bc9STL\uff0c\u5143\u7d20\u8be5\u5982\u4f55\u6392\u5e8f</li> <li>\u56e0\u6b64\uff0c\u5728\u672c\u6587\u8bed\u5883\u4e0b\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3aCompare\u5373Less\u3002\u5bf9Compare\u7684\u8981\u6c42\uff0c\u5373\u662fLess\u7684\u8981\u6c42</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/set/set%E5%AE%B9%E5%99%A8%E7%9A%84Compare/#compareless","title":"Compare\u7684\u8bf4\u660e\uff08Less\u7684\u8bf4\u660e\uff09","text":"<p>A binary predicate that takes two arguments of the same type as the elements and returns a bool. The expression comp(a,b), where comp is an object of this type and a and b are key values, shall return true if a is considered to go before b in the strict weak ordering the function defines.</p> <p>Compare\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u8c13\u8bcd\uff0c\u63a5\u6536\u4e24\u4e2a\u4e0e\u5143\u7d20\u7c7b\u578b\u76f8\u540c\u7684\u53c2\u6570\uff0c\u5e76\u8fd4\u56detrue</p> <pre><code>bool Compare(T a, T b);\n</code></pre> <p>\u8868\u8fbe\u5f0f<code>comp(a,b)</code></p> <ol> <li><code>comp</code>\u662f<code>Compare</code>\u7c7b\u578b\u7684\u5bf9\u8c61</li> <li><code>a</code>\u3001<code>b</code>\u662fkey\u7c7b\u578b\u7684\u503c</li> <li>\u5982\u679ca\u5728b\u4e4b\u524d\uff0c\u8981\u8fd4\u56detrue\uff08\u5373a\u5c0f\u4e8eb\uff0c\u5c31\u8fd4\u56detrue\uff09</li> <li>\u6b64\u51fd\u6570\u8981\u6ee1\u8db3\u4e25\u683c\u5f31\u5e8f\uff08the strict weak ordering\uff09</li> </ol> <p>The set object uses this expression to determine both the order the elements follow in the container and whether two element keys are equivalent (by comparing them reflexively: they are equivalent if !comp(a,b) &amp;&amp; !comp(b,a)). No two elements in a set container can be equivalent.</p> <p><code>set</code>\u5bf9\u8c61\u4f7f\u7528\u8fd9\u4e2a\u8868\u8fbe\u5f0f\uff0c\u6765\u786e\u5b9a\u4e24\u4e2a\u5143\u7d20\u7684\u987a\u5e8f\u4e0e\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u76f8\u7b49</p> <p>\u662f\u4e0d\u662f\u5f88\u597d\u5947\uff0cCompare\u53ea\u662fLess\uff0c\u5e76\u6ca1\u6709<code>Equal</code>\u4fe1\u606f\uff0c\u5b83\u662f\u5982\u4f55\u5224\u65ad\u76f8\u7b49\u7684\uff1f</p> <ul> <li>\u5229\u7528\u6761\u4ef6\u53cd\u5c04(reflexively)</li> <li><code>!comp(a,b) &amp;&amp; !comp(b,a)</code>\u8868\u8fbe\u5f0f\u4e3atrue\u65f6\uff0c\u8ba4\u4e3a<code>a==b</code></li> </ul> <p>\u7b80\u800c\u8a00\u4e4b</p> <ol> <li>\u8c03\u7528<code>comp(a, b)</code></li> <li>\u8c03\u7528<code>comp(b, a)</code></li> <li>\u5982\u679c\uff0c\u4e24\u6b21\u8fd4\u56de\u7684\u90fd\u662ffalse\uff0c\u5219\u8ba4\u4e3aa\u3001b\u76f8\u7b49</li> </ol> <p>This can be a function pointer or a function object (see constructor for an example). This defaults to <code>less&lt;T&gt;</code>, which returns the same as applying the less-than operator (<code>a&lt;b</code>)</p> <p>Compare\u53ef\u4ee5\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\uff08\u6709\u5173\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605\u6784\u9020\u51fd\u6570\uff09</p> <ul> <li>\u9ed8\u8ba4\u503c\u4e3a<code>less&lt;T&gt;</code>\uff0c\u8fd4\u56de\u503c\u5e94\u4e0e<code>&lt;</code>\u8fd0\u7b97\u7b26\u76f8\u540c\uff08\u5373<code>a&lt;b</code>\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\uff09</li> </ul> <p>Aliased as member types set::key_compare and set::value_compare.</p> <p>\u5728<code>std::set</code>\u4e2d\uff0cCompare\u7684\u522b\u540d\u662f<code>set::key_compare</code>\u4e0e<code>std::value_compare</code></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/set/set%E5%AE%B9%E5%99%A8%E7%9A%84Compare/#_1","title":"\u5b9a\u4e49\u65b9\u5f0f","text":"<p>\u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u6bd4\u8f83\u51fd\u6570\u5462\uff1f</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/set/set%E5%AE%B9%E5%99%A8%E7%9A%84Compare/#_2","title":"\u4eff\u51fd\u6570\u5f62\u5f0f","text":"<p>\u53ef\u4ee5\u4f7f\u7528\u4eff\u51fd\u6570\u7684\u5f62\u5f0f\u5b9a\u4e49\uff0c\u5373\u91cd\u8f7d<code>()</code>\u64cd\u4f5c\u7b26\u3002  </p> <pre><code>struct PointLess\n{\nbool operator()(const Point&amp; lhs, const Point&amp; rhs);\n//lhs, \u5168\u79f0Left-hand operand\uff0c\u610f\u4e3a\u5de6\u64cd\u4f5c\u6570\n//rhs, \u5168\u79f0Right-hand operand\uff0c\u610f\u4e3a\u53f3\u64cd\u4f5c\u6570\n}\n//\u867d\u7136\u6709\u4e86PointLess\uff0c\u4f46STL\u8fd8\u662f\u4e0d\u77e5\u9053\u5982\u4f55\u6bd4\u8f83Point\n//\u56e0\u6b64\u8981\u5728\u5b9a\u4e49std::set&lt;Point&gt;\u65f6\uff0c\u5c06PointLess\u4f20\u5165\nstd::set&lt;Point, PointLess&gt; mySet;\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/set/set%E5%AE%B9%E5%99%A8%E7%9A%84Compare/#_3","title":"\u91cd\u8f7d\u7c7b\u578b\u7684&lt;\u64cd\u4f5c\u7b26","text":"<p>\u53ef\u4ee5\u91cd\u8f7d\u7c7b\u578b\u7684&lt;\u64cd\u4f5c\u7b26\u3002</p> <pre><code>struct Point\n{\nbool operator&lt;(const Point&amp; rhs);\n//this\u5373\u5de6\u64cd\u4f5c\u7b26\n//\u4f20\u8fdb\u6765\u7684rhs\u662f\u53f3\u64cd\u4f5c\u7b26\n}\n//\u4e0e\u4eff\u51fd\u6570\u5f62\u5f0f\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc\u65e0\u9700\u4f20\u5165\n//\u56e0\u4e3aoperator&lt;\u662f\u5b9a\u4e49\u5728Point\u4e2d\u7684\uff0cSTL\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u6bd4\u8f83\u4e86\nstd::set&lt;Point&gt; mySet;\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/unordered_set/","title":"unordered_set(\u54c8\u5e0c\u8868)","text":"<p>unordered_set\u529f\u80fd\u4e0eset\u4e00\u81f4\uff0c\u533a\u522b</p> <ol> <li>set\u57fa\u4e8e\u7ea2\u9ed1\u6811\uff0c\u590d\u6742\u5ea6\u662f\u5bf9\u6570\u7ea7\u7684\uff0c\u867d\u7136\u6162\uff0c\u4f46\u5143\u7d20\u662f\u6709\u5e8f\u7684</li> <li>unordered_set\u662f\u57fa\u4e8e\u54c8\u5e0c\u8868\uff0c\u63d2\u5165\u3001\u67e5\u627e\u3001\u5220\u9664\u7b49\u64cd\u4f5c\u51e0\u4e4e\u90fd\u662f\u5e38\u6570\u7ea7\u522b\uff0c\u6bd4set\u5feb\uff0c\u4f46\u5143\u7d20\u4e4b\u95f4\u6ca1\u6709\u903b\u8f91\u5173\u7cfb\uff0c\u662f\u65e0\u5e8f\u7684</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/","title":"vector","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/#_1","title":"\u5220\u9664","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/#clear","title":"clear\u5220\u9664\u6240\u6709","text":"<p><code>vector::clear()</code>\u6e05\u7a7a\u6574\u4e2avector\uff0c\u540c\u65f6\u5c06size\u7f6e\u4e3a0\uff0c\u4f46capacity\u4e0d\u53d8</p> <pre><code>std::vector&lt;int&gt; vec{1, 2, 3, 4, 5, 6, 7};\nprintInfo(vec, \"=====\u539f\u59cb\u6570\u636e\");\nvec.clear();\nprintInfo(vec, \"=====clear()\u540e\");\n</code></pre> <pre><code>=====\u539f\u59cb\u6570\u636e\n    vector: 1 2 3 4 5 6 7 \n    vector size: 7\n    vector capacity: 7\n=====clear()\u540e\n    vector: \n    vector size: 0\n    vector capacity: 7\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/#pop_back","title":"pop_back\u5220\u9664\u6700\u540e\u4e00\u4e2a","text":"<p><code>void vector::pop_back()</code>\u7528\u6765\u5220\u9664\u672b\u5c3e\u5143\u7d20\uff0c\u65e0\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u5c06size\u51cf1\uff0c\u4f46capacity\u4e0d\u53d8</p> <pre><code>std::vector&lt;int&gt; vec{1, 2, 3, 4, 5, 6, 7};\nprintInfo(vec, \"=====\u539f\u59cb\u6570\u636e\");\nvec.pop_back();\nprintInfo(vec, \"=====pop_back()\u540e\");\n</code></pre> <pre><code>=====\u539f\u59cb\u6570\u636e\n    vector: 1 2 3 4 5 6 7 \n    vector size: 7\n    vector capacity: 7\n=====clear()\u540e\n    vector: 1 2 3 4 5 6 \n    vector size: 6\n    vector capacity: 7\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/#erase","title":"erase","text":"<p><code>vector::erase(iterator it)</code>\u901a\u8fc7\u4f20\u5165\u8fed\u4ee3\u5668\u8fdb\u884c\u5220\u9664\uff0c\u5e76\u8fd4\u56deit\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u4f46capacity\u4e0d\u53d8</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/#_2","title":"\u5220\u9664\u5355\u4e2a","text":"<p><code>auto new_it = vec.erase(it)</code></p> <ul> <li>\u5220\u9664it\u6240\u6307\u7684\u5143\u7d20</li> <li>\u5220\u9664\u540e\uff0c\u540e\u7eed\u5143\u7d20\u4f1a\u63a5\u4e0a\u6765\uff0c\u56e0\u6b64\u8fd9\u91cc\u4f1a\u8fd4\u56de\u65b0\u7684\u8fed\u4ee3\u5668\uff0c\u4ee5\u4fbf\u7ee7\u7eed\u4e0b\u53bb\uff08\u5373it\u540e\u9762\u90a3\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff09</li> </ul> <pre><code>std::vector&lt;int&gt; vec{1, 4, 3, 2, 2, 5, 2};\nprintInfo(vec, \"=====\u539f\u59cb\u6570\u636e\");\nfor(auto it = vec.begin(); it != vec.end(); ) //\u8fd9\u91cc\u8981\u975e\u5e38\u6ce8\u610f\uff0c\u8fd9\u91cc\u4e0d\u80fd\u5199++it\uff08\u6709\u5f88\u591a\u535a\u4e3b\u5199\u9519\uff09\n//\u56e0\u4e3aerase\u7684\u8fd4\u56de\u503c\u5df2\u7ecf\u66f4\u65b0\u8fc7\u4e86\uff0c\u518d++it\uff0c\u4f1a\u9519\u8fc7\u4e00\u4e2a\n{\nif(*it &lt; 3)\n{\nstd::cout &lt;&lt; std::endl &lt;&lt; \"=====\u5c06\u8981\u5220\u9664\u5143\u7d20\uff1a\" &lt;&lt; *it &lt;&lt; std::endl;\nit = vec.erase(it); //\u5220\u9664\uff0c\u5e76\u66f4\u65b0\u8fed\u4ee3\u5668\nprintInfo(vec, \"\u5220\u9664\u540e\uff1a\");\nstd::cout &lt;&lt; \"\\t\u8fed\u4ee3\u5668\u6307\u5411: \";\nif(it == vec.end())\n{\nstd::cout &lt;&lt; \"\u672b\u5c3e\" &lt;&lt; std::endl;\n}\nelse\n{\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;\n}\n}\nelse\n{\n++it; //\u6ca1\u6709\u5220\u9664\uff0c\u6b63\u5e38\u4f4d\u79fb\n}\n}\n</code></pre> <pre><code>=====\u539f\u59cb\u6570\u636e\n    vector: 1 4 3 2 2 5 2 \n    vector size: 7\n    vector capacity: 7\n\n=====\u5c06\u8981\u5220\u9664\u5143\u7d20\uff1a1\n\u5220\u9664\u540e\uff1a\n    vector: 4 3 2 2 5 2 \n    vector size: 6\n    vector capacity: 7\n    \u8fed\u4ee3\u5668\u6307\u5411: 4\n\n=====\u5c06\u8981\u5220\u9664\u5143\u7d20\uff1a2\n\u5220\u9664\u540e\uff1a\n    vector: 4 3 2 5 2 \n    vector size: 5\n    vector capacity: 7\n    \u8fed\u4ee3\u5668\u6307\u5411: 2\n\n=====\u5c06\u8981\u5220\u9664\u5143\u7d20\uff1a2\n\u5220\u9664\u540e\uff1a\n    vector: 4 3 5 2 \n    vector size: 4\n    vector capacity: 7\n    \u8fed\u4ee3\u5668\u6307\u5411: 5\n\n=====\u5c06\u8981\u5220\u9664\u5143\u7d20\uff1a2\n\u5220\u9664\u540e\uff1a\n    vector: 4 3 5 \n    vector size: 3\n    vector capacity: 7\n    \u8fed\u4ee3\u5668\u6307\u5411: \u672b\u5c3e\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/#_3","title":"\u5220\u9664\u67d0\u4e2a\u8303\u56f4","text":"<p><code>auto new_it = vec.erase(start_it, end_it)</code></p> <ul> <li>\u5220\u9664start_it\u8fed\u4ee3\u5668\uff0c\u5230end_it\u8fed\u4ee3\u5668\u4e2d\u95f4\u7684\u5143\u7d20\u3002\u7b26\u5408STL\u7684\u524d\u95ed\u540e\u5f00\u539f\u5219\uff08\u4f1a\u5220\u9664start_it\u6240\u6307\u5143\u7d20\uff0c\u4f46\u4e0d\u5220\u9664end_it\u6240\u6307\u5143\u7d20\uff09</li> <li>\u8fd4\u56deend_it\u6240\u6307\u5143\u7d20\uff0c\u65b0\u7684\u8fed\u4ee3\u5668</li> </ul> <pre><code>std::vector&lt;int&gt; vec{1, 2, 3, 4, 5, 6, 7};\nprintInfo(vec, \"=====\u539f\u59cb\u6570\u636e\");\n//\u5f80\u540e\u4f4d\u79fb1\u6b65\uff0c\u5373\u5143\u7d202\nauto start_it = vec.begin();\nstd::advance(start_it, 1); //\u5f80\u540e\u4f4d\u79fb5\u6b65\uff0c\u5373\u5143\u7d206\nauto end_it = vec.begin();\nstd::advance(end_it, 5); //\u5220\u9664[2, 6)\u3002\u5305\u62ec2\uff0c\u4e0d\u5305\u62ec6\nstd::cout &lt;&lt; \"\u5220\u9664\uff1a[\" &lt;&lt; *start_it &lt;&lt; \",\" &lt;&lt; *end_it &lt;&lt; \")\" &lt;&lt; std::endl;\n//\u5220\u9664\uff0c\u5e76\u66f4\u65b0\u8fed\u4ee3\u5668\nauto it = vec.erase(start_it, end_it); printInfo(vec, \"\u5220\u9664\u540e\uff1a\"); //1 6 7 \nstd::cout &lt;&lt; \"\\t\u8fed\u4ee3\u5668\u6307\u5411: \";\nif(it == vec.end())\n{\nstd::cout &lt;&lt; \"\u672b\u5c3e\" &lt;&lt; std::endl;\n}\nelse\n{\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>=====\u539f\u59cb\u6570\u636e\n    vector: 1 2 3 4 5 6 7 \n    vector size: 7\n    vector capacity: 7\n\u5220\u9664\uff1a[2,6)\n\u5220\u9664\u540e\uff1a\n    vector: 1 6 7 \n    vector size: 3\n    vector capacity: 7\n    \u8fed\u4ee3\u5668\u6307\u5411: 6\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/#printinfo","title":"\u9644\uff1a\u8c03\u8bd5\u51fd\u6570printInfo","text":"<pre><code>#include &lt;vector&gt;\n#include &lt;iostream&gt;\nvoid printInfo(const std::vector&lt;int&gt;&amp; vec, const std::string&amp; title)\n{\nstd::cout &lt;&lt; title &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"\\t\" &lt;&lt; \"vector: \";\nfor(const auto&amp; item : vec)\n{\nstd::cout &lt;&lt; item &lt;&lt; \" \";\n}\nstd::cout &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"\\t\" &lt;&lt; \"vector size: \" &lt;&lt; vec.size() &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"\\t\" &lt;&lt; \"vector capacity: \" &lt;&lt; vec.capacity() &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/vector%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0/","title":"Vector\u5220\u9664\u5143\u7d20","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/vector%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0/#clear","title":"clear\u5220\u9664\u6240\u6709","text":"<p><code>vector::clear()</code>\u6e05\u7a7a\u6574\u4e2avector\uff0c\u540c\u65f6\u5c06size\u7f6e\u4e3a0\uff0c\u4f46capacity\u4e0d\u53d8</p> <pre><code>std::vector&lt;int&gt; vec{1, 2, 3, 4, 5, 6, 7};\nprintInfo(vec, \"=====\u539f\u59cb\u6570\u636e\");\nvec.clear();\nprintInfo(vec, \"=====clear()\u540e\");\n</code></pre> <pre><code>=====\u539f\u59cb\u6570\u636e\n    vector: 1 2 3 4 5 6 7 \n    vector size: 7\n    vector capacity: 7\n=====clear()\u540e\n    vector: \n    vector size: 0\n    vector capacity: 7\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/vector%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0/#pop_back","title":"pop_back\u5220\u9664\u6700\u540e\u4e00\u4e2a","text":"<p><code>void vector::pop_back()</code>\u7528\u6765\u5220\u9664\u672b\u5c3e\u5143\u7d20\uff0c\u65e0\u8fd4\u56de\u503c\uff0c\u540c\u65f6\u5c06size\u51cf1\uff0c\u4f46capacity\u4e0d\u53d8</p> <pre><code>std::vector&lt;int&gt; vec{1, 2, 3, 4, 5, 6, 7};\nprintInfo(vec, \"=====\u539f\u59cb\u6570\u636e\");\nvec.pop_back();\nprintInfo(vec, \"=====pop_back()\u540e\");\n</code></pre> <pre><code>=====\u539f\u59cb\u6570\u636e\n    vector: 1 2 3 4 5 6 7 \n    vector size: 7\n    vector capacity: 7\n=====clear()\u540e\n    vector: 1 2 3 4 5 6 \n    vector size: 6\n    vector capacity: 7\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/vector%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0/#erase","title":"erase","text":"<p><code>vector::erase(iterator it)</code>\u901a\u8fc7\u4f20\u5165\u8fed\u4ee3\u5668\u8fdb\u884c\u5220\u9664\uff0c\u5e76\u8fd4\u56deit\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u4f46capacity\u4e0d\u53d8</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/vector%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0/#_1","title":"\u5220\u9664\u5355\u4e2a","text":"<p><code>auto new_it = vec.erase(it)</code></p> <ul> <li>\u5220\u9664it\u6240\u6307\u7684\u5143\u7d20</li> <li>\u5220\u9664\u540e\uff0c\u540e\u7eed\u5143\u7d20\u4f1a\u63a5\u4e0a\u6765\uff0c\u56e0\u6b64\u8fd9\u91cc\u4f1a\u8fd4\u56de\u65b0\u7684\u8fed\u4ee3\u5668\uff0c\u4ee5\u4fbf\u7ee7\u7eed\u4e0b\u53bb\uff08\u5373it\u540e\u9762\u90a3\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff09</li> </ul> <pre><code>std::vector&lt;int&gt; vec{1, 4, 3, 2, 2, 5, 2};\nprintInfo(vec, \"=====\u539f\u59cb\u6570\u636e\");\nfor(auto it = vec.begin(); it != vec.end(); ) //\u8fd9\u91cc\u8981\u975e\u5e38\u6ce8\u610f\uff0c\u8fd9\u91cc\u4e0d\u80fd\u5199++it\uff08\u6709\u5f88\u591a\u535a\u4e3b\u5199\u9519\uff09\n//\u56e0\u4e3aerase\u7684\u8fd4\u56de\u503c\u5df2\u7ecf\u66f4\u65b0\u8fc7\u4e86\uff0c\u518d++it\uff0c\u4f1a\u9519\u8fc7\u4e00\u4e2a\n{\nif(*it &lt; 3)\n{\nstd::cout &lt;&lt; std::endl &lt;&lt; \"=====\u5c06\u8981\u5220\u9664\u5143\u7d20\uff1a\" &lt;&lt; *it &lt;&lt; std::endl;\nit = vec.erase(it); //\u5220\u9664\uff0c\u5e76\u66f4\u65b0\u8fed\u4ee3\u5668\nprintInfo(vec, \"\u5220\u9664\u540e\uff1a\");\nstd::cout &lt;&lt; \"\\t\u8fed\u4ee3\u5668\u6307\u5411: \";\nif(it == vec.end())\n{\nstd::cout &lt;&lt; \"\u672b\u5c3e\" &lt;&lt; std::endl;\n}\nelse\n{\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;\n}\n}\nelse\n{\n++it; //\u6ca1\u6709\u5220\u9664\uff0c\u6b63\u5e38\u4f4d\u79fb\n}\n}\n</code></pre> <pre><code>=====\u539f\u59cb\u6570\u636e\n    vector: 1 4 3 2 2 5 2 \n    vector size: 7\n    vector capacity: 7\n\n=====\u5c06\u8981\u5220\u9664\u5143\u7d20\uff1a1\n\u5220\u9664\u540e\uff1a\n    vector: 4 3 2 2 5 2 \n    vector size: 6\n    vector capacity: 7\n    \u8fed\u4ee3\u5668\u6307\u5411: 4\n\n=====\u5c06\u8981\u5220\u9664\u5143\u7d20\uff1a2\n\u5220\u9664\u540e\uff1a\n    vector: 4 3 2 5 2 \n    vector size: 5\n    vector capacity: 7\n    \u8fed\u4ee3\u5668\u6307\u5411: 2\n\n=====\u5c06\u8981\u5220\u9664\u5143\u7d20\uff1a2\n\u5220\u9664\u540e\uff1a\n    vector: 4 3 5 2 \n    vector size: 4\n    vector capacity: 7\n    \u8fed\u4ee3\u5668\u6307\u5411: 5\n\n=====\u5c06\u8981\u5220\u9664\u5143\u7d20\uff1a2\n\u5220\u9664\u540e\uff1a\n    vector: 4 3 5 \n    vector size: 3\n    vector capacity: 7\n    \u8fed\u4ee3\u5668\u6307\u5411: \u672b\u5c3e\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/vector%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0/#_2","title":"\u5220\u9664\u67d0\u4e2a\u8303\u56f4","text":"<p><code>auto new_it = vec.erase(start_it, end_it)</code></p> <ul> <li>\u5220\u9664start_it\u8fed\u4ee3\u5668\uff0c\u5230end_it\u8fed\u4ee3\u5668\u4e2d\u95f4\u7684\u5143\u7d20\u3002\u7b26\u5408STL\u7684\u524d\u95ed\u540e\u5f00\u539f\u5219\uff08\u4f1a\u5220\u9664start_it\u6240\u6307\u5143\u7d20\uff0c\u4f46\u4e0d\u5220\u9664end_it\u6240\u6307\u5143\u7d20\uff09</li> <li>\u8fd4\u56deend_it\u6240\u6307\u5143\u7d20\uff0c\u65b0\u7684\u8fed\u4ee3\u5668</li> </ul> <pre><code>std::vector&lt;int&gt; vec{1, 2, 3, 4, 5, 6, 7};\nprintInfo(vec, \"=====\u539f\u59cb\u6570\u636e\");\n//\u5f80\u540e\u4f4d\u79fb1\u6b65\uff0c\u5373\u5143\u7d202\nauto start_it = vec.begin();\nstd::advance(start_it, 1); //\u5f80\u540e\u4f4d\u79fb5\u6b65\uff0c\u5373\u5143\u7d206\nauto end_it = vec.begin();\nstd::advance(end_it, 5); //\u5220\u9664[2, 6)\u3002\u5305\u62ec2\uff0c\u4e0d\u5305\u62ec6\nstd::cout &lt;&lt; \"\u5220\u9664\uff1a[\" &lt;&lt; *start_it &lt;&lt; \",\" &lt;&lt; *end_it &lt;&lt; \")\" &lt;&lt; std::endl;\n//\u5220\u9664\uff0c\u5e76\u66f4\u65b0\u8fed\u4ee3\u5668\nauto it = vec.erase(start_it, end_it); printInfo(vec, \"=====\u5220\u9664\u540e\uff1a\"); //1 6 7 \nstd::cout &lt;&lt; \"\\t\u8fed\u4ee3\u5668\u6307\u5411: \";\nif(it == vec.end())\n{\nstd::cout &lt;&lt; \"\u672b\u5c3e\" &lt;&lt; std::endl;\n}\nelse\n{\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>=====\u539f\u59cb\u6570\u636e\n    vector: 1 2 3 4 5 6 7 \n    vector size: 7\n    vector capacity: 7\n\u5220\u9664\uff1a[2,6)\n=====\u5220\u9664\u540e\uff1a\n    vector: 1 6 7 \n    vector size: 3\n    vector capacity: 7\n    \u8fed\u4ee3\u5668\u6307\u5411: 6\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%AE%B9%E5%99%A8/vector/vector%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0/#printinfo","title":"\u9644\uff1a\u8c03\u8bd5\u51fd\u6570printInfo","text":"<pre><code>#include &lt;vector&gt;\n#include &lt;iostream&gt;\nvoid printInfo(const std::vector&lt;int&gt;&amp; vec, const std::string&amp; title)\n{\nstd::cout &lt;&lt; title &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"\\t\" &lt;&lt; \"vector: \";\nfor(const auto&amp; item : vec)\n{\nstd::cout &lt;&lt; item &lt;&lt; \" \";\n}\nstd::cout &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"\\t\" &lt;&lt; \"vector size: \" &lt;&lt; vec.size() &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"\\t\" &lt;&lt; \"vector capacity: \" &lt;&lt; vec.capacity() &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%B9%B6%E8%A1%8CSTL/","title":"\u5e76\u884cSTL","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%B9%B6%E8%A1%8CSTL/#_1","title":"\u5f15\u8a00","text":"<p>\u5728\u7528<code>for_each</code>\u904d\u5386\u96c6\u5408\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u65f6\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5143\u7d20\u90fd\u505a\u4e00\u6b21\u5904\u7406\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u5355\u7ebf\u7a0b\u7684\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nvoid process(const int&amp; item) {\n//\u5bf9item\u505a\u5904\u7406\n//...\nstd::cout &lt;&lt; item &lt;&lt; std::endl;\n}\nint arr[10] = {0, 1,2,3,4,5,6,7,8,9};\nstd::for_each(arr, arr+10, process);\n</code></pre> <p>\u5728C++17\u4ee5\u540e\uff0c\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u5e76\u884c\u7b56\u7565\uff0c\u8ba9\u7b97\u6cd5\u5e93\u5e2e\u6211\u4eec\u505a\u5e76\u884c\u5904\u7406\uff0c\u4f46\u662f\u5bf9\u4e8e\u6570\u636e\u7ade\u4e89\u9700\u8981\u7528\u6237\u81ea\u884c\u5904\u7406\u3002</p> <pre><code>#include &lt;execution&gt;\nstd::for_each(\nstd::execution::par,  //\u5e76\u884c\u7b56\u7565\narr, arr+10000, process\n);\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E5%B9%B6%E8%A1%8CSTL/#_2","title":"\u4e09\u79cd\u5e76\u884c\u7b56\u7565","text":"\u5e76\u884c\u7b56\u7565 \u8bf4\u660e std::execution::seq \u8c03\u7528\u8005\u7ebf\u7a0b\u5355\u7ebf\u7a0b\u65b9\u5f0f\uff0c\u4ee5\u4e0d\u786e\u5b9a\u7684\u987a\u5e8f\u8bbf\u95ee\u5143\u7d20 std::execution::par \u591a\u7ebf\u7a0b\uff08\u7531\u5e93\u9690\u5f0f\u7684\u521b\u5efa\u7ebf\u7a0b\uff09\u65b9\u5f0f\uff0c\u5728\u6bcf\u4e2a\u7ebf\u7a0b\u4e2d\uff0c\u4ee5\u4e0d\u786e\u5b9a\u7684\u987a\u5e8f\u8bbf\u95ee\u5143\u7d20 std::execution::par_unseq multiple threads and may be vectorized - calls are unsequenced with respect to each other and possibly interleaved"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/shared_ptr/","title":"shared_ptr","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/shared_ptr/#_1","title":"\u591a\u7ebf\u7a0b\u5b89\u5168\u6027","text":"<p><code>std::shared_ptr</code>\u672c\u8eab\u662f\u591a\u7ebf\u7a0b\u5b89\u5168\u7684</p> <ul> <li><code>shared_ptr</code>\u5185\u90e8\u7684\u5f15\u7528\u8ba1\u6570\u662f<code>std::atomic</code>\u7c7b\u578b\uff0c<code>atomic</code>\u662f\u4e00\u4e2a\u539f\u5b50\u7c7b\u578b\uff0c\u53ef\u4ee5\u5728\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u8fdb\u884c\u5b89\u5168\u7684\u5e76\u53d1\u8bbf\u95ee\uff0c\u800c\u4e0d\u9700\u8981\u4efb\u4f55\u663e\u5f0f\u7684\u540c\u6b65\u673a\u5236</li> <li><code>atomic</code>\u7c7b\u578b\u662f\u5728\u8f6f\u4ef6\u5c42\u9762\u5b9e\u73b0\u7684\uff0c\u4f46\u901a\u5e38\u4f1a\u5229\u7528 \u786c\u4ef6\u63d0\u4f9b\u7684\u539f\u5b50\u6307\u4ee4 \u6765\u5b9e\u73b0\u9ad8\u6548\u7684\u539f\u5b50\u64cd\u4f5c\u3002\u8fd9\u4e9b\u786c\u4ef6\u6307\u4ee4\u5141\u8bb8\u539f\u5b50\u64cd\u4f5c \u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u5b8c\u6210 \uff0c\u800c\u4e0d\u9700\u8981\u4f7f\u7528\u9501\u6216\u5176\u4ed6\u663e\u5f0f\u7684\u540c\u6b65\u673a\u5236</li> </ul> <p>\u4f46\u5185\u90e8\u7ba1\u7406\u7684\u5171\u4eab\u5bf9\u8c61\u4e0d\u662f</p> <ul> <li>\u82e5\u5bf9\u5171\u4eab\u5bf9\u8c61\u53ea\u8bfb\uff0c\u800c\u4e0d\u4fee\u6539\uff0c\u5219\u662f\u7ebf\u7a0b\u5b89\u5168\u7684</li> <li>\u82e5\u8981\u4fee\u6539\uff0c\u9700\u8981\u989d\u5916\u7684\u540c\u6b65\u64cd\u4f5c\uff0c\u4ee5\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/shared_ptr/#_2","title":"\u4f7f\u7528\u65f6\u7684\u6ce8\u610f\u4e8b\u9879","text":"<p>\u5728\u975e\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u4f7f\u7528<code>std::shared_ptr</code>\u9700\u8981\u6ce8\u610f</p> <ol> <li><code>std::shared_ptr</code>\u6027\u80fd\u5f00\u9500\u76f8\u5bf9\u5927\uff0c\u907f\u514d\u8fc7\u5ea6\u4f7f\u7528<ol> <li><code>shared_ptr</code>\u9700\u8981\u7ef4\u62a4\u5f15\u7528\u6280\u672f\u548c\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c\u8fdb\u884c\u540c\u6b65\uff0c\u56e0\u6b64\u76f8\u5bf9\u4e8e\u5176\u4ed6\u667a\u80fd\u6307\u9488\u662f\u91cd\u91cf\u7ea7</li> <li>\u56e0\u6b64\uff0c\u8981\u6839\u636e\u5e94\u7528\u573a\u666f\u7075\u6d3b\u4f7f\u7528\u667a\u80fd\u6307\u9488\u3002\u9700\u8981\u9ad8\u6027\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u8003\u8651\u4f20\u9012\u6307\u9488\u7684\u6240\u6709\u6743\u3001\u6216\u4f7f\u7528\u5176\u4ed6\u667a\u80fd\u6307\u9488\uff08\u5982<code>std::unique_ptr</code>\uff09</li> </ol> </li> <li>\u907f\u514d\u5faa\u73af\u5f15\u7528\u3002\u82e5\u8bc4\u4f30\u7a0b\u5e8f\u5b58\u5728\u5faa\u73af\u5f15\u7528\u7684\u53ef\u80fd\uff0c\u8bf7\u4f7f\u7528<code>std::weak_ptr</code>\u6765\u6253\u7834\u5faa\u73af\u5f15\u7528</li> <li>\u4e0d\u8981\u5c06<code>std::shared_ptr</code>\u4e0e\u88f8\u6307\u9488\u6df7\u5408\u4f7f\u7528<ol> <li>\u5982\u679c\u6df7\u5408\u4f7f\u7528\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5171\u4eab\u6307\u9488\u5bf9\u8c61\u5f15\u7528\u8ba1\u6570\u9519\u8bef\uff0c\u4ece\u800c\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u6216\u91ca\u653e\u4e86\u5df2\u91ca\u653e\u7684\u5185\u5b58</li> <li>\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u66f4\u5bb9\u6613\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u6b64\u8981\u907f\u514d\u5728\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u4f20\u9012\u88f8\u6307\u9488</li> </ol> </li> </ol> <p>\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u9664\u4e86\u4ee5\u4e0a\u5185\u5bb9\uff0c\u8fd8\u9700\u8981\u6ce8\u610f\uff1a</p> <ol> <li>\u786e\u4fdd\u5171\u4eab\u5bf9\u8c61\u662f\u7ebf\u7a0b\u5b89\u5168\u7684<ol> <li>\u5171\u4eab\u5bf9\u8c61\u5e76\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u82e5\u6d89\u53ca\u5230\u4fee\u6539\u64cd\u4f5c\uff0c\u5c31\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u540c\u6b65\u6765\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168</li> </ol> </li> <li>\u82e5\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u5220\u9664\u5668\uff0c\u8bf7\u786e\u4fdd\u5b83\u662f\u7ebf\u7a0b\u5b89\u5168\u7684</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/%E4%BE%B5%E5%85%A5%E5%9E%8B%E5%85%B1%E4%BA%AB%E6%8C%87%E9%92%88/","title":"\u4fb5\u5165\u578b\u5171\u4eab\u6307\u9488","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/%E4%BE%B5%E5%85%A5%E5%9E%8B%E5%85%B1%E4%BA%AB%E6%8C%87%E9%92%88/#_1","title":"\u5f15\u8a00","text":"<p><code>std::shared_ptr</code>\u662f\u4e00\u79cd\u975e\u4fb5\u5165\u578b\u5171\u4eab\u667a\u80fd\u6307\u9488\uff0c\u5171\u4eab\u6280\u672f\u4e0e\u5171\u4eab\u5bf9\u8c61\u662f\u89e3\u8026\u7684\u3002 \u800c\u4fb5\u5165\u578b\u667a\u80fd\u6307\u9488\uff0c\u662f\u4e00\u79cd\u5c06\u6240\u6709\u6743\u4e0e\u5bf9\u8c61\u672c\u8eab\u8026\u5408\u5728\u4e00\u8d77\u7684\u6307\u9488\uff0c\u4f8b\u5982<code>OSG::ref_ptr</code>\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/%E4%BE%B5%E5%85%A5%E5%9E%8B%E5%85%B1%E4%BA%AB%E6%8C%87%E9%92%88/#_2","title":"\u7b80\u4ecb","text":"<p>\u4fb5\u5165\u578b\u5171\u4eab\u6307\u9488\uff08Intrusive Shared Pointers\uff09\uff0c\u5c06\u5bf9\u8c61\u7684\u8ba1\u6570\u5668\u4e0e\u5bf9\u8c61\u672c\u8eab\u7ed3\u5408\u4e86\u8d77\u6765\u3002</p> <p>\u7b80\u5355\u800c\u8a00\uff0c\u5b83\u5c06<code>std::shared_ptr</code>\u7684\u804c\u8d23\u62bd\u6210\u4e86\u4e24\u90e8\u5206</p> <pre><code>// 1. \u5f15\u7528\u8ba1\u6570\u8026\u5408\u5728\u5bf9\u8c61\u7684\u57fa\u7c7b\u5f53\u4e2d\ntemplate&lt;typename T&gt;\nclass IntrusiveRefCounted {\npublic:\nvoid addRef() {\nm_refCount.fetch_add(1);\n}\nvoid release() {\nif (m_refCount.fetch_sub(1) == 1) {\ndelete static_cast&lt;T*&gt;(this);\n}\n}\nprivate:\nstd::atomic_int m_refCount{0}; //\u5f15\u7528\u8ba1\u6570\u5668\n};\n//2. \ntemplate&lt;typename T&gt;\nclass IntrusiveSharedPtr {\npublic:\nIntrusiveSharedPtr() : m_ptr(nullptr) {}\nexplicit IntrusiveSharedPtr(T* ptr) : m_ptr(ptr) {\nif (m_ptr) {\nm_ptr-&gt;addRef();\n}\n}\nIntrusiveSharedPtr(const IntrusiveSharedPtr&lt;T&gt;&amp; other) : m_ptr(other.m_ptr) {\nif (m_ptr) {\nm_ptr-&gt;addRef();\n}\n}\n~IntrusiveSharedPtr() {\nif (m_ptr) {\nm_ptr-&gt;release();\n}\n}\nIntrusiveSharedPtr&lt;T&gt;&amp; operator=(const IntrusiveSharedPtr&lt;T&gt;&amp; other) {\nif (m_ptr != other.m_ptr) {\nif (m_ptr) {\nm_ptr-&gt;release();\n}\nm_ptr = other.m_ptr;\nif (m_ptr) {\nm_ptr-&gt;addRef();\n}\n}\nreturn *this;\n}\nT* get() const {\nreturn m_ptr;\n}\nT&amp; operator*() const {\nreturn *m_ptr;\n}\nT* operator-&gt;() const {\nreturn m_ptr;\n}\noperator bool() const {\nreturn m_ptr != nullptr;\n}\nprivate:\nT* m_ptr;\n};\n// \u9700\u8981\nclass MyObject : public IntrusiveRefCounted&lt;MyObject&gt; {\npublic:\nvoid doSomething() {\nstd::cout &lt;&lt; \"MyObject do something\" &lt;&lt; std::endl;\n}\n};\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/%E4%BE%B5%E5%85%A5%E5%9E%8B%E5%85%B1%E4%BA%AB%E6%8C%87%E9%92%88/#_3","title":"\u503e\u5165\u578b\u4e0e\u975e\u503e\u5165\u578b\u7684\u5bf9\u6bd4","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%AF%94%E8%BE%83%E5%87%BD%E6%95%B0/%E4%B8%A5%E6%A0%BC%E5%BC%B1%E5%BA%8F%EF%BC%88less%E5%87%BD%E6%95%B0%E3%80%81%E5%B0%8F%E4%BA%8E%E5%8F%B7%E9%87%8D%E8%BD%BD%EF%BC%89/","title":"\u4e25\u683c\u5f31\u5e8f\uff08less\u51fd\u6570\u3001\u5c0f\u4e8e\u53f7\u91cd\u8f7d\uff09","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%AF%94%E8%BE%83%E5%87%BD%E6%95%B0/%E4%B8%A5%E6%A0%BC%E5%BC%B1%E5%BA%8F%EF%BC%88less%E5%87%BD%E6%95%B0%E3%80%81%E5%B0%8F%E4%BA%8E%E5%8F%B7%E9%87%8D%E8%BD%BD%EF%BC%89/#_1","title":"\u524d\u8a00","text":"<p>\u4e25\u683c\u5f31\u5e8f\uff0cstick weak ordering\uff0c\u5728\u4ee5\u4e0b\u573a\u666f\u4f1a\u6d89\u53ca\u5230</p> <ol> <li>\u5bf9\u4e00\u4e2a\u5bb9\u5668\u8fdb\u884c\u6392\u5e8f\u65f6\uff0c\u5982\u4f7f\u7528<code>std::sort</code></li> <li>\u4f7f\u7528\u6709\u5e8f\u5173\u8054\u5bb9\u5668\u65f6\uff0c\u5982\u4f7f\u7528<code>std::set</code>\u3001<code>std::map</code></li> <li>\u4f7f\u7528<code>std::less</code>\u65f6</li> <li>\u91cd\u8f7d<code>&lt;</code>\u64cd\u4f5c\u7b26\uff08\u5c0f\u4e8e\uff09</li> </ol> <p>\u5176\u4e2d\uff0c<code>std::less</code>\u4e0e<code>&lt;</code>\u64cd\u4f5c\u7b26\u90fd\u9700\u8981\u6ee1\u8db3\u4e25\u683c\u5f31\u5e8f\u89c4\u5219\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%AF%94%E8%BE%83%E5%87%BD%E6%95%B0/%E4%B8%A5%E6%A0%BC%E5%BC%B1%E5%BA%8F%EF%BC%88less%E5%87%BD%E6%95%B0%E3%80%81%E5%B0%8F%E4%BA%8E%E5%8F%B7%E9%87%8D%E8%BD%BD%EF%BC%89/#_2","title":"\u4f5c\u7528","text":"<p>\u5bf9\u4e8e\u5185\u7f6e\u7c7b\u578b\uff0c\u6211\u4eec\u6709\u4e09\u79cd\u65b9\u5f0f\u6765\u5224\u65ad\u4e24\u4e2a\u503c\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5373<code>&lt;</code>\u3001<code>&gt;</code>\u3001<code>==</code>\u3002\u800c\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u5b9e\u73b0\u8fd9\u4e09\u79cd\u64cd\u4f5c\u7b26\u662f\u5f88\u7d2f\u7684\u3002</p> <p>\u4f46\u662f\uff0c\u6709\u4e86\u4e25\u683c\u5f31\u5e8f\u7684\u6982\u5ff5\uff0c\u6211\u4eec\u5b9e\u73b0\u4e25\u683c\u5f31\u5e8f\u5373\u53ef\uff0c\u800c\u65e0\u9700\u5b9e\u73b0\u8fd9\u4e09\u79cd\u64cd\u4f5c\u7b26\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%AF%94%E8%BE%83%E5%87%BD%E6%95%B0/%E4%B8%A5%E6%A0%BC%E5%BC%B1%E5%BA%8F%EF%BC%88less%E5%87%BD%E6%95%B0%E3%80%81%E5%B0%8F%E4%BA%8E%E5%8F%B7%E9%87%8D%E8%BD%BD%EF%BC%89/#_3","title":"\u5224\u5b9a\u89c4\u5219","text":"<p>\u5047\u8bbe<code>bool comp(T lhs, T rhs)</code>\u51fd\u6570\u6ee1\u8db3\u4e25\u683c\u5f31\u5e8f\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5982\u4f55\u6bd4\u8f83<code>a</code>\u3001<code>b</code>\u7684\u5927\u5c0f\u5462\uff1f</p> <ol> <li>\u82e5<code>comp(a, b) == true</code>\uff0c\u5219\u5224\u5b9a<code>a&lt;b</code></li> <li>\u82e5<code>comp(b, a) == true</code>\uff0c\u5219\u5224\u5b9a<code>a&gt;b</code></li> <li>\u82e5<code>comp(a,b)==false &amp;&amp; comp(b,a)==false</code>\uff0c\u5219\u5224\u5b9a<code>a==b</code></li> </ol> <p>\u89e3\u91ca</p> <ul> <li>a\u4e25\u683c\u5f31\u5e8fb\uff0c\u987e\u540d\u601d\u4e49\uff0ca\u7684\u4f18\u5148\u7ea7\u4e25\u683c\u6bd4b\u5c0f\uff08\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\uff0ca\u7684\u6570\u503c\u5c0f\u4e8eb\uff09</li> <li>\u56e0\u6b64\uff0c\u5982\u4f55\u5224\u65ad<code>a==b</code>\u5462\uff1f\u5982\u679c<code>a\u4e0d\u4e25\u683c\u5f31\u5e8fb</code>\u3001\u800c\u4e14<code>b\u4e5f\u4e0d\u4e25\u683c\u5f31\u5e8fa</code>\uff0c\u90a3\u5c31\u610f\u5473\u7740<code>a==b</code>\u4e86</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%AF%94%E8%BE%83%E5%87%BD%E6%95%B0/%E4%B8%A5%E6%A0%BC%E5%BC%B1%E5%BA%8F%EF%BC%88less%E5%87%BD%E6%95%B0%E3%80%81%E5%B0%8F%E4%BA%8E%E5%8F%B7%E9%87%8D%E8%BD%BD%EF%BC%89/#_4","title":"\u539f\u7406","text":"<p>\u4e8b\u5b9e\u4e0a\uff0c<code>&lt;</code>\u5176\u5b9e\u5c31\u662f\u4e25\u683c\u5f31\u5e8f\uff0c\u800c<code>&lt;=</code>\u5c31\u4e0d\u662f\u4e25\u683c\u5f31\u5e8f</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%AF%94%E8%BE%83%E5%87%BD%E6%95%B0/%E4%B8%A5%E6%A0%BC%E5%BC%B1%E5%BA%8F%EF%BC%88less%E5%87%BD%E6%95%B0%E3%80%81%E5%B0%8F%E4%BA%8E%E5%8F%B7%E9%87%8D%E8%BD%BD%EF%BC%89/#_5","title":"&lt;\u53f7\uff08\u6ee1\u8db3\u4e25\u683c\u5f31\u5e8f\uff09","text":"<pre><code>bool comp1(int lhs, int rhs)\n{\n//lhs, \u5168\u79f0Left-hand operand\uff0c\u610f\u4e3a\u5de6\u64cd\u4f5c\u6570\n//rhs, \u5168\u79f0Right-hand operand\uff0c\u610f\u4e3a\u53f3\u64cd\u4f5c\u6570\nreturn lhs &lt; rhs;\n}\n</code></pre> a b <code>comp1(a, b)</code>\u5373a&lt;b <code>comp1(b, a)</code>\u5373b&lt;a <code>comp1(a,b)==false &amp;&amp; comp1(b,a)==false</code> 1 2 <code>1&lt;2</code> =&gt; true <code>2&lt;1</code> =&gt; false false 2 1 <code>2&lt;1</code> =&gt; false <code>1&lt;2</code> =&gt; true false 1 1 <code>1&lt;1</code> =&gt; false <code>1&lt;1</code> =&gt; false true <p>\u56e0\u6b64\uff0c\u6839\u636e\u4e25\u683c\u5f31\u5e8f\u7684\u5224\u5b9a\u89c4\u5219\uff0c<code>comp1</code>\u80fd\u591f\u6210\u529f\u533a\u5206a\u3001b\u7684\u5927\u5c0f\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%AF%94%E8%BE%83%E5%87%BD%E6%95%B0/%E4%B8%A5%E6%A0%BC%E5%BC%B1%E5%BA%8F%EF%BC%88less%E5%87%BD%E6%95%B0%E3%80%81%E5%B0%8F%E4%BA%8E%E5%8F%B7%E9%87%8D%E8%BD%BD%EF%BC%89/#_6","title":"&lt;=\u53f7\uff08\u4e0d\u6ee1\u8db3\u4e25\u683c\u5f31\u5e8f\uff09","text":"<pre><code>bool comp2(int lhs, int rhs)\n{\nreturn lhs &lt;= rhs;\n}\n</code></pre> a b <code>comp2(a, b)</code>\u5373a&lt;=b <code>comp2(b, a)</code>\u5373b&lt;=a <code>comp2(a,b)==false &amp;&amp; comp2(b,a)==false</code> 1 2 <code>1&lt;=2</code> =&gt; true <code>2&lt;=1</code> =&gt; false false 2 1 <code>2&lt;=1</code> =&gt; false <code>1&lt;=2</code> =&gt; true false 1 1 <code>1&lt;=1</code> =&gt; true <code>1&lt;=1</code> =&gt; true false <p>\u56e0\u6b64\uff0c\u6839\u636e\u4e25\u683c\u5f31\u5e8f\u7684\u89c4\u5219\uff0c<code>comp2</code>\u4e0d\u80fd\u591f\u533a\u5206<code>a==b</code>\u7684\u60c5\u51b5\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%AF%94%E8%BE%83%E5%87%BD%E6%95%B0/%E4%B8%A5%E6%A0%BC%E5%BC%B1%E5%BA%8F%EF%BC%88less%E5%87%BD%E6%95%B0%E3%80%81%E5%B0%8F%E4%BA%8E%E5%8F%B7%E9%87%8D%E8%BD%BD%EF%BC%89/#_7","title":"\u603b\u7ed3","text":"<p>\u7b80\u800c\u8a00\u4e4b\uff0c\u4e25\u683c\u5f31\u5e8f\uff0c\u5c31\u662f</p> <ul> <li>a\u4e25\u683c\u5f31\u5e8fb =&gt; <code>a&lt;b</code>\uff0c\u4e0d\u53ef\u80fd\u51fa\u73b0<code>a==b</code>\u7684\u60c5\u51b5</li> </ul> <p>\u7f16\u5199\u6ee1\u8db3\u4e25\u683c\u5f31\u5e8f\u7684\u51fd\u6570\uff0c\u5173\u952e\u5728\u4e8e</p> <ul> <li>\u5bf9\u4e8e\u76f8\u540c\u7684\u5143\u7d20\uff0c\u65e0\u8bba\u662f<code>comp(a, b)</code>\uff0c\u8fd8\u662f<code>comp(b, a)</code>\u90fd\u8981\u8fd4\u56de<code>false</code></li> <li>\u5982\u6b64\uff0c\u6839\u636e\u4e25\u683c\u5f31\u5e8f\u51fd\u6570\uff0c\u624d\u80fd\u5224\u65ad\u51fa<code>a==b</code></li> </ul> <p>\u603b\u4e4b\uff0c\u5982\u4f55\u7f16\u5199\u6ee1\u8db3\u4e25\u683c\u5f31\u5e8f\u7684\u51fd\u6570\u5462\uff1f</p> <ol> <li><code>a&lt;b</code>\uff0cLess\u51fd\u6570\u8fd4\u56detrue</li> <li><code>a==b</code>\uff0cLess\u51fd\u6570\u8fd4\u56defalse</li> <li><code>a&gt;b</code>\uff0cLess\u51fd\u6570\u8fd4\u56defalse</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E6%AF%94%E8%BE%83%E5%87%BD%E6%95%B0/%E4%B8%A5%E6%A0%BC%E5%BC%B1%E5%BA%8F%EF%BC%88less%E5%87%BD%E6%95%B0%E3%80%81%E5%B0%8F%E4%BA%8E%E5%8F%B7%E9%87%8D%E8%BD%BD%EF%BC%89/#_8","title":"\u793a\u4f8b","text":"<p>\u7f16\u5199\u4e25\u683c\u5f31\u5e8f\u7684\u65b9\u5f0f\u6709\u5f88\u591a\u4e2d\uff0c\u8fd9\u5c31\u6d89\u53caC++\u7684\u8bed\u6cd5\uff0c\u672c\u6587\u5e76\u4e0d\u5c55\u5f00\u3002</p> <p>\u4ee5<code>Point3D</code>\u4e3a\u4f8b\uff0c\u7f16\u5199\u5176\u4e25\u683c\u5f31\u5e8f\u7684\u51fd\u6570</p> <ul> <li>Point3D\u6d89\u53ca\u5230\u6d6e\u70b9\u6570\u5224\u7b49\u95ee\u9898\uff0c\u6587\u793a\u4f8b\u9608\u503c\u7528\u7684\u662f1e-6</li> </ul> <pre><code>#include &lt;iostream&gt;\n#include &lt;set&gt;\nstruct Point3D\n{\ndouble x, y, z;\nPoint3D(double xx, double yy, double zz) : x(xx), y(yy), z(zz) {}\nbool operator==(const Point3D&amp; rhs) const\n{\nauto equal_zero = [](double v)-&gt;bool\n{\nreturn -1e-6 &lt; v &amp;&amp; v &lt; 1e-6; //\u76f8\u7b49\u9608\u503c1e-6\n};\nreturn equal_zero(this-&gt;x - rhs.x)\n&amp;&amp; equal_zero(this-&gt;y - rhs.y)\n&amp;&amp; equal_zero(this-&gt;z - rhs.z);\n}\nbool operator&lt;(const Point3D&amp; rhs) const\n{\n//\u6839\u636e\u4e25\u683c\u5f31\u5e8f\u7684\u89c4\u5219\uff1a\n//  \u5bf9\u4e8ea==b\u7684\u60c5\u51b5\uff0c\u65e0\u8bbacomp(a, b)\uff0c\u8fd8\u662fcomp(b, a)\uff0c\u4e24\u8005\u90fd\u8981\u8fd4\u56defalse\nif (*this == rhs) return false;\n//\u6392\u5e8f\u65b9\u5f0f\uff0c\u4f18\u5148\u7ea7\uff1ax\u8f74\u4f18\u5148\u7ea7 &gt; y\u8f74 &gt; z\u8f74\nif (x &lt; rhs.x) return true;\nelse if (x &gt; rhs.x) return false;\nelse if (y &lt; rhs.y) return true;\nelse if (y &gt; rhs.y) return false;\nelse if (z &lt; rhs.z) return true;\nelse return false;\n}\nfriend std::ostream&amp; operator&lt;&lt;(std::ostream&amp; os, const Point3D&amp; pnt)\n{\nos &lt;&lt; pnt.x &lt;&lt; '\\t' &lt;&lt; pnt.y &lt;&lt; '\\t' &lt;&lt; pnt.z;\nreturn os;\n}\n};\nint main()\n{\nstd::set&lt;Point3D&gt; pointSet;\npointSet.emplace(4.4302740239554605, 3.25, 1.99999999998); //A\npointSet.emplace(4.4302740239554605, 3.25, 2.00000000000); //==A\npointSet.emplace(4.5, 3.25, 1.99999999998); //x &gt; A.x\npointSet.emplace(4.4302740239554605, 4.0, 1.99999999998); //y &gt; A.y\npointSet.emplace(4.4302740239554605, 3.25, 3.0); //z &gt; A&gt;z\nstd::cout.precision(10);\nfor (const auto&amp; item : pointSet)\n{\nstd::cout &lt;&lt; item &lt;&lt; std::endl;\n}\nreturn 0;\n}\n</code></pre> <p>\u8f93\u51fa <pre><code>4.430274024 3.25    2\n4.430274024 3.25    3\n4.430274024 4   2\n4.5 3.25    2\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F/nth_element/","title":"Nth element","text":"<pre><code>//\u6392\u5e8f\u89c4\u5219\u91c7\u7528\u9ed8\u8ba4\u7684\u5347\u5e8f\u6392\u5e8f\nvoid nth_element (RandomAccessIterator first,\nRandomAccessIterator nth,\nRandomAccessIterator last);\n//\u6392\u5e8f\u89c4\u5219\u4e3a\u81ea\u5b9a\u4e49\u7684 comp \u6392\u5e8f\u89c4\u5219\nvoid nth_element (RandomAccessIterator first,\nRandomAccessIterator nth,\nRandomAccessIterator last,\nCompare comp);\n</code></pre> <pre><code>std::vector&lt;int&gt; v {5, 10, 6, 4, 3, 2, 6, 7, 9, 3}; //10\u4e2a\u5143\u7d20\nauto m = v.begin() + v.size() / 2; //\u4e2d\u95f4\nstd::nth_element(v.begin(), m, v.end());\nstd::cout &lt;&lt; \"\\nThe median is \" &lt;&lt; v[v.size() / 2] &lt;&lt; '\\n'; //[\u8f93\u51fa]\n//The median is 6\n//v = {3, 2, 3, 4, 5, 6, 10, 7, 9, 6};\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/","title":"\u300aC++\u6807\u51c6\u5e93\u4e0e\u6cdb\u578b\u7f16\u7a0b\u300b\u4faf\u6377","text":"<p>\u3010\u4f53\u7cfb\u3011C\u6807\u51c6\u5e93\u662f\u4e00\u4e2a\u4e00\u4e2a\u5355\u4e00\u7684\u51fd\u6570\uff0c\u5f7c\u6b64\u4e4b\u95f4\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u5173\u8054\u3002\u4f46\u662fC++\u6807\u51c6\u5e93\uff0c\u4e3b\u8981\u5206\u4e3a6\u4e2a\u90e8\u4ef6\uff0c\u90e8\u4ef6\u4e4b\u95f4\u6709\u5f88\u7d27\u5bc6\u7684\u8054\u7cfb\u3002\u6240\u4ee5\uff0c\u628a\u4f53\u7cfb\u7ed3\u6784\u5f04\u6e05\u695a\u4e4b\u540e\uff0c\u624d\u80fd\u66f4\u597d\u7684\u8fd0\u7528C++\u6807\u51c6\u5e93</p> <p>\u3010\u5185\u6838\u5206\u6790\u3011\u8fd9\u95e8\u8bfe\u7a0b\u91cc\u4e0d\u4f46\u8c08\u5230\u600e\u4e48\u53bb\u7528\u8fd9\u4e2a\u6807\u51c6\uff0c\u8fd8\u4f1a\u8c08\u5230\u6807\u51c6\u5e93\u7684\u7ed3\u6784\uff0c\u4f1a\u5e26\u5927\u5bb6\u53bb\u770b\u6e90\u4ee3\u7801</p> <p>\u3010\u6cdb\u578b\u7f16\u7a0b\u3011\u6240\u8c13\u6cdb\u578b\u7f16\u7a0b\uff08GP\uff09\uff0c\u5c31\u662f\u4f7f\u7528\u6a21\u677f\u4e3a\u4e3b\u8981\u5de5\u5177\u6765\u7f16\u5199\u5de5\u5177\u3002</p> <p>\u4f7f\u7528\u4e00\u4e2a\u4e1c\u897f\uff0c\u5374\u4e0d\u660e\u767d\u5b83\u7684\u9053\u7406\uff0c\u4e0d\u9ad8\u660e\uff01</p> <p>\u56db\u4e2a\u7a0b\u5ea6</p> <ol> <li>\u4f7f\u7528C++\u6807\u51c6\u5e93</li> <li>\u8ba4\u8bc6C++\u6807\u51c6\u5e93\uff08\u80f8\u4e2d\u81ea\u6709\u4e18\u58d1\uff09\uff1a\u4f7f\u7528\u90e8\u4ef6\u4e4b\u95f4\uff0c\u4f60\u975e\u5e38\u6e05\u695a\uff0c\u5b83\u5728\u5185\u5b58\u4e2d\u957f\u4ec0\u4e48\u6837\uff1b\u6709\u4e86\u8fd9\u4e2a\u56fe\u4e4b\u540e\uff0c\u4f60\u624d\u80fd\u5224\u65ad\u7528\u54ea\u4e2a\u90e8\u4ef6\u6548\u7387\u6700\u9ad8</li> <li>\u826f\u597d\u4f7f\u7528C++\u6807\u51c6\u5e93</li> <li>\u6269\u5145C++\u6807\u51c6\u5e93</li> </ol> <p>\u3010C++ Standard Library vs. Standard Template Library\u3011</p> <ol> <li>C++ Standard Library C++\u6807\u51c6\u5e93</li> <li>Standard template library\uff0cSTL\u6807\u51c6\u6a21\u677f\u5e93\uff1aC++\u6807\u51c6\u5e93\u91cc\u5927\u591a\u6570\u90fd\u662fSTL\uff0cSTL\u5206\u4e3a6\u5927\u90e8\u4ef6</li> </ol> <p>C++\u6807\u51c6\u5e93\uff086\u5927\u90e8\u4ef6+\u5176\u4ed6\u7684\u4e1c\u897f\uff09 &gt; STL\u6807\u51c6\u6a21\u677f\u5e93\uff086\u5927\u90e8\u4ef6\uff09</p> <p>\u6807\u51c6\u5e93\u4ee5\u5934\u6587\u4ef6\u7684\u5f62\u5f0f\u51fa\u73b0\uff08\u4e0d\u5e26.h\u540e\u7f00\uff09\uff0c\u5982<code>#include&lt;vector&gt;</code></p> <ol> <li>\u65b0\u5f0fC header files\u4e0d\u5e26.h\uff0c\u4f8b\u5982<code>#include\"cstdio\"</code></li> <li>\u65e7\u5f0fC header files\uff08\u5e26.h\uff09\u4e5f\u8fd8\u53ef\u4ee5\u7528\uff0c\u5982<code>#include&lt;stdio.h&gt;</code></li> <li>\u6240\u6709\u7684headers\u5185\u7684\u90e8\u4ef6\u90fd\u5c01\u88c5\u4e8estd\u4e2d</li> </ol> <p>C++\u7f51\u7ad9</p> <ol> <li>www.cplusplus.com</li> <li>www.cppreference.com</li> <li>gcc.gnu.org</li> </ol> <p>C++\u4e66\u7c4d</p> <p></p> <p>STL\u6e90\u4ee3\u7801\u8def\u5f84</p> <ol> <li>VC\uff1a<code>..\\include</code></li> <li>GNU C++</li> <li><code>..\\4.9.2\\include</code></li> <li><code>..\\4.9.2\\include\\c++</code></li> <li><code>..\\4.9.2\\include\\c++\\bits</code></li> <li><code>..\\4.9.2\\include\\c++\\ext</code></li> </ol> <p>\u76f8\u5173\u6587\u7ae0</p> <ol> <li>\u4faf\u6377C++\u8bfe\u7a0b\u7b14\u8bb003: STL\u6807\u51c6\u5e93\u4e0e\u6cdb\u578b\u7f16\u7a0b</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/1-STL%E5%85%AD%E5%A4%A7%E9%83%A8%E4%BB%B6/","title":"1 STL\u516d\u5927\u90e8\u4ef6","text":"<p>\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\uff0c\u6240\u4ee5STL\u4e2d\u5305\u542b\u4e86\u5bb9\u5668\u4e0e\u7b97\u6cd5\uff0c\u5bb9\u5668\u5373\u5b58\u50a8\u6570\u636e\u7684\u4e1c\u897f\u3002</p> <p></p> <p>\u3010\u5bb9\u5668\u3011\u5bb9\u5668\u7528\u6765\u653e\u4e1c\u897f\uff0c\u4e1c\u897f\u8981\u5360\u7528\u5185\u5b58\u3002\u5bb9\u5668\u4f1a\u5e2e\u6211\u4eec\u89e3\u51b3\u5185\u5b58\u7684\u4e8b\u60c5\uff0c\u4f60\u4e0d\u9700\u8981\u7ba1\u5185\u5b58\uff0c\u53ea\u8981\u628a\u4e1c\u897f\u4e00\u4e2a\u4e00\u4e2a\u653e\u8fdb\u53bb\u3001\u6216\u8005\u53d6\u51fa\u6765</p> <p>\u3010\u5206\u914d\u5668\u3011\u6211\u4eec\u4f7f\u7528\u5bb9\u5668\u4e0d\u9700\u8981\u7ba1\u7406\u5185\u5b58\uff0c\u6240\u4ee5\u5bb9\u5668\u7684\u80cc\u540e\u8981\u6709\u53e6\u5916\u4e00\u4e2a\u90e8\u4ef6\u652f\u6301\uff0c\u5c31\u662f\u5206\u914d\u5668\u3002\u5206\u914d\u5668\u7528\u6765\u652f\u6301\u5bb9\u5668\u505a\u5185\u5b58\u7ba1\u7406</p> <p>\u3010\u7b97\u6cd5\u3011\u628a\u6570\u636e\u653e\u5230\u5bb9\u5668\u4e4b\u540e\uff0c\u7528\u6237\u8981\u5bf9\u5bb9\u5668\u8fdb\u884c\u64cd\u4f5c\uff0c\u6709\u4e00\u4e9b\u64cd\u4f5c\u5728\u5bb9\u5668\u672c\u8eab\u5c31\u53ef\u4ee5\u505a\uff0c\u4f46\u662f\u8fd8\u6709\u66f4\u591a\u7684\u4e1c\u897f\u88ab\u72ec\u7acb\u51fa\u6765\uff0c\u653e\u5230\u6a21\u677f\u51fd\u6570\u4e2d\uff0c\u8fd9\u5c31\u662f\u201c\u7b97\u6cd5\u201d\u90e8\u4ef6\u3002</p> <p>\u3010\u8bf4\u660e\u3011OOP\u548cGP\u7684\u533a\u522b</p> <ul> <li>\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\u9f13\u52b1\u6211\u4eec\u628a\u6570\u636e\u653e\u5728\u7c7b\u91cc\u5934\uff0c\u628a\u5904\u7406\u7c7b\u7684\u51fd\u6570\u653e\u5728\u7c7b\u91cc\u5934\uff0c\u5f62\u6210\u4e00\u4e2a\u7c7b</li> <li>\u4f46\u5728STL\u4e2d\uff0c\u6570\u636e\u5728\u201c\u5bb9\u5668\u201d\u91cc\u9762\uff0c\u64cd\u4f5c\u8fd9\u4e9b\u6570\u636e\u7684\u52a8\u4f5c\u5728\u201c\u7b97\u6cd5\u201d\u91cc\u9762\uff0c\u5bb9\u5668\u548c\u7b97\u6cd5\u662f\u5265\u79bb\u5f00\u7684</li> <li>\u6240\u4ee5\uff0c\u4e24\u8005\u7684\u8bbe\u8ba1\u601d\u60f3\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u540e\u8005\u662f\u6a21\u677f\u7f16\u7a0b\u601d\u60f3</li> </ul> <p>\u3010\u8fed\u4ee3\u5668\u3011\u7b97\u6cd5\u8981\u5904\u7406\u5bb9\u5668\u7684\u6570\u636e\u3002\u7b97\u6cd5\u662f\u64cd\u4f5c\uff0c\u5bb9\u5668\u662f\u6570\u636e\uff0c\u7b97\u6cd5\u4e0e\u5bb9\u5668\u7684\u6865\u6881\u53eb\u8fed\u4ee3\u5668\u3002\u8fed\u4ee3\u5668\u5c31\u50cf\u4e00\u4e2a\u6cdb\u5316\u6307\u9488</p> <p>\u3010\u4eff\u51fd\u6570\u3011\u4eff\u51fd\u6570\uff0c\u4eff\uff0c\u5b83\u7684\u4f7f\u7528\u65b9\u6cd5\u5f88\u50cf\u662f\u4e00\u4e2a\u51fd\u6570\u3002</p> <p>\u3010\u9002\u914d\u5668\u3011\u9002\u914d\u5668\u53ef\u4ee5\u5e2e\u6211\u4eec\u8f6c\u6362\u5176\u4ed6\u90e8\u4ef6</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/1-STL%E5%85%AD%E5%A4%A7%E9%83%A8%E4%BB%B6/#_1","title":"\u793a\u4f8b","text":"<pre><code>int ia[6] = {27, 210, 12, 47, 109, 83};\nvector&lt;int, allocator&lt;int&gt;&gt; vi(ia, ia+6);   //\u5bb9\u5668\ncount_if(   //\u7b97\u6cd5\uff1a\u8ba1\u7b97\u6ee1\u8db3\u6761\u4ef6\u7684\u4e2a\u6570\nvi.begin(), vi.end(),   //\u8fed\u4ee3\u5668\uff0c\u8ba1\u7b97\u7684\u8303\u56f4\n//\u6761\u4ef6\uff1a\u6240\u8c13\u6761\u4ef6\uff0c\u5728STL\u4e2d\u6709\u4e00\u4e2a\u540d\u79f0\u53ebpredicate\uff0c\u5373\u5224\u65ad\u4e3atrue\u7684\u610f\u601d\nnot1(   //\u6761\u4ef6\u53d6\u53cd\uff0c\u662f\u4e00\u4e2a\u9002\u914d\u5668\nbind2nd(    //\u7ed1\u5b9a\u7b2c\u4e8c\u53c2\u6570\nless&lt;int&gt;(),    //\u4eff\u51fd\u6570\uff0c\u6bd4\u8f83a\u3001b\n40\n)\n)\n);\n</code></pre> <p><code>count_if</code>\u6570\u6570\uff0c\u8ba1\u7b97\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\u4e2a\u6570</p> <p>\u6761\u4ef6\uff1a\u5927\u4e8e\u7b49\u4e8e40</p> <ol> <li>\u6807\u51c6\u5e93\u6709\u4e00\u4e2a\u4eff\u51fd\u6570<code>less&lt;int&gt;()</code>\uff0c\u8868\u793a\u6bd4\u8f83a\u3001b\uff0c\u5982\u679ca&lt;b\uff0c\u5219\u8fd4\u56detrue</li> <li>\u4f46\u73b0\u5728\u6761\u4ef6\u662f\u5c0f\u4e8e40\uff0c\u800c\u4e0d\u662f\u6bd4\u8f83a\u3001b\uff0c\u6240\u4ee5<code>less</code>\u4e0d\u592a\u9002\u5408</li> <li>\u53ef\u4ee5\u4f7f\u7528STL\u7684\u53e6\u4e00\u4e2a\u90e8\u4ef6\u201c\u9002\u914d\u5668\u201d<code>bind2nd</code>\uff0c\u7ed1\u5b9a\u7b2c\u4e8c\u53c2\u6570</li> <li><code>bind2nd(less&lt;int&gt;(), 40);</code> \u5c0640\u7ed1\u5b9a\u7ed9less\u505a\u7b2c\u4e8c\u53c2\u6570b\uff0c\u539f\u5148\u662f\u6bd4\u8f83a\u3001b\u5927\u5c0f\uff0c\u73b0\u5728\u53d8\u6210\u6bd4\u8f83a\u548c40\u7684\u5927\u5c0f\u3002\u5982\u679ca&lt;40\uff0c\u5219\u8fd4\u56detrue</li> <li><code>not1</code>\u53c8\u662f\u4e00\u4e2a\u9002\u914d\u5668\uff0c\u505a\u4e86\u53d6\u53cd\u7684\u52a8\u4f5c\u3002\u539f\u5148\u7684\u610f\u601d\u662f\u5c0f\u4e8e40\u8fd4\u56detrue\uff0c\u800c\u53d6\u53cd\u5c31\u662f\u5927\u4e8e\u7b49\u4e8e40\u8fd4\u56detrue</li> </ol> <p>\u6240\u8c13\u201c\u6761\u4ef6\u201d\uff0c\u5728STL\u4e2d\u6709\u4e00\u4e2a\u540d\u79f0\u53eb<code>predicate</code>\uff0c\u5373\u5224\u65ad\u4e3atrue\u7684\u610f\u601d\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/1-STL%E5%85%AD%E5%A4%A7%E9%83%A8%E4%BB%B6/#big-oh","title":"\u590d\u6742\u5ea6Big-oh","text":"<p>\u8c08\u5230\u7b97\u6cd5\u3001\u8c08\u5230\u5bb9\u5668\uff0c\u514d\u4e0d\u4e86\u7684\u4f1a\u60f3\uff0c\u7528\u54ea\u4e2a\u6bd4\u8f83\u597d\uff0c\u54ea\u4e2a\u6548\u7387\u6bd4\u8f83\u9ad8\u3002\u5982\u679c\u8fd9\u4e2a\u6709\u7b54\u6848\uff0c\u90a3\u5c31\u5947\u602a\u4e86\uff0c\u5982\u679c\u6709\u7b54\u6848\uff0c\u4ed6\u76f4\u63a5\u7ed9\u4f60\u63d0\u4f9b\u4e00\u4e2a\u6700\u597d\u7684\u5c31\u591f\u4e86\uff0c\u4f55\u5fc5\u63d0\u4f9b\u8fd9\u4e48\u591a\u4e2a\u3002\u7528\u54ea\u4e2a\u53d6\u51b3\u4e8e\u6570\u636e\u7684\u5206\u5e03\u4e0e\u4f7f\u7528\u7684\u72b6\u51b5</p> <p>\u590d\u6742\u5ea6\uff1a</p> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/1-STL%E5%85%AD%E5%A4%A7%E9%83%A8%E4%BB%B6/#_2","title":"\u201c\u524d\u95ed\u540e\u5f00\u201d\u533a\u95f4","text":"<p>\u6807\u51c6\u5e93\u89c4\u5b9a\uff0c\u6807\u8bc6\u524d\u548c\u5c3e\u662f\u8fd9\u6837\u6807\u8bc6\u7684</p> <ol> <li>begin\uff1a\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20</li> <li>end\uff1a\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e</li> </ol> <p>\u8bf4\u660e\uff1a\u5176\u5b9e\u600e\u4e48\u6807\u8bc6\u90fd\u6ca1\u6709\u4f18\u52a3\u4e4b\u5206\uff0c\u4e0d\u8fc7\u90fd\u8981\u7528\u4e00\u4e2a\u6807\u51c6\uff0cSTL\u4f7f\u7528\u524d\u95ed\u540e\u5f00\u7684\u65b9\u5f0f</p> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/1-STL%E5%85%AD%E5%A4%A7%E9%83%A8%E4%BB%B6/#range-based-for-statementsince-c11","title":"range-based for statement(since C++11)","text":"<p>\u5728C++2.0\u4e4b\u540e\uff0c\u6709\u4e00\u4e2a\u66f4\u65b9\u4fbf\u7684\u5199\u6cd5</p> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/1-STL%E5%85%AD%E5%A4%A7%E9%83%A8%E4%BB%B6/#auto","title":"auto\u5173\u952e\u5b57","text":"<p>\u53ef\u4ee5\u4f7f\u7528auto\u5173\u952e\u5b57\u81ea\u884c\u63a8\u5bfc\u3002 </p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/","title":"2 \u5bb9\u5668\u7684\u7ed3\u6784\u4e0e\u5206\u7c7b","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#_1","title":"\u5bb9\u5668\u5206\u7c7b","text":"<p>\u5bb9\u5668\u53ef\u5206\u4e3a\u4e09\u79cd</p> <ol> <li>Sequence Containers\uff1a\u5e8f\u5217\u5bb9\u5668</li> <li>Associative Containers\uff1a\u5173\u8054\u5f0f\u7684\u5bb9\u5668</li> <li>Unordered Containers\uff1a\u4e0d\u5b9a\u5e8f\u7684\u5bb9\u5668\uff08\u5728\u8fd9\u4e00\u523b\u53ef\u80fd\u662f\u8fd9\u4e2a\u987a\u5e8f\uff0c\u5728\u4e00\u4e9b\u64cd\u4f5c\u4e4b\u540e\uff0c\u987a\u5e8f\u53ef\u80fd\u53c8\u53d8\u4e86\uff09</li> </ol> <p>\u5bb9\u5668\u53c8\u53ef\u5206\u4e3a\u4e24\u79cd\uff1a\u5e8f\u5217\u5bb9\u5668\u3001\u5173\u8054\u5f0f\u5bb9\u5668</p> <ul> <li>\u4e0d\u5b9a\u5e8f\u5bb9\u5668\u5176\u5b9e\u5c31\u662f\u4e00\u79cd\u5173\u8054\u5f0f\u5bb9\u5668\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5206\u7c7b\u53ef\u80fd\u4e0d\u662f\u5f88\u597d</li> <li>\u66f4\u6070\u5f53\u7684\u5206\u7c7b\u662f\u5e8f\u5217\u5bb9\u5668\u4e0e\u5173\u8054\u5f0f\u5bb9\u5668\u4e24\u7c7b\u3002</li> </ul> <p>\u53ef\u4ee5\u628a\u5173\u8054\u5f0f\u5bb9\u5668\u5f53\u6210\u5c0f\u578b\u7684\u5173\u8054\u6570\u636e\u5e93\uff0c\u5b83\u7684\u67e5\u627e\u662f\u975e\u5e38\u5feb\u7684\u3002</p> <p></p> <ol> <li>\u7ea2\u8272\u6846\u662fC++11\u4e4b\u540e\u65b0\u589e\u7684</li> <li>queue\u662f\u961f\u5217\uff0cdeque\u662f\u53cc\u5411\u961f\u5217</li> <li>list\u5176\u5b9e\u662f\u4e00\u4e2a\u53cc\u5411\u73af\u72b6\u94fe\u8868\uff0c\u73af\u72b6\u53ea\u662f\u4e3a\u4e86\u5b9e\u73b0\u4e0a\u7684\u904d\u5386\uff0c\u5728\u5b9e\u9645\u4f7f\u7528\u548c\u529f\u80fd\u4e0a\uff0c\u5f53\u6210\u53cc\u5411\u94fe\u8868\u5373\u53ef</li> <li>set\u3001map\u5185\u90e8\u662f\u7528\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684\uff0c\u7ea2\u9ed1\u6811\u662f\u4e00\u4e2a\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u6811\u3002\u5e73\u8861\uff1a\u4f1a\u4fdd\u6301\u5de6\u53f3\u662f\u5e73\u8861\u7684\uff0c\u4fdd\u8bc1\u67e5\u627e\u7684\u6548\u7387</li> <li>set\u3001map\u8868\u793a\u5185\u90e8\u5143\u7d20\u4e0d\u80fd\u91cd\u590d\u3002\u800cmultiset\u3001multimap\u8868\u793akey\u53ef\u4ee5\u91cd\u590d</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#array","title":"array","text":"<pre><code>#define ASIZE 1000000000\nint compareLongs(const void* a, const void* b) {\nreturn ( *(long*)a - *(long*)b );\n}\narray&lt;long, ASIZE&gt; c;\nfor(long i=0; i&lt;value; ++i) {\ntry {\nsnprintf(buf, 10, \"%d\", rand());\nc.push_back(string(buf));\n} catch (exception&amp; e) { //push_back\u53ef\u80fd\u4f1a\u51fa\u9519\uff0c\u6ca1\u6709\u90a3\u4e48\u591a\u5185\u5b58\u4e86\ncout &lt;&lt; e.what();\nabort(;\n}\n}\nc.size();\nc.front();\nc.back();\nc.data();\n//\u6392\u5e8f\nqsort(c.data(), ASIZE, sizeof(long), compareLongs);\n//\u4e8c\u5206\u6cd5\u67e5\u627e\uff08\u4e8c\u5206\u67e5\u627e\u6cd5\u7684\u524d\u63d0\uff1a\u5143\u7d20\u6709\u5e8f\uff09\nlong* pItem = (long*)bsearch(&amp;target, c.data(), ASIZE, sizeof(long), compareLongs);\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#vector","title":"vector","text":"<p>vector\u53ea\u80fd\u5411\u540e\u589e\u957f\uff0c\u6269\u5bb9\u4e4b\u540e\u7684\u5927\u5c0f\u662f\u539f\u5148\u7684\u4e24\u500d\u3002</p> <pre><code>int compareStrings(const void*a, const void* b) {\nif( *(string*)a &gt; *(string*)b ) return 1;\nelse if( *(string*)a &lt; *(string*)b ) return -1;\nelse return 0;\n}\nvetor&lt;string&gt; c;\nc.push_back(\"23123\");\nc.size();   //\u771f\u6b63\u5143\u7d20\u7684\u4e2a\u6570\nc.front();\nc.back();\nc.data();   c.capacity();   //\u5bb9\u91cf\nauto pItem = ::find(c.begin(), c.end(), target);\nsort(c.being(), c.end()); //\u6392\u5e8f\nstring* pItem = (string*)bsearch(&amp;target, (c.data()), c.size(), sizeof(string), compareStrings); //\u4e8c\u5206\u67e5\u627e\n</code></pre> <p></p> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#list","title":"list","text":"<pre><code>list&lt;string&gt; c;\nc.push_back(\"1234\");\nc.size();       //\u76ee\u524d\u7684\u5927\u5c0f\nc.max_size();   //list\u53ef\u653e\u7684\u5bb9\u91cf\nc.front();\nc.back();\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#forward_list","title":"forward_list","text":"<p>\u3010slist\u3011gnu\u7f16\u8bd1\u5668\u4e2d\u7684\u5355\u5411\u94fe\u8868\uff0c\u65b9\u6cd5\u548cstl\u89c4\u5b9a\u7684\u5f88\u50cf <pre><code>#include&lt;ext\\slist&gt;\n_gnu_cxx::slit&lt;string&gt; c;\n//\u5176\u4ed6\u90fd\n</code></pre></p> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#deque","title":"deque","text":"<p>deque\u4e24\u5934\u90fd\u53ef\u4ee5\u6dfb\u52a0\uff0c\u90a3\u5b83\u662f\u600e\u4e48\u505a\u5230\u7684\u5462\uff1f</p> <ol> <li>\u4e00\u4e2adeque\u5206\u6210\u597d\u51e0\u6bb5\u5b58\u50a8\uff0c\u4e00\u6bb5\u79f0\u4e4b\u4e3abuffer</li> <li>\u4e00\u4e2abuffer\u53ef\u4ee5\u653e\u5f88\u591a\u5143\u7d20</li> </ol> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#stack","title":"stack","text":"<p>stack\u548cqueue\u6ca1\u6709\u63d0\u4f9b\u8fed\u4ee3\u5668\uff0c\u5982\u679c\u6709\u8fed\u4ee3\u5668\uff0c\u53ef\u80fd\u4f1a\u4e0e\u672c\u8eab\u7684\u5b9a\u4e49\u6709\u51b2\u7a81\u3002\u6bd4\u5982\uff0c\u4f60\u62ff\u5230\u8fed\u4ee3\u5668\u4e4b\u540e\uff0c\u8981\u4fee\u6539\uff0c\u6216\u524d\u9762\u63d2\u5165\u7b49\uff0c\u8fd9\u6837\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3astack\u548cqueue\u672c\u8eab\u662f\u6709\u9650\u5236\u7684\u5bb9\u5668</p> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#queue","title":"queue","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#multi","title":"multi\uff08\u53ef\u91cd\u590d\uff09","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#multiset","title":"multiset","text":"<p>set\u3001multiset\u4e2d\uff0c\u53ea\u5b58\u6709\u4e00\u4e2a\u5143\u7d20\u3002\u4e0emap\u76f8\u6bd4\uff0cset\u7684key\u548cvalue\u76f8\u540c\u3002multi\u5141\u8bb8\u5143\u7d20\u76f8\u540c</p> <ol> <li>\u57fa\u4e8e\u7ea2\u9ed1\u6811\uff0c\u5143\u7d20\u7684\u4f4d\u7f6e\u6839\u636e\u7b97\u6cd5\u52a8\u6001\u751f\u6210</li> <li><code>::find()</code>\u5168\u5c40\u51fd\u6570\u7684find\u80af\u5b9a\u4f1a\u6bd4\u5bb9\u5668\u81ea\u5df1\u7684<code>find</code>\u66f4\u6162\uff0c\u56e0\u4e3a\u5bb9\u5668\u5b9a\u5236\u7684<code>find</code>\uff0c\u901f\u5ea6\u80af\u5b9a\u4f1a\u5feb\u4e9b</li> </ol> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#multimap","title":"multimap","text":"<p>\u57fa\u4e8e\u7ea2\u9ed1\u6811\uff0c\u5143\u7d20\u6709\u4e24\u4e2a\u90e8\u5206\uff0ckey\u548cvalue\uff0c\u627e\u7684\u65f6\u5019\u7528key\u6765\u627e\u3002multimap\u4e2dkey\u53ef\u4ee5\u91cd\u590d\u3002</p> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#unordered_multiset","title":"unordered_multiset","text":"<p>multiset\u3001multimap\u662f\u57fa\u4e8e\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684\uff0c\u7ea2\u9ed1\u6811\u662f\u975e\u5e38\u4e25\u8c28\u7684\uff0c\u6548\u7387\u5f88\u9ad8\u3002\u800cunordered_multiset\u662f\u57fa\u4e8e\u54c8\u5e0c\u8868\u3002</p> <ol> <li><code>bucket</code>\u7bee\u5b50\u3002\u7bee\u5b50\u4e00\u5b9a\u6bd4\u5143\u7d20\u591a\uff0c\u8fd9\u662f\u8bbe\u8ba1\u7684\u8003\u91cf</li> <li>\u6bcf\u4e2a\u7bee\u5b50\u51fa\u53bb\u7684\u94fe\u8868\u4e0d\u80fd\u592a\u957f</li> <li>\u90a3\u600e\u4e48\u7b97\u592a\u957f\u5462\uff1f\u7ecf\u9a8c\u6cd5\u5219\uff1a\u5982\u679c\u5143\u7d20\u7684\u4e2a\u6570\u2265\u7bee\u5b50\u7684\u4e2a\u6570\uff0c\u90a3\u4e48\u7bee\u5b50\u7684\u4e2a\u6570\u5c31\u8981\u6269\u5145\uff08\u5927\u7ea6\u4e24\u500d\u8fd9\u4e48\u591a\uff09\uff0c\u539f\u6765\u7684\u5143\u7d20\u4ece\u65b0\u6253\u6563\uff0c\u653e\u5728\u4e0d\u540c\u7684\u7bee\u5b50\u4e0a\u3002</li> <li><code>load_factor</code>\u8f7d\u91cd\u56e0\u5b50</li> </ol> <p></p> <p>\u67e5\u627e\uff1a<code>\u5bb9\u5668.find()</code>\u6bd4<code>std::find()</code>\u5feb</p> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#unordered_multimap","title":"unordered_multimap","text":"<p>\u7528\u54c8\u5e0c\u8868</p> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#multi_1","title":"\u65e0multi\uff08\u4e0d\u53ef\u91cd\u590d\uff09","text":"<p>key\u4e0d\u53ef\u91cd\u590d\uff0c\u5373\u6839\u636ekey\u4f1a\u53bb\u91cd\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#set","title":"set","text":"<p>kye\u5c31\u662fvalue\uff0cvalue\u5c31\u662fkey</p> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#map","title":"map","text":"<ol> <li>key\u4e0d\u80fd\u91cd\u590d\uff0c\u653e\u5165\u91cd\u590d\u7684\u4f1a\u5931\u8d25</li> <li>multimap\u4e0d\u80fd\u7528[]\u64cd\u4f5c\u7b26\uff0c\u800cmap\u53ef\u4ee5\uff0c[]\u4e2d\u5c31\u662fkey</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#_2","title":"\u603b\u7ed3","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#_3","title":"\u5bb9\u5668\u7684\u7ed3\u6784\u4e0e\u5206\u7c7b","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#_4","title":"\u4e0d\u540c\u5bb9\u5668\u4e4b\u95f4\u7684\u5173\u8054\u6027","text":"<p>\u6ce8\u91ca\u4e00\uff1a\u56fe\u4e2d\uff0c\u4ee5\u7f29\u8fdb\u7684\u5f62\u5f0f\u8868\u793a\u57fa\u5c42\u548c\u884d\u751f\u5c42\u7684\u5173\u7cfb\u3002\u6240\u8c13\u884d\u751f\u662f\u6307\u590d\u5408\u5173\u7cfb\u3002\u5982</p> <ol> <li>rb_tree\u662f\u6307\u7ea2\u9ed1\u6811\uff08\u9ad8\u5ea6\u5e73\u8861\u7684\u4e8c\u53c9\u6811\uff09\uff1b\u800cset\u3001map\u3001multiset\u3001multimap\u5728rb_tree\u4e0b\u9762\u7f29\u8fdb\u4e86\u4e00\u4e2a\u7a7a\u683c\u3002\u4ee3\u8868\u7684\u662f\uff0cset\u3001map\u3001multiset\u3001multimap\u662f\u884d\u751f\u5c42\uff0crb_tree\u662f\u57fa\u5c42\u3002\u590d\u5408\u7684\u610f\u601d\u5c31\u662f\uff1a\u884d\u751f\u5c42has-a\u57fa\u5c42\u3002set\u91cc\u6709\u4e00\u4e2arb_tree\u5728\u5e2e\u5b83\u7ba1\u7406\u5404\u4e2a\u5143\u7d20</li> <li>heap has-a vector</li> <li>priority_queue has-a heap</li> <li>stack has-a deque</li> <li>queue has-a deque</li> </ol> <p>\u6ce8\u91ca\u4e8c\uff1a\u975e\u6807\u51c6\uff0c\u4ee3\u8868\u8be5\u5bb9\u5668\u662f\u975e\u6807\u51c6\u7684\u5bb9\u5668</p> <ol> <li>\u5f53\u521dslist\u662f\u975e\u6807\u51c6\u3002\u4f46\u5728C++11\u65b0\u6807\u51c6\u4e0b\uff0cslist\u547d\u540d\u4e3aforward_list\uff0c\u88ab\u7eb3\u4e3a\u65b0\u6807\u51c6\u7684\u5bb9\u5668</li> <li>hash_set\u3001hash_map\u3001hash_multiset\u3001hash_multimap\u5f53\u521d\u662f\u975e\u6807\u51c6\u5bb9\u5668\u3002\u4f46\u5728C++\u65b0\u6807\u51c6\u4e0b\uff0c\u5b83\u4eec\u4e5f\u88ab\u5bb9\u7eb3\u8fdb\u6765\uff0c\u4f46\u540d\u5b57\u6539\u4e3aunordered_set\u3001unordered_map\u3001unordered_multiset\u3001unordered_multimap</li> </ol> <p>\u6ce8\u91ca\u4e09\uff1a\u84dd\u8272\u7684\u90e8\u5206\uff0c\u4ee3\u8868\u5c06\u8fd9\u4e9b\u5bb9\u5668\u505a\u51fa\u4e00\u4e2aobject\uff0c\u8fd9\u4e2aobject\u6240\u5360\u7684\u5927\u5c0f\u3002\u5373<code>vector&lt;int&gt; arr; sizeof(arr)</code>\u7684\u503c</p> <ol> <li>\u8fd9\u91ccsizeof\u7684\u5927\u5c0f\u662f\u6307\u5bb9\u5668\u7684\u5927\u5c0f</li> <li>\u800c\u5bb9\u5668\u5143\u7d20\u7684\u5927\u5c0f\u5e76\u4e0d\u5728\u5bb9\u5668\u4e2d\u63a7\u5236\uff0c\u800c\u662f\u901a\u8fc7\u6307\u9488\u63a7\u5236\uff0c\u5b83\u4e0d\u4f1a\u5f71\u54cd\u5bb9\u5668\u672c\u8eab\u7684\u5927\u5c0f</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/2-%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E5%88%86%E7%B1%BB/#sizeof","title":"\u9644\uff1a\u5bb9\u5668\u3001\u8fed\u4ee3\u5668\u548csizeof()","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/3-OOP%20vs%20GP/","title":"3 OOP vs GP","text":"<ol> <li>OOP\uff1aObject-Oriented programming\u3002\u7c7b\u3001\u7ee7\u627f\u5173\u7cfb\u3001\u865a\u51fd\u6570\u7b49\u7b49</li> <li>GP\uff1aGeneric Programming</li> </ol> <p>STL\u5e76\u4e0d\u662f\u57fa\u4e8eOOP\u8bbe\u8ba1\u51fa\u6765\u7684\uff0c\u662f\u57fa\u4e8eGP\u8bbe\u8ba1\u51fa\u6765\u7684\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/3-OOP%20vs%20GP/#oopgp","title":"OOP\u662f\u5c06\u6570\u636e\u548c\u65b9\u6cd5\u5173\u8054\uff0c\u800cGP\u662f\u5206\u79bb","text":"<p>OOP\u662f\u5c06\u6570\u636e\u548c\u65b9\u6cd5\u5173\u8054\u8d77\u6765\uff0c\u800cGP\u662f\u5206\u79bb</p> <ol> <li> <p>OOP\u4f01\u56fe\u5c06datas\u548cmethods\u5173\u8054\u5728\u4e00\u8d77\u3002\u5982\u679c\u7528OOP\u7684\u601d\u60f3\u8bbe\u8ba1list\uff0c\u5219\u4f1a\u5c06sort\u51fd\u6570\u653e\u5728\u7c7blist\u4e2d </p> </li> <li> <p>GP\u662f\u5c06datas\u548cmethods\u5206\u5f00 </p> </li> </ol> <p>\u54ea\u79cd\u65b9\u5f0f\u597d\uff1fGP\u4f1a\u66f4\u4f73</p> <ol> <li>\u5bb9\u5668\u548c\u7b97\u6cd5\u56e2\u961f\u53ef\u5404\u81ea\u95ed\u95e8\u9020\u8f66\uff0c\u53cc\u65b9\u7528Iterator\u6c9f\u901a\u5373\u53ef</li> <li>\u7b97\u6cd5\u901a\u8fc7Iterators\u786e\u5b9a\u64cd\u4f5c\u8303\u56f4\uff0c\u5e76\u901a\u8fc7Iterators\u53d6\u5bb9\u5668\u7684\u5143\u7d20</li> <li>\u5bb9\u5668\u53ef\u80fd\u8981\u89c6\u9700\u8981\u91cd\u8f7d&lt;\u3001&gt;\u7b49\u64cd\u4f5c\u7b26\uff0c\u8ba9\u7b97\u6cd5\u80fd\u591f\u8c03\u7528</li> </ol> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/3-OOP%20vs%20GP/#listsort","title":"\u9644\uff1a\u4e3a\u4ec0\u4e48list\u4e0d\u80fd\u7528\u5168\u5c40\u7684<code>::sort()</code>\u51fd\u6570\uff1f","text":"<ol> <li><code>::sort</code>\u51fd\u6570\u4e2d\u4f1a\u5c06\u6307\u9488\uff08\u8fed\u4ee3\u5668\u5176\u5b9e\u5c31\u662f\u6cdb\u5316\u6307\u9488\uff09\u8fdb\u884c\u52a0\u3001\u51cf\u3001\u4e58\u3001\u9664\u7684\u64cd\u4f5c</li> <li>\u8981\u652f\u6301\u52a0\u3001\u51cf\u3001\u4e58\u3001\u9664\u64cd\u4f5c\u7684\u8fed\u4ee3\u5668\uff0c\u4e00\u5b9a\u662f<code>RandonAccessIterator</code>\u968f\u673a\u8bbf\u95ee\u7684\u8fed\u4ee3\u5668</li> <li>\u800clist\u662f\u94fe\u8868\uff0c\u5728\u5185\u5b58\u4e2d\u662f\u4e00\u4e2a\u4e00\u4e2a\u8282\u70b9\u4e32\u8d77\u6765\u7684\u3002\u5b83\u7684\u8fed\u4ee3\u5668\u662f\u4e0d\u80fd\u8df3\u6765\u8df3\u53bb\u7684\uff0c\u53ea\u80fd\u662f++\u3001--\u4e00\u6b65\u4e00\u6b65\u8d70\u3002\u5373list\u7684\u8fed\u4ee3\u5668\u5e76\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee</li> </ol> <p>\u6240\u4ee5\u7b97\u6cd5\u5bf9\u8fed\u4ee3\u5668\u4e5f\u6709\u8981\u6c42\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u8fed\u4ee3\u5668\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002</p> <p>\u5982\u679c\u5bb9\u5668\u672c\u8eab\u5c31\u6709sort\uff0c\u7528\u5bb9\u5668\u672c\u8eab\u7684sort\u5373\u53ef\u3002\u56e0\u4e3a\u5bb9\u5668\u7684sort\u662f\u4e3a\u8be5\u5bb9\u5668\u4e13\u95e8\u5b9a\u5236\u7684\uff0c\u901f\u5ea6\u6bd4<code>::sort()</code>\u66f4\u5feb</p> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/STL/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%8E%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E3%80%8B%E4%BE%AF%E6%8D%B7/3-OOP%20vs%20GP/#_1","title":"\u9644\uff1a\u6240\u6709\u7684\u7b97\u6cd5\uff0c\u5185\u90e8\u6700\u7ec8\u6d89\u53ca\u5143\u7d20\u672c\u8eab\u7684\u64cd\u4f5c\uff0c\u65e0\u975e\u5c31\u662f\u6bd4\u5927\u5c0f","text":"<p>\u6240\u6709\u7684\u7b97\u6cd5\uff0c\u5185\u90e8\u6700\u7ec8\u6d89\u53ca\u5143\u7d20\u672c\u8eab\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u6bd4\u5927\u5c0f\u3002</p> <p></p> <p>\u5b57\u7b26\u4e32\u6bd4\u5927\u5c0f\uff1a</p> <ol> <li>\u6709\u4e00\u79cd\u5b57\u5178\u5f62\u5f0f\u7684\u6bd4\u5927\u5c0f\uff1a\u4ece\u7b2c\u4e00\u4f4d\u5f00\u59cb\u6bd4\uff0ca\u6700\u5c0f\uff0cz\u6700\u5927\uff0c\u65e0\u8bba\u5b57\u7b26\u4e32\u957f\u5ea6\u3002\u8fd9\u662fSTL\u4e2dString::Operator&lt;\u7684\u6240\u4f7f\u7528\u7684\u65b9\u6cd5</li> <li>\u53ef\u4ee5\u7528\u957f\u5ea6\u6765\u6bd4</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%85%B3%E9%94%AE%E5%AD%97/const/","title":"Const","text":"<p>\u7528**\u9876\u5c42**\u8868\u793a\u6307\u9488\u672c\u8eab\u662f\u4e2a\u5e38\u91cf\uff0c**\u5e95\u5c42**\u8868\u793a\u6307\u9488\u6240\u6307\u5411\u7684\u5bf9\u8c61\u662f\u4e2a\u5e38\u91cf</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%85%B3%E9%94%AE%E5%AD%97/volatile/","title":"Volatile","text":"<ol> <li>C\u8bed\u8a00\u7684volatile\u7684\u542b\u4e49\u662f\u4ec0\u4e48</li> <li>\u4f7f\u7528volatile\u4f1a\u5bf9\u7f16\u8bd1\u5668\u6709\u4ec0\u4e48\u6697\u793a</li> </ol> <p>volatile\u7684\u610f\u601d\u662f\u6613\u53d8\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6709\u4e00\u4e9b\u53d8\u91cf\u53ef\u80fd\u4f1a\u968f\u65f6\u6539\u53d8</p> <ol> <li>\u5b9e\u9645\u4e0a\uff0c\u4f18\u5316\u5668 \u4e3a\u4e86\u8282\u7ea6\u65f6\u95f4\uff0c\u6709\u65f6\u5019\u4e0d\u4f1a\u53bb\u91cd\u590d\u8bfb\u53d8\u91cf\u7684\u503c\uff0c\u800c\u662f\u53bb\u8bfb\u5728 \u5bc4\u5b58\u5668 \u91cc\u9762\u7684\u5907\u4efd\u3002\u56e0\u6b64\uff0c\u5982\u679c\u53d8\u91cf\u6539\u53d8\u4e86\uff0c\u5c31\u6709\u53ef\u80fd\u4f1a\u51fa\u9519\u3002\u6b64\u7c7b\u60c5\u51b5\uff0c\u5728\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e0a\u5e38\u89c1</li> <li>\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u88abvolatile\u4fee\u9970\uff0c\u7f16\u8bd1\u5668\u6bcf\u6b21\u90fd\u4f1a\u53bb\u8001\u8001\u5b9e\u5b9e\u8bfb\u4e00\u904d\uff0c\u800c\u4e0d\u4f1a\u7528\u5bc4\u5b58\u5668\u91cc\u7684\u5907\u4efd</li> </ol> <p>\u7531\u4e8e \u8bbf\u95ee\u5bc4\u5b58\u5668 \u7684\u901f\u5ea6\u8981\u6bd4 \u8bbf\u95eeRAM \u6765\u7684\u5feb\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u4f1a\u8fdb\u884c\u201c\u4f18\u5316\u201d\uff0c\u5373\u51cf\u5c11\u8bbf\u95eeRAM\uff0c\u800c\u662f\u8bfb\u53d6\u5bc4\u5b58\u5668\u91cc\u7684\u5907\u4efd \u4f46\u5982\u679c\u6709\u4e00\u4e9b\u53d8\u91cf\u7ecf\u5e38\u83ab\u540d\u5176\u5999\u7684\u6539\u53d8\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u8bfb\u53d6\u9519\u8bef volatile\u5373\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u65e0\u8bba\u4f55\u65f6\uff0c\u90fd\u8981\u53bb\u53d8\u91cf\u6240\u5728\u7684\u5185\u5b58\u4e2d\u8bfb\u53d6\u503c\uff0c\u800c\u4e0d\u8981\u8bfb\u53d6\u5bc4\u5b58\u5668\u91cc\u7684\u5907\u4efd</p> <p>\u4f7f\u7528volatile\u7684\u4f8b\u5b50</p> <ol> <li>\u5e76\u884c\u8bbe\u5907\u7684\u786c\u4ef6\u5bc4\u5b58\u5668\uff0c\u5982\u72b6\u6001\u5bc4\u5b58\u5668</li> <li>\u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f\u4e2d\uff0c\u4f1a\u8bbf\u95ee\u5230\u7684\u975e\u81ea\u52a8\u53d8\u91cf\uff08Non-automatic variables\uff09</li> <li>\u591a\u7ebf\u7a0b\u5e94\u7528\u4e2d\uff0c\u88ab\u51e0\u4e2a\u4efb\u52a1\u5171\u4eab\u7684\u53d8\u91cf\u3002\u4f8b\u5982\u5d4c\u5165\u5f0f\u7a0b\u5e8f\u5458\u7ecf\u5e38\u540c\u786c\u4ef6\u3001\u4e2d\u65ad\u3001RTOS\u7b49\u6253\u4ea4\u9053\uff0c\u6240\u7528\u8fd9\u4e9b\u90fd\u8981\u6c42\u4f7f\u7528volatile\u53d8\u91cf</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%85%B6%E4%BB%96/%E6%96%AD%E8%A8%80assert/","title":"C++\u65ad\u8a00assert","text":"<pre><code>#include &lt;assert.h&gt;\nvoid assert(int expression);\n//expression == 0\u65f6\uff0c\u4f1a\u5411stderr\u6253\u5370\u4e00\u6761\u9519\u8bef\u4fe1\u606f\uff0c\u800c\u540e\u8c03\u7528abort\u7ec8\u6b62\u7a0b\u5e8f\n</code></pre> <p>assert\u4e00\u822c\u7528\u4e8e\u68c0\u67e5\u8f93\u5165\u53c2\u6570\u7684\u5408\u6cd5\u6027\uff0c\u65b9\u4fbf\u7a0b\u5e8f\u5458\u8c03\u8bd5\u65f6\u5b9a\u4f4d\u4ee3\u7801 <pre><code>int fun(int size) { assert(size &gt;= 0); assert(size &lt;= 10); ... }\n</code></pre></p> <p>\u4f46\u662f\u9891\u7e41\u7684\u8c03\u7528\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u6027\u80fd\uff0c\u589e\u52a0\u989d\u5916\u7684\u5f00\u9500\u3002\u53ef\u4ee5\u5b9a\u4e49<code>NDEBUG</code>\u5b8f\u6765\u5173\u95ed<code>assert</code>\u3002 <pre><code>#define NDEBUG\n#include &lt;assert.h&gt; //assert\u51fd\u6570\u4f1a\u88ab\u53d6\u6d88\uff0c\u7a0b\u5e8f\u4e0d\u4f1a\u5d29\u6e83\n</code></pre></p> <ul> <li><code>assert</code>\u4e00\u822c\u7528\u4e8e\u7a0b\u5e8f\u5458\u8c03\u8bd5BUG\u65f6\uff0c\u5728<code>DEBUG</code>\u73af\u5883\u4e0b\u7684\u5e2e\u624b</li> <li>\u5728Release\u6a21\u5f0f\u4e0b\uff0c<code>NDEBUG</code>\u662f\u9ed8\u8ba4\u5b9a\u4e49\u7684\uff0c\u56e0\u6b64\u5728Relase\u4e0b\uff0cassert\u4e0d\u8d77\u4f5c\u7528</li> <li>\u5728RelWithDebInfo\u4e0b\u4e5f\u4f1a\u5b9a\u4e49<code>NDEBUG</code>\uff0c\u5982\u679c\u60f3\u8981\u6253\u5f00<code>assert</code>\uff0c\u53ef\u8fd9\u4e48\u505a <pre><code>#undef NDEBUG //\u53d6\u6d88\u5b9a\u4e49NDEBUG\n#include&lt;assert.h&gt; //assert\u51fd\u6570\u542f\u7528\n</code></pre></li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%85%B6%E4%BB%96/%E6%96%AD%E8%A8%80assert/#_1","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>\u5728\u4f7f\u7528<code>assert</code>\u5e94\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\u3002</p> <p>\u4e00\u3001assert\u53ea\u80fd\u5305\u542b\u53ea\u8bfb\u64cd\u4f5c\uff0c\u4e0d\u80fd\u5f71\u54cd\u4e0a\u4e0b\u6587</p> <pre><code>//\u9519\u8bef\u3002\u4f1a\u9020\u6210\uff0c\u542f\u7528assert\u3001\u672a\u542f\u7528assert\u4e0b\uff0c\u4ee3\u7801\u7684\u4e0d\u540c\nassert(i++); //\u63a8\u8350\u5199\u6cd5\nassert(i);\ni++;\n</code></pre> <p>\u4e8c\u3001\u4e00\u6b21assert\u53ea\u68c0\u9a8c\u4e00\u4e2a\u6761\u4ef6\uff0c\u4e3a\u4e86\u5728\u8c03\u8bd5\u65f6\uff0c\u4e00\u76ee\u4e86\u7136\u662f\u54ea\u4e2a\u6761\u4ef6\u4e0d\u6210\u7acb</p> <pre><code>//\u4e0d\u5efa\u8bae\nassert(nOffset&gt;=0 &amp;&amp; nOffset+nSize&lt;=m_nInfomationSize);\n//\u63a8\u8350\u5199\u6cd5\nassert(nOffset &gt;= 0); assert(nOffset+nSize &lt;= m_nInfomationSize);\n</code></pre> <p>\u4e09\u3001assert\u4e0d\u80fd\u4ee3\u66ff\u6761\u4ef6\u5224\u65ad\uff0c\u56e0\u4e3a\u5728\u67d0\u4e9b\u6761\u4ef6\u4e0b\uff0cassert\u5e76\u4e0d\u542f\u7528</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%85%B6%E4%BB%96/%E9%A2%84%E7%BC%96%E8%AF%91%E5%A4%B4%E6%96%87%E4%BB%B6%EF%BC%88Precompiled%20Headers%EF%BC%89/","title":"\u9884\u7f16\u8bd1\u5934\u6587\u4ef6\uff08Precompiled Headers\uff09","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%85%B6%E4%BB%96/%E9%A2%84%E7%BC%96%E8%AF%91%E5%A4%B4%E6%96%87%E4%BB%B6%EF%BC%88Precompiled%20Headers%EF%BC%89/#_1","title":"\u80cc\u666f","text":"<p>\u5373\u4f7f\u6ca1\u6709\u4f7f\u7528\u6a21\u677f\uff0cC++\u5934\u6587\u4ef6\u4e5f\u53ef\u4ee5\u53d8\u5927\u975e\u5e38\u5e9e\u5927\uff0c\u7136\u540e\u5bfc\u81f4\u7f16\u8bd1\u65f6\u95f4\u8fc7\u957f\u3002\u800c\u6a21\u677f\u52a0\u91cd\u4e86\u8fd9\u79cd\u95ee\u9898\uff0c\u800c\u5404\u4e2a\u7f16\u8bd1\u5668\u5382\u5546\u63d0\u4f9b\u4e86\u4e00\u79cd\u540d\u4e3a\u201c\u9884\u7f16\u8bd1\u5934\u6587\u4ef6\u201d\uff08precompiled header\uff09\u7684\u673a\u5236\uff0c\u6765\u7f13\u89e3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <ul> <li>\u201c\u9884\u7f16\u8bd1\u5934\u6587\u4ef6\u201d\u5e76\u4e0d\u662f\u6807\u51c6\u5e93\u7684\u8303\u7574\uff0c\u662f\u7f16\u8bd1\u5668\u5382\u5bb6\u63d0\u4f9b\u7684\u65b9\u6848</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%85%B6%E4%BB%96/%E9%A2%84%E7%BC%96%E8%AF%91%E5%A4%B4%E6%96%87%E4%BB%B6%EF%BC%88Precompiled%20Headers%EF%BC%89/#msvc","title":"\u793a\u4f8b\uff1aMSVC","text":"<p>\u6765\u6e90\uff1aTheCherno/Hazel: Hazel Engine (github.com)</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%85%B6%E4%BB%96/%E9%A2%84%E7%BC%96%E8%AF%91%E5%A4%B4%E6%96%87%E4%BB%B6%EF%BC%88Precompiled%20Headers%EF%BC%89/#_2","title":"\u4ee3\u7801","text":"<ol> <li> <p><code>hzpch.h</code> <pre><code>#pragma once\n#include \"Hazel/Core/PlatformDetection.h\"\n#ifdef HZ_PLATFORM_WINDOWS\n#ifndef NOMINMAX\n// See github.com/skypjack/entt/wiki/Frequently-Asked-Questions#warning-c4003-the-min-the-max-and-the-macro\n#define NOMINMAX\n#endif\n#endif\n#include &lt;iostream&gt;\n#include &lt;memory&gt;\n#include &lt;utility&gt;\n#include &lt;algorithm&gt;\n#include &lt;functional&gt;\n#include &lt;string&gt;\n#include &lt;sstream&gt;\n#include &lt;array&gt;\n#include &lt;vector&gt;\n#include &lt;unordered_map&gt;\n#include &lt;unordered_set&gt;\n#include \"Hazel/Core/Base.h\"\n#include \"Hazel/Core/Log.h\"\n#include \"Hazel/Debug/Instrumentor.h\"\n#ifdef HZ_PLATFORM_WINDOWS\n#include &lt;Windows.h&gt;\n#endif\n</code></pre></p> </li> <li> <p><code>hzpch.cpp</code> <pre><code>#include \"hzpch.h\"\n</code></pre></p> </li> <li> <p>\u4f8b\u5982\uff0c\u4f7f\u7528vector\uff0c\u65e0\u9700<code>#include&lt;vector&gt;</code>\uff0c\u76f4\u63a5<code>#include \"hzpch.h\"</code></p> </li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%85%B6%E4%BB%96/%E9%A2%84%E7%BC%96%E8%AF%91%E5%A4%B4%E6%96%87%E4%BB%B6%EF%BC%88Precompiled%20Headers%EF%BC%89/#_3","title":"\u5de5\u7a0b\u914d\u7f6e","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%85%B6%E4%BB%96/%E9%A2%84%E7%BC%96%E8%AF%91%E5%A4%B4%E6%96%87%E4%BB%B6%EF%BC%88Precompiled%20Headers%EF%BC%89/#visual-studio","title":"Visual Studio","text":"<ol> <li>\u9879\u76ee &gt; \u53f3\u952e &gt; \u914d\u7f6e &gt; \u914d\u7f6e\u5c5e\u6027 &gt; C/C++ &gt; \u9884\u7f16\u8bd1\u5934</li> <li>\u9884\u7f16\u8bd1\u5934 &gt; \u8bbe\u7f6e\u6210\u201c\u4f7f\u7528\u201d</li> <li>\u9884\u7f16\u8bd1\u5934\u6587\u4ef6 &gt; \u8f93\u5165\"hzpch.h\"</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%85%B6%E4%BB%96/%E9%A2%84%E7%BC%96%E8%AF%91%E5%A4%B4%E6%96%87%E4%BB%B6%EF%BC%88Precompiled%20Headers%EF%BC%89/#premake","title":"Premake","text":"<pre><code>project \"Hazel\"\npchheader \"hzpch.h\"\npchsource \"src/hzpch.cpp\"\n-- ...\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0/%E5%B0%86%E6%88%90%E5%91%98%E5%87%BD%E6%95%B0%E8%BD%AC%E6%88%90std%20function/","title":"C++\u5c06\u6210\u5458\u51fd\u6570\u8f6c\u6210std::function","text":"<p>\u65b9\u6cd5\u4e00\uff1a <pre><code>#define HZ_BIND_EVENT_FN(fn) [this](auto&amp;&amp;... args) -&gt; decltype(auto) { return this-&gt;fn(std::forward&lt;decltype(args)&gt;(args)...); }\n</code></pre></p> <p>\u65b9\u6cd5\u4e8c\uff1a <pre><code>#define HZ_BIND_EVENT_FN(fn) std::bind(&amp;x, this, std::placeholders::_1)\n</code></pre></p>","tags":["C++","\u6210\u5458\u51fd\u6570","std::function"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%87%BD%E6%95%B0/%E8%BF%94%E5%9B%9E%E5%80%BC%E4%BC%98%E5%8C%96/","title":"\u8fd4\u56de\u503c\u4f18\u5316","text":"<p>\u8fd4\u56de\u503c\u4f18\u5316 (Return Value Optimization, RVO)\u00a0\u662f\u7f16\u8bd1\u5668\u4e00\u79cd\u00a0\u6291\u5236\u62f7\u8d1d(Copy Elision)\u00a0\u7684\u4f18\u5316\u673a\u5236\uff0c\u907f\u514d\u4ee3\u7801\u53d1\u751f\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u3002\u7279\u522b\u5bf9\u4e8e\u8fd4\u56de\u4e00\u4e9b\u5c40\u90e8\u521b\u5efa\u7684\u5927\u5bf9\u8c61\u6765\u8bf4, \u6709\u52a9\u4e8e\u63d0\u9ad8\u6027\u80fd\u3002</p> <p>\u867d\u7136\u8fd9\u662f\u7f16\u8bd1\u5668\u7684\u884c\u4e3a, \u4f46\u662f\u5e76\u975e\u6240\u6709\u60c5\u51b5\u4e0b, \u7f16\u8bd1\u5668\u90fd\u4f1a\u5bf9\u8fd4\u56de\u503c\u8fdb\u884c\u4f18\u5316</p> <p>C++ \u8e29\u5751: \u8fd4\u56de\u503c\u4f18\u5316 - Return Value Optimization, RVO - \u6398\u91d1 (juejin.cn)</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/","title":"C++\u591a\u6001\uff08\u9759\u6001\u591a\u6001\u4e0e\u52a8\u6001\u591a\u6001\uff09","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/#_1","title":"\u591a\u6001","text":"<p>\u300c\u591a\u6001\u300d\u5373\u591a\u79cd\u5f62\u6001</p> <ul> <li>\u7a0b\u5e8f\u5458\u53ea\u9700\u8c03\u7528\u76f8\u540c\u7684\u63a5\u53e3\uff08\u201c\u540c\u540d\u63a5\u53e3\u201d\uff09\uff0c\u5374\u53ef\u4ee5\u6839\u636e\u67d0\u4e9b\u89c4\u5219\uff0c\u5206\u6d41\u5230\u4e0d\u540c\u7684\u4ee3\u7801\u5757\u4e2d\u53bb\u6267\u884c\uff08\u201c\u591a\u79cd\u72b6\u6001\u201d\uff09</li> <li>\u56e0\u6b64\uff0c\u300c\u591a\u6001\u300d\u53ef\u7b80\u5355\u6982\u62ec\u4e3a\u201c\u540c\u540d\u63a5\u53e3\uff0c\u591a\u79cd\u72b6\u6001\u201c</li> </ul> <p>C++\u7684\u591a\u6001\u6709\u4e24\u79cd\uff1a\u9759\u6001\u591a\u6001\u3001\u52a8\u6001\u591a\u6001\u3002</p> <ol> <li>\u9759\u6001\u591a\u6001\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a\u51fd\u6570\u91cd\u8f7d\u3001\u51fd\u6570\u6a21\u677f</li> <li>\u52a8\u6001\u591a\u6001\uff1a\u53ef\u57fa\u4e8e\u865a\u51fd\u6570\u6765\u5b9e\u73b0</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/#_2","title":"\u9759\u6001\u591a\u6001\uff08\u7f16\u8bd1\u671f\u591a\u6001\uff09","text":"<p>\u9759\u6001\u591a\u6001\uff0c\u662f\u5728\u7f16\u8bd1\u671f\u5b8c\u6210\u7684\u3002\u7f16\u8bd1\u5668\u4f1a\u6839\u636e \u51fd\u6570\u5b9e\u53c2\u7684\u4e2a\u6570\u4e0e\u7c7b\u578b \u63a8\u65ad\u51fa\uff08\u5b58\u5728\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff09\uff0c\u6240\u8981\u8c03\u7528\u7684\u51fd\u6570\u7b7e\u540d\u3002\u82e5\u6b64\u51fd\u6570\u5b58\u5728\uff0c\u7f16\u8bd1\u901a\u8fc7\uff0c\u5e76\u8c03\u7528\u6b64\u51fd\u6570\uff1b\u82e5\u51fd\u6570\u4e0d\u5b58\u5728\uff0c\u5219\u7f16\u8bd1\u62a5\u9519\u3002</p> <p>\u9759\u6001\u7f16\u8bd1\u5305\u62ec\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5</p> <ul> <li>\u51fd\u6570\u91cd\u8f7d\uff1a\u5305\u62ec\u666e\u901a\u51fd\u6570\u7684\u91cd\u8f7d\u3001\u6210\u5458\u51fd\u6570\u7684\u91cd\u8f7d</li> <li>\u6a21\u677f\u6280\u672f\uff1a\u5305\u62ec\u51fd\u6570\u6a21\u677f\u3001\u7c7b\u6a21\u677f</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/#_3","title":"\u51fd\u6570\u91cd\u8f7d","text":"<pre><code>// \u51fd\u6570\u540d\u76f8\u540c\uff08\u540c\u540d\u63a5\u53e3\uff09\uff1b\u53c2\u6570\u4e0d\u540c\uff08\u591a\u79cd\u72b6\u6001\uff09\nvoid print(const char* str,int width);\nvoid print(double i ,int width);\nvoid print(const char* str);\n// \u7f16\u8bd1\u5668\u6839\u636e\u51fd\u6570\u5b9e\u53c2\u7684\u4e2a\u6570\u548c\u7c7b\u578b\uff0c\u63a8\u65ad\u51fa\u8981\u8c03\u7528\u54ea\u4e00\u4e2a\nprint(\"abc\", 12);\nprint(2.2, 55);\nprint(\"abc\");\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/#_4","title":"\u6a21\u677f\u6280\u672f","text":"<p>\u57fa\u4e8e\u51fd\u6570\u6a21\u677f\u6765\u5b9e\u73b0 <pre><code>template &lt;typename T, typename U&gt;     //T\u3001U\u6839\u636e\u4f7f\u7528\u65f6\u5177\u4f53\u751f\u6210\uff08\u7f16\u8bd1\u671f\u671f\u95f4\uff09\nauto add(T t, U u) -&gt; decltype(t + u) //\u8fd4\u56de\u503c\u7c7b\u578b\u4e8b\u5148\u4e0d\u77e5\u9053\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd4\u56de\u503c\u540e\u7f6e\uff0c\u5e76\u52a0\u4e0adecltype\u63a8\u65ad\u5b83\u7684\u7c7b\u578b\n{\nreturn t + u;\n}\n// \u4f7f\u7528\u65f6\uff0c\u7f16\u8bd1\u5668\u518d\u6839\u636e\u53c2\u6570\u7c7b\u578b\u751f\u6210\u5177\u4f53\u7684\u51fd\u6570\nauto a = add(1.5, 2);\nauto b = add(1, 2);\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/#_5","title":"\u52a8\u6001\u591a\u6001\uff08\u8fd0\u884c\u65f6\u591a\u6001\uff09","text":"<p>\u52a8\u6001\u591a\u6001\uff08\u6216\u79f0\u52a8\u6001\u7ed1\u5b9a\u3001\u8fd0\u884c\u65f6\u591a\u6001\uff09\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u6839\u636e\u5176\u5b9e\u9645\u7684\u7c7b\u578b\u63a8\u65ad\u51fa\u8981\u8c03\u7528\u7684\u65b9\u6cd5\u3002\u4e00\u822c\u4f7f\u7528\u865a\u51fd\u6570\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/#_6","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u9759\u6001\u591a\u6001\u4e0e\u52a8\u6001\u591a\u6001</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/%E5%9F%BA%E4%BA%8E%E2%80%9C%E6%A8%A1%E6%9D%BF%E6%8A%80%E6%9C%AF%E7%9A%84%E9%9D%99%E6%80%81%E5%A4%9A%E6%80%81%E2%80%9D%E5%AE%9E%E7%8E%B0%E6%89%A9%E5%B1%95%E7%8E%B0%E6%9C%89%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E4%B8%8E%E4%B8%AA%E6%95%B0/","title":"\u57fa\u4e8e\u201c\u6a21\u677f\u6280\u672f\u7684\u9759\u6001\u591a\u6001\u201d\u5b9e\u73b0\u6269\u5c55\u73b0\u6709\u63a5\u53e3\u7684\u53c2\u6570\u7c7b\u578b\u4e0e\u4e2a\u6570","text":"<p>\u539f\u6587\u94fe\u63a5\uff1a\u57fa\u4e8e\u53ef\u53d8\u6a21\u677f\u53c2\u6570\u7684\u9759\u6001\u591a\u6001 \u672c\u6587\u662f\u5bf9\u539f\u6587\u7684\u5b66\u4e60\u7b14\u8bb0</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/%E5%9F%BA%E4%BA%8E%E2%80%9C%E6%A8%A1%E6%9D%BF%E6%8A%80%E6%9C%AF%E7%9A%84%E9%9D%99%E6%80%81%E5%A4%9A%E6%80%81%E2%80%9D%E5%AE%9E%E7%8E%B0%E6%89%A9%E5%B1%95%E7%8E%B0%E6%9C%89%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E4%B8%8E%E4%B8%AA%E6%95%B0/#_1","title":"\u5f15\u8a00\uff1a\u52a8\u6001\u591a\u6001\u7684\u95ee\u9898","text":"<p>C++\u57fa\u4e8e\u865a\u51fd\u6570\u5f88\u5bb9\u6613\u5b9e\u73b0\u52a8\u6001\u591a\u6001\uff0c\u53ea\u9700\u91cd\u5199\u57fa\u7c7b\u65b9\u6cd5\u5373\u53ef\uff1a <pre><code>struct Base {\nvirtual void read(const std::vector&lt;char&gt;&amp; buf) {}\n};\nstruct Derived : public Base {\nvoid read(const std::vector&lt;char&gt;&amp; buf) override {}\n};\n</code></pre></p> <p>\u4f46\u52a8\u6001\u591a\u6001\u4f1a\u9047\u5230\u4e00\u4e9b\u95ee\u9898</p> <ol> <li>\u82e5\u5c06\u6765\u8981\u5728 \u73b0\u6709\u63a5\u53e3\u4e0a\uff0c\u6269\u5c55\u53c2\u6570\u7c7b\u578b \uff0c\u53ea\u80fd\u5728<code>Base</code>\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u63a5\u53e3\uff0c\u4ece\u800c\u8fdd\u80cc\u5f00\u95ed\u539f\u5219\u3002\u540c\u6837\uff0c \u6269\u5c55\u53c2\u6570\u4e2a\u6570 \u4e5f\u662f\u5982\u6b64\uff0c\u4e5f\u4f1a\u8fdd\u80cc\u5f00\u95ed\u539f\u5219</li> <li>\u6a21\u677f\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/%E5%9F%BA%E4%BA%8E%E2%80%9C%E6%A8%A1%E6%9D%BF%E6%8A%80%E6%9C%AF%E7%9A%84%E9%9D%99%E6%80%81%E5%A4%9A%E6%80%81%E2%80%9D%E5%AE%9E%E7%8E%B0%E6%89%A9%E5%B1%95%E7%8E%B0%E6%9C%89%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E4%B8%8E%E4%B8%AA%E6%95%B0/#_2","title":"\u5728\u73b0\u6709\u63a5\u53e3\u4e0a\uff0c\u6269\u5c55\u53c2\u6570\u7c7b\u578b","text":"<p>\u5728\u73b0\u6709\u63a5\u53e3\u4e0a\uff0c\u6269\u5c55\u53c2\u6570\u7c7b\u578b\u65f6\uff0c\u53ea\u80fd\u4e3a<code>Base</code>\u6dfb\u52a0\u65b0\u7684\u63a5\u53e3\u3002\u5982\u6b64\uff0c<code>Base</code>\u6bcf\u6b21\u90fd\u4f1a\u88ab\u4fee\u6539\uff0c\u8fd9\u4e0d\u7b26\u5408\u5f00\u95ed\u539f\u5219\uff08\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed\uff09\u3002</p> <pre><code>struct Base {\n//\u539f\u5148\u63a5\u53e3\nvirtual void read(const std::vector&lt;char&gt;&amp; buf) {}\n//\u5728read\u63a5\u53e3\u4e0a\uff0c\u65b0\u589e\u53c2\u6570\u7c7b\u578b\uff0c\u5c31\u8981\u65b0\u589e\u63a5\u53e3\nvirtual void read(const std::string&amp; buf) {}\nvirtual void read(const std::array&lt;char, 20&gt;&amp; buf) {}\n}\nstruct Derived : public Base {\nvoid read(const std::vector&lt;char&gt;&amp; buf) {}\nvoid read(const std::string&amp; buf) {}\nvoid read(const std::array&lt;char, 20&gt;&amp; buf) {}\n}\n</code></pre> <p>\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5b9e\u9645\u4e0a\u662f\uff0c\u5728\u300c\u52a8\u6001\u591a\u6001\u300d\u7684\u57fa\u7840\u4e0a\uff0c\u53ea\u80fd\u901a\u8fc7\u300c\u57fa\u4e8e\u51fd\u6570\u5b9e\u73b0\u7684\u9759\u6001\u591a\u6001\u300d\u65b9\u6cd5\uff0c\u5b9e\u73b0\u5728 \u73b0\u6709\u63a5\u53e3 \u4e0a \u6269\u5c55\u51fd\u6570\u7684\u53c2\u6570\u7c7b\u578b \u3002\u8fd9\u6837\u4f1a\u5f71\u54cd\u57fa\u7c7b\u63a5\u53e3\u7684\u7a33\u5b9a\u6027\uff0c\u56e0\u800c\u8fdd\u80cc\u4e86\u201c\u5f00\u95ed\u539f\u5219\u201d\uff0c\u4e0d\u662f\u826f\u597d\u7684\u63a5\u53e3\u8bbe\u8ba1\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/%E5%9F%BA%E4%BA%8E%E2%80%9C%E6%A8%A1%E6%9D%BF%E6%8A%80%E6%9C%AF%E7%9A%84%E9%9D%99%E6%80%81%E5%A4%9A%E6%80%81%E2%80%9D%E5%AE%9E%E7%8E%B0%E6%89%A9%E5%B1%95%E7%8E%B0%E6%9C%89%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E4%B8%8E%E4%B8%AA%E6%95%B0/#_3","title":"\u6a21\u677f\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570","text":"<p>\u80fd\u5426\u501f\u52a9 \u6a21\u677f\u51fd\u6570 \u6765\u5b9e\u73b0 \u6269\u5c55\u53c2\u6570\u7c7b\u578b \u5462\uff1f</p> <ul> <li>\u7f16\u8bd1\u62a5\u9519\uff1a<code>error: templates may not be 'virtual'</code></li> </ul> <pre><code>struct Base{\ntemplate&lt;typename Buffer&gt;\nvirtual void read(const Buffer&amp; buffer) {}\n}\nstruct Derived : public Base {\nvoid read(const std::vector&lt;char&gt;&amp; buf) {}\nvoid read(const std::string&amp; buf) {}\nvoid read(const std::array&lt;char, 20&gt;&amp; buf) {}\n};\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/%E5%9F%BA%E4%BA%8E%E2%80%9C%E6%A8%A1%E6%9D%BF%E6%8A%80%E6%9C%AF%E7%9A%84%E9%9D%99%E6%80%81%E5%A4%9A%E6%80%81%E2%80%9D%E5%AE%9E%E7%8E%B0%E6%89%A9%E5%B1%95%E7%8E%B0%E6%9C%89%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E4%B8%8E%E4%B8%AA%E6%95%B0/#_4","title":"\u57fa\u4e8e\u6a21\u677f\u6280\u672f\u7684\u9759\u6001\u591a\u6001","text":"<p>\u4ee5\u4e0a\u6240\u63d0\u95ee\u9898\uff0c\u672c\u8d28\u4e0a\u662f\u7531\u201c\u52a8\u6001\u591a\u6001\u201d+\u201c\u51fd\u6570\u9759\u6001\u591a\u6001\u201d\u6240\u5f15\u8d77\u7684\uff0c\u5b83\u4eec\u4f1a\u8fdd\u80cc\u201c\u5f00\u95ed\u539f\u5219\u201d\u3002\u800c\uff0c\u4f7f\u7528\u57fa\u4e8e\u6a21\u677f\u6280\u672f\u7684\u9759\u6001\u591a\u6001\uff0c\u5373\u53ef\u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/%E5%9F%BA%E4%BA%8E%E2%80%9C%E6%A8%A1%E6%9D%BF%E6%8A%80%E6%9C%AF%E7%9A%84%E9%9D%99%E6%80%81%E5%A4%9A%E6%80%81%E2%80%9D%E5%AE%9E%E7%8E%B0%E6%89%A9%E5%B1%95%E7%8E%B0%E6%9C%89%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E4%B8%8E%E4%B8%AA%E6%95%B0/#_5","title":"\u53c2\u6570\u7c7b\u578b\u7684\u53ef\u6269\u5c55\uff08\u6a21\u677f\u9759\u6001\u591a\u6001\uff09","text":"<p>\u4f7f\u7528\u300c\u6a21\u677f\u6280\u672f\u7684\u9759\u6001\u591a\u6001\u300d\uff0c\u53ef\u4ee5\u5b9e\u73b0\uff0c\u5728\u4e0d\u4fee\u6539\u57fa\u7c7b\u63a5\u53e3\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u73b0\u6709\u63a5\u53e3\u81ea\u7531\u6269\u5c55<code>read</code>\u7684\u53c2\u6570\u7c7b\u578b\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;array&gt;\n//\u57fa\u7840\u63a5\u53e3\ntemplate&lt;typename Impl&gt;\nstruct Base{\n//\u62bd\u8c61\u63a5\u53e3\uff0c\u6ca1\u6709\u89c4\u5b9aBuffer\u7684\u5177\u4f53\u7c7b\u578b\ntemplate&lt;typename Buffer&gt;\nvoid read(const Buffer&amp; buf) {\nimpl_.read(buf);\n}\nImpl impl_;\n};\n//\u5177\u4f53\u5b9e\u73b0\nstruct DerivedImpl {\nvoid read(const std::string&amp; buf) {\nstd::cout &lt;&lt; \"read string\\n\";\n}\nvoid read(const std::array&lt;char, 20&gt;&amp; buf) {\nstd::cout &lt;&lt; \"read array\\n\";\n}\n};\nusing Derived = Base&lt;DerivedImpl&gt;;\nint main() {\nDerived d1{};\nd1.read(\"hello\");\nstd::array&lt;char, 20&gt; arr{\"test\"};\nd1.read(arr);\nreturn 0;\n}\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/%E5%9F%BA%E4%BA%8E%E2%80%9C%E6%A8%A1%E6%9D%BF%E6%8A%80%E6%9C%AF%E7%9A%84%E9%9D%99%E6%80%81%E5%A4%9A%E6%80%81%E2%80%9D%E5%AE%9E%E7%8E%B0%E6%89%A9%E5%B1%95%E7%8E%B0%E6%9C%89%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E4%B8%8E%E4%B8%AA%E6%95%B0/#_6","title":"\u53c2\u6570\u4e2a\u6570\u7684\u53ef\u6269\u5c55\uff08\u53ef\u53d8\u53c2\u6570\u6a21\u677f\uff09","text":"<p>\u4f7f\u7528\u300c\u53ef\u53d8\u53c2\u6570\u6a21\u677f\u300d\uff0c\u53ef\u4ee5\u5b9e\u73b0\uff0c\u5728\u4e0d\u4fee\u6539\u57fa\u7c7b\u63a5\u53e3\u7684\u60c5\u51b5\u4e0b\uff0c\u81ea\u7531\u6269\u5c55<code>read</code>\u7684\u51fd\u6570\u53c2\u6570\u4e2a\u6570\u3002</p> <pre><code>#include&lt;iostream&gt;\n//\u57fa\u7840\u63a5\u53e3\ntemplate&lt;typename Impl&gt;\nstruct Base{\n//\u62bd\u8c61\u63a5\u53e3\uff0c\u6ca1\u6709\u89c4\u5b9aBuffer\u7684\u5177\u4f53\u7c7b\u578b\ntemplate&lt;typename Buffer,typename... Args&gt; //\u53ef\u53d8\u53c2\u6570\u6a21\u677f\nvoid read(const Buffer&amp; buf, Args... args) {\nimpl_.read(buf, args...); //\u5c06\u53ef\u53d8\u53c2\u6570\u5c55\u5f00\u7ee7\u7eed\u4f20\u5165read\u4e2d\uff0c\u505a\u4e00\u4e2a\u8f6c\u53d1\n}\nImpl impl_;\n};\n//\u5177\u4f53\u5b9e\u73b0\nstruct DerivedImpl {\nvoid read(const std::string&amp; buf) {\nstd::cout &lt;&lt; \"read string\\n\";\n}\nvoid read(const std::string&amp; buf, int size) {\nstd::cout &lt;&lt; \"read string, size \"&lt;&lt; size &lt;&lt; \" \" &lt;&lt; buf &lt;&lt;\"\\n\";\n}\n};\nusing Derived = Base&lt;DerivedImpl&gt;;\nint main() {\nDerived d1{};\nd1.read(\"hello\");\nd1.read(\"hello\", 42);\nreturn 0;\n}\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/%E5%9F%BA%E4%BA%8E%E2%80%9C%E6%A8%A1%E6%9D%BF%E6%8A%80%E6%9C%AF%E7%9A%84%E9%9D%99%E6%80%81%E5%A4%9A%E6%80%81%E2%80%9D%E5%AE%9E%E7%8E%B0%E6%89%A9%E5%B1%95%E7%8E%B0%E6%9C%89%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E4%B8%8E%E4%B8%AA%E6%95%B0/#_7","title":"\u51fd\u6570\u540d\u4ea6\u53ef\u6269\u5c55\uff08\u4eff\u51fd\u6570\uff09","text":"<p>\u662f\u5426\u6709\u4e00\u79cd\u529e\u6cd5\uff0c\u4f7f\u5f97\u8fde\u51fd\u6570\u540d\u79f0\u4e5f\u53ef\u4ee5\u6269\u5c55\u3002\u5982\u6b64</p> <ul> <li>\u57fa\u7c7b\u7684\u7a33\u5b9a\u6027\u5927\u5927\u589e\u52a0\uff0c\u5f88\u53ef\u80fd\u6c38\u8fdc\u90fd\u65e0\u9700\u6539\u53d8</li> <li>\u7528\u6237\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u968f\u610f\u5bf9\u6269\u5c55\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u7f16\u8bd1\u57fa\u7c7b\u6240\u5728\u7684\u5e93</li> </ul> <p>\u57fa\u4e8e\u300c\u4eff\u51fd\u6570\u300d\uff0c\u53ef\u4ee5\u5b9e\u73b0\uff0c\u5728\u4e0d\u4fee\u6539\u57fa\u7c7b\u63a5\u53e3\u7684\u60c5\u51b5\u4e0b\uff0c\u81ea\u7531\u6269\u5c55\u57fa\u7c7b\u7684\u51fd\u6570\u540d\u79f0\u3002</p> <ul> <li>\u539f\u6587\u4f5c\u8005\u5c06\u6b64\u201c\u57fa\u7c7b\u63a5\u53e3\u201d\u5176\u79f0\u4e3a\u201c\u4e0a\u5e1d\u63a5\u53e3\u201d</li> </ul> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n#include &lt;array&gt;\n//\u62bd\u8c61\u63a5\u53e3\uff0c\u4e3a\u5ba2\u6237\u7aef\u63d0\u4f9b\u4e00\u4e2a\u7a33\u5b9a\u7684\u63a5\u53e3\ntemplate&lt;typename Op, typename Buffer, typename... Args&gt;\nvoid god_operator_interface(Op op, Buffer buf, Args... args) {\nop(buf, args...);\n}\nstruct Derived{\nstruct read_impl {\nvoid operator()(const std::string&amp; buf) {\nstd::cout &lt;&lt; \"[read string] \" &lt;&lt; buf &lt;&lt; std::endl;\n}\n//\u51fd\u6570\u7c7b\u578b\u53ef\u6269\u5c55\nvoid operator()(const std::array&lt;char, 20&gt;&amp; buf) {\nstd::cout &lt;&lt; \"[read array] \" &lt;&lt; buf.data() &lt;&lt; std::endl;\n}\n//\u51fd\u6570\u53c2\u6570\u53ef\u6269\u5c55\nvoid operator()(const std::string&amp; buf, int size) {\nstd::cout &lt;&lt; \"[read string, size] \" &lt;&lt; buf &lt;&lt; \" \" &lt;&lt; size &lt;&lt; std::endl;\n}\n};\nvoid read(const std::string&amp; buf) {\ngod_operator_interface(read_impl{}, buf);\n}\nvoid read(const std::array&lt;char, 20&gt;&amp; buf) {\ngod_operator_interface(read_impl{}, buf);\n}\nvoid read(const std::string&amp; buf, int size) {\ngod_operator_interface(read_impl{}, buf, size);\n}\n//\u51fd\u6570\u540d\u53ef\u6269\u5c55\nstruct read2_impl {\nvoid operator()(const std::string&amp; buf) {\nstd::cout &lt;&lt; \"[read2 string] \" &lt;&lt; buf &lt;&lt; std::endl;\n}\n};\nvoid read2(const std::string&amp; buf) {\ngod_operator_interface(read2_impl{}, buf);\n}\n};\nint main()\n{\nDerived d1;\nd1.read(\"old interface\");\nstd::array&lt;char, 20&gt; arr{\"Function type\"};\nd1.read(arr);\nd1.read(\"Function parameter\", 2);\nd1.read2(\"Function name\");\nreturn 0;\n}\n</code></pre> <p>\u5982\u6b64\uff0c\u5373\u53ef\u4fdd\u6301<code>god_operation_interface</code>\u63a5\u53e3\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u7a0b\u5e8f\u53ef\u6269\u5c55\u5176\u51fd\u6570\u540d\u3001\u53c2\u6570\u7c7b\u578b\u3001\u53c2\u6570\u4e2a\u6570\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E5%A4%9A%E6%80%81/%E5%9F%BA%E4%BA%8E%E2%80%9C%E6%A8%A1%E6%9D%BF%E6%8A%80%E6%9C%AF%E7%9A%84%E9%9D%99%E6%80%81%E5%A4%9A%E6%80%81%E2%80%9D%E5%AE%9E%E7%8E%B0%E6%89%A9%E5%B1%95%E7%8E%B0%E6%9C%89%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E4%B8%8E%E4%B8%AA%E6%95%B0/#_8","title":"\u9879\u76ee\u5b9e\u4f8b","text":"<ol> <li>\u5728\u96c5\u5170\u4ead\u5e93coro_rpc\u4e2d\u5c31\u5927\u91cf\u4f7f\u7528\u4e86\uff0c\u901a\u8fc7\u5b83coro_rpc\u63d0\u4f9b\u4e86\u5f88\u591a\u6269\u5c55\u70b9\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u7684\u6269\u5c55\u652f\u6301\u5176\u5b83rpc\u548c\u5e8f\u5217\u5316\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u770b\u770b\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u6269\u5c55coro_rpc\u8ba9\u5b83\u652f\u6301rest_rpc\u534f\u8bae</li> <li>\u5173\u4e8e\u66f4\u590d\u6742\u7684god\u63a5\u53e3\u5219\u5728asio\u4e2d\u5927\u91cf\u7684\u5e94\u7528\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u770b\u770basio\u7684god\u63a5\u53e3async_initiate\u7684\u5b9e\u73b0</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/","title":"\u7c7b\u578b\u63a8\u5bfc","text":"<p>\u8bda\u5982C#\u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7var\u5173\u952e\u5b57\u6765\u5b9e\u73b0\u7c7b\u578b\u7684\u63a8\u5bfc\uff0c\u4ee5\u6b64\u7b80\u5316\u4e00\u4e9b\u4e0d\u9700\u8981\u5173\u6ce8\u53d8\u91cf\u7c7b\u578b\u7684\u573a\u666f\u3002\u800cC++11\u4e5f\u5f15\u5165\u4e86\u7c7b\u578b\u63a8\u5bfc\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#autoc11","title":"auto(C++11)","text":"<p>\u9274\u4e8e<code>auto</code>\u5173\u952e\u5b57\u5728C++98/03\u4e2d\u6781\u5c11\u7528\u5230\uff08\u56e0\u4e3a\u975e<code>static</code>\u5373<code>auto</code>\uff09\uff0c\u6545C++11\u4e5f\u4e3a<code>auto</code>\u8d4b\u4e88\u4e86\u65b0\u7684\u542b\u4e49\uff0c\u5373\u7c7b\u578b\u63a8\u5bfc\u3002</p> <p>auto\u5b9a\u4e49\u7684\u53d8\u91cf\u5fc5\u987b\u8981\u6709\u521d\u59cb\u503c\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u901a\u8fc7\u521d\u59cb\u503c\u6765\u8fdb\u884c\u7c7b\u578b\u7684\u63a8\u5bfc\uff0c\u4ece\u800c\u83b7\u5f97\u53d8\u91cf\u7684\u7c7b\u578b\u3002</p> <pre><code>//\u666e\u901a\u7c7b\u578b\nint a=1, b=3;\nauto c = a+b; //c\u4e3aint\n//const\u7c7b\u578b\nconst int i = 5;\nauto j = i;  //\u53d8\u91cfi\u662f\u9876\u5c42const\uff0c\u4f1a\u88ab\u5ffd\u7565\uff0c\u56e0\u6b64j\u7c7b\u578b\u662fint\nauto k = &amp;i; //\u53d8\u91cfi\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u5bf9\u5e38\u91cf\u53d6\u5730\u5740\u662f\u4e00\u79cd\u5e95\u5c42const\uff0c\u6240\u4ee5k\u662fconst int*\nconst auto l = i;  //\u5982\u679c\u5e0c\u671b\u63a8\u65ad\u51fa\u9876\u5c42const\uff0c\u5219\u9700\u8981\u5728auto\u524d\u52a0\u4e0aconst\n//\u5f15\u7528\u548c\u6307\u9488\u7c7b\u578b\nint x = 2;\nint&amp; y = x;\nauto z = y;   //z\u662fint\u578b\uff0c\u4e0d\u662fint&amp;\nauto&amp; p1 = y; //p1\u662fint&amp;\u578b\nauto p2 = &amp;x; //p2\u662f\u6307\u9488\u7c7b\u578bint* \n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#decltypec11","title":"decltype(C++11)","text":"<p><code>auto</code>\u53ea\u80fd\u901a\u8fc7\u521d\u59cb\u503c\u6765\u8fdb\u884c\u7c7b\u578b\u63a8\u65ad\uff0c\u8fd9\u5f88\u4e0d\u591f\u7528\u3002  \u5982\u679c\u6211\u4eec\u5e0c\u671b\uff0c\u901a\u8fc7\u8868\u8fbe\u5f0f\u6765\u63a8\u65ad\u51fa\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528<code>decltype</code>\u3002</p> <p><code>decltype</code>\u4f1a\u8ba9\u7f16\u8bd1\u5668\u5206\u6790\u8868\u8fbe\u5f0f\uff0c\u5e76\u83b7\u5f97\u5b83\u7684\u7c7b\u578b\uff0c\u5374\u4e0d\u8ba1\u7b97\u8868\u8fbe\u5f0f\u7684\u503c\u3002</p> <pre><code>// \u51fd\u6570\u8fd4\u56de\u503c\nint func() {return 0;}\ndecltype(func()) sum = 5; // sum\u7684\u7c7b\u578b\u662f\u51fd\u6570func()\u7684\u8fd4\u56de\u503c\u7684\u7c7b\u578bint, \u4f46\u662f\u8fd9\u65f6\u4e0d\u4f1a\u5b9e\u9645\u8c03\u7528\u51fd\u6570func()\n//\u666e\u901a\u7c7b\u578b\nint a = 0;\ndecltype(a) b =4; // a\u7684\u7c7b\u578b\u662fint, \u6240\u4ee5b\u7684\u7c7b\u578b\u4e5f\u662fint\n//\u4e0d\u8bba\u662f\u9876\u5c42const\u8fd8\u662f\u5e95\u5c42const, decltype\u90fd\u4f1a\u4fdd\u7559   \nconst int c = 3;\ndecltype(c) d = c; // d\u7684\u7c7b\u578b\u548cc\u662f\u4e00\u6837\u7684, \u90fd\u662f\u9876\u5c42const\nint e = 4;\nconst int* f = &amp;e; // f\u662f\u5e95\u5c42const\ndecltype(f) g = f; // g\u4e5f\u662f\u5e95\u5c42const\n//\u4e0d\u8bba\u662f\u9876\u5c42const\u8fd8\u662f\u5e95\u5c42const, decltype\u90fd\u4f1a\u4fdd\u7559   \nconst int c = 3;\ndecltype(c) d = c; // d\u7684\u7c7b\u578b\u548cc\u662f\u4e00\u6837\u7684, \u90fd\u662f\u9876\u5c42const\nint e = 4;\nconst int* f = &amp;e; // f\u662f\u5e95\u5c42const\ndecltype(f) g = f; // g\u4e5f\u662f\u5e95\u5c42const\n//\u5728\u6240\u6709\u7f16\u8bd1\u5668\u4e2d\u90fd\u9002\u7528\ntypedef decltype(nullptr) nullptr_t;    //\u901a\u8fc7\u7f16\u8bd1\u5668\u5173\u952e\u5b57nullptr\u5b9a\u4e49\u7c7b\u578bnullptr_t\ntypedef decltype(sizeof(0)) size_t;\n//\u62bd\u53d6\u53d8\u91cf\u7c7b\u578b\nvector&lt;int&gt; v;\ndecltype(v)::value_type i = 0;\n//\u6a21\u677f\u4e2d\u7684\u5999\u7528\ntemplate&lt;class ContainerT&gt;\nclass Foo{\ndecltype(ContainerT().begin()) it_;\npublic:\nvoid func(ContainerT&amp; container) {\nit_ = container.begin();\n}\n//...\n};\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#c11","title":"\u8fd4\u56de\u503c\u540e\u7f6e(C++11)","text":"<p>\u5728\u5199\u6a21\u677f\u65f6\uff0c\u53ef\u80fd\u4f1a\u9047\u5230\u4ee5\u4e0b\u60c5\u51b5\u3002\u5728coding\u9636\u6bb5\uff0c\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u8fd4\u56de\u503c\u7684\u7c7b\u578b\uff0c\u53ea\u6709\u5728\u4f7f\u7528\u6a21\u677f\u65f6\uff0c\u624d\u80fd\u786e\u5b9a\u8fd4\u56de\u503c\u5177\u4f53\u7684\u7c7b\u578b\u3002</p> <p>\u6b64\u65f6\u5c31\u53ef\u4ee5\u7528C++11\u4e2d\u7684 \u201c\u8fd4\u56de\u503c\u540e\u7f6e\u201d \u8bed\u6cd5\u3002</p> <ol> <li>\u7528<code>auto</code>\u4ee3\u66ff\u8fd4\u56de\u503c</li> <li>\u5728\u51fd\u6570\u62ec\u53f7\u540e\uff0c\u4f7f\u7528<code>decltype</code>\u81ea\u52a8\u63a8\u65ad\u51fa\u8fd4\u56de\u503c\u7c7b\u578b</li> </ol> <pre><code>template&lt;typename T, typename U&gt;\nauto add(T t, U u) -&gt; decltype(t + u) {\nreturn t + u;\n}\n</code></pre> <p>\u66f4\u590d\u6742\u7684\u4f8b\u5b50 <pre><code>int&amp; foo(int&amp; i);\nfloat foo(float&amp; f);\ntemplate&lt;typename T&gt;\nauto func(T&amp; val) -&gt; decltype(foo(val)) {\nreturn foo(val);\n}\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#decltypeauto-c14","title":"decltype(auto) (C++14)","text":"<p>\u5728C++14\u4e2d\uff0c\u65b0\u589e\u4e86<code>decltype(auto)</code>\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u58f0\u660e\u53d8\u91cf\u3002  </p> <ol> <li>\u7f16\u8bd1\u5668\u4f1a\u5c06\u201c<code>=</code>\u201c\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u7c7b\u578b\uff0c\u66ff\u6362\u6389<code>auto</code></li> <li>\u518d\u6839\u636e<code>decltype</code>\u7684\u8bed\u6cd5\u89c4\u5219\u6765\u786e\u5b9a\u7c7b\u578b</li> </ol> <pre><code>int e = 4;\nconst int* f = &amp;e;    //f\u662f\u5e95\u5c42const\ndecltype(auto) j = f; //j\u7684\u7c7b\u578b\u662fconst int* \u5e76\u4e14\u6307\u5411\u7684\u662fe\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>C++11\u65b0\u6807\u51c6-01-20 | \u963f\u79c0\u7684\u5b66\u4e60\u7b14\u8bb0</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/auto%E5%88%9D%E5%A7%8B%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/","title":"Auto\u521d\u59cb\u503c\u7c7b\u578b\u63a8\u5bfc","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/auto%E5%88%9D%E5%A7%8B%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#auto","title":"\u80cc\u666f\uff1a\u65e7\u6807\u51c6\u7684auto","text":"<p>\u5728\u65e7\u6807\u51c6\u4e2d\uff0cauto**\u4ee3\u8868\u201c\u5177\u6709\u81ea\u52a8\u5b58\u50a8\u671f\u7684 **\u5c40\u90e8\u53d8\u91cf\u201d <pre><code>auto int i = 0;     //\u5177\u6709\u81ea\u52a8\u5b58\u50a8\u671f\u7684\u5c40\u90e8\u53d8\u91cf\n//C++98/03\uff0c\u53ef\u4ee5\u9ed8\u8ba4\u5199\u6210int i=0;\nstatic int j = 0;   //\u9759\u6001\u7c7b\u578b\u7684\u5b9a\u4e49\u65b9\u6cd5\n</code></pre></p> <ul> <li>\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5f88\u5c11\u4f7f\u7528<code>auto</code>\uff0c\u56e0\u4e3a\u975estatic\u5373\u201c\u5177\u6709\u81ea\u52a8\u5b58\u50a8\u671f\u7684\u201d\uff0c\u6240\u4ee5\u4e0d\u7528\u4eba\u4e3a\u53bb\u5199<code>auto</code></li> </ul> <p>\u56e0\u6b64\uff0c\u5728C++11\u4e2d\uff0cauto\u5173\u952e\u5b57\u4e0d\u518d\u8868\u793a\u5b58\u50a8\u7c7b\u578b\u6307\u793a\u7b26\uff08\u5982static\u3001register\u3001mutable\u7b49\u90fd\u5c5e\u4e8estorage-class-specifiers\uff09\uff0c\u800c\u662f\u6539\u6210\u4e86\u4e00\u4e2a\u7c7b\u578b\u6307\u793a\u7b26\uff08type-specifier\uff09\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/auto%E5%88%9D%E5%A7%8B%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#auto_1","title":"auto\u521d\u63a2","text":"<p>\u4e0d\u540c\u4e8ePython\u7b49\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u7684\u8fd0\u884c\u65f6\u53d8\u91cf\u7c7b\u578b\u63a8\u5bfc\uff0c\u9690\u5f0f\u7c7b\u578b\u5b9a\u4e49\uff08\u5982<code>auto x = 5;</code>\uff09\u7684\u7c7b\u578b\u63a8\u5bfc \u53d1\u751f\u5728\u7f16\u8bd1\u671f\u3002\u5b83\u7684\u4f5c\u7528\u662f\u8ba9\u7f16\u8bd1\u5668\u81ea\u52a8 \u63a8\u65ad\u51fa\u8fd9\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u800c\u4e0d\u9700\u8981\u663e\u5f0f\u6307\u5b9a\u7c7b\u578b <pre><code>auto x = 5;                 //OK: x\u662fint\u7c7b\u578b\n//\u5b57\u9762\u91cf5\u662fconst int\u7c7b\u578b\uff0c\u53d8\u91cfx\u5c06\u88ab\u63a8\u5bfc\u4e3aint\u7c7b\u578b\uff08const\u88ab\u4e22\u5f03\uff09\nauto pi = new auto(1);      //OK: pi\u88ab\u63a8\u5bfc\u4e3aint*\nconst auto *v = &amp;x, u=6;    //OK: v\u662fconst int*\u7c7b\u578b\uff0cu\u662fconst int\u7c7b\u578b\n//\u56e0\u4e3av\uff0cu\u5df2\u7ecf\u88ab\u63a8\u5bfc\u4e3aconst int\u7c7b\u578b\n//1. u\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u4e0d\u7136\u7f16\u8bd1\u4e0d\u4e88\u901a\u8fc7\n//2. u\u7684\u521d\u59cb\u5316\u4e0d\u80fd\u4f7f\u7f16\u8bd1\u5668\u4ea7\u751f\u4e8c\u4e49\u6027\u3002\u5982u=6.6\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\nstatic auto y - 0.0;        //OK: y\u662fdouble\u7c7b\u578b\nauto int r;                 //error: auto\u4e0d\u518d\u8868\u793a\u5b58\u50a8\u7c7b\u578b\u6307\u793a\u7b26\uff0c\u7f16\u8bd1\u5668\u62a5\u9519\nauto s;                     //error: auto\u65e0\u6cd5\u63a8\u5bfc\u51fas\u7684\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u62a5\u9519\n</code></pre></p> <ol> <li>\u9690\u5f0f\u7684\u7c7b\u578b\u5b9a\u4e49\u4e5f\u662f \u5f3a\u7c7b\u578b\u5b9a\u4e49 \uff08auto\u6240\u5728\u90a3\u884c\uff0c\u5df2\u7ecf\u51c6\u786e\u63a8\u65ad\u51fa\u5176\u7c7b\u578b\u4e86\uff09</li> <li>auto\u53ea\u80fd\u7528\u4e8e \u7c7b\u578b\u63a8\u5bfc \uff0c\u4e0d\u80fd\u7528\u4e8e\u5b58\u50a8\u7c7b\u578b\u6307\u793a\u7b26\u7684\u63a8\u5bfc\uff0c\u6bd4\u5982<code>auto int r =5;</code></li> <li>auto\u5e76\u4e0d\u80fd\u4ee3\u8868\u4e00\u4e2a\u5b9e\u9645\u7c7b\u578b\u7684\u58f0\u660e\uff08\u5982s\u7684\u7f16\u8bd1\u5668\u9519\u8bef\uff09\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u7c7b\u578b\u58f0\u660e\u7684\u201c\u5360\u4f4d\u7b26\u201d</li> <li>auto\u58f0\u660e\u7684\u53d8\u91cf\u5fc5\u987b\u9a6c\u4e0a\u521d\u59cb\u5316\uff0c\u4ee5\u8ba9\u7f16\u8bd1\u5668\u63a8\u65ad\u51fa\u5b83\u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u5e76\u5728\u7f16\u8bd1\u65f6\u5c06\u5176\u66ff\u6362\u4e3a\u771f\u6b63\u7684\u7c7b\u578b</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/auto%E5%88%9D%E5%A7%8B%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#_1","title":"\u63a8\u5bfc\u89c4\u5219","text":"<p>auto\u53ef\u4ee5\u901a\u6307\u9488\u3001\u5f15\u7528\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\uff0c\u8fd8\u53ef\u4ee5\u5e26\u4e0acv\u9650\u5b9a\u7b26\uff08cv-qualifier, const\u548cvolatile\u9650\u5b9a\u7b26\u7684\u7edf\u79f0\uff09</p> <p>\u63a8\u5bfc\u89c4\u5219</p> <ol> <li>\u5f53**\u4e0d\u58f0\u660e**\u4e3a\u6307\u9488\u6216\u5f15\u7528\u65f6\uff0cauto\u7684\u63a8\u5bfc\u7ed3\u679c\u548c\u521d\u59cb\u5316\u8868\u8fbe\u5f0f**\u629b\u5f03\u5f15\u7528\u548ccv\u9650\u5b9a\u7b26**\u540e\u7c7b\u578b\u4e00\u81f4</li> <li>\u5f53\u58f0\u660e\u4e3a\u6307\u9488\u6216\u5f15\u7528\u65f6\uff0cauto\u7684\u63a8\u5bfc\u7ed3\u679c\u5c06\u4fdd\u6301\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u7684cv\u5c5e\u6027 <pre><code>int x = 0;\nauto *a = &amp;x;       //a -&gt; int*         auto\u88ab\u63a8\u5bfc\u4e3aint\nauto b = &amp;x;        //b -&gt; int*         auto\u88ab\u63a8\u5bfc\u4e3aint*\n//auto\u4e0d\u58f0\u660e\u4e3a\u6307\u9488\uff0c\u4e5f\u53ef\u4ee5\u63a8\u5bfc\u51fa\u6307\u9488\u7c7b\u578b\nauto &amp;c = x;        //c -&gt; int&amp;         auto\u88ab\u63a8\u5bfc\u4e3aint\nauto d = c;         //d -&gt; int          auto\u88ab\u63a8\u5bfc\u4e3aint\n//\u5f53\u8868\u8fbe\u5f0f\u662f\u4e00\u4e2a\u5f15\u7528\u7c7b\u578b\u65f6\uff0cauto\u4f1a\u628a\u5f15\u7528\u7c7b\u578b\u629b\u5f03\nconst auto e = x;   //e -&gt; const int    auto\u88ab\u63a8\u5bfc\u4e3aint\nauto f = e;         //f -&gt; int          auto\u88ab\u63a8\u5bfc\u4e3aint(non-const int)\n//\u5f53\u8868\u8fbe\u5f0f\u5e26\u6709const\uff08volatile\u4e5f\u4e00\u6837\uff09\u5c5e\u6027\u65f6\uff0cauto\u4f1a\u628aconst\u5c5e\u6027\u629b\u5f03\u6389\nconst auto&amp; g = x;  //e -&gt; const int&amp;   auto\u88ab\u63a8\u5bfc\u4e3aint\nauto&amp; h = g;        //f -&gt; const int&amp;   auto\u88ab\u63a8\u5bfc\u4e3aconst int\n//auto\u548c\u5f15\u7528\uff08\u6216\u6307\u9488\uff09\u7ed3\u5408\u65f6\uff0cauto\u7684\u63a8\u5bfc\u5c06\u4fdd\u7559\u8868\u8fbe\u5f0f\u7684const\u5c5e\u6027\n</code></pre></li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/auto%E5%88%9D%E5%A7%8B%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#auto_2","title":"auto\u7684\u63a8\u5bfc\u548c\u51fd\u6570\u6a21\u677f\u53c2\u6570\u7684\u81ea\u52a8\u63a8\u5bfc","text":"<p>auto\u7684\u63a8\u5bfc\u548c\u51fd\u6570\u6a21\u677f\u53c2\u6570\u7684\u81ea\u52a8\u63a8\u5bfc\u6709\u76f8\u4f3c\u4e4b\u5904</p> <p>\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u7684auto\uff0c\u548c\u4e0b\u9762\u7684\u6a21\u677f\u53c2\u6570\u81ea\u52a8\u63a8\u5bfc\u51fa\u6765\u7684\u7c7b\u578b\u662f\u4e00\u81f4\u7684 <pre><code>template&lt;typename T&gt; void func(T x) {}      //T     -&gt; auto\ntemplate&lt;typename T&gt; void func(T *x) {}     //T*    -&gt; auto *\ntemplate&lt;typename T&gt; void func(T&amp; x) {}     //T&amp;    -&gt; auto &amp;\ntemplate&lt;typename T&gt; void func(const T x) {}    //const T -&gt; const auto\ntemplate&lt;typename T&gt; void func(const T* x) {}   //const T* -&gt; const auto*\ntemplate&lt;typename T&gt; void func(const T&amp; x) {}   //const T&amp; -&gt; const auto&amp;\n</code></pre></p> <p>\u56e0\u6b64\uff0c\u5728\u719f\u6089auto\u63a8\u5bfc\u89c4\u5219\u65f6\uff0c\u53ef\u4ee5\u501f\u52a9\u51fd\u6570\u6a21\u677f\u7684\u53c2\u6570\u81ea\u52a8\u63a8\u5bfc\u89c4\u5219\u6765\u5e2e\u52a9\u548c\u52a0\u5f3a\u7406\u89e3\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/auto%E5%88%9D%E5%A7%8B%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#auto_3","title":"auto\u7684\u9650\u5236","text":"<pre><code>void func(auto a = 1) {}    //error: auto\u4e0d\u80fd\u7528\u4e8e\u51fd\u6570\u53c2\u6570\nstruct Foo{\nauto var1_ = 0;                 //error: auto\u4e0d\u80fd\u7528\u4e8e\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\nstatic const auto var2_ = 0;    //OK: var2_ -&gt; static const int\n//auto\u4ec5\u80fd\u7528\u4e8e\u63a8\u5bfcstatic const\u7684\u6574\u5f62\u6216\u679a\u4e3e\u6210\u5458\n//1. \u56e0\u4e3a\u5176\u4ed6\u9759\u6001\u7c7b\u578b\u5728C++\u6807\u51c6\u4e2d\u65e0\u6cd5\u5c31\u5730\u521d\u59cb\u5316\n//2. \u867d\u7136C++11\u53ef\u4ee5\u63a5\u53d7\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u5c31\u5730\u521d\u59cb\u5316\uff0c\u4f46\u5374\u4e0d\u652f\u6301auto\u7c7b\u578b\u975e\u9759\u6001\u6210\u5458\u7684\u521d\u59cb\u5316\n};\ntemplate&lt;typename T&gt;\nstruct Bar{};\nvoid main() {\nint arr[10] = {0};\nauto aa = arr;      //OK: aa -&gt; int*\n//aa\u4e0d\u4f1a\u63a8\u5bfc\u4e3aint[10]\uff0c\u800c\u662fint*\nauto rr[10] = arr;  //error: auto\u65e0\u6cd5\u5b9a\u4e49\u6570\u7ec4\nBar&lt;int&gt; bar;\nBar&lt;auto&gt; bb = bar; //error: auto\u65e0\u6cd5\u63a8\u5bfc\u51fa\u6a21\u677f\u53c2\u6570\n}\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/auto%E5%88%9D%E5%A7%8B%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#auto_4","title":"\u4ec0\u4e48\u65f6\u5019\u7528auto","text":"<ol> <li>\u8fed\u4ee3\u5668\u7c7b\u578b\u7b49\u573a\u666f</li> <li>auto\u7b80\u5316\u51fd\u6570\u5b9a\u4e49</li> </ol> <p>\u4e0d\u52a0\u9009\u62e9\u5730\u968f\u610f\u4f7f\u7528auto\uff0c\u4f1a\u5e26\u6765\u4ee3\u7801\u53ef\u8bfb\u6027\u548c\u7ef4\u62a4\u6027\u7684\u4e25\u91cd\u4e0b\u964d\u3002\u56e0\u6b64\uff0c\u5728\u4f7f\u7528auto\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u8981\u6743\u8861\u597d\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/auto%E5%88%9D%E5%A7%8B%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#auto_5","title":"auto\u7b80\u5316\u51fd\u6570\u5b9a\u4e49","text":"<pre><code>class Foo{\npublic:\nstatic int get(void) {return 0;}\n};\nclass Bar{\npublic:\nstatic const char* get(void) {return \"0\";}\n};\ntemplate&lt;class A&gt;\nvoid func(void){\n//\u5bf9\u7c7b\u578bA\u90fd\u8c03\u7528\u9759\u6001\u51fd\u6570get\u6765\u83b7\u53d6val\nauto val = A::get();\n//\u5bf9val\u505a\u7edf\u4e00\u5904\u7406\n//...\n}\nfunc&lt;Foo&gt;();\nfunc&lt;Bar&gt;();\n</code></pre> <p>\u5982\u679c\u4e0d\u7528auto\uff0c\u5c31\u4e0d\u5f97\u4e0d\u5bf9func\u518d\u6dfb\u52a0\u4e00\u4e2a\u6a21\u677f\u53c2\u6570\uff0c\u5e76\u5728\u5916\u90e8\u8c03\u7528\u65f6\u624b\u52a8\u6307\u5b9aget()\u7684\u8fd4\u56de\u503c\u7c7b\u578b <pre><code>class Foo{\npublic:\nstatic int get(void) {return 0;}\n};\nclass Bar{\npublic:\nstatic const char* get(void) {return \"0\";}\n};\ntemplate&lt;class A, class B&gt;\nvoid func(void){\nB val = A::get();\n//...\n}\nfunc&lt;Foo, int&gt;();\nfunc&lt;Bar, const char*&gt;();\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/auto%E5%88%9D%E5%A7%8B%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#_2","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u53c2\u8003\u4e66\u7c4d\u300a\u6df1\u5165\u5e94\u7528C++11\u300b</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/decltype%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/","title":"Decltype\u8868\u8fbe\u5f0f\u7c7b\u578b\u63a8\u5bfc","text":"<p>C++11\u65b0\u589e\u4e86decltype\u5173\u952e\u5b57\uff0c\u7528\u4e8e\u5728\u7f16\u8bd1\u65f6\u671f\u63a8\u5bfc\u51fa\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u3002\u5b83\u7684\u8bed\u6cd5\u683c\u5f0f<code>decltype(expression)</code></p> <p>\u4ece\u683c\u5f0f\u4e0a\u6765\u770b\uff0cdecltype\u7c7b\u4f3c\u4e8esizeof\uff0cdecltype\u7684\u63a8\u5bfc\u8fc7\u7a0b\u662f\u5728\u7f16\u8bd1\u671f\u5b8c\u6210\u7684\uff0c\u5e76\u4e14\u4e0d\u4f1a\u771f\u6b63\u8ba1\u7b97\u8868\u8fbe\u5f0f\u7684\u503c</p> <ul> <li>sizeof\u662f\u7528\u6765\u63a8\u5bfc\u8868\u8fbe\u5f0f\u7c7b\u578b\u5927\u5c0f\u7684\u64cd\u4f5c\u7b26</li> </ul> <p><pre><code>int x = 0;\ndecltype(x) y =0;       //y -&gt; int\ndecltype(x+y) z = 0;    //z -&gt; int\nconst int&amp; i = x;\ndecltype(i) j =y;       //y -&gt; const int&amp;\n//decltype\u53ef\u4ee5\u4fdd\u7559\u4f4f\u8868\u8fbe\u5f0f\u7684\u5f15\u7528\u53caconst\u9650\u5b9a\u7b26\n//\u5b9e\u9645\u4e0a\uff0c\u5bf9\u4e8e\u4e00\u822c\u7684\u6807\u8bb0\u7b26\u8868\u8fbe\u5f0f(id-expression)\uff0cdecltype\u5c06\u7cbe\u786e\u5730\u63a8\u5bfc\u51fa\u8868\u8fbe\u5f0f\u5b9a\u4e49\u672c\u8eab\u7684\u7c7b\u578b\uff0c\u4e0d\u4f1a\u50cfauto\u90a3\u6837\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u820d\u5f03\u5f15\u7528\u548ccv\u9650\u5b9a\u7b26\nconst decltype(z)* p =&amp;z;   //p -&gt; const int*\ndecltype(z) *pi = &amp;z;       //pi -&gt; int*\n//decltype\u53ef\u4ee5\u50cfauto\u4e00\u6837\uff0c\u52a0\u4e0a\u5f15\u7528\u548c\u6307\u9488\uff0c\u4ee5\u53cacv\u9650\u5b9a\u7b26\ndecltype(pi) *pp = &amp;pi;     //pp -&gt; int**\n//\u5f53\u8868\u8fbe\u5f0f\u662f\u4e00\u4e2a\u6307\u9488\u7684\u65f6\u5019\uff0cdecltype\u4ecd\u7136\u63a8\u5bfc\u51fa\u8868\u8fbe\u5f0f\u7684\u5b9e\u9645\u7c7b\u578b\uff08\u6307\u9488\u7c7b\u578b\uff09\n//\u4e4b\u540e\u7ed3\u5408pp\u5b9a\u4e49\u65f6\u7684\u6307\u9488\u6807\u8bb0\uff0c\u5f97\u5230\u7684pp\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6307\u9488\u7c7b\u578b\u3002\u8fd9\u4e5f\u548cauto\u4e0d\u540c\u7684\u4e00\u70b9\n</code></pre> \u5bf9\u4e8edecltype\u548c\u5f15\u7528\u7ed3\u5408\u7684\u63a8\u5bfc\u7ed3\u679c\uff0c\u4e0eC++11\u4e2d\u65b0\u589e\u7684\u5f15\u7528\u6298\u53e0\u89c4\u5219\u6709\u5173\u3002\u8bf7\u67e5\u770b\u53f3\u503c\u5f15\u7528\u76f8\u5173\u5185\u5bb9\u3002</p> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/decltype%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#decltype","title":"decltype\u7684\u63a8\u5bfc\u89c4\u5219","text":"<p><code>decltype(exp)</code>\u63a8\u5bfc\u89c4\u5219</p> <ol> <li><code>exp</code>\u662f\u6807\u8bc6\u7b26\u3001\u7c7b\u8bbf\u95ee\u8868\u8fbe\u5f0f\uff0c<code>decltype(exp)</code>\u548c<code>exp</code>\u7684\u7c7b\u578b\u4e00\u81f4</li> <li><code>exp</code>\u662f\u51fd\u6570\u8c03\u7528\uff0c<code>decltype(exp)</code>\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u4e00\u81f4</li> <li>\u5176\u4ed6\u60c5\u51b5\uff0c\u82e5<code>exp</code>\u662f\u4e00\u4e2a\u5de6\u503c\uff0c\u5219<code>decltype(exp)</code>\u662f<code>exp</code>\u7c7b\u578b\u7684\u5de6\u503c\u5f15\u7528\uff0c\u5426\u5219\u548c<code>exp</code>\u7c7b\u578b\u4e00\u81f4</li> </ol> <p>\u6839\u636e\u4e0a\u9762\u7684\u89c4\u5219\u5206\u4e09\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a</p> <p>\u4e00\u3001\u6807\u8bc6\u7b26\u8868\u8fbe\u5f0f\u548c\u7c7b\u8bbf\u95ee\u8868\u8fbe\u5f0f <pre><code>class Foo{\npublic:\nstatic const int Number = 0;\nint x;\n};\nint n =0;\nvolatile const int&amp; x = n;\ndecltype(n) a = n;  //a -&gt; int\ndecltype(x) b = n;  //b -&gt; const volatile int&amp;\ndecltype(Foo::Number) c = 0;    // c -&gt; const int\n//decltype\u7684\u63a8\u5bfc\u7ed3\u679c\u5c31\u548c\u8fd9\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\u5b9a\u4e49\u4e00\u81f4\nFoo foo;\ndecltype(foo.x) d = 0;  //d -&gt;int\uff0c\u7c7b\u8bbf\u95ee\u8868\u8fbe\u5f0f\n</code></pre></p> <p>\u4e8c\u3001\u51fd\u6570\u8c03\u7528</p> <p>\u5982\u679c\u8868\u8fbe\u5f0f\u662f\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u7ed3\u679c\u4f1a\u5982\u4f55\u5462\uff1f</p> <p></p> <ul> <li><code>c2</code>\u662f<code>int</code>\uff0c\u800c\u4e0d\u662f<code>const int</code>\u3002\u56e0\u4e3a\u51fd\u6570\u8fd4\u56de\u503c<code>int</code>\u662f\u4e00\u4e2a\u7eaf\u53f3\u503c\u3002\u5bf9\u4e8e\u7eaf\u53f3\u503c\u800c\u8a00\uff0c\u53ea\u6709\u7c7b\u7c7b\u578b\u53ef\u4ee5\u643a\u5e26cv\u9650\u5b9a\u7b26\uff0c\u6b64\u5916\u5219\u4e00\u822c\u5ffd\u7565\u6389cv\u9650\u5b9a</li> </ul> <p>\u4e09\u3001\u5e26\u62ec\u53f7\u7684\u8868\u8fbe\u5f0f\u548c\u52a0\u6cd5\u8fd0\u7b97\u8868\u8fbe\u5f0f <pre><code>struct Foo {int x;};\nconst Foo foo = Foo();\ndecltype(foo.x) a = 0;      //a -&gt; int\ndecltype((foo.x)) b = a;    //b -&gt; const int&amp;\n//foo\u7684\u5b9a\u4e49\u662fconst Foo\uff0c\u6240\u4ee5foo.x\u662f\u4e00\u4e2aconst int\u7c7b\u578b\u5de6\u503c\n//\u6545\u62ec\u53f7\u8868\u8fbe\u5f0f\u4e5f\u662f\u4e00\u4e2a\u5de6\u503c\n//\u56e0\u6b64\u6839\u636e\u89c4\u52193\uff0cdecltype\u7ed3\u679c\u662f\u4e2a\u5de6\u503c\u5f15\u7528\nint n=0, m=0;\ndecltype(n+m) c = 0;    //c -&gt; int\n//n+m\u8fd4\u56de\u4e00\u4e2a\u53f3\u503c\uff0c\u5219\u89c4\u52193\ndecltype(n+=m) d = c;   //d -&gt; int&amp;\n//n+=m\u8fd4\u56de\u4e00\u4e2a\u5de6\u503c\uff0c\u5219\u89c4\u52193\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/decltype%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#decltype_1","title":"decltype\u7684\u5b9e\u9645\u5f15\u7528","text":"<p>\u5728\u5197\u957f\u7684\u4ee3\u7801\u4e2d\uff0c\u4eba\u4eec\u5f80\u5f80\u53ea\u4f1a\u5173\u5fc3**\u53d8\u91cf\u672c\u8eab**\uff0c\u800c\u5e76\u4e0d\u5173\u5fc3\u5b83\u7684**\u5177\u4f53\u7c7b\u578b**\u3002\u6b64\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528<code>decltype</code></p> <p>\u8fd9\u5bf9\u7406\u89e3\u4e00\u4e9b\u53d8\u91cf\u7c7b\u578b\u590d\u6742\u4f46\u64cd\u4f5c\u7edf\u4e00\u7684\u4ee3\u7801\u7247\u6bb5\u6709\u5f88\u5927\u597d\u5904\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/decltype%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#decltype_2","title":"\u4f8b\uff1a\u6807\u51c6\u5e93\u4e2ddecltype\u7684\u8eab\u5f71","text":"<pre><code>//\u8fd9\u79cd\u5b9a\u4e49\u65b9\u6cd5\u7684\u597d\u5904\u662f\uff0c\u4ece\u7c7b\u578b\u7684\u5b9a\u4e49\u8fc7\u7a0b\u4e0a\u5c31\u53ef\u4ee5\u770b\u51fa\u8fd9\u4e2a\u7c7b\u578b\u7684\u542b\u4e49\u4e86\ntypedef decltype(nullptr) nullptr_t;    //\u901a\u8fc7\u7f16\u8bd1\u5668\u5173\u952e\u5b57nullptr\u5b9a\u4e49\u7c7b\u578bnullptr_t\ntypedef decltype(sizeof(0)) size_t;\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/decltype%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#_1","title":"\u4f8b\uff1a\u901a\u8fc7\u53d8\u91cf\u8868\u8fbe\u5f0f\u62bd\u53d6\u53d8\u91cf\u7c7b\u578b","text":"<p>decltype\u7ecf\u5e38\u7528\u5728\u901a\u8fc7\u53d8\u91cf\u8868\u8fbe\u5f0f\u62bd\u53d6\u53d8\u91cf\u7c7b\u578b\u4e0a\uff0c\u5982 <pre><code>vector&lt;int&gt; v;\n//...\ndecltype(v)::value_type i = 0;\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/decltype%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#_2","title":"\u4f8b\uff1a\u6cdb\u578b\u7f16\u7a0b","text":"<p>decltype\u7684\u5e94\u7528\u591a\u51fa\u73b0\u5728\u6cdb\u578b\u7f16\u7a0b\u4e2d\u3002</p> <pre><code>template&lt;class ContainerT&gt;\nclass Foo{\ntypename ContainerT::iterator it_;  //\u7c7b\u578b\u5b9a\u4e49\u53ef\u80fd\u6709\u95ee\u9898\n//\u56e0\u4e3a\u8fd9\u53ea\u662f\u4e00\u4e2anon_const\u7684iterator\uff1b\u5982\u679c\u662fconst\uff0c\u8fd9\u4e2aiterator\u5c31\u51fa\u9519\u4e86\npublic:\nvoid func(ContainerT&amp; container) {\nit_ = container.begin();\n}\n}\n</code></pre> <p>\u8fd9\u6837\u7684\u6a21\u677f\u53ef\u80fd\u4f1a\u51fa\u9519 <pre><code>typedef const std::vector&lt;int&gt; container_t;\ncontainer_t arr;\nFoo&lt;container_t&gt; foo;\nfoo.func(arr); //func\u5185\u7684it_\u5e94\u8be5\u8981\u662f\u4e00\u4e2aconst_iterator\n</code></pre></p> <p>\u5982\u679c\u6ca1\u6709<code>decltype</code>\uff08C++98/03\uff09\u4e0b\uff0c\u53ea\u80fd\u6dfb\u52a0\u4e00\u4e2a\u7279\u5316\u7248\u672c\u6765\u5904\u7406<code>const</code>\u65f6\u7684\u60c5\u51b5\uff0c\u8fd9\u5f88\u9ebb\u70e6\uff01\u4e3a\u4e86\u4e00\u4e2a\u7c7b\u578b\uff0c\u800c\u91cd\u5199\u4e00\u4e2a\u6a21\u677f\u7c7b\u3002 <pre><code>template&lt;class ContainerT&gt;\nclass Foo&lt;const ContainerT&gt; { //\u4f20\u5165\u7684\u662f\u4e00\u4e2aconst\u7c7b\u578b\ntypename ContainerT::const_iterator it_;\npublic:\nvoid func(const ContainerT&amp; container) {\nit_ = container.begin();\n}\n//...\n};\n</code></pre></p> <p>\u4f46\u5982\u679c\u6709\u4e86<code>decltype</code>\uff0c\u5c31\u53ef\u4ee5\u8fd9\u6837 <pre><code>template&lt;class ContainerT&gt;\nclass Foo{\ndecltype(ContainerT().begin()) it_;\npublic:\nvoid func(ContainerT&amp; container) {\nit_ = container.begin();\n}\n//...\n};\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/decltype%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/#_3","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u53c2\u8003\u4e66\u7c4d\u300a\u6df1\u5165\u5e94\u7528C++11\u300b</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E5%90%8E%E7%BD%AE/","title":"\u8fd4\u56de\u7c7b\u578b\u540e\u7f6e","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E5%90%8E%E7%BD%AE/#_1","title":"\u5f15\u8a00","text":"<p>\u8003\u8651\u4e0b\u9762\u8fd9\u4e2a\u573a\u666f\uff1a <pre><code>template&lt;typename R, typename T, typename U&gt;\nR add(T t, U u) {\nreturn t+u;\n}\nint a = 1; float b = 2.0;\nauto c = add&lt;decltype(a+b)&gt;(a,b);\n</code></pre> \u6211\u4eec\u5e76\u4e0d\u5173\u5fc3a+b\u7684\u7c7b\u578b\u662f\u4ec0\u4e48\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u4f7f\u7528decltype\u6765\u83b7\u5f97\u8fd4\u56de\u503c\u7c7b\u578b\u3002\u4f46\u8fd9\u6837\u6709\u95ee\u9898</p> <ol> <li>\u8fd9\u6837\u4f7f\u7528\u5f88\u4e0d\u65b9\u4fbf</li> <li>\u51b5\u4e14\uff0c\u4f60\u4e5f\u4e0d\u77e5\u9053<code>add</code>\u5185\u90e8\u5177\u4f53\u505a\u4e86\u4ec0\u4e48\u64cd\u4f5c\uff0c\u4e5f\u4e0d\u80fd\u786e\u5b9a\u7c7b\u578b\u5c31\u662f<code>decltype(a+b)</code>\u8fd9\u4e2a\u5427</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E5%90%8E%E7%BD%AE/#adddecltype","title":"\u6539\u8fdb\uff1a\u5728add\u51fd\u6570\u4e2d\u4f7f\u7528decltype","text":"<p><pre><code>template&lt;typename T, typename U&gt;\ndecltype(t + u) add(T t, U u) {\nreturn t+u;\n}\n</code></pre> \u8fd9\u6837\u662f\u7f16\u8bd1\u4e0d\u8fc7\u7684\u3002<code>t</code>\u3001<code>u</code>\u5728\u53c2\u6570\u5217\u8868\u4e2d\uff0c\u800cC++\u7684\u8fd4\u56de\u503c\u662f\u524d\u7f6e\u8bed\u6cd5\uff0c\u5728\u8fd4\u56de\u503c\u5b9a\u4e49\u7684\u65f6\u5019\u53c2\u6570\u53d8\u91cf\u8fd8\u4e0d\u5b58\u5728\u3002</p> <p>\u8fd9\u6837\u662f\u5bf9\u7684 <pre><code>template&lt;typename T, typename U&gt;\ndecltype(T() + U()) add(T t, U u){\nreturn t+u;\n}\n</code></pre></p> <p>\u8003\u8651\u5230<code>T</code>\u3001<code>U</code>\u53ef\u80fd\u662f\u6ca1\u6709\u65e0\u53c2\u6784\u9020\u51fd\u6570\u7684\u7c7b\uff0c\u6240\u4ee5\u6b63\u786e\u7684\u5199\u6cd5\u5e94\u8be5\u662f\u8fd9\u6837 <pre><code>template&lt;typename T, typename U&gt;\ndecltype( (*(T*)0) + (*(U*)0) ) add(T t, U u) {\nreturn t+u;\n}\n</code></pre> \u867d\u7136\u6210\u529f\u5730\u4f7f\u7528<code>decltype</code>\u5b8c\u6210\u4e86\u8fd4\u56de\u503c\u7684\u63a8\u5bfc\uff0c\u4f46\u5199\u6cd5\u8fc7\u4e8e\u6666\u6da9\uff0c\u4f1a\u52a0\u5f3a\u4f7f\u7528\u96be\u5ea6\u5e76\u964d\u4f4e\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E5%90%8E%E7%BD%AE/#autodecltype","title":"\u6539\u8fdb\uff1aauto+decltype\uff08\u8fd4\u56de\u7c7b\u578b\u540e\u7f6e\uff09","text":"<p>\u5728C++11\u4e2d\u589e\u52a0\u4e86 \u8fd4\u56de\u7c7b\u578b\u540e\u7f6e\uff08trailing-return-type\uff0c\u53c8\u79f0\u8ddf\u8e2a\u8fd4\u56de\u7c7b\u578b\uff09 \u8bed\u6cd5\uff0c\u5c06<code>decltype</code>\u548c<code>auto</code>\u7ed3\u5408\u8d77\u6765\u5b8c\u6210\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u63a8\u5bfc\u3002 <pre><code>template&lt;typename T, typename U&gt;\nauto add(T t, U u) -&gt; decltype(t + u) {\nreturn t + u;\n}\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E5%90%8E%E7%BD%AE/#_2","title":"\u66f4\u590d\u6742\u7684\u4f8b\u5b50","text":"<p><pre><code>int&amp; foo(int&amp; i);\nfloat foo(float&amp; f);\ntemplate&lt;typename T&gt;\nauto func(T&amp; val) -&gt; decltype(foo(val)) {\nreturn foo(val);\n}\n</code></pre> \u8fd9\u4e2a\u4f8b\u5b50\u4f7f\u7528C++98/03\u5c31\u4e0d\u53ef\u80fd\u5b8c\u6210\u4e86\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E5%90%8E%E7%BD%AE/#_3","title":"\u8fd4\u56de\u7c7b\u578b\u540e\u7f6e","text":"<p>\u8fd4\u56de\u503c\u7c7b\u578b\u540e\u7f6e\u8bed\u6cd5\uff0c\u662f\u4e3a\u4e86\u89e3\u51b3\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u4f9d\u8d56\u4e8e\u53c2\u6570\u800c\u5bfc\u81f4\u96be\u4ee5\u786e\u5b9a\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u95ee\u9898\u3002</p> <p>\u6709\u4e86\u8fd9\u4e2a\u8bed\u6cd5\u4ee5\u540e\uff0c\u5bf9\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u63a8\u5bfc\u5c31\u53ef\u4ee5\u7528\u6e05\u6670\u7684\u65b9\u5f0f\uff08\u76f4\u63a5\u901a\u8fc7\u53c2\u6570\u505a\u8fd0\u7b97\uff09\u63cf\u8ff0\u51fa\u6765\uff0c\u800c\u4e0d\u9700\u8981\u50cfC++98/03\u90a3\u6837\u4f7f\u7528\u6666\u6da9\u96be\u61c2\u7684\u5199\u6cd5\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E5%AF%BC/%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E5%90%8E%E7%BD%AE/#_4","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u53c2\u8003\u4e66\u7c4d\u300a\u6df1\u5165\u5e94\u7528C++11\u300b</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/","title":"C++\u7c7b\u578b\u8f6c\u6362","text":"<p>Effective C++ | C++\u8fdb\u9636 | \u6761\u6b3e27 \u6b63\u786e\u4f7f\u7528\u7c7b\u578b\u8f6c\u6362_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7%E3%80%8B%E4%BE%AF%E6%8D%B7/","title":"Index","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8AC%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7%E3%80%8B%E4%BE%AF%E6%8D%B7/#_1","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>\u4faf\u6377C++\u8bfe\u7a0b\u7b14\u8bb004: C++2.0\u65b0\u7279\u6027_ncepu_Chen\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/","title":"6\u53f3\u503c\u5f15\u7528","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_1","title":"\u5de6\u503c\u548c\u53f3\u503c","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_2","title":"\u5982\u4f55\u5224\u65ad","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_3","title":"\u4ee5\u7b49\u53f7\u5de6\u53f3\u4f5c\u4e3a\u533a\u5206\uff1f","text":"<p>\u6700\u7b80\u5355\u7684\u5b57\u9762\u7406\u89e3\uff1a\u7b49\u53f7\u5de6\u8fb9\u4e3a\u5de6\u503c\uff0c\u7b49\u53f7\u53f3\u8fb9\u4e3a\u53f3\u503c\u3002 \u5982\u6b64\u5224\u65ad\uff0c\u4ee5\u4e0b\u4ee3\u7801\u662f\u6ca1\u9519\u7684\u3002</p> <pre><code>int x = 1;\nint y = 3;\nint z = x + y;\n</code></pre> <p>\u4f46\u60c5\u51b5\u53ef\u80fd\u4f1a\u66f4\u590d\u6742\u4e00\u4e9b\uff0c\u8fd9\u4e2a\u5224\u5b9a\u89c4\u5219\u4e0d\u51c6\u786e</p> <pre><code>int a = 1; //a\u662f\u5de6\u503c\nint b = a; //\u7b49\u53f7\u53f3\u8fb9\u7684a\u5c31\u4e0d\u662f\u53f3\u503c\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_4","title":"\u80fd\u5426\u53d6\u5730\u5740","text":"<p>\u4f46\u51e1\u80fd\u53d6\u5730\u5740\u7684\u5c31\u662f\u4e00\u4e2a\u5de6\u503c\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_5","title":"\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u662f\u5de6\u503c","text":"<p>\u901a\u5e38\u5b57\u9762\u91cf\u90fd\u662f\u4e00\u4e2a\u53f3\u503c\uff0c\u9664\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u4ee5\u5916</p> <ol> <li>\u7f16\u8bd1\u5668\u4f1a\u5c06\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u5b58\u50a8\u5230\u7a0b\u5e8f\u7684\u6570\u636e\u6bb5\u4e2d\uff0c\u7a0b\u5e8f\u52a0\u8f7d\u7684\u65f6\u5019\u4e5f\u4f1a\u4e3a\u5176\u5f00\u8f9f\u7a7a\u95f4\uff0c\u6765\u5b58\u50a8\u8fd9\u4e00\u6bb5\u5b57\u7b26\u4e32</li> </ol> <pre><code>auto p = &amp;\"hello world\"; //p\u7684\u7c7b\u578b\u662fconst char*\n</code></pre> <ol> <li>\u4f46\u5176\u4ed6\u7684\u5b57\u9762\u91cf\u90fd\u4e0d\u4f1a\u5f00\u8f9f\u7a7a\u95f4\uff0c\u4e0d\u4f1a\u63d0\u524d\u628a\u503c\u5b58\u4e0b\u6765\u3002\u800c\u662f\u76f4\u63a5\u8d4b\u503c\u7ed9\u53d8\u91cf</li> </ol> <pre><code>int a = 200000000; //200000000\u4e0d\u4f1a\u4e8b\u5148\u5b58\u4e0b\u6765\n//\u800c\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u76f4\u63a5\u8d4b\u503c\u7ed9a\u53d8\u91cf\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_6","title":"\u7ec3\u4e60","text":"<pre><code>x++; //\u53f3\u503c\n/* \u540e\u52a0\u52a0\n1. \u5148\u628ax\u7684\u503c\u5b58\u5230\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u4e2d\n2. \u518d\u5bf9x\u81ea\u589e1\n3. \u7136\u540e\u8fd4\u56de\u4e34\u65f6\u53d8\u91cf\u3002\u4e34\u65f6\u53d8\u91cf\u662f\u4e00\u4e2a\u5c06\u4ea1\u503c\uff0c\u662f\u4e00\u4e2a\u53f3\u503c\n */\n++x; //\u5de6\u503c\n/* \u524d\u52a0\u52a0\n1. \u5148\u5bf9x\u81ea\u589e1\n2. \u7136\u540e\u8fd4\u56dex\n */\n</code></pre> <pre><code>int x = 1; //x\u5de6\u503c; 1\u662f\u53f3\u503c\nint get_val() {\nreturn x;\n} //\u8fd4\u56de\u65f6\u4f1a\u53d1\u751f\u4e00\u6b21\u590d\u5236\uff0c\u5230\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u4e0a\uff0c\u56e0\u6b64get_val()\u662f\u53f3\u503c\nvoid set_val(int val) { //val\u5de6\u503c\uff0c\u751f\u547d\u5468\u671f\u662f\u51fd\u6570\u5185\nx = val;\n}\nint main() {\nint y = get_val(); //y\u662f\u5de6\u503c\nset_val(6);   //6\u662f\u53f3\u503c\n}\n</code></pre> <pre><code>void set_val2(const int&amp; val) { //set_val2(6),\n//val\u662f\u4e00\u4e2a\u53f3\u503c\u5f15\u7528\uff0c\u4f46\u662fval\u5374\u662f\u5de6\u503c\nauto p = &amp;val; //\u56e0\u4e3a\u5b83\u53ef\u4ee5\u88ab\u53d6\u5730\u5740\nx = val;\n}\nset_val2(6); //6\u662f\u53f3\u503c\n</code></pre> <p>\u89e3\u91ca</p> <ol> <li>\u51fd\u6570\u53c2\u6570\u90fd\u662f\u5de6\u503c</li> <li>\u56e0\u4e3a\u53f3\u503c\u5f15\u7528\u662f\u53d8\u91cf\u7c7b\u578b</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_7","title":"\u5de6\u503c\u5f15\u7528","text":"<p>\u5de6\u503c\u5f15\u7528\u8ba9C++\u7f16\u7a0b\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8131\u79bb\u4e86\u5371\u9669\u7684\u6307\u9488\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_8","title":"\u975e\u5e38\u91cf\u5de6\u503c\u5f15\u7528","text":"<p>non-const\u5de6\u503c\u5f15\u7528\uff0c\u5f15\u7528\u7684\u5fc5\u987b\u662f\u4e00\u4e2a\u5de6\u503c\uff0c\u53f3\u503c\u4e0d\u884c\u3002</p> <ul> <li>non-const\u610f\u5473\u7740\u53ef\u80fd\u4f1a\u4fee\u6539\u8fd9\u5757\u5185\u5b58\uff0c\u56e0\u6b64\u5b83\u5fc5\u987b\u6307\u5411\u4e00\u5757\u5185\u5b58\uff0c\u800c\u53f3\u503c\u662f\u6ca1\u6709\u5185\u5b58\u7684</li> </ul> <pre><code>//\u53f3\u503c\u4e0d\u884c\uff0c\u7f16\u8bd1\u9519\u8bef\n//  \u56e0\u4e3aint&amp;\u4ee3\u8868\u4e4b\u540e\u53ef\u80fd\u4f1a\u4fee\u6539x1\uff0c\u4f467\u6ca1\u6709\u5185\u5b58\nint&amp; x1 = 7; //\u5fc5\u987b\u662f\u4e00\u4e2a\u5de6\u503c\u624d\u884c\nint a = 1;\nint&amp; x2 = a;\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_9","title":"\u5e38\u91cf\u5de6\u503c\u5f15\u7528","text":"<p>const\u5de6\u503c\u5f15\u7528\uff0c\u5de6\u503c\u3001\u53f3\u503c\u90fd\u53ef\u4ee5\u7ed1\u5b9a</p> <ul> <li>const\u610f\u5473\u7740\u80af\u5b9a\u4e0d\u4f1a\u4fee\u6539\u8fd9\u5757\u5185\u5b58\uff0c\u56e0\u6b64\u53ef\u4ee5\u6307\u5411\u4e00\u4e2a\u53f3\u503c</li> </ul> <pre><code>const int&amp; x = 11; //\u53f3\u503c\u4e5f\u884c\uff0c\u7f16\u8bd1\u4e0d\u4f1a\u62a5\u9519\n//\u56e0\u6b64\uff0c\u53f3\u503c11\u7684\u751f\u547d\u5468\u671f\u88ab\u5ef6\u957f\u3002\u5728\u540e\u7eed\u7684\u4ee3\u7801\u4e2d\uff0c\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\uff1a11\u4f1a\u66ff\u4ee3x\nint y = x;\nconst int x2 = 11;\n//\u7136\u800c\uff0c\u8fd9\u91cc\u7684\u53f3\u503c11\uff0c\u5f53\u8bed\u53e5\u7ed3\u675f\u540e\uff0c\u5c31\u4f1a\u88ab\u9500\u6bc1\n</code></pre> <p>\u3010\u4f5c\u7528\u3011\u901a\u5e38\u51fd\u6570\u7684\u5f62\u53c2\u90fd\u662f\u5e38\u91cf\u5de6\u503c\u5f15\u7528\uff0c\u56e0\u4e3a\u8fd9\u6837\uff0c\u5b83\u5c31\u53c8\u80fd\u63a5\u6536\u5de6\u503c\u3001\u4e5f\u80fd\u63a5\u6536\u53f3\u503c\uff0c\u8fd8\u80fd\u907f\u514d\u62f7\u8d1d</p> <pre><code>class X{\npublic:\nX() {}\nX(const X&amp;) {}\nX&amp; operator=(const X&amp;) { return *this; }\n};\nX make_x() { return X(); }  //make_x()\u8fd4\u56de\u7684\u662f\u53f3\u503c\nint main() {\nX x1;\nX x2(x1);\nX x3(make_x());\nx3 = make_x();\n}\n</code></pre> <p>\u3010\u7f3a\u70b9\u3011\u5e38\u91cf\u6027\uff0c\u56e0\u6b64\u53f3\u503c\u5f15\u7528\u8bde\u751f\u4e86</p> <ul> <li>\u4e00\u65e6\u4f7f\u7528\u4e86\u5e38\u91cf\u5de6\u503c\u5f15\u7528\uff0c\u5c31\u8868\u793a\u6211\u4eec\u65e0\u6cd5\u5728\u51fd\u6570\u5185\u4fee\u6539\u8be5\u5bf9\u8c61\u7684\u5185\u5bb9\uff08\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u9664\u5916\uff09</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_10","title":"\u53f3\u503c\u5f15\u7528","text":"<p>\u53f3\u503c\u5f15\u7528\u53ea\u80fd\u5f15\u7528\u53f3\u503c\uff0c\u5728\u7c7b\u578b\u540e\u9762\u52a0<code>$$</code></p> <pre><code>int i = 0;\nint&amp; j = i;   //\u5de6\u503c\u5f15\u7528\nint&amp;&amp; k - 11; //\u53f3\u503c\u5f15\u7528\uff08\u5ef6\u957f\u53f3\u503c\u7684\u751f\u547d\u5468\u671f\uff09\n//\u7f16\u8bd1\u62a5\u9519\uff0c\u56e0\u4e3a\u53f3\u503c\u5f15\u7528\u53ea\u80fd\u5f15\u7528\u53f3\u503c\nint&amp;&amp; k = i ;\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_11","title":"\u4f5c\u7528\uff1a\u907f\u514d\u91cd\u590d\u6784\u9020","text":"<p>\u5bf9\u4e8e\u5b57\u9762\u91cf\u6765\u8bf4\uff0c\u53f3\u503c\u5f15\u7528\u53ef\u80fd\u770b\u4e0d\u51fa\u6548\u679c\u3002\u4f46\uff0c\u5bf9\u4e8e\u4e34\u65f6\u5bf9\u8c61\uff0c\u53f3\u503c\u5f15\u7528\u5c31\u5f88\u6709\u7528\u5904\u4e86\uff0c\u53ef\u4ee5 \u907f\u514d\u91cd\u590d\u6784\u9020</p> <pre><code>#include&lt;iostream&gt;\nclass X{\npublic:\nX() { std::cout &lt;&lt; \"X ctor\" &lt;&lt; std::endl; }\nX(const X&amp; x) { std::cout &lt;&lt; \"X copy ctor\" &lt;&lt; std::endl; }\n~X() { std::cout &lt;&lt; \"X dtor\" &lt;&lt; std::endl; }\nvoid show() { std::cout &lt;&lt; \"show X\" &lt;&lt; std::endl; }\n};\n</code></pre> <p>\u4e00\u3001\u7981\u7528\u6240\u6709\u7f16\u8bd1\u5668\u4f18\u5316\uff0cX\u5e94\u88ab\u6784\u9020\u4e86\u4e09\u6b21</p> <pre><code>X make_x() {\nX x1;   //x1\u7684\u6784\u9020\u3002\u8f93\u51fa\uff1aX ctor\nreturn x1;\n}\nint main() {\nX x2 = make_x();\n/*\n    make_x()\n        1. \u5c06x1\u62f7\u8d1d\u7ed9\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61tmp\u3002\u8f93\u51fa\uff1aX copy ctor\n        2. x1\u751f\u547d\u5468\u671f\u7ed3\u675f\uff0c\u88ab\u6790\u6784\u3002\u8f93\u51fa\uff1aX dtor\n    X x2 = tmp;\n        1. tmp\u62f7\u8d1d\u7ed9x2\u3002\u8f93\u51fa\uff1aX copy ctor\n        2. tmp\u6790\u6784\u3002\u8f93\u51fa\uff1aX dtor\n     */\nx2.show(); //\u8f93\u51fa\uff1ashow x\n}\n//x2\u88ab\u6790\u6784\u3002\u8f93\u51fa\uff1aX dtor\n</code></pre> <p>\u56e0\u6b64\u8f93\u51fa\uff1a</p> <pre><code>X ctor\nX copy ctor\nX dtor\nX copy ctor\nX dtor\nshow x\nX dtor\n</code></pre> <p>\u4e8c\u3001\u5f00\u542f\u51fd\u6570\u8fd4\u56de\u503c\u4f18\u5316</p> <pre><code>X make_x() {\nX x1;  //\u8f93\u51fa\uff1aX ctor\nreturn x1;\n}\nint main() {\nX x2 = make_x();\n//\u7f16\u8bd1\u5668\u7684\u8fd4\u56de\u503c\u4f18\u5316\uff1ax1\u7684\u5185\u5b58\u76f4\u63a5\u7ed9\u4e86x2\u3002\u56e0\u6b64\u8fd9\u91cc\u6ca1\u6709\u89e6\u53d1\u4efb\u4f55\u6784\u9020\nx2.show(); //\u8f93\u51fa\uff1ashow X\n}\n//\u8f93\u51fa\uff1aX dtor\n</code></pre> <p>\u56e0\u6b64\u8f93\u51fa\uff1a</p> <pre><code>X ctor\nshow X\nX dtor\n</code></pre> <p>\u4e09\u3001\u7981\u7528\u6240\u6709\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u4f46\u4f7f\u7528\u53f3\u503c\u5f15\u7528</p> <pre><code>X make_x() {\nX x1;      //\u6784\u9020x1\u3002\u8f93\u51fa\uff1aX ctor\nreturn x1;\n}\nint main() {\nX&amp;&amp; x2 = make_x();\n/*\n    make_x()\n        1. \u5c06x1\u62f7\u8d1d\u7ed9\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61tmp\u3002\u56e0\u6b64\u8f93\u51fa\uff1aX copy ctor\n        2. x1\u5b8c\u6210\u4f7f\u547d\uff0c\u88ab\u6790\u6784\u3002\u56e0\u6b64\u8f93\u51fa\uff1aX dtor\n    X&amp;&amp; x2 = tmp; x2\u662ftmp\u7684\u53f3\u503c\u5f15\u7528\n        tmp\u662f\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u56e0\u6b64\u662f\u5c06\u4ea1\u503c\uff0c\u5c06\u4ea1\u503c\u662f\u53f3\u503c\n        x2\u5bf9\u6b64\u5c06\u4ea1\u503c\u8fdb\u884c\u5f15\u7528\n     */\nx2.show(); //\u8f93\u51fa\uff1ashow X\n}\n//\u53f3\u503c\u5f15\u7528x2\u751f\u547d\u5468\u671f\u7ed3\u675f\u3002\u8f93\u51fa\uff1aX dtor\n</code></pre> <p>\u56e0\u6b64\u8f93\u51fa\uff1a</p> <pre><code>X ctor\nX copy ctor\nX dtor\nshow X\nX dtor\n</code></pre> <p>\u3010\u7efc\u4e0a\u3011\u53f3\u503c\u5f15\u7528\u5ef6\u957f\u4e86\u53f3\u503c\u7684\u751f\u547d\u5468\u671f\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u5bf9\u8c61\u7684\u590d\u5236\uff0c\u63d0\u5347\u7a0b\u5e8f\u7684\u6027\u80fd</p> <p>\u3010\u5982\u4f55\u5173\u95ed\u51fd\u6570\u8fd4\u56de\u503c\u4f18\u5316\uff1f\u3011</p> <ol> <li>GCC\u52a0\u547d\u4ee4\u884c\u53c2\u6570\uff1a<code>-fno-elide-constructors</code></li> <li>CMake\uff1a <code>set(CMAKE_CXX_FLAGS \"-fno-elide-constructors\")</code></li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_12","title":"\u79fb\u52a8\u8bed\u4e49","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_13","title":"\u5f15\u8a00","text":"<p>\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u4e0a\u6240\u8c08\uff0c\u5728\u6ca1\u6709\u7f16\u8bd1\u5668\u4f18\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u53d1\u751f\u4e09\u6b21\u62f7\u8d1d\u3002\u5982\u679c<code>X</code>\u662f\u4e00\u4e2a\u5927\u5bf9\u8c61\uff0c\u90a3\u662f\u4e00\u4e2a\u6781\u5927\u7684\u5f00\u9500\u3001\u6570\u636e\u590d\u5236\u4e5f\u5f88\u6162\uff0c\u9891\u7e41\u7533\u8bf7\u548c\u91ca\u653e\u5185\u5b58\u8fd8\u5f88\u5bb9\u6613\u4ea7\u751f\u5185\u5b58\u788e\u7247\u3002</p> <pre><code>class BigMemoryPool {\npublic:\nstatic const int PoolSize = 4096; BigMemoryPool() : pool_(new char[PoolSize]) {}\n~BigMemoryPool() { if (pool_ != nullptr) delete[] pool_; }\nBigMemoryPool(const BigMemoryPool&amp; other) : pool_(new char[PoolSize]) {\nstd::cout &lt;&lt; \"copy big memory pool.\" &lt;&lt; std::endl; //\u4e00\u6b21\u62f7\u8d1d\u5c314kb\nmemcpy(pool_, other.pool_, PoolSize);\n}\nprivate:\nchar* pool_;\n};\nBigMemoryPool get_pool(const BigMemoryPool&amp; pool) {\nreturn pool; //copy\n}\nBigMemoryPool make_pool() {\nBigMemoryPool pool;\nreturn get_pool(pool);\n}\nint main() {\nBigMemoryPool my_pool = make_pool();\n}\n</code></pre> <p>C++\u7684\u590d\u5236\u6784\u9020\u51fd\u6570\u901a\u5e38\u88ab\u8bbe\u8ba1\u4e3a\u4e00\u4e2a\u6df1\u62f7\u8d1d\uff0c\u4f46\u5bf9\u4e8e\u67d0\u4e9b\u60c5\u51b5\uff0c\u662f\u6ca1\u6709\u5fc5\u8981\u8fdb\u884c\u6df1\u62f7\u8d1d\u7684\u3002 \u6bd4\u5982\u4ee5\u4e0b\u60c5\u51b5</p> <pre><code>BigMemoryPool b;\n{\nBigMemoryPool a;\nb = a;\n}\n</code></pre> <ul> <li><code>a</code>\u5373\u5c06\u88ab\u9500\u6bc1\uff0c\u56e0\u6b64a\u91cc\u7684<code>pool_</code>\u5f88\u5feb\u5c31\u4e0d\u8981\u7528\u4e86</li> <li>\u90a3\u4e48<code>b=a</code>\u80fd\u4e0d\u80fd\u4e0d\u89e6\u53d1\u6df1\u62f7\u8d1d\uff0c\u7528\u6d45\u62f7\u8d1d\u5373\u53ef\uff0c\u5c06<code>a</code>\u7684\u5185\u5b58\u5077\u8fc7\u6765\uff1f</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_14","title":"\u79fb\u52a8\u8bed\u4e49","text":"<p>\u52a0\u4e00\u4e2a\u79fb\u52a8\u6784\u9020\u51fd\u6570\u5373\u53ef</p> <ul> <li>\u5728\u79fb\u52a8\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u7528\u6d45\u62f7\u8d1d\u5373\u53ef</li> <li>\u8d4b\u503c\u65f6<ul> <li><code>b = std::move(a)</code>\u5373\u53ef\u89e6\u53d1\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> <li>\u6216\u8005\uff0c\u5982\u679c<code>a</code>\u662f\u4e00\u4e2a\u53f3\u503c\uff0c\u4e5f\u4f1a\u89e6\u53d1\u79fb\u52a8\u6784\u9020\u51fd\u6570</li> </ul> </li> </ul> <pre><code>class BigMemoryPool{\npublic:\n//\u8981\u5077\u4eba\u5bb6\u4e1c\u897f\uff0c\u4e0d\u80fd\u6709const\uff0c\u56e0\u6b64\u8981\u4f20non-const\u7684\u53f3\u503c\u5f15\u7528\u7c7b\u578b\nBigMemoryPool(BigMemoryPool&amp;&amp; other) noexcept {\nstd::cout &lt;&lt; \"move big memory pool.\" &lt;&lt; std::endl;\npool_ = other.pool_;   //\u5c06other\u7684\u5185\u5b58\u6307\u9488\u76f4\u63a5\u8d4b\u503c\u8fc7\u6765\nother.pool_ = nullptr; //\u5c06ohter\u7684\u7f6e\u7a7a\n}\n}\nBigMemoryPool b;\n{\nBigMemoryPool a;\nb = std::move(a);\n}\n</code></pre> <p>\u3010\u79fb\u52a8\u3011\u79fb\u52a8\uff0c\u5c31\u662f\u628a\u53d8\u91cf\u5185\u90e8\u6240\u7ba1\u7406\u7684\u5185\u5b58\u79fb\u52a8\u51fa\u6765\u3002</p> <p>\u3010\u9ed8\u8ba4\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570\u3011\u540c\u590d\u5236\u6784\u9020\u51fd\u6570\u4e00\u6837\uff0c\u7f16\u8bd1\u5668\u5728\u4e00\u4e9b\u6761\u4ef6\u4e0b\u4f1a\u751f\u6210\u4e00\u4efd\u79fb\u52a8\u6784\u9020\u51fd\u6570</p> <p>\u8fd9\u4e9b\u6761\u4ef6\u5305\u62ec</p> <ol> <li>\u6ca1\u6709\u4efb\u4f55\u7684\u590d\u5236\u51fd\u6570\uff0c\u5305\u62ec\u590d\u5236\u6784\u9020\u51fd\u6570\u548c\u590d\u5236\u8d4b\u503c\u51fd\u6570</li> <li>\u6ca1\u6709\u4efb\u4f55\u7684\u79fb\u52a8\u51fd\u6570\uff0c\u5305\u62ec\u79fb\u52a8\u6784\u9020\u51fd\u6570\u548c\u79fb\u52a8\u8d4b\u503c\u51fd\u6570</li> <li>\u6ca1\u6709\u6790\u6784\u51fd\u6570</li> </ol> <p>\u867d\u7136\u8fd9\u4e9b\u6761\u4ef6\u4e25\u82db\u3002\u4f46\u9ed8\u8ba4\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570\u548c\u9ed8\u8ba4\u7684\u590d\u5236\u6784\u9020\u51fd\u6570\u5e76\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u56e0\u6b64\u4e0d\u5fc5\u5bf9\u7f16\u8bd1\u5668\u63d0\u4f9b\u7684\u9ed8\u8ba4\u79fb\u52a8\u6784\u9020\u51fd\u6570\u7531\u592a\u591a\u671f\u5f85\u3002</p> <p>\u3010<code>noexcept</code>\u3011\u867d\u7136\u4f7f\u7528\u79fb\u52a8\u8bed\u4e49\u5728\u6027\u80fd\u4e0a\u6709\u5f88\u5927\u6536\u76ca\uff0c\u4f46\u5374\u6709\u5f88\u5927\u98ce\u9669\uff0c\u8fd9\u4e9b\u98ce\u9669\u6765\u81ea\u5f02\u5e38</p> <ul> <li>\u5982\u679c\u5728\u79fb\u52a8\u6784\u9020\u51fd\u6570\u4e2d\u53d1\u751f\u4e86\u5f02\u5e38\uff0c\u4e00\u90e8\u5206\u8d44\u6e90\u79fb\u52a8\u6210\u529f\uff0c\u800c\u6709\u4e00\u90e8\u5206\u8d44\u6e90\u79fb\u52a8\u5931\u8d25</li> <li>\u8fd9\u4f1a\u9020\u6210\u6e90\u5bf9\u8c61\u548c\u76ee\u6807\u5bf9\u8c61\u90fd\u4e0d\u5b8c\u6574\uff0c\u8fd9\u79cd\u60c5\u51b5\u65e0\u6cd5\u9884\u6d4b</li> <li>\u56e0\u6b64\u9700\u8981\u5728\u7f16\u5199\u79fb\u52a8\u8bed\u4e49\u51fd\u6570\u65f6\uff0c\u5efa\u8bae\u786e\u4fdd\u51fd\u6570\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38</li> <li>\u5982\u679c\u4e0d\u80fd\u786e\u4fdd\u51fd\u6570\u4f1a\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u53ef\u4f7f\u7528<code>noexcept</code>\u9650\u5236\u8be5\u51fd\u6570\u3002\u5982\u6b64\uff0c\u5f53\u51fd\u6570\u629b\u5f02\u5e38\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u8c03\u7528<code>std::terminate</code>\u5f3a\u884c\u4e2d\u6b62</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_15","title":"\u503c\u7c7b\u578b","text":"<p>\u201c\u503c\u7c7b\u578b\u201d\uff08\u5de6\u503c\u3001\u53f3\u503c\uff09\u662f\u8868\u8fbe\u5f0f\u7684\u4e00\u79cd\u5c5e\u6027</p> <ul> <li>\u53f3\u503c\u4e0d\u80fd\u88ab\u53d6\u5730\u5740\uff1b\u800c\u5de6\u503c\u53ef\u4ee5</li> <li>\u7eaf\u53f3\u503c\uff0c\u5373\u5305\u62ec\u975e\u5b57\u7b26\u4e32\u7684\u5b57\u9762\u91cf\uff0c\u59821\u30011.0\u7b49</li> </ul> <pre><code>graph TD\n    expression\u8868\u8fbe\u5f0f --&gt; glvalue\u6cdb\u5de6\u503c\n    expression\u8868\u8fbe\u5f0f --&gt; rvalue\u53f3\u503c\n\n    glvalue\u6cdb\u5de6\u503c --&gt; lvalue\u5de6\u503c\n    glvalue\u6cdb\u5de6\u503c --&gt; xvalue\u5c06\u4ea1\u503c\n    rvalue\u53f3\u503c --&gt; xvalue\u5c06\u4ea1\u503c\n    rvalue\u53f3\u503c --&gt; prvalue\u7eaf\u53f3\u503c</code></pre> <pre><code>struct Point\n{\nfloat x;\nfloat y;\n};\n//\u5c06\u4ea1\u503c\uff08\u4e34\u65f6\u5bf9\u8c61\uff09\u5c5e\u4e8e\u53f3\u503c\u7684\u8303\u7574\nauto* p = &amp;Point(); //\u7f16\u8bd1\u62a5\u9519\uff1aerror: taking address of rvalue [-fpermissive]\n//\u4f7f\u7528\u53f3\u503c\u5f15\u7528\uff0c\u53ef\u4ee5\u5ef6\u7eed\u5c06\u4ea1\u503c\u7684\u751f\u547d\u5468\u671f\uff0c\u56e0\u4e3a\u5c06\u4ea1\u503c\u4e5f\u6709\u5b9e\u9645\u7684\u4e00\u5757\u5185\u5b58\nconst auto&amp; a = Point(); //\u5f15\u7528\u5b8c\u4e4b\u540e\uff0c\u5c06\u4ea1\u503c\u53c8\u53ef\u4ee5\u63a5\u7740\u7528\uff0c\u56e0\u6b64\u53c8\u662f\u6cdb\u5de6\u503c\u7684\u6982\u5ff5\nauto* p = &amp;a; //\u56e0\u4e3a\u53ef\u4ee5\u5bf9\u5b83\u53d6\u5730\u5740\n</code></pre> <p>\u4e66\u4e2d\u539f\u6587\uff08\u201c\u8bc4\u4f30\u201d\u7ffb\u8bd1\u6210\u201c\u6c42\u503c\u201d\u66f4\u597d\uff09</p> <ol> <li>\u6240\u8c13\u6cdb\u5de6\u503c\u662f\u6307\u4e00\u4e2a\u901a\u8fc7\u8bc4\u4f30\uff08\u6c42\u503c\uff09\u80fd\u591f\u786e\u5b9a\u5bf9\u8c61\u3001\u4f4d\u57df\u6216\u51fd\u6570\u6807\u8bc6\u7684\u8868\u8fbe\u5f0f\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5b83\u786e\u5b9a\u4e86\u5bf9\u8c61\u6216\u8005\u51fd\u6570\u7684\u6807\u8bc6\uff08\u5177\u540d\u5bf9\u8c61\uff09</li> <li>\u7eaf\u53f3\u503c\u662f\u6307\u4e00\u4e2a\u901a\u8fc7\u8bc4\u4f30\uff08\u6c42\u503c\uff09\u80fd\u591f\u7528\u4e8e\u521d\u59cb\u5316\u5bf9\u8c61\u548c\u4f4d\u57df\uff0c\u6216\u8005\u80fd\u591f\u8ba1\u7b97\u8fd0\u7b97\u7b26\u64cd\u4f5c\u6570\u7684\u503c\u7684\u8868\u8fbe\u5f0f</li> <li>\u5c06\u4ea1\u503c\u5c5e\u4e8e\u6cdb\u5de6\u503c\u7684\u4e00\u79cd\uff0c\u5b83\u8868\u793a\u8d44\u6e90\u53ef\u4ee5\u88ab\u91cd\u7528\u7684\u5bf9\u8c61\u548c\u4f4d\u57df\uff0c\u901a\u5e38\u8fd9\u662f\u56e0\u4e3a\u5b83\u4eec\u63a5\u8fd1\u5176\u751f\u547d\u5468\u671f\u7684\u672b\u5c3e\uff0c\u53e6\u5916\u4e5f\u53ef\u80fd\u662f\u7ecf\u8fc7\u53f3\u503c\u5f15\u7528\u7684\u8f6c\u6362\u4ea7\u751f\u7684</li> <li>\u2026\u2026</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%9F%BA%E7%A1%80/%E8%B5%84%E6%96%99/%E3%80%8A%E7%8E%B0%E4%BB%A3%20C%2B%2B%20%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E3%80%8B/6%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/#_16","title":"\u5982\u4f55\u4ea7\u751f\u5c06\u4ea1\u503c","text":"<p>\u7b2c\u4e00\u79cd\uff1a\u4f7f\u7528\u7c7b\u578b\u8f6c\u6362\u5c06\u6cdb\u5de6\u503c\u8f6c\u6362\u4e3a\u8be5\u7c7b\u578b\u7684\u53f3\u503c\u5f15\u7528</p> <pre><code>static_cast&lt;BigMemoryPool&amp;&amp;&gt;(my_pool);\n</code></pre> <p>\u7b2c\u4e8c\u79cd\uff1a\u5728C++17\u4e2d\u5f15\u5165\uff0c\u79f0\u5b83\u4e3a\u4e34\u65f6\u91cf\u5b9e\u8d28\u5316\uff0c\u6307\u7684\u662f\u7eaf\u53f3\u503c\u8f6c\u6362\u5230\u4e34\u65f6\u5bf9\u8c61\u7684\u8fc7\u7a0b</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/","title":"C++\u5de5\u7a0b\u6784\u5efa","text":"<p>\u6784\u5efa\u7cfb\u7edf\uff08BuildSystem\uff09\u662f\u7528\u6765\u4ece\u6e90\u7801\u751f\u6210\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u7684\u76ee\u6807\uff08Targets\uff09\u7684\u81ea\u52a8\u5316\u5de5\u5177\u3002\u76ee\u6807\u53ef\u4ee5\u5305\u62ec\u5e93\uff0c\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6216\u8005\u751f\u6210\u7684\u811a\u672c\u7b49\u7b49\u3002</p> <ol> <li>\u9879\u76ee\u6a21\u5757\u4f9d\u8d56\u5173\u7cfb\u7ef4\u62a4 \uff1b</li> <li>\u76ee\u6807\u7684\u53ef\u914d\u7f6e\u5316\uff08\u4e0d\u540c\u7cfb\u7edf\uff1aWindows\uff0cMac\u2026\uff1b\u4e0d\u540c\u5e73\u53f0\uff1aWin32\uff0cWin64\uff0cAmd64\u2026\uff09</li> <li>\u76ee\u6807\u751f\u6210\u7684\u81ea\u52a8\u5316</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/CUI/CUI%E5%91%BD%E4%BB%A4/","title":"CUI\u547d\u4ee4","text":"<pre><code># \u751f\u6210Visual Studio VC++15\uff08\u5373VS2017\uff09\ncmake -G \"Visual Studio 15 Win64\"   #x64\ncmake -G \"Visual Studio 15\"         #x86\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/GUI/%E5%88%86%E7%BB%84/","title":"\u5206\u7ec4","text":"<p>\u5728CMake GUI\u7684\u754c\u9762\u4e2d\uff0c\u6709\u4e9b\u53d8\u91cf\u4f1a\u5206\u7ec4\u8868\u793a  </p> <ol> <li>\u8fd9\u4e9b\u53d8\u91cf\u662f\u6309\u5b57\u7b26<code>_</code>\u6765\u5206\u7ec4\u7684  </li> <li>\u7ec4\u540d\u662f\u4ee5<code>_</code>\u5206\u5272\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcd  </li> </ol>","tags":["cmake","GUI"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/GUI/%E5%8F%AF%E9%80%89%E5%8F%82%E6%95%B0/","title":"\u53ef\u9009\u53c2\u6570","text":"<pre><code># GUI\u4e2d\u4f1a\u663e\u793a\u9009\u9879\uff0c\u9ed8\u8ba4\u4e3aON\noption(Build_SWIG_DotNet \"Build Swig DotNet...\" OFF)\n# \u8fd9\u91cc\u53ea\u662f\u5224\u65ad\u53d8\u91cf\u662f\u5426\u88ab\u5b9a\u4e49\u8fc7\uff0c\u65e0\u6cd5\u5224\u65ad\u662fON\uff0c\u8fd8\u662fOFF\nif(Build_SWIG_DotNet)\n#Build_SWIG_DotNet\u53d8\u91cf\uff0c\u88ab\u5b9a\u4e49\u8fc7\n#option\u4e2d\u5df2\u7ecf\u5b9a\u4e49\u4e86Build_SWIG_DotNet\u53d8\u91cf\uff0c\u6240\u4ee5Build_SWIG_DotNet\u65e0\u8bba\u662fON\uff0c\u8fd8\u662fOFF\uff0c\u90fd\u4f1a\u8fdb\u6765\uff01\nelse()\n#Build_SWIG_DotNet\u53d8\u91cf\uff0c\u6ca1\u6709\u88ab\u5b9a\u4e49\u8fc7\nend()\n# \u8fd9\u624d\u662f\u5224\u65ad\u662fON\uff0c\u8fd8\u662fOFF\nif(${Build_SWIG_DotNet} STREQUAL \"ON\")\n#\u7f16\u8bd1swig dotnet\u6a21\u5757\nelse()\n#\u4e0d\u7f16\u8bd1swig dotnet\u6a21\u5757\nend()\n</code></pre>","tags":["cmake","GUI"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/GUI/%E5%8F%AF%E9%80%89%E9%A1%B9/","title":"\u53ef\u9009\u9879","text":"<pre><code># \u4e3aCMAKE_BUILD_TYPE\u6dfb\u52a0\u56db\u4e2a\u9009\u9879\nset_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\"\n)\n</code></pre>","tags":["cmake","GUI"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/GUI/%E5%9C%A8GUI%E4%B8%8A%E6%98%BE%E7%A4%BA%E5%8F%98%E9%87%8F/","title":"\u5728GUI\u4e0a\u663e\u793a\u53d8\u91cf","text":"","tags":["cmake","GUI","CACHE","mark as advanced"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/GUI/%E5%9C%A8GUI%E4%B8%8A%E6%98%BE%E7%A4%BA%E5%8F%98%E9%87%8F/#cache","title":"CACHE\u53d8\u91cf","text":"<p>CMake\u4e2d\u6709\u4e24\u79cd\u53d8\u91cf</p> <ol> <li>Cache Variables\uff1a\u53d8\u91cf\u88ab\u663e\u793a\u7533\u660e\u6210CACHE\u53d8\u91cf\uff0c\u5b83\u5c31\u4f1a\u663e\u793a\u5728CMake GUI\u4e2d\u3002\u5982<code>set(MY_CACHE_VAL \"666\" CACHE STRING INTERNAL)</code>\uff0c\u76f8\u5f53\u4e8e\u5168\u5c40\u53d8\u91cf</li> <li>Normal Variables\uff1a\u6ca1\u6709\u88ab\u7533\u660e\u6210CACHE\u7684\u53d8\u91cf\uff0c\u90fd\u662fNormal\u53d8\u91cf\u3002\u5982<code>set(MY_VAL \"666\")</code>\uff0c\u4f5c\u7528\u57df\u53ea\u5728CMakeLists.txt\u6587\u4ef6\u5f53\u4e2d</li> </ol> <p>Cache\u53d8\u91cf\u7684\u5b9a\u4e49\uff1a <pre><code>set(&lt;variable&gt; &lt;value&gt;... CACHE &lt;type&gt; &lt;docstring&gt; [FORCE])\n</code></pre></p> <p>\u53c2\u6570\u8bf4\u660e\uff1a 1. TYPE <pre><code>FILEPATH = File chooser dialog.\nPATH     = Directory chooser dialog.\nSTRING   = Arbitrary string.\nBOOL     = Boolean ON/OFF checkbox.\nINTERNAL = No GUI entry (used for persistent variables).\n</code></pre> 2. docstring\uff1a\u5fc5\u987b\u662f\u5b57\u7b26\u4e32\uff0c\u4f5c\u4e3a\u53d8\u91cf\u6982\u8981\u8bf4\u660e 3. FORCE\uff1a\u5f3a\u5236\u9009\u9879\uff0c\u5f3a\u5236\u4fee\u6539\u53d8\u91cf\u503c</p> <p>\u793a\u4f8b <pre><code>set(GLEW_USE_STATIC_LIBS ON CACHE BOOL \"\" FORCE)\n</code></pre></p>","tags":["cmake","GUI","CACHE","mark as advanced"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/GUI/%E5%9C%A8GUI%E4%B8%8A%E6%98%BE%E7%A4%BA%E5%8F%98%E9%87%8F/#_1","title":"\u9ad8\u7ea7\u9009\u9879","text":"<pre><code># \u5c06LibHello_INCLUDE_DIR\u8bbe\u7f6e\u4e3a\u9ad8\u7ea7\u9009\u9879\nset(LibHello_INCLUDE_DIR ${LibHello_INCLUDE_DIR} CACHE) #\u5c06\u8be5\u53d8\u91cf\u8bbe\u7f6e\u6210cache\u53d8\u91cf\nmark_as_advanced(LibHello_INCLUDE_DIR)  #\u53ea\u6709cache\u53d8\u91cf\u624d\u80fd\u88ab\u8bbe\u7f6e\u4e3a\u9ad8\u7ea7\u9009\u9879\n</code></pre>","tags":["cmake","GUI","CACHE","mark as advanced"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/GUI/%E5%9C%A8GUI%E4%B8%8A%E6%98%BE%E7%A4%BA%E5%8F%98%E9%87%8F/#_2","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>CMake\u5b98\u65b9\u6587\u6863\u2014\u2014set</li> <li>cmake cache\u53d8\u91cf</li> </ol>","tags":["cmake","GUI","CACHE","mark as advanced"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%8F%98%E9%87%8F/%E5%B7%A5%E7%A8%8B%E7%9B%B8%E5%85%B3/","title":"\u5de5\u7a0b\u76f8\u5173","text":"\u53d8\u91cf\u540d \u8bf4\u660e \u4f8b\u5b50 <code>PROJECT_NAME</code> \u5de5\u7a0b\u540d","tags":["cmake"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%8F%98%E9%87%8F/%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/","title":"\u73af\u5883\u76f8\u5173","text":"","tags":["cmake"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%8F%98%E9%87%8F/%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/#_1","title":"\u67b6\u6784","text":"<pre><code>if(CMAKE_SIZEOF_VOID_P EQUAL 8)\nset(_arch \"x64\")\nelse()\nset(_arch \"Win32\")\nendif()\n</code></pre>","tags":["cmake"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%8F%98%E9%87%8F/%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/#_2","title":"\u5e73\u53f0","text":"<pre><code>IF (WIN32)\nMESSAGE(STATUS \"Now is windows\")\nELSEIF (APPLE)\nMESSAGE(STATUS \"Now is Apple systens.\")\nELSEIF (UNIX)\nMESSAGE(STATUS \"Now is UNIX-like OS's.\")\nENDIF ()\n</code></pre>","tags":["cmake"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%8F%98%E9%87%8F/%E8%B7%AF%E5%BE%84%E7%9B%B8%E5%85%B3/","title":"\u8def\u5f84\u76f8\u5173","text":"\u53d8\u91cf\u540d \u8bf4\u660e \u793a\u4f8b <code>CMAKE_SOURCE_DIR</code>\u6216<code>PROJECT_SOURCE_DIR</code> \u5de5\u7a0b\u6839\u76ee\u5f55\uff08\u9876\u90e8CMakeLists.txt\u6240\u5728\u76ee\u5f55\uff09 <code>.\\</code> <code>CMAKE_BINARY_DIR</code>\u6216<code>PROJECT_BINARY_DIR</code> \u5de5\u7a0bbuild\u76ee\u5f55 <code>.\\build</code> <code>CMAKE_CURRENT_LIST_DIR</code> \u5f53\u524d<code>CMakeLists.txt</code>\u6216<code>*.cmake</code>\u6240\u5728\u76ee\u5f55 <code>.\\submodules\\HiOpenGL</code>","tags":["cmake"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E7%94%9F%E6%88%90%E5%99%A8%E8%A1%A8%E8%BE%BE%E5%BC%8F/","title":"\u751f\u6210\u5668\u8868\u8fbe\u5f0f","text":"<p>\u751f\u6210\u5668\u8868\u8fbe\u5f0f\uff08Generator Expressions\uff09\u662f CMake \u4e2d\u7528\u4e8e\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u52a8\u6001\u8ba1\u7b97\u503c\u7684\u4e00\u79cd\u7279\u6b8a\u8bed\u6cd5\uff0c\u53ef\u4ee5\u5d4c\u5165\u5230\u547d\u4ee4\u5b57\u7b26\u4e32\u4e2d\u3002\u5b83\u4eec\u6709\u5f88\u591a\u7528\u9014\uff0c\u4f8b\u5982\u83b7\u53d6\u76ee\u6807\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\u3001\u83b7\u53d6\u76ee\u6807\u8f93\u51fa\u76ee\u5f55\u7684\u8def\u5f84\u7b49\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f</p> <ol> <li>\u5728\u4f7f\u7528\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u65f6\uff0c\u5e94\u8be5\u5c06\u5176\u653e\u5728\u4e00\u5bf9 <code>$&lt;&gt;</code> \u4e2d\uff0c\u5e76\u786e\u4fdd\u6b63\u786e\u7684\u8bed\u6cd5\u548c\u6b63\u786e\u7684\u7528\u6cd5</li> <li>\u5728\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u8868\u8fbe\u5f0f\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u8868\u8fbe\u5f0f\u90fd\u901a\u7528</li> </ol> <p>\u4f8b\u5982\uff0c<code>$&lt;CONFIG&gt;</code>\u53ef\u83b7\u5f97\u6784\u5efa\u914d\u7f6e\u7684\u540d\u79f0\uff08Debug\u3001Relase\u7b49\uff09</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E7%94%9F%E6%88%90%E5%99%A8%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_1","title":"\u7248\u672c","text":"<ol> <li>CMake 2.6 \u7248\u672c\u5f00\u59cb\u652f\u6301\u751f\u6210\u5668\u8868\u8fbe\u5f0f</li> <li>\u4f46\u662f\u5728 CMake 2.6 \u548c 3.0 \u4e4b\u95f4\u7684\u7248\u672c\u4e2d\uff0c\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u548c\u7528\u6cd5\u6bd4\u8f83\u6709\u9650\u548c\u4e0d\u5b8c\u6574\uff0c\u53ea\u80fd\u7528\u4e8e\u4e00\u4e9b\u975e\u5e38\u57fa\u672c\u7684\u5e94\u7528\u573a\u666f</li> <li>\u4ece CMake 3.0 \u5f00\u59cb\uff0c\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u7684\u529f\u80fd\u5f97\u5230\u4e86\u5927\u5e45\u5ea6\u6269\u5c55\u548c\u6539\u8fdb\uff0c\u53ef\u4ee5\u7528\u4e8e\u66f4\u591a\u590d\u6742\u7684\u5e94\u7528\u573a\u666f\uff0c\u5e76\u4e14\u8bed\u6cd5\u548c\u7528\u6cd5\u4e5f\u66f4\u52a0\u89c4\u8303\u548c\u7075\u6d3b</li> </ol> <p>\u56e0\u6b64\uff0c\u5efa\u8bae\u7528\u6237\u4f7f\u7528 CMake 3.0 \u53ca\u4ee5\u4e0a\u7248\u672c\u6765\u5145\u5206\u53d1\u6325\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u7684\u4f18\u52bf\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/","title":"Find package","text":"<p>\u5728CMake\u5f53\u4e2d\uff0c\u5e38\u7528<code>find_package</code>\u547d\u4ee4\u6765\u641c\u7d22\u4e00\u4e2a\u7b2c\u4e09\u65b9\u5e93\u3002</p>","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/#_1","title":"\u7528\u6cd5","text":"","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/#_2","title":"\u641c\u7d22\u5e93","text":"<p><code>find_package</code>\u7528\u6cd5\u5f88\u7b80\u5355\uff0c\u4ee5\u4e0b\u53c2\u6570\u9664\u4e86\u540d\u79f0\u662f\u5fc5\u987b\u7684\uff0c\u5176\u4ed6\u90fd\u662f\u53ef\u9009\u9879\u3002 <pre><code>find_package(\nBoost         #\u5e93\u540d\u79f0\uff0c\u8bb0\u4e3a&lt;PackageName&gt;\n1.46.1        #\u7248\u672c\nREQUIRED      #\u662f\u5426\u5fc5\u987b\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u8be5\u5e93\u5c31\u4f1a\u62a5\u9519\u5f3a\u5236\u9000\u51fa\nCOMPONENTS    #\u53ea\u52a0\u8f7d\u8be5\u5e93\u7684\u67d0\u4e9b\u7ec4\u4ef6\uff08\u540e\u53ef\u4ee5\u8ddfN\u4e2a\u7ec4\u4ef6\u540d\uff09\nfilesystem    #\u7ec4\u4ef6\u540d\nsystem        #\u7ec4\u4ef6\u540d\n)\nif(Boost_FOUND) #\u5982\u679c\u627e\u5230\uff0c\u5219&lt;PackageName&gt;_FOUND\u4e3a\u771f\nmessage (\"boost found\")\nelse()\nmessage (FATAL_ERROR \"Cannot find Boost\")\nendif()\n</code></pre></p>","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/#_3","title":"\u5f15\u7528\u5e93","text":"<p>\u5982\u679c\u641c\u7d22\u6210\u529f\uff0c\u4f60\u6709\u4e24\u79cd\u65b9\u5f0f\u5f15\u7528\u8fd9\u4e2a\u5e93\u3002</p>","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/#cmake","title":"\u65e7\u7248CMake","text":"<p>TODO</p>","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/#cmake_1","title":"\u73b0\u4ee3CMake","text":"<p>\u5728\u73b0\u4ee3CMake\uff0c\u5982\u679c\u6210\u529f\u5f15\u5165\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u7b2c\u4e09\u65b9\u5e93\u7684TARGET\uff0c\u4f60\u76f4\u63a5\u94fe\u63a5\u5373\u53ef\uff0c\u65e0\u9700\u50cf\u539f\u5148\u4e00\u6837\u9ebb\u70e6\u3002</p> <p>\u5b8c\u6574\u793a\u4f8b\uff1a <pre><code>cmake_minimum_required(VERSION 3.5)\n# Set the project name\nproject (imported_targets)\n# find a boost install with the libraries filesystem and system\nfind_package(Boost 1.46.1 REQUIRED COMPONENTS filesystem system)\n# check if boost was found\nif(Boost_FOUND)\nmessage (\"boost found\")\nelse()\nmessage (FATAL_ERROR \"Cannot find Boost\")\nendif()\n# Add an executable\nadd_executable(imported_targets main.cpp)\n# link against the boost libraries\n#\u76f4\u63a5\u5f15\u7528&lt;PackageName&gt;::&lt;ComponentName&gt;\ntarget_link_libraries(imported_targets\nPRIVATE\nBoost::filesystem\n)\n</code></pre></p>","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/#_4","title":"\u641c\u7d22\u6a21\u5f0f","text":"<p>\u95ee\u9898\uff1afind_package`\u5728\u54ea\u4e2a\u76ee\u5f55\u4e0b\u641c\u7d22\uff1f\u641c\u7d22\u7684\u662f\u4ec0\u4e48\u6587\u4ef6\uff1f</p> <p><code>find_package</code>\u641c\u7d22\u6709\u4e24\u79cd\u6a21\u5f0f\uff08\u65b9\u5f0f\uff09</p> <ol> <li>Module\uff0c\u6a21\u5757\u6a21\u5f0f</li> <li>Config\uff0c\u914d\u7f6e\u6a21\u5f0f</li> </ol> <p>\u4e24\u79cd\u6a21\u5f0f\u7684\u4f18\u5148\u7ea7</p> <ul> <li>\u9ed8\u8ba4\u7684\u987a\u5e8f\u662f\u5148Module\uff0c\u518dConfig\uff08\u5f53Module\u6a21\u5f0f\u5931\u8d25\u4e4b\u540e\uff0c\u624d\u4f1a\u4f7f\u7528Config\u6a21\u5f0f\uff09</li> <li>\u901a\u8fc7<code>find_package(... CONFIG)</code>\u5373\u53ef\u66f4\u6539\u987a\u5e8f\uff0c\u5148Config\uff0c\u518dModule</li> </ul> <p>\u4e24\u79cd\u6a21\u5f0f\u641c\u7d22\u7684\u76ee\u5f55\u4e0e\u641c\u7d22\u7684\u6587\u4ef6</p> \u6a21\u5f0f \u641c\u7d22\u7684\u8def\u5f84 \u641c\u7d22\u7684\u6587\u4ef6 \u8bf4\u660e \u6a21\u5757(Module) 1. <code>CMAKE_FIND_PACKAGE_REDIRECTS_DIR(3.24)</code>2. <code>CMAKE_MODULE_PATH</code>3. <code>&lt;CMake\u5b89\u88c5\u76ee\u5f55&gt;/share/cmake-&lt;version&gt;/Modules</code>4. \u73af\u5883\u53d8\u91cf\u4e2d\u7684\u76ee\u5f55 <code>Find&lt;PackageName&gt;.cmake</code> \u914d\u7f6e(Config) 1. <code>CMAKE_FIND_PACKAGE_REDIRECTS_DIR(3.24)</code>2. <code>CMAKE_PREFIX_PATH</code>3. \u73af\u5883\u53d8\u91cf\u4e2d\u7684\u76ee\u5f554. \u8be6\u60c5\u8bf7\u770b\u4e0b\u6587 <code>&lt;PackageName&gt;Config.cmake</code>\u6216\u8005<code>&lt;PackageName\u5c0f\u5199&gt;-config.cmake</code>\u6216\u8005<code>&lt;PackageName&gt;ConfigVersion.cmake</code>\u6216\u8005<code>&lt;PackageName\u5c0f\u5199&gt;-config-version.cmake</code> \u5bf9\u4e8eVersion\u53ef\u53c2\u7167Config Mode Version Selection <p>\u5728Cmake3.24\u4ee5\u540e\uff0c\u53c8\u65b0\u589e\u4e86\u4e00\u79cd\u540d\u4e3a**FetchContent redirection**\u7684\u6a21\u5f0f\u3002</p> <p>\u8fd9\u91cc\u4e0d\u8fc7\u591a\u4ecb\u7ecd\uff0c\u7b14\u8005\u8fd8\u672a\u7528\u8fc7\uff0c\u540e\u7eed\u63a5\u89e6\u5230\u518d\u8865\u5145\u3002</p>","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/#cmake_2","title":"\u641c\u7d22\u7684\u6587\u4ef6\uff08\u5e93\u7684CMake\u6587\u4ef6\uff09","text":"<p>\u5982\u4e0a\u8868\uff0c<code>find_package</code>\u4f1a\u5728\u6307\u5b9a\u8def\u5f84\u4e0b\u641c\u7d22<code>Find&lt;PackageName&gt;.cmake</code>\u3001<code>&lt;PackageName&gt;Config.cmake</code>\u6587\u4ef6\uff0c\u6211\u613f\u610f\u5c06\u5b83\u4eec\u79f0\u4e3a\u201c\u5e93\u7684CMake\u6587\u4ef6\u201c\u3002</p> <p>\u5b83\u4eec\u8d1f\u8d23\u627e\u5230\u5e93\u7684\u6240\u5728\u8def\u5f84\uff0c\u4e3a\u6211\u4eec\u7684\u9879\u76ee\u5f15\u5165\u5934\u6587\u4ef6\u8def\u5f84\u548c\u5e93\u6587\u4ef6\u8def\u5f84\u3002 \u8fd9\u4e2a\u6587\u4ef6\u4e2d\u6709\u4e09\u4e2a\u53d8\u91cf\uff1a</p> \u53d8\u91cf\u540d \u8bf4\u660e \u4f8b\u5b50 <code>&lt;PackageName&gt;_FOUND</code> \u503c\u4e3a\u771f\uff0c\u5e38\u7528\u4e8e\u5224\u65ad\u662f\u5426\u641c\u7d22\u6210\u529f Boost_FOUND <code>&lt;PackageName&gt;_INCLUDE_DIR</code> \u6216\u8005<code>&lt;PackageName&gt;_INCLUDES</code> <code>&lt;PackageName&gt;_LIBRARY</code> \u6216\u8005 <code>&lt;PackageName&gt;_LIBRARIES</code>","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/#findpackagenamecmake","title":"<code>Find&lt;PackageName&gt;.cmake</code>\u6587\u4ef6","text":"<p><code>Find&lt;PackageName&gt;.cmake</code>\u6587\u4ef6\u662f\u6a21\u5757\uff08Module\uff09\u6a21\u5f0f\u7684\u641c\u7d22\u76ee\u6807\uff0c\u5b83\u901a\u5e38\u4e0d\u7531\u5305\u672c\u8eab\u63d0\u4f9b\uff0c\u5b83\u901a\u5e38\u7531\u7b2c\u4e09\u65b9\u63d0\u4f9b\uff0c\u4f8b\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001CMake\u7b49\u7b49\u3002\u751a\u81f3\u4f60\u4e5f\u53ef\u4ee5\u7f16\u5199\u8fd9\u4e2a\u6587\u4ef6</p> <ol> <li>\u5728\u6587\u4ef6\u4e2d\u5b9a\u4e49\u90a3\u4e09\u4e2a\u53d8\u91cf\uff0c\u65b9\u4fbf\u65e7\u7248CMake\u65b9\u5f0f\u5f15\u7528\u7b2c\u4e09\u65b9\u5e93</li> <li>\u5728\u6587\u4ef6\u4e2d\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>&lt;PackageName&gt;</code>\u7684Target\uff0c\u65b9\u4fbf\u65b0\u7248CMake\u65b9\u5f0f\u5f15\u7528\u7b2c\u4e09\u65b9\u5e93</li> </ol>","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/#packagenameconfigcmake","title":"<code>&lt;PackageName&gt;Config.cmake</code>\u6587\u4ef6","text":"<p><code>&lt;PackageName&gt;Config.cmake</code>\u6587\u4ef6\u662f\u914d\u7f6e\u6a21\u5f0f\u7684\u641c\u7d22\u76ee\u6807\uff0c\u5b83\u901a\u5e38\u7531\u5305\u672c\u8eab\u63d0\u4f9b\u3002</p> <p>\u82e5\u4e00\u4e2a\u7b2c\u4e09\u65b9\u5e93\u652f\u6301CMake\uff0c\u5728\u5b83\u7684install\u76ee\u5f55\u4e0b\u4e00\u822c\u4f1a\u6709\u4e00\u4e2a<code>cmake</code>\u6587\u4ef6\u5939\uff0c\u5728\u6b64\u6587\u4ef6\u5939\u4e0b\u6709\u5b83\u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u4f8b\u5982\uff0cvtk\u7684\u5b89\u88c5\u76ee\u5f55 </p> <p>\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u5b83\uff0c\u6709\u597d\u51e0\u79cd\u65b9\u5f0f\uff1a</p> <ol> <li>\u7b2c\u4e00\u79cd\uff0c\u5c06\u76ee\u5f55\u6dfb\u52a0\u5230<code>CMAKE_PREFIX_PATH</code>\u53d8\u91cf\u4e2d\u5373\u53ef</li> </ol> <p>TODO </p>","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/#cmake_module_pathcmake_prefix_path","title":"CMAKE_MODULE_PATH\u4e0eCMAKE_PREFIX_PATH","text":"<p><code>CMAKE_MODULE_PATH</code>\u548c <code>CMAKE_PREFIX_PATH</code>\u90fd\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u5185\u90e8\u6709\u591a\u4e2a\u76ee\u5f55\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7list APPEND\u6dfb\u52a0\u4e00\u4e2a\u641c\u7d22\u76ee\u5f55 <pre><code>list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/build)  #\u6dfb\u52a0\u5230find_package module\u6a21\u5f0f\u641c\u7d22\u8def\u5f84\nmessage(STATUS ${CMAKE_MODULE_PATH})\nlist(APPEND CMAKE_PREFIX_PATH ${PROJECT_SOURCE_DIR}/build)  #\u6dfb\u52a0\u5230find_package config\u6a21\u5f0f\u641c\u7d22\u8def\u5f84\nmessage(STATUS ${CMAKE_PREFIX_PATH})\n</code></pre></p>","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/#config","title":"Config\u6a21\u5f0f\u7684\u641c\u7d22\u76ee\u5f55","text":"<p>TODO</p> <p><code>&lt;PackageName&gt;_DIR</code></p>","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/#_5","title":"\u5b8c\u6574\u7b7e\u540d","text":"<pre><code>find_package(\n    &lt;PackageName&gt;  #\u5305\u540d\n    [version]      #\u7248\u672c\u53f7\n    [EXACT] [QUIET]\n    [REQUIRED]     #\u662f\u5426\u5fc5\u987b\n    [[COMPONENTS] [components...]]        #\u53ea\u52a0\u8f7d\u8be5\u5e93\u7684\u67d0\u4e9b\u7ec4\u4ef6\n    [OPTIONAL_COMPONENTS components...]   #\u53ef\u9009\u7ec4\u4ef6\n    [CONFIG|NO_MODULE]   #\u4f7f\u7528Config\u6a21\u5f0f\uff08\u9ed8\u8ba4\u662f\u4f7f\u7528Module\u6a21\u5f0f\uff09\n    [NO_POLICY_SCOPE]\n    [NAMES name1 [name2 ...]]\n    [CONFIGS config1 [config2 ...]]\n    [HINTS path1 [path2 ... ]]   #\u6307\u5b9a\u641c\u7d22\u76ee\u5f55\n    [PATHS path1 [path2 ... ]]   #\u6307\u5b9a\u641c\u7d22\u76ee\u5f55\n    [PATH_SUFFIXES suffix1 [suffix2 ...]]\n    [NO_DEFAULT_PATH]\n    [NO_PACKAGE_ROOT_PATH]\n    [NO_CMAKE_PATH]\n    [NO_CMAKE_ENVIRONMENT_PATH]\n    [NO_SYSTEM_ENVIRONMENT_PATH]\n    [NO_CMAKE_PACKAGE_REGISTRY]\n    [NO_CMAKE_BUILDS_PATH] # Deprecated; does nothing.\n    [NO_CMAKE_SYSTEM_PATH]\n    [NO_CMAKE_SYSTEM_PACKAGE_REGISTRY]\n    [CMAKE_FIND_ROOT_PATH_BOTH | ONLY_CMAKE_FIND_ROOT_PATH | NO_CMAKE_FIND_ROOT_PATH])\n</code></pre>","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/#_6","title":"\u67e5\u627e\u5931\u8d25\u7684\u89e3\u51b3\u601d\u8def","text":"<p>\u6839\u636e\u7b14\u8005\u7684\u7ecf\u9a8c\uff0c\u63d0\u4f9b\u4e00\u4e2a\u67e5\u627e\u5931\u8d25\u7684\u89e3\u51b3\u601d\u8def\u3002 \u56e0\u4e3a\u672c\u673a\u73af\u5883\u4e2d\uff0c\u53ef\u80fd\u5b58\u5728\u591a\u4e2a \u5305\u7684cmake \u6587\u4ef6\uff0c\u56e0\u6b64\u8981\u6392\u67e5\u5230\u5e95\u4f7f\u7528\u7684\u662f\u54ea\u4e00\u4e2a\u3002</p> <ol> <li>\u7b2c\u4e00\u6b65\uff0c\u6253\u5370<code>CMAKE_MODULE_PATH</code>\u3001<code>CMAKE_MODULE_PATH</code>\u53d8\u91cf\uff0c\u770b\u7b2c\u4e09\u65b9\u5e93cmake\u6240\u5728\u76ee\u5f55\u6709\u6ca1\u6709\u88ab\u52a0\u8fdb\u53bb</li> <li>\u7b2c\u4e8c\u6b65\uff0c\u6309\u7167find_package\u7684\u641c\u7d22\u987a\u5e8f\uff0c\u6392\u67e5<code>&lt;PackageName&gt;</code>\u662f\u5426\u6709\u591a\u4e2acmake\u6587\u4ef6</li> <li>\u7b2c\u4e09\u6b65\uff0c\u786e\u8ba4\u4f7f\u7528\u7684<code>cmake</code>\u6587\u4ef6\u80fd\u591f\u627e\u5230\u5bf9\u5e94\u7684\u5305</li> </ol>","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/find_package/#_7","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>find_package \u2014 CMake 3.25.1 Documentation</li> </ol>","tags":["cmake","find_package"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/%E4%BD%BF%E7%94%A8FetchContent%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%BA%90%E7%A0%81/","title":"\u4f7f\u7528FetchContent\u5f15\u5165\u7b2c\u4e09\u65b9\u5e93\u6e90\u7801","text":"<p>\u5728cmake3.14\u7248\u672c\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528<code>FetchContent</code>\u76f8\u5173\u8bed\u6cd5\u4e0b\u8f7d\u5e76\u5f15\u5165\u7b2c\u4e09\u65b9\u5e93\u6e90\u7801\u3002</p> <p>\u4f18\u70b9\uff1a\u65e0\u9700\u4e8b\u5148\u5c06\u6e90\u4ee3\u7801\u4e0b\u8f7d\u5230\u672c\u5730\uff0ccmake\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6e90\u7801</p> <p>\u7f3a\u70b9</p> <ul> <li>\u82e5\u7b2c\u4e09\u65b9\u5e93\u6e90\u7801\u5f88\u591a\uff0c\u6216\u4f9d\u8d56\u5916\u7f51\uff0c\u4e0b\u8f7d\u4f1a\u5f88\u6162\u3002\u4f8b\u5982libigl\u7684\u4e0b\u8f7d\u5c31\u5f88\u6162\uff08\u4f9d\u8d56\u592a\u591a\uff09</li> <li>\u7b2c\u4e09\u65b9\u5e93\u9700\u652f\u6301CMake</li> </ul>","tags":["cmake","FetchContent"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/%E4%BD%BF%E7%94%A8FetchContent%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%BA%90%E7%A0%81/#libigl","title":"\u793a\u4f8b\uff1alibigl","text":"<pre><code>.\n\u251c\u2500\u2500 cmake\n\u2502   \u2514\u2500\u2500 libigl.cmake\n\u251c\u2500\u2500 CMakeLists.txt\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 ...\n    \u2514\u2500\u2500 main.cpp\n</code></pre> <p>\u6587\u4ef6\uff1alibigl.cmake <pre><code>if(TARGET igl::core)\nreturn() #\u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u9000\u51fa\nendif()\n# \u5f15\u5165FetchContent\u76f8\u5173\u51fd\u6570\ninclude(FetchContent)\n# \u901a\u8fc7FetchContent\u5728\u7f51\u4e0a\u4e0b\u8f7d\u6e90\u4ee3\u7801\nFetchContent_Declare(\nlibigl  #TARGET\u540d\u79f0\nGIT_REPOSITORY https://github.com/libigl/libigl.git #\u7f51\u5740\nGIT_TAG v2.4.0 #tag\n)\n# \u786e\u4fdd\u4e0b\u8f7d\u6210\u529f\uff0c\u5e76\u6dfb\u52a0\u5230cmake\nFetchContent_MakeAvailable(libigl)\n</code></pre></p> <p>\u6587\u4ef6\uff1aCMakeLists.txt <pre><code>cmake_minimum_required(VERSION 3.16)\nproject(surface_subdivision)\n# \n# \u5c06cmake\u76ee\u5f55\u52a0\u5165\u641c\u7d22\u8def\u5f84\n#\nlist(PREPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)\n# \u5f15\u5165Libigl\u6a21\u5757\noption(LIBIGL_GLFW                \"Build target igl::glfw\"                ON)\noption(LIBIGL_IMGUI               \"Build target igl::imgui\"               ON)\noption(LIBIGL_COPYLEFT_CGAL       \"Build target igl_copyleft::cgal\"       ON)\ninclude(libigl) #\u5f15\u5165libigl.cmake\u6587\u4ef6\n#\n# \u5de5\u7a0b\u4ee3\u7801\n# \nset(Project_Include_Dir \"${CMAKE_CURRENT_SOURCE_DIR}/include\")\ninclude_directories(${Project_Include_Dir})\nfile(GLOB_RECURSE Project_Header_Files ${Project_Include_Dir}/*.h ${Project_Include_Dir}/*.hpp)\nset(Project_Src_Dir \"${CMAKE_CURRENT_SOURCE_DIR}/src\")\nfile(GLOB_RECURSE SRC_FILES ${Project_Src_Dir}/*.cpp ${Project_Src_Dir}/*.h)\nadd_executable(${PROJECT_NAME} ${SRC_FILES} ${Project_Header_Files})\ntarget_link_libraries(${PROJECT_NAME} PUBLIC igl::glfw igl::imgui igl_copyleft::cgal)\n#\u76f4\u63a5\u94fe\u63a5\u5373\u53ef\n#\n# VS\u5de5\u7a0b\u76ee\u5f55\n#\n# \u4ee3\u7801\u5206\u7ec4\nsource_group(TREE ${CMAKE_SOURCE_DIR} FILES ${SRC_FILES})\nsource_group(TREE ${CMAKE_SOURCE_DIR} FILES ${Project_Header_Files})\n</code></pre></p>","tags":["cmake","FetchContent"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/%E4%BD%BF%E7%94%A8FetchContent%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%BA%90%E7%A0%81/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>https://cmake.org/cmake/help/latest/module/FetchContent.html#id1</li> </ol>","tags":["cmake","FetchContent"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/%E4%BD%BF%E7%94%A8IMPORTED%E5%BC%95%E5%85%A5%E9%A2%84%E7%BC%96%E8%AF%91%E4%B8%94%E4%B8%8D%E6%94%AF%E6%8C%81CMake%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/","title":"\u4f7f\u7528IMPORTED\u5f15\u5165\u9884\u7f16\u8bd1\u4e14\u4e0d\u652f\u6301CMake\u7684\u7b2c\u4e09\u65b9\u5e93","text":"<p>\u5bf9\u4e8e\u9884\u7f16\u8bd1\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u800c\u4e14\u6b64\u5e93\u4e0d\u652f\u6301CMake\uff08\u6ca1\u6709CMake\u6587\u4ef6\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528imported\u5173\u952e\u5b57\u6765\u521b\u5efaTARGET\uff0c\u4ee5\u6b64\u65b9\u4fbf\u5728\u5de5\u7a0b\u4e2d\u4f7f\u7528\u3002</p>","tags":["cmake","IMPORTED"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/%E4%BD%BF%E7%94%A8IMPORTED%E5%BC%95%E5%85%A5%E9%A2%84%E7%BC%96%E8%AF%91%E4%B8%94%E4%B8%8D%E6%94%AF%E6%8C%81CMake%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/#glfw","title":"\u793a\u4f8b\uff1aglfw","text":"<p>glfw\u7684\u9884\u7f16\u8bd1\u7248\u672c\u4e0d\u652f\u6301CMake\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u5176\u7f16\u5199<code>find&lt;packagename&gt;.cmake</code>\u6587\u4ef6\uff0c\u4ee5\u4fbf\u5f15\u7528\u5b83\u3002</p> <p></p> <p>\u7b2c\u4e00\u6b65\uff1a\u5728\u76ee\u5f55\u4e0b\u65b0\u5efa<code>Findglfw.cmake</code>\u6587\u4ef6 <pre><code># \u4f7f\u7528IMPORTED\u5173\u952e\u5b57\u4ece\u5916\u90e8\u5bfc\u5165\u4e00\u4e2a\u540d\u4e3aglfw\u7684\u5e93\n#STATIC\u8868\u793a\u9759\u6001\u94fe\u63a5\u7684\u65b9\u5f0f\nadd_library(glfw STATIC IMPORTED)\n# \u4e3aglfw\u6307\u5b9alib\u6587\u4ef6\nset_property(\nTARGET glfw PROPERTY IMPORTED_LOCATION ${CMAKE_CURRENT_SOURCE_DIR}/extern/glfw/lib-vc2019/glfw3.lib\n) # \u6307\u5b9ainclude\u76ee\u5f55\n#INTERFACE\uff0c\u63a5\u53e3\u5f0f\u7684include\u76ee\u5f55\uff0c\u8868\u793a\u4e3a\u5f15\u7528glfw\u7684TARGET\u6dfb\u52a0\u4e00\u4e2ainclude\u76ee\u5f55\ntarget_include_directories(\nglfw INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/extern/glfw/include\n)\n</code></pre></p> <p>\u5728\u9700\u8981\u4f7f\u7528glfw\u7684TARGET\u4e2d\uff0c\u6b63\u5e38\u94fe\u63a5glfw\u5c31\u53ef\u4ee5\u4e86 <pre><code>cmake_minimum_required(VERSION 3.20)  project(tryIMPORTED)  set(CMAKE_CXX_STANDARD 17)  set(CMAKE_CXX_STANDARD_REQUIRED ON)  add_executable(main main.cpp)  # \u4e3a\u540d\u4e3amain\u7684TARGET\u94fe\u63a5glfw  \ntarget_link_libraries(main glfw)  # opengl  \nfind_package(OpenGL REQUIRED)  target_link_libraries(main OpenGL::GL)\n</code></pre></p>","tags":["cmake","IMPORTED"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/%E4%BD%BF%E7%94%A8IMPORTED%E5%BC%95%E5%85%A5%E9%A2%84%E7%BC%96%E8%AF%91%E4%B8%94%E4%B8%8D%E6%94%AF%E6%8C%81CMake%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/#_1","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>\u5f15\u5165\u95ed\u6e90/\u7f16\u8bd1\u597d\u7684\u5e93\uff1a\u4f7f\u7528IMPORTED\u5173\u952e\u5b57 | Chunlei Li</li> </ol>","tags":["cmake","IMPORTED"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/%E4%BD%BF%E7%94%A8INTERFACE%E5%BC%95%E5%85%A5header-only%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/","title":"\u4f7f\u7528INTERFACE\u5f15\u5165header only\u7684\u7b2c\u4e09\u65b9\u5e93","text":"<p>\u5bf9\u4e8eheader-only\uff08\u53ea\u6709\u5934\u6587\u4ef6\uff0c\u65e0\u6e90\u6587\u4ef6\uff09\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528<code>INTERFACE</code>\u6765\u521b\u5efaTARGET\uff0c\u4ee5\u6b64\u65b9\u4fbf\u5728\u5de5\u7a0b\u4e2d\u4f7f\u7528\u3002</p>","tags":["cmake","INTERFACE"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/%E4%BD%BF%E7%94%A8INTERFACE%E5%BC%95%E5%85%A5header-only%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/#catch2","title":"\u793a\u4f8b\uff1acatch2","text":"<p>\u4f8b\u5b50\u94fe\u63a5GitHub - ttroy50/cmake-examples: Useful CMake Examples\u4e2d\uff0c05-unit-testing\\catch2-vendored</p> <p>\u7b2c\u4e00\u6b65\uff1a\u5c06catch2\u653e\u5165\u5de5\u7a0b\u76ee\u5f55\u5f53\u4e2d <pre><code>.\n\u251c\u2500\u2500 3rd_party\n\u2502   \u2514\u2500\u2500 catch2\n\u2502       \u251c\u2500\u2500 catch2\n\u2502       \u2502   \u2514\u2500\u2500 catch.hpp\n\u2502       \u2514\u2500\u2500 CMakeLists.txt\n\u251c\u2500\u2500 CMakeLists.txt\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 ...\n    \u2514\u2500\u2500 example.cpp\n</code></pre></p> <p>\u7b2c\u4e8c\u6b65\uff1a\u4e3acatch2\u7f16\u5199<code>CMakeLists.txt</code> - \u4f7f\u7528<code>INTERFACE</code>\u521b\u5efaTarget\uff0c\u65b9\u4fbf\u5de5\u7a0b\u4e2d\u5176\u4ed6Target\u94fe\u63a5 <pre><code>#File: .\\3rd_party\\catch2\\CMakeLists.txt\ncmake_minimum_required(VERSION 3.0)\nproject(catch2)\n# Prepare \"Catch2\" library for other executables\nadd_library(Catch2 INTERFACE)\nadd_library(Catch2::Test ALIAS Catch2)\ntarget_include_directories(Catch2 INTERFACE ${CMAKE_CURRENT_SOURCE_DIR})\n</code></pre></p> <p>\u7b2c\u4e09\u6b65\uff1a\u5728\u9876\u90e8\u7684CMake\u6587\u4ef6\u4e2d\u52a0\u5165\u6b64\u6a21\u5757 <pre><code>#File: .\\CMakeLists.txt\ncmake_minimum_required(VERSION 3.5)\nproject (catch2_unit_test)\nset(CMAKE_CXX_STANDARD 11)\n# add the CMakeFile that defines catch2\nadd_subdirectory(3rd_party/catch2)\n# Add an library for the example classes\nadd_library(example_unit_test\nexample.cpp\n)\n#############################################\n# Unit tests\n# enable CTest testing\nenable_testing()\n# Add a testing executable\nadd_executable(unit_tests unit_tests.cpp)\ntarget_link_libraries(unit_tests\nexample_unit_test\nCatch2::Test\n)\nadd_test(test_all unit_tests)\n</code></pre></p>","tags":["cmake","INTERFACE"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/%E8%87%AA%E5%AE%9A%E4%B9%89FindPackageName.cmake/","title":"todo","text":"<ol> <li>\u7b80\u5355\u7248\u672c\uff0c\u9700\u8981\u6ce8\u610f\u51e0\u4e2a\u53d8\u91cf</li> <li>\u5de5\u7a0b\u5316\u5e94\u8be5\u8981\u6ce8\u610f\u4e9b\u4ec0\u4e48</li> </ol> <p>\u4f8b\u5b50\uff1aCMake\u81ea\u5e26\u7684FindGLEW.cmake <pre><code># Distributed under the OSI-approved BSD 3-Clause License. \u00a0See accompanying\n# file Copyright.txt or https://cmake.org/licensing for details.\n#.rst:\n# FindGLEW\n# --------\n#\n# Find the OpenGL Extension Wrangler Library (GLEW)\n#\n# IMPORTED Targets\n# ^^^^^^^^^^^^^^^^\n#\n# This module defines the :prop_tgt:`IMPORTED` target ``GLEW::GLEW``,\n# if GLEW has been found.\n#\n# Result Variables\n# ^^^^^^^^^^^^^^^^\n#\n# This module defines the following variables:\n#\n# ::\n#\n# \u00a0 GLEW_INCLUDE_DIRS - include directories for GLEW\n# \u00a0 GLEW_LIBRARIES - libraries to link against GLEW\n# \u00a0 GLEW_FOUND - true if GLEW has been found and can be used\nfind_path(GLEW_INCLUDE_DIR GL/glew.h)\nif(NOT GLEW_LIBRARY)\nfind_library(GLEW_LIBRARY_RELEASE NAMES GLEW glew32 glew glew32s PATH_SUFFIXES lib64 libx32)\nfind_library(GLEW_LIBRARY_DEBUG NAMES GLEWd glew32d glewd PATH_SUFFIXES lib64)\ninclude(SelectLibraryConfigurations)\nselect_library_configurations(GLEW)\nendif ()\ninclude(FindPackageHandleStandardArgs)\nfind_package_handle_standard_args(GLEW\nREQUIRED_VARS GLEW_INCLUDE_DIR GLEW_LIBRARY)\nif(GLEW_FOUND)\nset(GLEW_INCLUDE_DIRS ${GLEW_INCLUDE_DIR})\nif(NOT GLEW_LIBRARIES)\nset(GLEW_LIBRARIES ${GLEW_LIBRARY})\nendif()\nif (NOT TARGET GLEW::GLEW)\nadd_library(GLEW::GLEW UNKNOWN IMPORTED)\nset_target_properties(GLEW::GLEW PROPERTIES\nINTERFACE_INCLUDE_DIRECTORIES \"${GLEW_INCLUDE_DIRS}\")\nif(GLEW_LIBRARY_RELEASE)\nset_property(TARGET GLEW::GLEW APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)\nset_target_properties(GLEW::GLEW PROPERTIES IMPORTED_LOCATION_RELEASE \"${GLEW_LIBRARY_RELEASE}\")\nendif()\nif(GLEW_LIBRARY_DEBUG)\nset_property(TARGET GLEW::GLEW APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)\nset_target_properties(GLEW::GLEW PROPERTIES IMPORTED_LOCATION_DEBUG \"${GLEW_LIBRARY_DEBUG}\")\nendif()\nif(NOT GLEW_LIBRARY_RELEASE AND NOT GLEW_LIBRARY_DEBUG)\nset_property(TARGET GLEW::GLEW APPEND PROPERTY IMPORTED_LOCATION \"${GLEW_LIBRARY}\")\nendif()\nendif()\nendif()\nmark_as_advanced(GLEW_INCLUDE_DIR)\n</code></pre></p>","tags":["cmake","INTERFACE"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E8%B7%AF%E5%BE%84%E4%B8%8E%E6%96%87%E4%BB%B6/file/","title":"File","text":"<pre><code># \u9012\u5f52\u6587\u4ef6\nfile(GLOB_RECURSE variable [RELATIVE path] [FOLLOW_SYMLINKS] [globbing expressions]...)\n# \u975e\u9012\u5f52\u6587\u4ef6\uff08\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff09\nfile(GLOB Sources *.cpp)\n# \u793a\u4f8b\nfile (GLOB Sources *.cpp)\nfile (GLOB Headers *.h)\nfile (GLOB Resources *.qrc)\nfile (GLOB UIs *.ui)\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E8%B7%AF%E5%BE%84%E4%B8%8E%E6%96%87%E4%BB%B6/find_path/","title":"Find path","text":"","tags":["cmake","find_path"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/CMake/%E8%B7%AF%E5%BE%84%E4%B8%8E%E6%96%87%E4%BB%B6/find_path/#_1","title":"\u793a\u4f8b","text":"<pre><code>find_path(GLEW_INCLUDE_DIR\n\u00a0 NAME GL/glew.h\n\u00a0 PATHS ${CMAKE_CURRENT_LIST_DIR}\n)\n\nset(GLEW_INCLUDE_DIRS ${GLEW_INCLUDE_DIR})\n# message(STATUS ${GLEW_INCLUDE_DIRS})\n\nif(CMAKE_SIZEOF_VOID_P EQUAL 8)\n\u00a0 set(_arch \"x64\")\nelse()\n\u00a0 set(_arch \"Win32\")\nendif()\n# message(STATUS ${_arch})\n\nfind_library(GLEW_SHARED_LIBRARY_RELEASE\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0NAMES GLEW glew glew32\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0PATH_SUFFIXES lib lib64 libx32 lib/Release/${_arch}\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0PATHS ${CMAKE_CURRENT_LIST_DIR})\nmessage(STATUS ${GLEW_SHARED_LIBRARY_RELEASE})\n\nfind_library(GLEW_SHARED_LIBRARY_DEBUG\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0NAMES GLEWd glewd glew32d\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0PATH_SUFFIXES lib lib64\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0PATHS ${CMAKE_CURRENT_LIST_DIR})\nmessage(STATUS ${GLEW_SHARED_LIBRARY_DEBUG})\n\nfind_library(GLEW_STATIC_LIBRARY_RELEASE\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 NAMES GLEW glew glew32s\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 PATH_SUFFIXES lib lib64 libx32 lib/Release/${_arch}\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 PATHS ${CMAKE_CURRENT_LIST_DIR})\nmessage(STATUS ${GLEW_STATIC_LIBRARY_RELEASE})\n\nfind_library(GLEW_STATIC_LIBRARY_DEBUG\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0NAMES GLEWds glewds glew32ds\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0PATH_SUFFIXES lib lib64\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0PATHS ENV ${GLEW_SHARED_LIBRARY_DEBUG})\nmessage(STATUS ${GLEW_STATIC_LIBRARY_DEBUG})\n\nif(NOT GLEW_USE_STATIC_LIBS)\n\u00a0 set(GLEW_LIBRARIES ${GLEW_SHARED_LIBRARY})\n\u00a0 message(STATUS ${GLEW_LIBRARIES})\nelse()\n\u00a0 set(GLEW_LIBRARIES ${GLEW_STATIC_LIBRARY})\n\u00a0 message(STATUS \"STATIC\" \u00a0${GLEW_LIBRARIES})\nendif()\n</code></pre>","tags":["cmake","find_path"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/PreMake/","title":"Premake","text":"<p>Premake\u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5b83\u8bfb\u53d6\u7528\u6237\u9884\u5b9a\u4e49\u811a\u672c\uff0c\u6765\u6267\u884c\u6784\u5efa\u914d\u7f6e\u4efb\u52a1\uff0c\u6216\u8005\u751f\u6210Visual Studio\uff0cXcode\u548cGNU Make\u7684\u5de5\u7a0b\u3002</p> <ul> <li>\u8f7b\u91cf\uff1a\u5728\u5de5\u7a0b\u4e2d\u5305\u542b<code>premake5.exe</code>\uff081.33Mb\uff09\u5373\u53ef</li> <li>\u6613\u7528\u4e0e\u7075\u6d3b\uff1aPremake\u4f7f\u7528\u8f7b\u91cf\u7684lua\u811a\u672c\uff0clua\u4e3aPremake\u5e26\u6765\u6613\u7528\u4e0e\u7075\u6d3b\u6027</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/PreMake/#_1","title":"\u4f7f\u7528","text":"<ol> <li>\u5c06\u5de5\u7a0b\u914d\u7f6e\u5199\u6210<code>*.lua</code>\u6587\u4ef6</li> <li>\u4f7f\u7528<code>premake.exe</code>\u8fd0\u884c\u5373\u53ef\u751f\u6210\u6307\u5b9a\u5de5\u7a0b</li> </ol> <pre><code>premake5.exe --file=../premake5.lua gmake\npremake5.exe --file=../premake5.lua --cc=clang gmake\npremake5.exe --file=../premake5.lua vs2015\npremake5.exe --file=../premake5.lua vs2017\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%B7%A5%E7%A8%8B%E6%9E%84%E5%BB%BA/PreMake/#_2","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>https://github.com/premake/premake-core/wiki</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E5%BC%82%E5%B8%B8/expected/","title":"expected","text":"<p>\u76f8\u5173\u94fe\u63a5\uff1aTartanLlama/expected</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/","title":"C++\u65e5\u5fd7\u7cfb\u7edf","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/#_1","title":"\u65e5\u5fd7\u7cfb\u7edf","text":"<p>\u300c\u91cd\u8981\u6027\u300d</p> <ol> <li>\u65e5\u5fd7\u7cfb\u7edf\u51e0\u4e4e\u662f\u6bcf\u4e00\u4e2a\u5b9e\u9645\u7684\u8f6f\u4ef6\u9879\u76ee\u4ece\u5f00\u53d1\u3001\u6d4b\u8bd5\u5230\u4ea4\u4ed8\uff0c\u518d\u5230\u540e\u671f\u7684\u7ef4\u62a4\u8fc7\u7a0b\u4e2d\u6781\u4e3a\u91cd\u8981\u7684\u67e5\u770b\u8f6f\u4ef6\u4ee3\u7801\u8fd0\u884c\u6d41\u7a0b\u3001\u8fd8\u539f\u9519\u8bef\u73b0\u573a\u3001\u8bb0\u5f55\u8fd0\u884c\u9519\u8bef\u4f4d\u7f6e\u53ca\u4e0a\u4e0b\u6587\u7b49\u7684\u91cd\u8981\u4f9d\u636e\u3002</li> <li>\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684\u65e5\u5fd7\u7cfb\u7edf\uff0c\u80fd\u591f\u51c6\u786e\u8bb0\u5f55\u91cd\u8981\u7684\u53d8\u91cf\u4fe1\u606f\uff0c\u540c\u65f6\u53c8\u6ca1\u6709\u5197\u4f59\u7684\u6253\u5370\u5bfc\u81f4\u65e5\u5fd7\u6587\u4ef6\u8bb0\u5f55\u65e0\u6548\u7684\u6570\u636e\u3002</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/#c","title":"C++\u65e5\u5fd7","text":"\u5e93 \u8bf4\u660e log4c \u7eafC\u7684\u4e1c\u897f\uff0c\u79fb\u690d\u6027\u5f3a\u3002\u4e0d\u518d\u6709\u4eba\u7ef4\u62a4\u4e86\u3002\u4e0d\u662f\u9762\u5411\u5bf9\u8c61\u7684\uff0c\u4e0d\u652f\u6301\u6d41\u5f0flog\u8f93\u5165\u3002\u6709\u914d\u7f6e\u6587\u4ef6\u3002\u6700\u65b0\u7248\u672c\uff08log4c-1.2.4.tar.gz\uff09\u5b58\u5728\u5185\u5b58\u6cc4\u9732\u3002\u4e0d\u5efa\u8bae\u4f7f\u7528 log4cplus \u7b80\u6d01, \u4e0b\u8f7d\u7684\u5305\u7f16\u8bd1\u987a\u5229, \u6d4b\u8bd5\u4f8b\u5b50\u4e5f\u80fd\u987a\u5229\u8fd0\u884c log4cxx \u81c3\u80bf, \u9700\u8981\u5f15\u7528apr(Apache Portable Runtime), \u6700\u75db\u82e6\u7684\u662f\u8001\u662f\u7f16\u8bd1\u4e0d\u4e86 log4cpp \u843d\u540e, \u6700\u540e\u66f4\u65b0\u4e8e2017\u5e74\uff0c\u7f16\u8bd1\u6210\u529f\u540e\uff0c\u4f7f\u7528\u6709\u5f02\u5e38\u95ee\u9898 spdlog \u6027\u80fd\u5f88\u597d\u3002\u4f46\u5185\u90e8\u6709\u5f88\u591a\u5168\u5c40\u53d8\u91cf\uff0c\u6790\u6784\u53ef\u80fd\u6709\u95ee\u9898\uff1b\u5f88\u91cd\uff1b\u6709\u4e9b\u7f16\u8bd1\u5668\u53ef\u80fd\u7f16\u8bd1\u4e0d\u8fc7"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/#_2","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>C++\u8bbe\u8ba1\u5b9e\u73b0\u65e5\u5fd7\u7cfb\u7edf</li> <li>\u4e00\u4e2a\u8457\u540d\u7684\u65e5\u5fd7\u7cfb\u7edf\u662f\u600e\u4e48\u8bbe\u8ba1\u51fa\u6765\u7684\uff1f</li> <li>C/C++log\u65e5\u5fd7\u5e93\u6bd4\u8f83</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/","title":"log4cplus","text":"<p>log4cplus\u662fC++\u7f16\u5199\u7684\u5f00\u6e90\u7684\u65e5\u5fd7\u7cfb\u7edf\uff0c\u524d\u8eab\u662fjava\u7f16\u5199\u7684log4j\u7cfb\u7edf\uff0c\u63d0\u4f9b\u7684\u63a5\u53e3\u548c\u4f7f\u7528\u903b\u8f91\u4e0elog4j\u4fdd\u6301\u4e00\u81f4\u3002\u53d7Apache Software License\u4fdd\u62a4\uff0c\u4f5c\u8005\u662fTad E. Smith\u3002</p> <p>log4cplus\u5177\u6709\u7ebf\u7a0b\u5b89\u5168\u3001\u7075\u6d3b\u3001\u4ee5\u53ca\u591a\u7c92\u5ea6\u63a7\u5236\u7684\u7279\u70b9\uff0c\u901a\u8fc7\u5c06\u65e5\u5fd7\u5212\u5206\u4f18\u5148\u7ea7\u4f7f\u5176\u53ef\u4ee5\u9762\u5411\u7a0b\u5e8f\u8c03\u8bd5\u3001\u8fd0\u884c\u3001\u6d4b\u8bd5\u3001\u548c\u7ef4\u62a4\u7b49\u5168\u751f\u547d\u5468\u671f\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u5c4f\u5e55\u3001\u6587\u4ef6\u3001NT event log\u3001\u751a\u81f3\u662f\u8fdc\u7a0b\u670d\u52a1\u5668\uff1b\u901a\u8fc7\u6307\u5b9a\u7b56\u7565\u5bf9\u65e5\u5fd7\u8fdb\u884c\u5b9a\u671f\u5907\u4efd\u7b49\u7b49\u3002</p> <p>\u76f8\u5173\u8d44\u6599</p> <ol> <li>github\u5730\u5740</li> <li>\u5b98\u7f51\u4e3b\u9875</li> <li>\u5b98\u65b9\u5f00\u53d1\u6587\u6863</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E4%BD%BF%E7%94%A8/","title":"\u4f7f\u7528","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E4%BD%BF%E7%94%A8/#_1","title":"\u8f93\u51fa\u5230\u63a7\u5236\u53f0","text":"<p>\u3010\u4f7f\u7528\u7684\u57fa\u672c\u6b65\u9aa4\u3011</p> <ol> <li>\u521b\u5efaAppender\u5bf9\u8c61</li> <li>\u8bbe\u7f6eAppender\u7684\u540d\u79f0\u548c\u8f93\u51fa\u683c\u5f0f\uff08\u5373Layout\uff09</li> <li>\u83b7\u5f97\u4e00\u4e2alogger\u5b9e\u4f8b\uff0c\u5e76\u8bbe\u7f6e\u65e5\u5fd7\u8f93\u51fa\u7684\u7b49\u7ea7</li> <li>\u7ed9Logger\u5b9e\u4f8b\u6dfb\u52a0Appender</li> <li>\u4f7f\u7528\u5b8f\u8f93\u51fa\u65e5\u5fd7</li> </ol> <p>\u3010\u7b80\u5355\u4f8b\u5b50\u3011\u8f93\u51fa\u5230\u63a7\u5236\u53f0 <pre><code>#include &lt;log4cplus/log4cplus.h&gt;\nint main()\n{\n//\u7528Initializer\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\nlog4cplus::Initializer initializer;\n//\u7b2c1\u6b65\uff1a\u521b\u5efaConsoleAppender\nlog4cplus::SharedAppenderPtr appender(new log4cplus::ConsoleAppender());\n//\u7b2c2\u6b65\uff1a\u8bbe\u7f6eAppender\u7684\u540d\u79f0\u548c\u8f93\u51fa\u683c\u5f0f\uff08SimpleLayout\uff09\nappender-&gt;setName(LOG4CPLUS_TEXT(\"console\"));\nappender-&gt;setLayout(std::unique_ptr&lt;log4cplus::Layout&gt;(new log4cplus::SimpleLayout));\n//\u7b2c3\u6b65\uff1a\u83b7\u5f97\u4e00\u4e2aLogger\u5b9e\u4f8b\uff0c\u5e76\u8bbe\u7f6e\u5176\u65e5\u5fd7\u8f93\u51fa\u7b49\u7ea7\u9608\u503c\nlog4cplus::Logger logger = log4cplus::Logger::getInstance(LOG4CPLUS_TEXT (\"test\"));\nlogger.setLogLevel(log4cplus::INFO_LOG_LEVEL);\n//\u7b2c4\u6b65\uff1a\u4e3aLogger\u5b9e\u4f8b\u6dfb\u52a0ConsoleAppender\nlogger.addAppender(appender);\n//\u7b2c5\u6b65\uff1a\u4f7f\u7528\u5b8f\u5c06\u65e5\u5fd7\u8f93\u51fa\nLOG4CPLUS_INFO(logger, LOG4CPLUS_TEXT(\"Hello world\"));\nreturn 0;\n}\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E4%BD%BF%E7%94%A8/#_2","title":"\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u548c\u6587\u4ef6","text":"<pre><code>#include &lt;log4cplus/log4cplus.h&gt;\nint main()\n{\n//\u7528Initializer\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\nlog4cplus::Initializer initializer;\n//\u7b2c1\u6b65\uff1a\u521b\u5efaConsoleAppender\u548cFileAppender(\u53c2\u6570app\u8868\u793a\u5185\u5bb9\u8ffd\u52a0\u5230\u6587\u4ef6)\nlog4cplus::SharedAppenderPtr consoleAppender(new log4cplus::ConsoleAppender);\nlog4cplus::SharedAppenderPtr fileAppender(new log4cplus::FileAppender(\nLOG4CPLUS_TEXT(\"log.txt\"),\nstd::ios_base::app\n)\n);\n//\u7b2c2\u6b65\uff1a\u8bbe\u7f6eAppender\u7684\u540d\u79f0\u548c\u8f93\u51fa\u683c\u5f0f\n//ConsoleAppender\u4f7f\u7528SimpleLayout\n//FileAppender\u4f7f\u7528PatternLayout\nconsoleAppender-&gt;setName(LOG4CPLUS_TEXT(\"console\"));\nconsoleAppender-&gt;setLayout(std::unique_ptr&lt;log4cplus::Layout&gt;(new log4cplus::SimpleLayout()));\nfileAppender-&gt;setName(LOG4CPLUS_TEXT(\"file\"));\nlog4cplus::tstring pattern = LOG4CPLUS_TEXT(\"%D{%m/%d/%y %H:%M:%S,%Q} [%t] %-5p %c - %m [%l]%n\");\nfileAppender-&gt;setLayout(std::unique_ptr&lt;log4cplus::Layout&gt;(new log4cplus::PatternLayout(pattern)));\n//\u7b2c3\u6b65\uff1a\u83b7\u5f97\u4e00\u4e2aLogger\u5b9e\u4f8b\uff0c\u5e76\u8bbe\u7f6e\u5176\u65e5\u5fd7\u8f93\u51fa\u7b49\u7ea7\u9608\u503c\nlog4cplus::Logger logger = log4cplus::Logger::getInstance(LOG4CPLUS_TEXT (\"test\"));\nlogger.setLogLevel(log4cplus::INFO_LOG_LEVEL);\n//\u7b2c4\u6b65\uff1a\u4e3aLogger\u5b9e\u4f8b\u6dfb\u52a0ConsoleAppender\u548cFileAppender\nlogger.addAppender(consoleAppender);\nlogger.addAppender(fileAppender);\n//\u7b2c5\u6b65\uff1a\u4f7f\u7528\u5b8f\u5c06\u65e5\u5fd7\u8f93\u51fa\nLOG4CPLUS_INFO(logger, LOG4CPLUS_TEXT(\"Hello world\"));\nreturn 0;\n}\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E4%BD%BF%E7%94%A8/#_3","title":"\u8f93\u51fa\u5230\u65e5\u5fd7\u670d\u52a1\u5668","text":"<pre><code>#include &lt;log4cplus/log4cplus.h&gt;\nint main()\n{\n//\u7528Initializer\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\nlog4cplus::Initializer initializer;\n//\u7b2c1\u6b65\uff1a\u521b\u5efaSocketAppender\nlog4cplus::SharedAppenderPtr appender(new log4cplus::SocketAppender(\nLOG4CPLUS_TEXT(\"localhost\"),\n32015, LOG4CPLUS_TEXT(\"test\")));\n//\u7b2c2\u6b65\uff1a\u8bbe\u7f6eAppender\u7684\u540d\u79f0\uff0cSocketAppender\u4e0d\u9700\u8981\u8bbe\u7f6e\u8f93\u51fa\u683c\u5f0f\nappender-&gt;setName(LOG4CPLUS_TEXT(\"logserver\"));\n//\u7b2c3\u6b65\uff1a\u83b7\u5f97\u4e00\u4e2aLogger\u5b9e\u4f8b\uff0c\u5e76\u8bbe\u7f6e\u5176\u65e5\u5fd7\u8f93\u51fa\u7b49\u7ea7\u9608\u503c\nlog4cplus::Logger logger = log4cplus::Logger::getInstance(LOG4CPLUS_TEXT (\"test\"));\nlogger.setLogLevel(log4cplus::INFO_LOG_LEVEL);\n//\u7b2c4\u6b65\uff1a\u4e3aLogger\u5b9e\u4f8b\u6dfb\u52a0Appender\nlogger.addAppender(appender);\n//\u7b2c5\u6b65\uff1a\u4f7f\u7528\u5b8f\u5c06\u65e5\u5fd7\u8f93\u51fa\nLOG4CPLUS_INFO(logger, LOG4CPLUS_TEXT(\"Hello world\"));\nreturn 0;\n}\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E4%BD%BF%E7%94%A8/#_4","title":"\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6","text":"<p>\u914d\u7f6e\u6587\u4ef6 <pre><code># \u6587\u4ef6\u540d\uff1alog4cplus.config\n\n###################################\n########Define log Levels##########\n###################################\n\n# \u544a\u8b66\u7ea7\u522b\u7531\u4f4e\u5230\u9ad8\u6392\u5e8f\uff1a TRACE  DEBUG  INFO  WARN  ERROR  FATAL \n\n#All classes - except those in log4cplus.logger.* - use DEBUG level to print information on file\nlog4cplus.rootLogger=WARN, MyFileAppender\n\n#For MemoryCheck class I need to inspect all the details, and I want print information even to the console\nlog4cplus.logger.MemoryCheck=INFO, MyConsoleAppender\n\n#For database stuff, I don't need to logging everything, it's enough printing only errors!\nlog4cplus.logger.DatabaseOperations=ERROR\n\n###################################\n########Define the Appenders#######\n###################################\n\n#MyConsoleAppender:\nlog4cplus.appender.MyConsoleAppender=log4cplus::ConsoleAppender\nlog4cplus.appender.MyConsoleAppender.layout=log4cplus::PatternLayout\nlog4cplus.appender.MyConsoleAppender.layout.ConversionPattern=[%-5p][%d] %m%n\n\n#MyFileAppender\nlog4cplus.appender.MyFileAppender=log4cplus::RollingFileAppender\nlog4cplus.appender.MyFileAppender.File=logging.txt\nlog4cplus.appender.MyFileAppender.MaxFileSize=16MB\nlog4cplus.appender.MyFileAppender.MaxBackupIndex=1\nlog4cplus.appender.MyFileAppender.layout=log4cplus::PatternLayout\nlog4cplus.appender.MyFileAppender.layout.ConversionPattern=[%-5p][%D{%Y/%m/%d %H:%M:%S:%q}][%-l][%t] %m%n\n</code></pre> \u3010cpp\u4ee3\u7801\u3011 <pre><code>#include &lt;string&gt;\n#include &lt;log4cplus/logger.h&gt;\n#include &lt;log4cplus/configurator.h&gt;\n#include &lt;log4cplus/loggingmacros.h&gt;\nusing namespace log4cplus;\nusing namespace std;\nint main()\n{\nlog4cplus::initialize();\nlog4cplus::PropertyConfigurator::doConfigure(LOG4CPLUS_TEXT(\"log4cplus.config\"));\nlog4cplus::Logger m_log = log4cplus::Logger::getInstance(LOG4CPLUS_TEXT(\"MemoryCheck\"));\ntry\n{\nint x = 8;\ndouble y = 8.88;\nstring allocated_memory = \"here\";\nLOG4CPLUS_DEBUG(m_log, \"x = \" &lt;&lt; x);\nLOG4CPLUS_DEBUG(m_log, \"y = \" &lt;&lt; y);\n/* ... */\nLOG4CPLUS_INFO(m_log, \"Allocated = \" &lt;&lt; allocated_memory);\n}\ncatch (std::bad_alloc &amp;e)\n{\n/* I KNOW HOW TO DEAL WITH THIS ERROR!! */\n/* ...code that handle the error is here... */\nLOG4CPLUS_ERROR(m_log, e.what());\n}\ncatch (std::exception &amp;e)\n{\n/* I KNOW HOW TO DEAL WITH THIS ERROR!! */\n/* ...code that handle the error is here... */\nLOG4CPLUS_ERROR(m_log, e.what());\n}\ncatch (...)\n{\n/* I DON'T KNOW HOW MANAGE THE ERROR!! */\nLOG4CPLUS_FATAL(m_log, \"unexpected error...use gdb core dump\");\nexit(-1);\n}\nint memory_remaining = 122;\nif (memory_remaining &lt; 123)\n{\nLOG4CPLUS_WARN(m_log, \"LOW MEMORY!!\");\n}\nreturn 0;\n}\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E6%97%A5%E5%BF%97%E7%AD%89%E7%BA%A7/","title":"\u65e5\u5fd7\u7b49\u7ea7","text":"<p>log4cplus \u63d0\u4f9b\u7684\u65e5\u5fd7\u7b49\u7ea7\u5982\u4e0b\uff1a<code>ALL &lt; TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL &lt; OFF</code></p> <ul> <li>TRACE\uff1a\u8c03\u8bd5\u5e94\u7528\u7684\u8be6\u7ec6\u6b65\u9aa4</li> <li>DEBUG\uff1a\u7b97\u6cd5\u5173\u952e\u90e8\u5206\u7684\u76f8\u5173\u4fe1\u606f</li> <li>INFO\uff1a\u5e94\u7528\u7684\u5185\u90e8\u72b6\u6001\u4fe1\u606f</li> <li>WARN\uff1a\u53ef\u4ee5\u907f\u514d\u7684\u5185\u90e8\u72b6\u6001\u4fe1\u606f</li> <li>ERROR\uff1a\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u4e14\u5e94\u7528\u7a0b\u5e8f\u77e5\u9053\u5982\u4f55\u5904\u7406\u5b83</li> <li>FATAL\uff1a\u53d1\u751f\u4e86\u4e0d\u53ef\u9006\u8f6c\u7684\u9519\u8bef\uff0c\u7a0b\u5e8f\u65e0\u6cd5\u7ee7\u7eed\u8fd0\u884c</li> </ul> <p>\u3010\u4f8b\u5b50\u3011</p> <ol> <li>\u5982\u679c\u5b9a\u4e49\u4e86\u65e5\u5fd7\u7b49\u7ea7\u4e3a ERROR\uff0c\u90a3\u4e48\u53ea\u6709\u6807\u8bb0\u4e3a ERROR, FATAL\u7684\u65e5\u5fd7\u4fe1\u606f\u624d\u4f1a\u88ab\u8bb0\u5f55</li> <li>\u5982\u679c\u7b49\u7ea7\u4e3a DEBUG\uff0c\u5219\u6240\u6709\u6807\u8bb0\u4e3a DEBUG/INFO/WARN/ERROR/FATAL \u7684\u65e5\u5fd7\u624d\u4f1a\u88ab\u8bb0\u5f55</li> <li>ALL\u548cOFF\u7ea7\u522b\u7528\u6765\u5c06\u6240\u6709\u5176\u4ed6\u7c7b\u578b\u7684\u7ea7\u522b\u5206\u522b\u5207\u6362\u4e3a\u6253\u5f00\u6216\u5173\u95ed\u7684\u6807\u5fd7\uff0c\u4e0d\u4f1a\u7528\u4e8e\u8bbe\u7f6e\u65e5\u5fd7\u7ea7\u522b</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E7%B1%BB/","title":"\u7c7b","text":"<ul> <li>\u6240\u6709\u7684\u65e5\u5fd7\u7c7b\u522b\u90fd\u662f\u4ece\u62bd\u8c61 root \u7c7b\u7ee7\u627f\u65e5\u5fd7\u7ea7\u522b\u548c appender\uff0c\u9664\u975e\u53e6\u884c\u5b9a\u4e49</li> <li>\u652f\u6301\u8bb0\u5f55\u5de5\u4f5c\u7ebf\u7a0b\u7684id\uff0c\u7528\u6765\u5206\u6790\u7ebf\u7a0b\u884c\u4e3a</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E7%B1%BB/#_1","title":"\u4e3b\u8981\u7c7b","text":"\u7c7b\u540d \u8bf4\u660e Logger \u8bb0\u5f55\u5668\uff0c\u4fdd\u5b58\u5e76\u8ddf\u8e2a\u5bf9\u8c61\u65e5\u5fd7\u4fe1\u606f\u53d8\u66f4\u7684\u5b9e\u4f53\uff0c\u5f53\u4f60\u9700\u8981\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u8bb0\u5f55\u65f6\uff0c\u5c31\u9700\u8981\u751f\u6210\u4e00\u4e2alogger Appender \u6302\u63a5\u5668\uff0c\u4e0e\u5e03\u5c40\u5668\u548c\u8fc7\u6ee4\u5668\u7d27\u5bc6\u914d\u5408\uff0c\u5c06\u7279\u5b9a\u683c\u5f0f\u7684\u6d88\u606f\u8fc7\u6ee4\u540e\u8f93\u51fa\u5230\u6240\u6302\u63a5\u7684\u8bbe\u5907\u7ec8\u7aef\u5982\u5c4f\u5e55\uff0c\u6587\u4ef6\u7b49\u7b49)\u3002 Layout \u5e03\u5c40\u5668\uff0c\u63a7\u5236\u8f93\u51fa\u6d88\u606f\u7684\u683c\u5f0f\u3002 LogLevel \u4f18\u5148\u6743\uff0c\u5305\u62ecTRACE, DEBUG, INFO, WARNING, ERROR, FATAL\u3002 Hierarchy \u5206\u7c7b\u5668\uff0c\u5c42\u6b21\u5316\u7684\u6811\u578b\u7ed3\u6784\uff0c\u7528\u4e8e\u5bf9\u88ab\u8bb0\u5f55\u4fe1\u606f\u7684\u5206\u7c7b\uff0c\u5c42\u6b21\u4e2d\u6bcf\u4e00\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2alogger\u7684\u6240\u6709\u4fe1\u606f\u3002 Filter \u8fc7\u6ee4\u5668\uff0c\u8fc7\u6ee4\u8f93\u51fa\u6d88\u606f\u3002 <p>\u3010\u5176\u4e2d\u6709\u4e09\u4e2a\u6838\u5fc3\u7c7b\u3011</p> <ol> <li>logger\uff1a\u8bb0\u5f55\u65e5\u5fd7\u7684\u53e5\u67c4</li> <li>Appender\uff1a\u6307\u5b9a\u8f93\u51fa\u7684\u4f4d\u7f6e\uff08\u5982\u63a7\u5236\u53f0\u3001\u6587\u4ef6\u3001\u8fdc\u7a0b\u670d\u52a1\u5668\u7b49\uff09\u3002\u4e00\u4e2alogger\u53ef\u6dfb\u52a0\u591a\u4e2aAppender\uff0c\u4ece\u800c\u5411\u591a\u4e2a\u5730\u65b9\u8f93\u51fa\u65e5\u5fd7</li> <li>Layout\uff1a\u8f93\u51fa\u7684\u683c\u5f0f\u3002\u4e00\u4e2aAppender\u5bf9\u5e94\u4e00\u4e2aLayout</li> </ol> <p>\u3010\u4e09\u8005\u7684\u5173\u7cfb\u3011</p> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E7%B1%BB/#appender","title":"Appender","text":"<p>\u3010Appender\u7684\u6240\u6709\u7c7b\u578b\u3011</p> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E7%B1%BB/#layout","title":"Layout","text":"<p>\u3010\u7c7b\u578b\u3011</p> <p></p> \u7c7b\u578b \u8bf4\u660e SimpleLayout\u00a0 \u7b80\u5355\u683c\u5f0f\u7684\u5e03\u5c40\u5668\uff0c\u5728\u8f93\u51fa\u7684\u539f\u59cb\u4fe1\u606f\u4e4b\u524d\u52a0\u4e0aLogLevel\u548c\u4e00\u4e2a\"-\" TTCCLayout\u00a0 \u5176\u683c\u5f0f\u7531\u65f6\u95f4\uff0c\u7ebf\u7a0bID\uff0cLogger\u548cNDC \u7ec4\u6210 PatternLayout\u00a0 \u6709\u8bcd\u6cd5\u5206\u6790\u529f\u80fd\u7684\u6a21\u5f0f\u5e03\u5c40\u5668,\u7c7b\u4f3c\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u4ee5\u201c%\u201d\u4f5c\u4e3a\u5f00\u5934\u7684\u7279\u6b8a\u9884\u5b9a\u4e49\u6807\u8bc6\u7b26\uff0c\u5c06\u4ea7\u751f\u7279\u6b8a\u7684\u683c\u5f0f\u4fe1\u606f <pre><code>\uff081\uff09\"%%\"\uff0c\u8f6c\u4e49\u4e3a% \u3002\n\uff082\uff09\"%c\"\uff0c\u8f93\u51falogger\u540d\u79f0\uff0c\u5982test.subtest \u3002\u4e5f\u53ef\u4ee5\u63a7\u5236logger\u540d\u79f0\u7684\u663e\u793a\u5c42\u6b21\uff0c\u6bd4\u5982\"%c{1}\"\u65f6\u8f93\u51fa\"test\"\uff0c\u5176\u4e2d\u6570\u5b57\u8868\u793a\u5c42\u6b21\u3002\n\uff083\uff09\"%D\"\uff0c\u663e\u793a\u672c\u5730\u65f6\u95f4\uff0c\u6bd4\u5982\uff1a\"2004-10-16 18:55:45\"\uff0c%d\u663e\u793a\u6807\u51c6\u65f6\u95f4\u3002   \n\u53ef\u4ee5\u901a\u8fc7%d{...}\u5b9a\u4e49\u66f4\u8be6\u7ec6\u7684\u663e\u793a\u683c\u5f0f\uff0c\u6bd4\u5982%d{%H:%M:%s}\u8868\u793a\u8981\u663e\u793a\u5c0f\u65f6:\u5206\u949f\uff1a\u79d2\u3002\u5927\u62ec\u53f7\u4e2d\u53ef\u663e\u793a\u7684\u9884\u5b9a\u4e49\u6807\u8bc6\u7b26\u5982\u4e0b\uff1a\n   %a -- \u8868\u793a\u793c\u62dc\u51e0\uff0c\u82f1\u6587\u7f29\u5199\u5f62\u5f0f\uff0c\u6bd4\u5982\"Fri\"\n   %A -- \u8868\u793a\u793c\u62dc\u51e0\uff0c\u6bd4\u5982\"Friday\"\n   %b -- \u8868\u793a\u51e0\u6708\u4efd\uff0c\u82f1\u6587\u7f29\u5199\u5f62\u5f0f\uff0c\u6bd4\u5982\"Oct\"\n   %B -- \u8868\u793a\u51e0\u6708\u4efd\uff0c\"October\"\n   %c -- \u6807\u51c6\u7684\u65e5\u671f\uff0b\u65f6\u95f4\u683c\u5f0f\uff0c\u5982\"Sat Oct 16 18:56:19 2004\"\n   %d -- \u8868\u793a\u4eca\u5929\u662f\u8fd9\u4e2a\u6708\u7684\u51e0\u53f7(1-31)\"16\"\n   %H -- \u8868\u793a\u5f53\u524d\u65f6\u523b\u662f\u51e0\u65f6(0-23)\uff0c\u5982\"18\"\n   %I -- \u8868\u793a\u5f53\u524d\u65f6\u523b\u662f\u51e0\u65f6(1-12)\uff0c\u5982\"6\"\n   %j -- \u8868\u793a\u4eca\u5929\u662f\u54ea\u4e00\u5929(1-366)\uff0c\u5982\"290\"\n   %m -- \u8868\u793a\u672c\u6708\u662f\u54ea\u4e00\u6708(1-12)\uff0c\u5982\"10\"\n   %M -- \u8868\u793a\u5f53\u524d\u65f6\u523b\u662f\u54ea\u4e00\u5206\u949f(0-59)\uff0c\u5982\"59\"\n   %p -- \u8868\u793a\u73b0\u5728\u662f\u4e0a\u5348\u8fd8\u662f\u4e0b\u5348\uff0cAM or PM\n   %q -- \u8868\u793a\u5f53\u524d\u65f6\u523b\u4e2d\u6beb\u79d2\u90e8\u5206(0-999)\uff0c\u5982\"237\"\n   %Q -- \u8868\u793a\u5f53\u524d\u65f6\u523b\u4e2d\u5e26\u5c0f\u6570\u7684\u6beb\u79d2\u90e8\u5206(0-999.999)\uff0c\u5982 \"430.732\"\n   %S -- \u8868\u793a\u5f53\u524d\u65f6\u523b\u7684\u591a\u5c11\u79d2(0-59)\uff0c\u5982\"32\"\n   %U -- \u8868\u793a\u672c\u5468\u662f\u4eca\u5e74\u7684\u7b2c\u51e0\u4e2a\u793c\u62dc\uff0c\u4ee5\u5468\u65e5\u4e3a\u7b2c\u4e00\u5929\u5f00\u59cb\u8ba1\u7b97(0-53)\uff0c\u5982 \"41\"\n   %w -- \u8868\u793a\u793c\u62dc\u51e0\uff0c(0-6, \u793c\u62dc\u5929\u4e3a0)\uff0c\u5982\"6\"\n   %W -- \u8868\u793a\u672c\u5468\u662f\u4eca\u5e74\u7684\u7b2c\u51e0\u4e2a\u793c\u62dc\uff0c\u4ee5\u5468\u4e00\u4e3a\u7b2c\u4e00\u5929\u5f00\u59cb\u8ba1\u7b97(0-53)\uff0c\u5982 \"41\"\n   %x -- \u6807\u51c6\u7684\u65e5\u671f\u683c\u5f0f\uff0c\u5982\"10/16/04\"\n   %X -- \u6807\u51c6\u7684\u65f6\u95f4\u683c\u5f0f\uff0c\u5982\"19:02:34\"\n   %y -- \u4e24\u4f4d\u6570\u7684\u5e74\u4efd(0-99)\uff0c\u5982\"04\"\n   %Y -- \u56db\u4f4d\u6570\u7684\u5e74\u4efd\uff0c\u5982\"2004\"\n   %Z -- \u65f6\u533a\u540d\uff0c\u6bd4\u5982\"GMT\"\n\uff084\uff09\"%F\"\uff0c\u8f93\u51fa\u5f53\u524d\u8bb0\u5f55\u5668\u6240\u5728\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u6bd4\u5982\"main.cpp\"\n\uff085\uff09\"%L\"\uff0c\u8f93\u51fa\u5f53\u524d\u8bb0\u5f55\u5668\u6240\u5728\u7684\u6587\u4ef6\u884c\u53f7\uff0c\u6bd4\u5982\"51\"\n\uff086\uff09\"%l\"\uff0c\u8f93\u51fa\u5f53\u524d\u8bb0\u5f55\u5668\u6240\u5728\u7684\u6587\u4ef6\u540d\u79f0\u548c\u884c\u53f7\uff0c\u6bd4\u5982\"main.cpp:51\"\n\uff087\uff09\"%m\"\uff0c\u8f93\u51fa\u539f\u59cb\u4fe1\u606f\u3002\n\uff088\uff09\"%n\"\uff0c\u6362\u884c\u7b26\u3002\n\uff089\uff09\"%p\"\uff0c\u8f93\u51faLogLevel\uff0c\u6bd4\u5982\"DEBUG\"\n\uff0810\uff09\"%t\"\uff0c\u8f93\u51fa\u8bb0\u5f55\u5668\u6240\u5728\u7684\u7ebf\u7a0bID\uff0c\u6bd4\u5982 \"1075298944\"\n\uff0811\uff09\"%x\"\uff0c\u5d4c\u5957\u8bca\u65ad\u4e0a\u4e0b\u6587NDC (nested diagnostic context) \u8f93\u51fa\uff0c\u4ece\u5806\u6808\u4e2d\u5f39\u51fa\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0cNDC\u53ef\u4ee5\u7528\u5bf9\u4e0d\u540c\u6e90\u7684log\u4fe1\u606f\uff08\u540c\u65f6\u5730\uff09\u4ea4\u53c9\u8f93\u51fa\u8fdb\u884c\u533a\u5206\u3002\n\uff0812\uff09\u683c\u5f0f\u5bf9\u9f50\uff0c\u6bd4\u5982\"%-10m\"\u65f6\u8868\u793a\u5de6\u5bf9\u9f50\uff0c\u5bbd\u5ea6\u662f10\uff0c\u5f53\u7136\u5176\u5b83\u7684\u63a7\u5236\u5b57\u7b26\u4e5f\u53ef\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u6765\u4f7f\u7528\uff0c\u6bd4\u5982\"%-12d\"\uff0c\"%-5p\"\u7b49\u7b49\u3002\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E7%B1%BB/#root","title":"\u6839\u8282\u70b9root","text":"<p>\u83b7\u5f97\u6839\u8282\u70b9\uff1a<code>Logger logger = Logger::getRoot();</code></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E7%BC%96%E8%AF%91/","title":"\u7f16\u8bd1","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E7%BC%96%E8%AF%91/#linux","title":"linux","text":"<p>\u4e00\u3001\u89e3\u538b</p> <p><code>gzip -cd log4cplus-x.x.x.tar.gz | tar -xf -</code></p> <p>\u4e8c\u3001\u8fdb\u5165log4cplus\u6839\u76ee\u5f55</p> <p><code>cd log4cplus-x.x.x</code></p> <p>\u4e09\u3001\u4ea7\u751fMakefile</p> <p><code>./configure --prefix=/where/to/install -enable-threads=no</code></p> <p>\u5982\u679c\u9700\u8981\u6307\u5b9a\u5b89\u88c5\u8def\u5f84\u53ef\u4f7f\u7528--prefix\u53c2\u6570,\u00a0\u5426\u5219\u5c06\u7f3a\u7701\u5b89\u88c5\u5230/usr/local\u76ee\u5f55\u4e0b\u3002\u53e6\u5916\uff0c\u5982\u679c\u9700\u8981\u5355\u7ebf\u7a0b\u7248\u672c\u53ef\u901a\u8fc7\u53c2\u6570-enable-threads=no\u6307\u5b9a,\u00a0\u5426\u5219\u9ed8\u8ba4\u5c06\u5b89\u88c5\u591a\u7ebf\u7a0b\u7248\u672c\u3002</p> <p>\u5bf9\u4e8eHP-UNIX\u5e73\u53f0\u7528\u6237,\u00a0\u7531\u4e8eaCC\u7f16\u8bd1\u5668\u9009\u9879\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u8bf7\u53e6\u5916\u52a0\u5165\u53c2\u6570CXXFLAGS=\u201d-AA -w\u201d(\u5355\u7ebf\u7a0b\u7248\u672c)\u6216CXXFLAGS=\u201d-AA\u00a0\u2013mt -w\u201d(\u591a\u7ebf\u7a0b\u7248\u672c)\u3002</p> <p>\u56db\u3001make</p> <p>\u5bf9\u4e8eHP-UNIX\u7528\u6237\uff0c\u7531\u4e8eaCC\u7f16\u8bd1\u5668\u4e0d\u5305\u542b-Wall\u9009\u9879\u6765\u663e\u793a\u6240\u6709\u8b66\u544a\uff0c\u521b\u5efa\u65f6\u5c06\u5bfc\u81f4\u65e0\u6548\u7684-W\u53c2\u6570\u9519\u8bef\uff0c\u8bf7\u4fee\u6539<code>/log4cplus-x.x.x/src</code>\u76ee\u5f55\u4e0b\u7684Makefile\uff0c\u5c06AM_CPPFLAGS = -Wall\u00a0\u884c\u7684-Wall\u9009\u9879\u5220\u9664\u6216\u6ce8\u91ca\u6389\u3002</p> <p>\u6b64\u5916\uff0c\u67d0\u4e9bHP-UNIX\u5e73\u53f0\u7684\u5957\u63a5\u5b57\u8fde\u63a5\u63a5\u53d7\u51fd\u6570accept()\u7b2c\u4e09\u4e2a\u53c2\u6570\u8981\u6c42\u4e3aint*\uff0c\u800c\u5728<code>socket-unix.cxx</code>\u6e90\u6587\u4ef6153\u884c\u5b9e\u73b0\u4e2d\u5b9e\u9645\u4f20\u5165\u7684\u662fsocklen_t*\u7c7b\u578b\uff0c\u5e73\u53f0\u5e76\u4e0d\u652f\u6301\uff0c\u4e5f\u5c06\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef\u3002\u89e3\u51b3\u65b9\u6cd5\u662f\u5c06\u6e90\u4ee3\u7801\u8be5\u884c\u4e2d\u7684\u4f20\u5165\u53c2\u6570\u5f3a\u5236\u8f6c\u6362\u4e3aint*\u7c7b\u578b\u5373\u53ef\u3002\u00a0</p> <p>\u6ce8\u610fAIX\u548cLinux\u5e73\u53f0\u76ee\u524d\u5e76\u6ca1\u6709\u4e0a\u8ff0\u4e24\u5904\u521b\u5efa\u9519\u8bef\u3002</p> <p>\u5bf9\u4e8eAIX\u5e73\u53f0\u7528\u6237\u8bf7\u4fdd\u8bc1\u521b\u5efa\u65f6\u4f7f\u7528\u7684\u7f16\u8bd1\u5668\u662fxlC\u800c\u4e0d\u662fg++\uff0c\u5426\u5219\u5c06\u5bfc\u81f4log4cplus\u811a\u672c\u914d\u7f6e\u529f\u80fd\u8fd0\u884c\u65f6\u4ea7\u751f\u6bb5\u5f02\u5e38\uff0c\u751f\u6210core\u6587\u4ef6\u3002\u6709\u9274\u4e8e\u6b64\uff0c\u4e5f\u8bf7\u4fdd\u8bc1HP-UNIX\u7528\u6237\u5c3d\u91cf\u4f7f\u7528aCC\u7f16\u8bd1\u5668\u8fdb\u884c\u521b\u5efa\u3002</p> <p>\u4e94\u3001\u6d4b\u8bd5\u7528\u4f8b</p> <p>\u521b\u5efa/log4cplus/tests\u76ee\u5f55\u4e0b\u7684\u6d4b\u8bd5\u7528\u4f8b: <code>make check</code></p> <p>\u516d\u3001\u5b89\u88c5</p> <p><code>make install</code></p> <p>\u5b89\u88c5\u6210\u529f\u540e\u5c06\u5728/usr/local\u76ee\u5f55\u6216\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u521b\u5efainclude\u548clib\u4e24\u4e2a\u5b50\u76ee\u5f55\u53ca\u76f8\u5e94\u6587\u4ef6\u3002\u5176\u4e2dinclude\u76ee\u5f55\u5305\u542b\u5934\u6587\u4ef6\uff0clib\u76ee\u5f55\u5305\u542b\u6700\u7ec8\u6253\u5305\u751f\u6210\u7684\u9759\u6001\u548c\u52a8\u6001\u5e93\u3002\u5728\u52a8\u6001\u8fde\u63a5log4cplus\u5e93\u65f6\u8bf7\u4f7f\u7528-llog4cplus\u9009\u9879\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","title":"\u914d\u7f6e\u6587\u4ef6","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/#_1","title":"\u521d\u8bc6","text":"<pre><code># \u6587\u4ef6\u540d\uff1alog4cplus.config\nlog4cplus.rootLogger=WARN, MyFileAppender\n#\u6839\u65e5\u5fd7\n#\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a\u65e5\u5fd7\u7ea7\u522b\n#\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1aappender\uff0c\u8fd9\u91cc\u9009\u7528\u7684\u662f\u6587\u4ef6Appender\n# \u8fd9\u91cc\u5b9a\u4e49\u4e86\u4e24\u4e2a\u65e5\u5fd7\uff0c\u5b83\u4eec\u90fd\u7ee7\u627frootLogger\u5c5e\u6027\uff0c\u5e76\u6302\u8f7d\u5728rootLogger\u4e0b\nlog4cplus.logger.MemoryCheck=INFO, MyConsoleAppender\n#MemoryCheck\u4ecerootlogger\u7ee7\u627f\uff0c\u53c8\u5b9a\u4e49\u4e86\u81ea\u5df1\u7684\u65e5\u5fd7\u96c6\u522b\u548cappender\n#\u6545\u6700\u7ec8\u5b83\u7684\u65e5\u5fd7\u7ea7\u522b\u4e3a INFO\uff0c\u65e5\u5fd7\u540c\u65f6\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u548c\u6587\u4ef6\u4e2d\nlog4cplus.logger.DatabaseOperations=ERROR\n# ----- \u6bcf\u4e2aAppender\u53ef\u4ee5\u8bbe\u7f6e\u65e5\u5fd7\u7684\u8f93\u51fa\u4f4d\u7f6e\u3001\u8def\u5f84\u3001Layout\u7b49\u5185\u5bb9\n#Appender\u7c7b\u578b\uff1a\u8f93\u51fa\u5230\u547d\u4ee4\u884c\nlog4cplus.appender.MyConsoleAppender=log4cplus::ConsoleAppender\n#\u8f93\u51fa\u683c\u5f0f\nlog4cplus.appender.MyConsoleAppender.layout=log4cplus::PatternLayout\nlog4cplus.appender.MyConsoleAppender.layout.ConversionPattern=[%-5p][%d] %m%n\n#Appender\u7c7b\u578b\uff1a\u8f93\u51fa\u5230\u6587\u4ef6\nlog4cplus.appender.MyFileAppender=log4cplus::RollingFileAppender\n#\u6587\u4ef6\u8def\u5f84\nlog4cplus.appender.MyFileAppender.File=logging.txt\n#\u6307\u5b9a\u6587\u4ef6\u5927\u5c0f\u9608\u503c\nlog4cplus.appender.MyFileAppender.MaxFileSize=16MB\n#\u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u56de\u6eda\u5468\u671f\nlog4cplus.appender.MyFileAppender.MaxBackupIndex=1\n#\u8f93\u51fa\u683c\u5f0f\nlog4cplus.appender.MyFileAppender.layout=log4cplus::PatternLayout\nlog4cplus.appender.MyFileAppender.layout.ConversionPattern=[%-5p][%D{%Y/%m/%d %H:%M:%S:%q}][%-l][%t] %m%n\n</code></pre> <p>\u3010\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9\u3011 log4cplus\u63d0\u4f9b\u4e00\u4e2a\u7c7b**PropertyConfigurator**\u6765\u5b9e\u73b0\u4ece\u6587\u4ef6\u8bfb\u53d6\u914d\u7f6e\uff0c\u53c2\u6570\u5c31\u662f\u6587\u4ef6\u540d\u3002\u5176\u4ed6\u53c2\u6570\u91c7\u7528\u9ed8\u8ba4\uff0c\u521d\u59cb\u5316\u65f6\u4f7f\u7528 <pre><code>log4cplus::initialize();     log4cplus::PropertyConfigurator::doConfigure(LOG4CPLUS_TEXT(\"log4cplus.config\"));\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/#_2","title":"\u7528\u4f8b","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/#dailyrollingfileappender","title":"DailyRollingFileAppender","text":"<pre><code>#   -\u914d\u7f6elogger\u5bf9\u8c61\n#\u6839\u7684\u914d\u7f6e\uff1alog4cplus.rootLogger= [LogLevel],appenderName,appenderName,...\n#\u975e\u6839\u7684\u914d\u7f6e\uff1alog4cplus.logger.logger_name= [LogLevel|INHERITED],appenderName,...\nlog4cplus.rootLogger=ERROR, R\n# -\u914d\u7f6e\u8f93\u51fa\u4f4d\u7f6e\nlog4cplus.appender.R=log4cplus::DailyRollingFileAppender\n#\u6839\u636e\u9891\u5ea6\u6765\u51b3\u5b9a\u662f\u5426\u8f6c\u50a8\u7684\u6587\u4ef6\u8f6c\u50a8\u65b9\u5f0f\nlog4cplus.appender.R.File=./log/error.log\n#\u6587\u4ef6\u7684\u8def\u5f84\nlog4cplus.appender.R.Schedule=HOURLY\n#\u5b58\u50a8\u9891\u5ea6\u3002\u5f53\u8d85\u8fc7\u8be5\u9891\u5ea6\uff0c\u540e\u7eed log \u4fe1\u606f\u4f1a\u53e6\u5b58\u5230\u65b0\u6587\u4ef6\u4e2d\n#MONTHLY\uff08\u6bcf\u6708\uff09\u3001WEEKLY\uff08\u6bcf\u5468\uff09\u3001DAILY\uff08\u6bcf\u65e5\uff09\u3001TWICE_DAILY\uff08\u6bcf\u4e24\u5929\uff09\u3001HOURLY\uff08\u6bcf\u65f6\uff09\u3001MINUTELY\uff08\u6bcf\u5206\uff09\nlog4cplus.appender.R.Append=true\n#\u7f13\u51b2\u5237\u65b0\u6807\u8bc6\uff1a \u8868\u793a\u6bcf\u5411\u6587\u4ef6\u5199\u4e00\u6761\u8bb0\u5f55\u5c31\u5237\u65b0\u4e00\u6b21\u7f13\u5b58\uff0c\u5426\u5219\u76f4\u5230 FileAppender \u88ab\u5173\u95ed\u6216\u6587\u4ef6\u7f13\u5b58\u5df2\u6ee1\u624d\u66f4\u65b0\u6587\u4ef6\n#\u4e00\u822c\u8981\u8bbe\u7f6etrue\uff0c\u8fd9\u6837\u7c7b\u4f3c\u7a0b\u5e8f\u5d29\u6e83\u7684\u60c5\u51b5\u53d1\u751f\u540e\uff0c\u7a0b\u5e8f\u7ec8\u6b62\u65f6\u523b\u4e4b\u524d\u7684\u6240\u6709\u8bb0\u5f55\u90fd\u4f1a\u88ab\u6b63\u5e38\u4fdd\u5b58\n#\u914d\u7f6e\u6253\u5370\u7684\u683c\u5f0f\nlog4cplus.appender.R.layout=log4cplus::PatternLayout\nlog4cplus.appender.R.layout.ConversionPattern=[%D{%Y-%m-%d %H:%M:%S,%Q}] [%t] %-5p - %m%n[%p] \u6ce8\u91ca\uff087\uff09\nlog4cplus.logger.test=TRACE, RR\nlog4cplus.appender.RR=log4cplus::DailyRollingFileAppender\nlog4cplus.appender.RR.File=./log/test.log\nlog4cplus.appender.RR.Schedule=HOURLY\nlog4cplus.appender.RR.MaxBackupIndex=192 \u00a0 \u00a0#8 * 24 \u6ce8\u91ca\uff086\uff09\n#\u8bbe\u7f6e\u6700\u5927\u8bb0\u5f55\u6587\u4ef6\u6570\uff0c\u5f53\u8bb0\u5f55\u6587\u4ef6\u6570\u8d85\u8fc7MaxBackupIndex+1\uff08\u6b64\u5904\u4e3a193\uff09\u65f6\uff0c\u4f1a\u5220\u9664\u6700\u65e9\u751f\u6210\u7684\u6587\u4ef6\n#\u4fdd\u8bc1\u6574\u4e2a\u6587\u4ef6\u6570\u76ee\u7b49\u4e8eMaxBackupIndex+1\u3002\u540e\u9762\u7684\u6ce8\u91ca#8*24\u610f\u5728\u8bf4\u660e\u6b64\u5904\u8bbe\u7f6e\u5b9e\u8d28\u4e0a\u662f\u8bb0\u5f55\u516b\u5929\u4ee5\u5185\u7684\u65e5\u5fd7\nlog4cplus.appender.RR.Append=true\nlog4cplus.appender.RR.layout=log4cplus::PatternLayout\nlog4cplus.appender.RR.layout.ConversionPattern=%p %D{%Y-%m-%d %H:%M:%S.%q}:%t %F:%L \"%m\"%n\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/#timebasedrollingfileappender","title":"TimeBasedRollingFileAppender","text":"<pre><code>log4cplus.rootLogger=ALL, LegendPrint_Run_LOG\n# \u6307\u5b9aappend\u7c7b\u578b\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd9\u9700\u8981\u6309\u5929\u6765\u751f\u6210\uff0c\u540c\u65f6\u6587\u4ef6\u540d\u4e5f\u8981\u53ef\u4ee5\u6309\u65f6\u95f4\u6765\u547d\u540d\n#       \u6240\u4ee5\u9009\u62e9TimeBasedRollingFileAppender\nlog4cplus.appender.LegendPrint_Run_LOG = log4cplus::TimeBasedRollingFileAppender\n# \u6307\u5b9a\u6587\u4ef6\u8def\u5f84\u540d\uff0c\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84\u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84\uff0c\u53ef\u4ee5\u4f7f\u7528\u65f6\u95f4\u5339\u914d\u7b26\u6765\u52a8\u6001\u5b9a\u4e49\u6587\u4ef6\u540d\n#       log4Cplus\u4f1a\u6839\u636e\u4f60\u4f7f\u7528\u5230\u7684\u65f6\u95f4\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u3002\u6bd4\u5982\uff0c\u4f60\u7684\u6587\u4ef6\u540d\u662f\u7531\u5e74\u6708\u6784\u6210\uff0c\u90a3\u6bcf\u4e2a\u6708\u90fd\u4f1a\u751f\u6210\u65b0\u7684\u6587\u4ef6\u3002\nlog4cplus.appender.LegendPrint_Run_LOG.FilenamePattern= log\\ %d{yyyy-MM-dd}.log\n# \u8bbe\u7f6e\u4e3atrue\u8868\u793a\u5411\u65e5\u5fd7\u6587\u4ef6\u4e2d\u8ffd\u52a0\u4fe1\u606f\u800c\u4e0d\u662f\u622a\u65ad\u3002python\nlog4cplus.appender.LegendPrint_Run_LOG.Append = true\n# \u8bbe\u7f6e\u6700\u5927\u7684\u6587\u4ef6\u6570\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u6570\u503c\u5220\u9664\u65f6\u95f4\u6700\u4e45\u7684\u6587\u4ef6\u3002\nlog4cplus.appender.LegendPrint_Run_LOG.MaxHistory = 999\n# \u5f53\u8bbe\u7f6e\u4e3atrue\u8868\u793a\u6bcf\u4e00\u6b21\u6709append event\u4e8b\u4ef6\uff0c\u8f93\u51fa\u6d41\u5c31\u4f1a\u88ab\u5237\u65b0\u5230\u6587\u4ef6\u4e2d\u3002\nlog4cplus.appender.LegendPrint_Run_LOG.ImmediateFlush = true\n# \u9ed8\u8ba4\u503c\u4e3atrue\u5173\u95ed\u7684\u65f6\u5019\u56de\u6eda\u5230\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u4e2d\uff0c\u6709bug\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e3afalse\uff0c\u4e0d\u4f7f\u7528\u8fd9\u4e2a\u529f\u80fd\u3002\nlog4cplus.appender.LegendPrint_Run_LOG.RollOnClose = false\n# \u5982\u679c\u4e3atrue\uff0c\u90a3\u4e48\u5982\u679c\u6307\u5b9a\u7684\u65e5\u5fd7\u8def\u5f84\u540d\u4e2d\u5982\u679c\u6709\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\uff0c\u5219\u4f1a\u521b\u5efa\u6587\u4ef6\u5939\u3002\nlog4cplus.appender.LegendPrint_Run_LOG.CreateDirs = true\n# \u6307\u5b9a\u6d88\u606f\u8f93\u51fa\u7684\u683c\u5f0f\nlog4cplus.appender.LegendPrint_Run_LOG.layout = log4cplus::PatternLayout\nlog4cplus.appender.LegendPrint_Run_LOG.layout.ConversionPattern =  %D{%Y-%m-%d %H:%M:%S,%q}: %-5p %m%n\n# \u6307\u5b9a\u6d88\u606f\u8f93\u51fa\u7684\u7ea7\u522b\uff0c\u8fd9\u8fb9\u4f7f\u7528\u7684\u662fRange\uff0c\u6307\u5b9a\u8303\u56f4\uff0c\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u90fd\u53ef\u4ee5\u4f7f\u7528\nlog4cplus.appender.LegendPrint_Run_LOG.filters.1 = log4cplus::spi::LogLevelRangeFilter\nlog4cplus.appender.LegendPrint_Run_LOG.filters.1.LogLevelMin = TRACE\nlog4cplus.appender.LegendPrint_Run_LOG.filters.1.LogLevelMax = FATAL\n# \u8fd9\u91cc\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528LogLevelMatchFilter\u6765\u6307\u5b9a\u6d88\u606f\u8f93\u51fa\u7ea7\u522b\n# log4cplus.appender.LegendPrint_Error_LOG.filters.1=log4cplus::spi::LogLevelMatchFilter\n# log4cplus.appender.LegendPrint_Error_LOG.filters.1.LogLevelToMatch=ERROR\n# true\u8868\u793a\u5982\u679c\u5339\u914d\u4e86filter\u6307\u5b9a\u7684\u8303\u56f4\u5219\u8f93\u51fa\uff0c\u5982\u679c\u662ffalse\u5219\u53cd\u4e4b\u3002\nlog4cplus.appender.LegendPrint_Run_LOG.filters.1.AcceptOnMatch = true\n# \u8868\u793a\u6e05\u7a7a\u8fc7\u6ee4\u5668\u7684\u8bbe\u7f6e\uff0c\u8fd9\u8fb9\u8bbe\u7f6e\u7684\u987a\u5e8f\u548c\u6267\u884c\u7684\u987a\u5e8f\u662f\u76f8\u53cd\u7684\uff0c\u5373log4Cplus\u4f1a\u5148\u6e05\u7a7a//\u7136\u540e\u518d\u8bbe\u7f6efilter\u7684\u7ea7\u522b\u3002\nlog4cplus.appender.LegendPrint_Run_LOG.filters.2 = log4cplus::spi::DenyAllFilter\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/#_3","title":"\u540c\u6b65","text":"<pre><code># \u5b9a\u4e49\u4e86\u4e00\u4e2a\u65e5\u5fd7global\u3002\u6307\u5b9a\u7b49\u7ea7INFO\uff0c\u540d\u4e3aSA\u7684Appender\nlog4cplus.logger.global = INFO, SA\n# \u6307\u5b9aAppender\u7684\u7c7b\u578b\uff1a\u6309\u9891\u7387\u56de\u6eda\u6587\u4ef6\nlog4cplus.appender.SA=log4cplus::DailyRollingFileAppender\n# \u6307\u5b9a\u9891\u7387\uff1a\u65e5\u66f4\nlog4cplus.appender.SA.Schedule=HOURLY\n# \u65e5\u671f\u683c\u5f0f\nlog4cplus.appender.SA.DatePattern=%Y-%m-%d:%H\nlog4cplus.appender.SA.File= log_util.log\n# \u6700\u5927\u7684\u65e5\u5fd7\u6587\u4ef6\u6570\u91cf\u4e3aMaxBackupIndex+1\nlog4cplus.appender.SA.MaxBackupIndex=100\n# \u7f13\u51b2\u533a\u5927\u5c0f\nlog4cplus.appender.SA.BufferSize=131072\n# \u5f80\u540e\u8ffd\u52a0\nlog4cplus.appender.SA.Append=true\n# \u8f93\u51fa\u683c\u5f0f\nlog4cplus.appender.SA.layout=log4cplus::PatternLayout\nlog4cplus.appender.SA.layout.ConversionPattern=%D{%Y-%m-%d %H:%M:%S,%Q} [%l] %-5p %m%n\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/#_4","title":"\u5f02\u6b65","text":"<pre><code>log4cplus.logger.global = INFO, AA\n\n# \u6307\u5b9aAppender\u7684\u7c7b\u578b\nlog4cplus.appender.AA=log4cplus::AsyncAppender\n# \u961f\u5217\u7684\u9650\u5236\nlog4cplus.appender.AA.QueueLimit=10000\n\nlog4cplus.appender.AA.Appender=log4cplus::DailyRollingFileAppender\nlog4cplus.appender.AA.Appender.Schedule=HOURLY\nlog4cplus.appender.AA.Appender.Threshold = INFO\nlog4cplus.appender.AA.Appender.DatePattern=%Y-%m-%d-%H\nlog4cplus.appender.AA.Appender.File=./logger_test.log\nlog4cplus.appender.AA.Appender.ImmediateFlush=false\nlog4cplus.appender.AA.Appender.MaxFileSize=1000MB  \nlog4cplus.appender.AA.Appender.MaxBackupIndex=100\nlog4cplus.appender.AA.Appender.Append=true\nlog4cplus.appender.AA.Appender.layout=log4cplus::PatternLayout  \nlog4cplus.appender.AA.Appender.layout.ConversionPattern=%D{%Y-%m-%d %H:%M:%S,%Q} [%t] %-5p %m%n\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/#_5","title":"\u793a\u4f8b\u4e00","text":"<pre><code>#\u914d\u7f6e\u6587\u4ef6\uff08\u5176\u5b83\u65e5\u5fd7\u7ea7\u522b\u914d\u7f6e\u76f8\u540c\uff09\uff1a\nlog4cplus.logger.console=TRACE,logConsole\nlog4cplus.logger.root=TRACE,ERROR_MSGS, DEBUG_MSGS, INFO_MSGS\n#\u4e0d\u5411\u9ed8\u8ba4\u5bf9\u8c61\uff08rootLogger\uff09\u8f93\u51fa,\u56e0\u6b64\u4fe1\u606f\u53ea\u80fd\u8f93\u51fa\u5230\u6587\u4ef6\nlog4cplus.additivity.file=false\n###############################CONSOLE##########################################\nlog4cplus.appender.logConsole=log4cplus::ConsoleAppender\nlog4cplus.appender.logConsole.Encoding=utf-8\nlog4cplus.appender.logConsole.layout=log4cplus::PatternLayout\nlog4cplus.appender.logConsole.layout.ConversionPattern=[%D{%Y-%m-%d %H:%M:%S}] %-5p %m %n\n################################DEBUG####################################\n#\u8bbe\u7f6e\u65e5\u5fd7\u8ffd\u52a0\u5230\u6587\u4ef6\u5c3e\nlog4cplus.appender.DEBUG_MSGS=log4cplus::TimeBasedRollingFileAppender\nlog4cplus.appender.DEBUG_MSGS.FilenamePattern=debug.%d{yyyyMMdd}.log\nlog4cplus.appender.ERROR_MSGS.Schedule=DAILY\nlog4cplus.appender.ERROR_MSGS.MaxHistory=365\nlog4cplus.appender.DEBUG_MSGS.Append=true\nlog4cplus.appender.DEBUG_MSGS.RollOnClose=false\nlog4cplus.appender.DEBUG_MSGS.CreateDirs=true\n#\u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f\nlog4cplus.appender.DEBUG_MSGS.MaxFileSize=10MB\n#\u8bbe\u7f6e\u751f\u6210\u65e5\u5fd7\u6700\u5927\u4e2a\u6570\nlog4cplus.appender.DEBUG_MSGS.MaxBackupIndex=5\n#\u8bbe\u7f6e\u7f16\u7801\nlog4cplus.appender.DEBUG_MSGS.Encoding=utf-8\n# \u6253\u5370\u683c\u5f0f\nlog4cplus.appender.DEBUG_MSGS.layout=log4cplus::PatternLayout\nlog4cplus.appender.DEBUG_MSGS.layout.ConversionPattern=[%D{%Y-%m-%d %H:%M:%S}] %-5p %m %n\n#\u5339\u914d\u76f8\u540c\u65e5\u5fd7\u7ea7\u522b\uff0c\u53ea\u6709wx_uservedio\u65e5\u5fd7\u624d\u8f93\u5165\u5230\u8be5\u6587\u4ef6\u4e2d\nlog4cplus.appender.DEBUG_MSGS.filters.1=log4cplus::spi::LogLevelMatchFilter\nlog4cplus.appender.DEBUG_MSGS.filters.1.LogLevelToMatch=DEBUG\nlog4cplus.appender.DEBUG_MSGS.filters.1.AcceptOnMatch=true\nlog4cplus.appender.DEBUG_MSGS.filters.2=log4cplus::spi::DenyAllFilter\n################################ERROR####################################\n#\u8bbe\u7f6e\u65e5\u5fd7\u8ffd\u52a0\u5230\u6587\u4ef6\u5c3e\nlog4cplus.appender.ERROR_MSGS=log4cplus::TimeBasedRollingFileAppender\nlog4cplus.appender.ERROR_MSGS.FilenamePattern=error.%d{yyyyMMdd}.log\nlog4cplus.appender.ERROR_MSGS.Schedule=DAILY\nlog4cplus.appender.ERROR_MSGS.MaxHistory=365\nlog4cplus.appender.ERROR_MSGS.Append=true\nlog4cplus.appender.ERROR_MSGS.RollOnClose=false\nlog4cplus.appender.ERROR_MSGS.CreateDirs=true\n#\u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f\nlog4cplus.appender.ERROR_MSGS.MaxFileSize=10MB\n#\u8bbe\u7f6e\u751f\u6210\u65e5\u5fd7\u6700\u5927\u4e2a\u6570\nlog4cplus.appender.ERROR_MSGS.MaxBackupIndex=5\nlog4cplus.appender.ERROR_MSGS.Encoding=utf-8\nlog4cplus.appender.ERROR_MSGS.layout=log4cplus::PatternLayout\n#\u8bbe\u7f6e\u65e5\u5fd7\u6253\u5370\u683c\u5f0f\nlog4cplus.appender.ERROR_MSGS.layout.ConversionPattern=[%D{%Y-%m-%d %H:%M:%S}] %-5p %m%n\n#\u5339\u914d\u76f8\u540c\u65e5\u5fd7\u7ea7\u522b\uff0c\u53ea\u6709wx_uservedio\u65e5\u5fd7\u624d\u8f93\u5165\u5230\u8be5\u6587\u4ef6\u4e2d\nlog4cplus.appender.ERROR_MSGS.filters.1=log4cplus::spi::LogLevelMatchFilter\nlog4cplus.appender.ERROR_MSGS.filters.1.LogLevelToMatch=ERROR\nlog4cplus.appender.ERROR_MSGS.filters.1.AcceptOnMatch=true\nlog4cplus.appender.ERROR_MSGS.filters.2=log4cplus::spi::DenyAllFilter\n################################INFO####################################\n#\u8bbe\u7f6e\u65e5\u5fd7\u8ffd\u52a0\u5230\u6587\u4ef6\u5c3e\nlog4cplus.appender.INFO_MSGS=log4cplus::TimeBasedRollingFileAppender\nlog4cplus.appender.INFO_MSGS.FilenamePattern=info.%d{yyyyMMdd}.log\nlog4cplus.appender.INFO_MSGS.Schedule=DAILY\nlog4cplus.appender.INFO_MSGS.MaxHistory=365\nlog4cplus.appender.INFO_MSGS.Append=true\nlog4cplus.appender.INFO_MSGS.RollOnClose=false\nlog4cplus.appender.INFO_MSGS.CreateDirs=true\n#\u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f\nlog4cplus.appender.INFO_MSGS.MaxFileSize=10MB\n#\u8bbe\u7f6e\u751f\u6210\u65e5\u5fd7\u6700\u5927\u4e2a\u6570\nlog4cplus.appender.INFO_MSGS.MaxBackupIndex=5\nlog4cplus.appender.INFO_MSGS.Encoding=utf-8\nlog4cplus.appender.INFO_MSGS.layout=log4cplus::PatternLayout\n#\u8bbe\u7f6e\u65e5\u5fd7\u6253\u5370\u683c\u5f0f\nlog4cplus.appender.INFO_MSGS.layout.ConversionPattern=[%D{%Y-%m-%d %H:%M:%S}] %-5p %m %n   \n#\u5339\u914d\u76f8\u540c\u65e5\u5fd7\u7ea7\u522b\uff0c\u53ea\u6709INFO\u65e5\u5fd7\u624d\u8f93\u5165\u5230\u8be5\u6587\u4ef6\u4e2d\nlog4cplus.appender.INFO_MSGS.filters.1=log4cplus::spi::LogLevelMatchFilter\nlog4cplus.appender.INFO_MSGS.filters.1.LogLevelToMatch=INFO\nlog4cplus.appender.INFO_MSGS.filters.1.AcceptOnMatch=true\nlog4cplus.appender.INFO_MSGS.filters.2=log4cplus::spi::DenyAllFilter\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/#_6","title":"\u793a\u4f8b\u4e8c","text":"<pre><code>log4cplus.rootLogger=DEBUG,ALL_MSGS,ERROR_MSGS\nlog4cplus.appender.ALL_MSGS=log4cplus::DailyRollingFileAppender\nlog4cplus.appender.ALL_MSGS.Schedule=DAILY\n#log4cplus.appender.ALL_MSGS.DatePattern=yyyy-MM-dd\nlog4cplus.appender.ALL_MSGS.MaxFileSize=100MB\nlog4cplus.appender.ALL_MSGS.MaxBackupIndex=10\nlog4cplus.appender.ALL_MSGS.CreateDirs=true\nlog4cplus.appender.ALL_MSGS.File=log.log\nlog4cplus.appender.ALL_MSGS.layout=log4cplus::PatternLayout\nlog4cplus.appender.ALL_MSGS.layout.ConversionPattern=%d{%Y-%m-%d %H:%M:%S,%Q} %-4l [%t] %-5p %c{2} - %m%n\n#Range\nlog4cplus.appender.ALL_MSGS.filters.1=log4cplus::spi::LogLevelRangeFilter\nlog4cplus.appender.ALL_MSGS.filters.1.LogLevelMin=TRACE\nlog4cplus.appender.ALL_MSGS.filters.1.LogLevelMax=FATAL\nlog4cplus.appender.ALL_MSGS.filters.1.AcceptOnMatch=true\nlog4cplus.appender.ALL_MSGS.filters.2=log4cplus::spi::DenyAllFilter\nlog4cplus.appender.ERROR_MSGS=log4cplus::DailyRollingFileAppender\nlog4cplus.appender.ERROR_MSGS.Schedule=DAILY\n#log4cplus.appender.ERROR_MSGS.DatePattern=yyyy-MM-dd\nlog4cplus.appender.ERROR_MSGS.MaxFileSize=100MB\nlog4cplus.appender.ERROR_MSGS.MaxBackupIndex=10\nlog4cplus.appender.ERROR_MSGS.CreateDirs=true\nlog4cplus.appender.ERROR_MSGS.File=error.log\nlog4cplus.appender.ERROR_MSGS.layout=log4cplus::PatternLayout\nlog4cplus.appender.ERROR_MSGS.layout.ConversionPattern=%d{%Y-%m-%d %H:%M:%S,%Q} %-4l [%t] %-5p %c{2} - %m%n\n#Match\u00a0\nlog4cplus.appender.ERROR_MSGS.filters.1=log4cplus::spi::LogLevelMatchFilter\nlog4cplus.appender.ERROR_MSGS.filters.1.LogLevelToMatch=ERROR\nlog4cplus.appender.ERROR_MSGS.filters.1.AcceptOnMatch=true\nlog4cplus.appender.ERROR_MSGS.filters.2=log4cplus::spi::DenyAllFilter\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cplus/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/#_7","title":"\u65e5\u66f4\u3001\u6309\u7b49\u7ea7\u5206\u6d41","text":"<pre><code>#\u914d\u7f6e\u6587\u4ef6\uff08\u5176\u5b83\u65e5\u5fd7\u7ea7\u522b\u914d\u7f6e\u76f8\u540c\uff09\uff1a\nlog4cplus.rootLogger=TRACE, DEBUG_MSGS, ERROR_MSGS, WARN_MSGS\n#DEBUG\n#\u8bbe\u7f6e\u65e5\u5fd7\u8ffd\u52a0\u5230\u6587\u4ef6\u5c3e\nlog4cplus.appender.DEBUG_MSGS=log4cplus::RollingFileAppender\n#\u8bbe\u7f6e\u6bcf\u5929\u8bb0\u5f55\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6\nlog4cplus.appender.DEBUG_MSGS.Schedule=DAILY\nlog4cplus.appender.DEBUG_MSGS.DatePattern=yyyy-MM-dd\n#\u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f\nlog4cplus.appender.DEBUG_MSGS.MaxFileSize=100MB\n#\u8bbe\u7f6e\u751f\u6210\u65e5\u5fd7\u6700\u5927\u4e2a\u6570\nlog4cplus.appender.DEBUG_MSGS.MaxBackupIndex=10\n#\u8bbe\u7f6e\u8f93\u51fa\u65e5\u5fd7\u8def\u5f84\nlog4cplus.appender.DEBUG_MSGS.File=/home/zhangshibo/log_test/log/debug.log\nlog4cplus.appender.DEBUG_MSGS.layout=log4cplus::PatternLayout\n#\u8bbe\u7f6e\u65e5\u5fd7\u6253\u5370\u683c\u5f0f\nlog4cplus.appender.DEBUG_MSGS.layout.ConversionPattern=[%D{%Y-%m-%d %H:%M:%S}]%p%m%n\n#\u5339\u914d\u76f8\u540c\u65e5\u5fd7\u7ea7\u522b\uff0c\u53ea\u6709debug\u65e5\u5fd7\u624d\u8f93\u5165\u5230\u8be5\u6587\u4ef6\u4e2d\nlog4cplus.appender.DEBUG_MSGS.filters.1=log4cplus::spi::LogLevelMatchFilter\nlog4cplus.appender.DEBUG_MSGS.filters.1.LogLevelToMatch=DEBUG\nlog4cplus.appender.DEBUG_MSGS.filters.1.AcceptOnMatch=true\nlog4cplus.appender.DEBUG_MSGS.filters.2=log4cplus::spi::DenyAllFilter\n#ERROR\n#\u8bbe\u7f6e\u65e5\u5fd7\u8ffd\u52a0\u5230\u6587\u4ef6\u5c3e\nlog4cplus.appender.ERROR_MSGS=log4cplus::RollingFileAppender\n#\u8bbe\u7f6e\u6bcf\u5929\u8bb0\u5f55\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6\nlog4cplus.appender.DEBUG_MSGS.Schedule=DAILY\nlog4cplus.appender.DEBUG_MSGS.DatePattern=yyyy-MM-dd\n#\u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f\nlog4cplus.appender.ERROR_MSGS.MaxFileSize=100MB\n#\u8bbe\u7f6e\u751f\u6210\u65e5\u5fd7\u6700\u5927\u4e2a\u6570\nlog4cplus.appender.ERROR_MSGS.MaxBackupIndex=10\n#\u8bbe\u7f6e\u8f93\u51fa\u65e5\u5fd7\u8def\u5f84\nlog4cplus.appender.ERROR_MSGS.File=/home/zhangshibo/log_test/log/error.log\n#\u8bbe\u7f6e\u65e5\u5fd7\u6253\u5370\u683c\u5f0f\nlog4cplus.appender.ERROR_MSGS.layout=log4cplus::PatternLayout\nlog4cplus.appender.ERROR_MSGS.layout.ConversionPattern=[%D{%Y-%m-%d %H:%M:%S}]%p%m%n\n#\u5339\u914d\u76f8\u540c\u65e5\u5fd7\u7ea7\u522b\uff0c\u53ea\u6709debug\u65e5\u5fd7\u624d\u8f93\u5165\u5230\u8be5\u6587\u4ef6\u4e2d\nlog4cplus.appender.ERROR_MSGS.filters.1=log4cplus::spi::LogLevelMatchFilter\nlog4cplus.appender.ERROR_MSGS.filters.1.LogLevelToMatch=ERROR\nlog4cplus.appender.ERROR_MSGS.filters.1.AcceptOnMatch=true\nlog4cplus.appender.ERROR_MSGS.filters.2=log4cplus::spi::DenyAllFilter\n#WARN\n#\u8bbe\u7f6e\u65e5\u5fd7\u8ffd\u52a0\u5230\u6587\u4ef6\u5c3e\nlog4cplus.appender.WARN_MSGS=log4cplus::RollingFileAppender\n#\u8bbe\u7f6e\u6bcf\u5929\u8bb0\u5f55\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6\nlog4cplus.appender.DEBUG_MSGS.Schedule=DAILY\nlog4cplus.appender.DEBUG_MSGS.DatePattern=yyyy-MM-dd\n#\u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f\nlog4cplus.appender.WARN_MSGS.MaxFileSize=100MB\n#\u8bbe\u7f6e\u751f\u6210\u65e5\u5fd7\u6700\u5927\u4e2a\u6570\nlog4cplus.appender.WARN_MSGS.MaxBackupIndex=10\n#\u8bbe\u7f6e\u8f93\u51fa\u65e5\u5fd7\u8def\u5f84\nlog4cplus.appender.WARN_MSGS.File=/home/zhangshibo/log_test/log/warn.log\n#\u8bbe\u7f6e\u65e5\u5fd7\u6253\u5370\u683c\u5f0f\nlog4cplus.appender.WARN_MSGS.layout=log4cplus::PatternLayout\nlog4cplus.appender.WARN_MSGS.layout.ConversionPattern=[%D{%Y-%m-%d %H:%M:%S}]%p%m%n\n#\u5339\u914d\u76f8\u540c\u65e5\u5fd7\u7ea7\u522b\uff0c\u53ea\u6709debug\u65e5\u5fd7\u624d\u8f93\u5165\u5230\u8be5\u6587\u4ef6\u4e2d\nlog4cplus.appender.WARN_MSGS.filters.1=log4cplus::spi::LogLevelMatchFilter\nlog4cplus.appender.WARN_MSGS.filters.1.LogLevelToMatch=WARN\nlog4cplus.appender.WARN_MSGS.filters.1.AcceptOnMatch=true\nlog4cplus.appender.WARN_MSGS.filters.2=log4cplus::spi::DenyAllFilter\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/","title":"log4cpp","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/#_1","title":"\u7b80\u4ecb","text":"<p>\u5f00\u6e90C++\u7c7b\u5e93\uff0c\u63d0\u4f9b\u4e86C++\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u65e5\u5fd7\u548c\u8ddf\u8e2a\u8c03\u8bd5\u7684\u529f\u80fd</p> <ol> <li>\u63d0\u4f9b\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u4e0a\u4e0b\u6587\uff0c\u65b9\u4fbf\u8ddf\u8e2a\u8c03\u8bd5</li> <li>\u53ef\u6269\u5c55\u7684\u3001\u591a\u79cd\u65b9\u5f0f\u8bb0\u5f55\u65e5\u5fd7\uff0c\u5305\u62ec\u547d\u4ee4\u884c\u3001\u6587\u4ef6\u3001\u56de\u5377\u6587\u4ef6\u3001\u5185\u5b58\u3001syslog\u670d\u52a1\u5668\u3001Win\u4e8b\u4ef6\u65e5\u5fd7\u7b49</li> <li>\u53ef\u52a8\u6001\u63a7\u5236\u65e5\u5fd7\u8bb0\u5f55\u7ea7\u522b\uff0c\u5728\u6548\u7387\u548c\u529f\u80fd\u4e2d\u8fdb\u884c\u8c03\u6574</li> <li>\u6240\u6709\u914d\u7f6e\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u52a8\u6001\u8c03\u6574</li> <li>\u591a\u8bed\u8a00\u652f\u6301\uff0c\u5305\u62ecJava\uff08log4j\uff09\u3001C++\uff08log4cpp\u3001log4cplus\uff09\u3001C\uff08log4c\uff09\u3001python\uff08log4p\uff09\u7b49</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/#_2","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>log4cpp\u5b98\u7f51</li> <li>log4cpp\u6e90\u7801\u5730\u5740</li> <li>log4cpp\u4f7f\u7528\u624b\u518c</li> <li>log4cpp\u5feb\u901f\u4f7f\u7528</li> <li>log4cpp\u8be6\u7ec6\u4ecb\u7ecd</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/NDC%E5%B5%8C%E5%A5%97%E7%9A%84%E8%AF%8A%E6%96%AD%E4%B8%8A%E4%B8%8B%E6%96%87/","title":"NDC\u5d4c\u5957\u7684\u8bca\u65ad\u4e0a\u4e0b\u6587","text":"<p>\u3010NDC\u4ecb\u7ecd\u3011NDC\u662fnested DiagnosticContext\u7684\u7f29\u5199\uff0c\u610f\u601d\u662f\u201c\u5d4c\u5957\u7684\u8bca\u65ad\u4e0a\u4e0b\u6587\u201d\u3002NDC\u662f\u4e00\u79cd\u7528\u6765\u533a\u5206\u4e0d\u540c\u6e90\u4ee3\u7801\u4e2d\u4ea4\u66ff\u51fa\u73b0\u7684\u65e5\u5fd7\u7684\u624b\u6bb5</p> <p>\u3010\u80cc\u666f\u3011\u5f53\u4e00\u4e2a\u670d\u52a1\u7aef\u7a0b\u5e8f\u540c\u65f6\u8bb0\u5f55\u597d\u51e0\u4e2a\u5e76\u884c\u5ba2\u6237\u65f6\uff0c\u8f93\u51fa\u7684\u65e5\u5fd7\u4f1a\u6df7\u6742\u5728\u4e00\u8d77\u96be\u4ee5\u533a\u5206\u3002\u4f46\u5982\u679c\u4e0d\u540c\u4e0a\u4e0b\u6587\u7684\u65e5\u5fd7\u5165\u53e3\u62e5\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u6807\u8bc6\uff0c\u5219\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002NDC\u5c31\u662f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u53d1\u6325\u4f5c\u7528\u3002\u6ce8\u610fNDC\u662f\u4ee5\u7ebf\u7a0b\u4e3a\u57fa\u7840\u7684\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u62e5\u6709\u4e00\u4e2aNDC\uff0c\u6bcf\u4e2aNDC\u7684\u64cd\u4f5c\u4ec5\u5bf9\u6267\u884c\u8be5\u64cd\u4f5c\u7684\u7ebf\u7a0b\u6709\u6548\u3002</p> <p>\u3010\u4f7f\u7528\u3011NDC\u7684\u51e0\u4e2a\u6709\u7528\u7684\u65b9\u6cd5\u662f\uff1apush\u3001pop\u3001get\u548cclear\u3002\u6ce8\u610f\u5b83\u4eec\u90fd\u662f\u9759\u6001\u51fd\u6570</p> <ol> <li>Push\u53ef\u4ee5\u8ba9\u5f53\u524d\u7ebf\u7a0b\u8fdb\u5165\u4e00\u4e2aNDC\uff0c\u5982\u679c\u8be5NDC\u4e0d\u5b58\u5728\uff0c\u5219\u6839\u636epush\u7684\u53c2\u6570\u521b\u5efa\u4e00\u4e2aNDC\u5e76\u8fdb\u5165;\u5982\u679c\u518d\u8c03\u7528\u4e00\u6b21push\uff0c\u5219\u8fdb\u5165\u5b50NDC;</li> <li>Pop\u53ef\u4ee5\u8ba9\u5f53\u524d\u7ebf\u7a0b\u4ece\u4e0a\u4e00\u7ea7NDC\u4e2d\u9000\u51fa\uff0c\u4f46\u662f\u4e00\u6b21\u53ea\u80fd\u9000\u51fa\u4e00\u7ea7\u3002</li> <li>Clear\u53ef\u4ee5\u8ba9\u5f53\u524d\u7ebf\u7a0b\u4ece\u6240\u6709\u5d4c\u5957\u7684NDC\u4e2d\u9000\u51fa\u3002</li> <li>Get\u53ef\u4ee5\u5f97\u5230\u5f53\u524dNDC\u7684\u540d\u5b57\uff0c\u5982\u679c\u6709\u5d4c\u5957\uff0c\u5219\u4e0d\u540c\u7ea7\u522b\u4e4b\u95f4\u7684\u540d\u5b57\u7528\u7a7a\u683c\u9694\u5f00</li> </ol> <p>\u3010\u4f8b\u5b50\u3011\u5728\u8bb0\u5f55\u65e5\u5fd7\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4eceNDC\u4e2d\u5f97\u77e5\u5f53\u524d\u7ebf\u7a0b\u7684\u5d4c\u5957\u5173\u7cfb\u3002 <pre><code>std::cout&lt;&lt; \"1.empty NDC: \" &lt;&lt;NDC::get()&lt;&lt; std::endl;\nNDC::push(\"context1\");\nstd::cout&lt;&lt; \"2.push context1: \" &lt;&lt;NDC::get()&lt;&lt; std::endl;\nNDC::push(\"context2\");\nstd::cout&lt;&lt; \"3.push context2: \" &lt;&lt;NDC::get()&lt;&lt; std::endl;\nNDC::push(\"context3\");\nstd::cout&lt;&lt; \"4.push context3: \" &lt;&lt;NDC::get()&lt;&lt; std::endl;\nstd::cout&lt;&lt; \"5.get depth: \" &lt;&lt;NDC::getDepth() &lt;&lt;std::endl;\nstd::cout&lt;&lt; \"6.pop: \" &lt;&lt; NDC::pop()&lt;&lt; std::endl;\nstd::cout&lt;&lt; \"7.after pop:\"&lt;&lt;NDC::get()&lt;&lt;std::endl;\nNDC::clear();\nstd::cout&lt;&lt; \"8.clear: \" &lt;&lt; NDC::get() &lt;&lt;std::endl;\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%B8%89%E4%B8%AA%E7%BB%84%E4%BB%B6/","title":"\u4e09\u4e2a\u7ec4\u4ef6","text":"<p>Log4cpp\u6709\u4e09\u4e2a\u4e3b\u8981\u7684\u7ec4\u4ef6\uff1a\u7c7b\u522b\uff08Category\uff09\u3001\u9644\u52a0\u76ee\u7684\u5730\uff08Appender\uff0c\u5373\u8f93\u51fa\u6e90\uff09\u3001\u5e03\u5c40\uff08Layout\uff09\u3002</p> \u7c7b\u522b \u804c\u8d23 \u8bf4\u660e Category \u8d1f\u8d23\u5411\u65e5\u5fd7\u5199\u5165\u4fe1\u606f 1. \u7cfb\u7edf\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2aCategory\uff0c\u5b83\u4eec\u90fd\u662f\u7ee7\u627f\u81ea\u540c\u4e00\u4e2a\u6839\uff0c\u6bcf\u4e2aCategory\u8d1f\u8d23\u8bb0\u5f55\u81ea\u5df1\u7684\u65e5\u5fd72. \u6bcf\u4e2aCategory\u53ef\u4ee5\u6dfb\u52a0\u591a\u4e2aAppender3. \u5f53Category\u8bb0\u5f55\u4e00\u6761\u65e5\u5fd7\u65f6\uff0c\u8be5\u65e5\u5fd7\u88ab\u5199\u5165\u6240\u6709\u9644\u52a0\u5230\u6b64Category\u7684Appender Appender \u8d1f\u8d23\u6307\u5b9a\u65e5\u5fd7\u7684\u8f93\u51fa\u5730\u70b9 1. \u6bcf\u4e2aAppender\u6307\u5b9a\u4e00\u4e2a\u65e5\u5fd7\u7684\u76ee\u7684\u5730\uff0c\u4f8b\u5982\u6587\u4ef6\u3001\u5b57\u7b26\u6d41\u6216\u8005Windows\u65e5\u5fd72. \u6bcf\u4e2aAppend\u90fd\u5305\u542b\u4e00\u4e2aLayout\uff0c\u8be5Layout\u5b9a\u4e49\u4e86\u8fd9\u4e2aAppender\u4e0a\u7684\u65e5\u5fd7\u683c\u5f0f Layout \u8d1f\u8d23\u8bbe\u5b9a\u65e5\u5fd7\u7684\u683c\u5f0f"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%B8%89%E4%B8%AA%E7%BB%84%E4%BB%B6/#category","title":"\u7c7b\u522b\uff08Category\uff09","text":"<p>\u3010\u8bf4\u660e\u3011\u6bcf\u4e2aCategory\u90fd\u6709\u4e00\u4e2a\u4f18\u5148\u7ea7\uff0c\u8be5\u4f18\u5148\u7ea7\u53ef\u4ee5\u7531setPriority\u65b9\u6cd5\u8bbe\u7f6e\uff0c\u6216\u8005\u4ece\u5176\u7236\u7684Category\u4e2d\u7ee7\u627f\u800c\u6765\u3002</p> <p>\u3010\u4f18\u5148\u7ea7\u3011\u5982\u679c**\u65e5\u5fd7\u4f18\u5148\u7ea7**\u9ad8\u4e8e**Category\u7684\u4f18\u5148\u7ea7**\uff0c\u8be5\u65e5\u5fd7\u88ab\u8bb0\u5f55\uff0c\u5426\u5219\u88ab\u5ffd\u7565\u3002 \u65e5\u5fd7\u4f18\u5148\u7ea7\uff1aDEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL</p> <ol> <li>\u5982\u679c\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u7684\u7ea7\u522b\u662fDEBUG\uff0c\u5219\u4efb\u610f\u7684log\u90fd\u80fd\u6253\u5370\u51fa\u6765</li> <li>\u5982\u679c\u914d\u7f6e\u7684\u7ea7\u522b\u662fERROR\uff0c\u5219\u53ea\u6709\u9ad8\u4e8eERROR\u4f18\u5148\u7ea7\u7684\u65e5\u5fd7\u624d\u53ef\u4ee5\u6253\u5370\u51fa\u6765 <pre><code>typedefenum {\nEMERG\u00a0\u00a0= 0,\nFATAL\u00a0\u00a0= 0,\nALERT\u00a0\u00a0= 100,\nCRIT\u00a0\u00a0\u00a0= 200,\nERROR\u00a0\u00a0= 300,\nWARN\u00a0\u00a0\u00a0= 400,\nNOTICE =500,\nINFO\u00a0\u00a0\u00a0= 600,\nDEBUG\u00a0\u00a0= 700,\nNOTSET = 800\n}PriorityLevel;\n</code></pre> \u3010\u8865\u5145\u3011Log4cpp\u4e2d\u6709\u4e00\u4e2a\u603b\u662f\u53ef\u7528\u5e76\u5b9e\u4f8b\u5316\u597d\u7684Category\uff0c\u5373\u6839Category\u3002\u4f7f\u7528log4cpp::Category::getRoot()\u53ef\u4ee5\u5f97\u5230\u6839Category\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u53ea\u9700\u8981\u4e00\u4e2a\u65e5\u5fd7\u79cd\u7c7b(Category)\uff0c\u4f46\u662f\u6709\u65f6\u4e5f\u4f1a\u7528\u5230\u591a\u4e2aCategory\uff0c\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528\u6839Category\u7684getInstance\u65b9\u6cd5\u6765\u5f97\u5230\u5b50Category\u3002\u4e0d\u540c\u7684\u5b50Category\u7528\u4e8e\u4e0d\u540c\u7684\u573a\u5408</li> </ol> <p>\u3010\u4f8b\u5b50\u3011\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u5171\u6709\u4e09\u4e2aCategory\uff0c\u5206\u522b\u662f\u6839\u3001sub1\u548csub2\uff0c\u5176\u4e2dsub1\u8bb0\u5f55\u4e86\u4e00\u6761\u65e5\u5fd7\uff0csub2\u8bb0\u5f55\u4e86\u4e24\u6761\u65e5\u5fd7\u3002Sub2\u53e6\u5916\u4e24\u4e2a\u65e5\u5fd7\u7531\u4e8e\u4f18\u5148\u7ea7\u4e0d\u591f\u672a\u80fd\u8bb0\u5f55\u3002</p> <pre><code>log4cpp::OstreamAppender*osAppender1 = new log4cpp::OstreamAppender(\"osAppender1\",&amp;cout);\nosAppender1-&gt;setLayout(newlog4cpp::BasicLayout());\nlog4cpp::OstreamAppender*osAppender2 = new log4cpp::OstreamAppender(\"osAppender2\",&amp;cout);\nosAppender2-&gt;setLayout(newlog4cpp::BasicLayout());\nlog4cpp::Category&amp; root =log4cpp::Category::getRoot();\nroot.setPriority(log4cpp::Priority::DEBUG);\nlog4cpp::Category&amp; sub1 =root.getInstance(\"sub1\");\nsub1.addAppender(osAppender1);\nsub1.setPriority(log4cpp::Priority::DEBUG);\nsub1.error(\"suberror\");\nlog4cpp::Category&amp; sub2 =root.getInstance(\"sub2\");\nsub2.addAppender(osAppender2);\nsub2.setPriority(101);\nsub2.warn(\"sub2warning\");\nsub2.fatal(\"sub2fatal\");\nsub2.alert(\"sub2alert\");\nsub2.crit(\"sub2crit\");\nlog4cpp::Category::shutdown();\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%B8%89%E4%B8%AA%E7%BB%84%E4%BB%B6/#appender","title":"\u8f93\u51fa\u6e90\uff08Appender\uff09","text":"<p>\u8f93\u51fa\u6e90\u7528\u6765\u8f93\u51fa\u65e5\u5fd7\uff08\u88ablayout\u683c\u5f0f\u5316\u540e\uff09\u5230\u4e00\u4e9b\u8bbe\u5907\u4e0a\uff0c\u6bd4\u5982\u6587\u4ef6\u3001\u547d\u4ee4\u884c\u3001\u5185\u5b58\u7b49\u3002\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49appender\uff0c\u4ee5\u8f93\u51fa\u5230\u522b\u7684\u8bbe\u5907\u4e0a\u3002 log4cpp\u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7684Appender\u5217\u8868\u5982\u4e0b\uff1a</p> \u7c7b\u522b \u804c\u8d23 log4cpp::IdsaAppender \u53d1\u9001\u5230Idsa\u670d\u52a1 log4cpp::FileAppender\u00a0 \u8f93\u51fa\u5230\u6587\u4ef6 log4cpp::RollingFileAppender \u8f93\u51fa\u5230\u56de\u5377\u6587\u4ef6\uff0c\u5373\u5f53\u6587\u4ef6\u5230\u8fbe\u67d0\u4e2a\u5927\u5c0f\u540e\u56de\u5377 log4cpp::OstreamAppender \u8f93\u51fa\u5230\u4e00\u4e2aostream\u7c7b log4cpp::RemoteSyslogAppender \u8f93\u51fa\u5230\u8fdc\u7a0bsyslog\u670d\u52a1\u5668\u3002\u9700\u8981\u4e0eSyslog\u914d\u5408\u4f7f\u7528 log4cpp::StringQueueAppender \u5185\u5b58\u961f\u5217 log4cpp::SyslogAppender \u672c\u5730syslog\u3002\u9700\u8981\u4e0eSyslog\u914d\u5408\u4f7f\u7528 log4cpp::Win32DebugAppender \u53d1\u9001\u5230\u7f3a\u7701\u7cfb\u7edf\u8c03\u8bd5\u5668 log4cpp::NTEventLogAppender \u53d1\u9001\u5230win\u4e8b\u4ef6\u65e5\u5fd7 <p>\u8865\u5145\uff1aSyslog\u662f\u7c7bUnix\u7cfb\u7edf\u7684\u4e00\u4e2a\u6838\u5fc3\u670d\u52a1\uff0c\u7528\u6765\u63d0\u4f9b\u65e5\u5fd7\u670d\u52a1\uff0c\u5728Windows\u7cfb\u7edf\u4e2d\u5e76\u6ca1\u6709\u76f4\u63a5\u63d0\u4f9b\u652f\u6301\uff0c\u5f53\u7136\u53ef\u4ee5\u7528\u76f8\u5173\u5de5\u5177()\u63d0\u4f9bWindows\u7cfb\u7edf\u4e2d\u7684syslog\u670d\u52a1\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%B8%89%E4%B8%AA%E7%BB%84%E4%BB%B6/#ostreamappender","title":"OstreamAppender","text":"<p>\u3010\u529f\u80fd\u3011\u5c06\u65e5\u5fd7\u8bb0\u5f55\u6210\u4e00\u4e2a\u6d41\uff0c\u5982\u679c\u8be5\u6d41\u6070\u597d\u662fcout\uff0c\u5219\u4f1a\u5728\u6807\u51c6\u63a7\u5236\u53f0\u4e0a\u8f93\u51fa\u3002\u6bd4printf\u4f18\u8d8a\u7684\u662f\uff0c\u9664\u4e86\u8f93\u51fa\u6d88\u606f\u5916\uff0c\u8fd8\u53ef\u4ee5\u8f7b\u677e\u7684\u8f93\u51fa\u65f6\u95f4\u3001\u65f6\u949f\u6570\u3001\u4f18\u5148\u7ea7\u7b49\u5927\u91cf\u6709\u7528\u4fe1\u606f\u3002</p> <p>\u3010\u4f7f\u7528\u3011 <pre><code>log4cpp::OstreamAppender* osAppender = newlog4cpp::OstreamAppender(\"osAppender\", &amp;cout);\n//\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9aOstreamAppender\u7684\u540d\u79f0\n//\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u5b83\u5173\u8054\u7684\u6d41\u7684\u6307\u9488\u3002\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%B8%89%E4%B8%AA%E7%BB%84%E4%BB%B6/#stringqueueappender","title":"StringQueueAppender","text":"<p>\u3010\u80cc\u666f\u3011\u201c\u5728\u8c03\u8bd5\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u65f6\uff0c\u4e0d\u80fd\u968f\u610f\u4f7f\u7528printf\u201d\u3002\u56e0\u4e3aprintf\u5bfc\u81f4IO\u4e2d\u65ad\uff0c\u4f1a\u4f7f\u5f97\u672c\u7ebf\u7a0b\u6302\u8d77\uff0c\u5176\u82b1\u8d39\u7684\u65f6\u95f4\u6bd4\u4e00\u6761\u666e\u901a\u6307\u4ee4\u591a\u6570\u5343\u500d\u3002\u82e5\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8fd0\u884c\uff0c\u5219\u4e25\u91cd\u5e72\u6270\u4e86\u7ebf\u7a0b\u95f4\u7684\u8fd0\u884c\u65b9\u5f0f\u3002</p> <p>\u3010\u529f\u80fd\u3011\u5c06\u65e5\u5fd7\u8bb0\u5f55\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u961f\u5217\u4e2d\uff0c\u8be5\u5b57\u7b26\u4e32\u961f\u5217\u4f7f\u7528\u4e86STL\u4e2d\u7684\u4e24\u4e2a\u5bb9\u5668\uff0c\u5373\u5b57\u7b26\u4e32\u5bb9\u5668std::string\u548c\u961f\u5217\u5bb9\u5668std::queue</p> <p>\u3010\u539f\u7406\u3011 <pre><code>std::queue&lt;std::string&gt; _queue;\n//_queue\u53d8\u91cf\u662fStringQueueAppender\u7c7b\u4e2d\u7528\u4e8e\u5177\u4f53\u5b58\u50a8\u65e5\u5fd7\u7684\u5185\u5b58\u961f\u5217\n//StringQueueAppender\u7684\u4f7f\u7528\u65b9\u6cd5\u4e0eOstreamAppender\u7c7b\u4f3c\n//\u6570\u53ea\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\u201c\u540d\u79f0\u201d\uff0c\u8bb0\u5f55\u5b8c\u6210\u540e\u9700\u8981\u7a0b\u5e8f\u5458\u81ea\u5df1\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u6bcf\u6761\u65e5\u5fd7\n</code></pre></p> <p>\u3010\u793a\u4f8b\u3011 <pre><code>og4cpp::StringQueueAppender* strQAppender = newlog4cpp::StringQueueAppender(\"strQAppender\");\nstrQAppender-&gt;setLayout(newlog4cpp::BasicLayout());\nlog4cpp::Category&amp; root =log4cpp::Category::getRoot();\nroot.addAppender(strQAppender);\nroot.setPriority(log4cpp::Priority::DEBUG);\nroot.error(\"Hello log4cpp in a Error Message!\");\nroot.warn(\"Hello log4cpp in a WarningMessage!\");\ncout&lt;&lt;\"Get message from MemoryQueue!\"&lt;&lt;endl;\ncout&lt;&lt;\"-------------------------------------------\"&lt;&lt;endl;\nqueue&lt;string&gt;&amp; myStrQ =strQAppender-&gt;getQueue();\nwhile(!myStrQ.empty())\n{\ncout&lt;&lt;myStrQ.front();\nmyStrQ.pop();\n}\nlog4cpp::Category::shutdown();\u00a0\u00a0</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%B8%89%E4%B8%AA%E7%BB%84%E4%BB%B6/#fileappenderrollingfileappender","title":"FileAppender\u548cRollingFileAppender","text":"<p>\u3010\u8bf4\u660e\u3011FileAppender\u548cRollingFileAppender\u662flog4cpp\u4e2d\u6700\u5e38\u7528\u7684\u4e24\u4e2aAppender\uff0c\u5176\u529f\u80fd\u662f\u5c06\u65e5\u5fd7\u5199\u5165\u6587\u4ef6\u4e2d\u3002</p> <p>\u3010\u4e24\u8005\u7684\u533a\u522b\u3011\u5b83\u4eec\u4e4b\u95f4\u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\u524d\u8005\u4f1a\u4e00\u76f4\u5728\u6587\u4ef6\u4e2d\u8bb0\u5f55\u65e5\u5fd7(\u76f4\u5230\u64cd\u4f5c\u7cfb\u7edf\u627f\u53d7\u4e0d\u4e86\u4e3a\u6b62)\uff0c\u800c\u540e\u8005\u4f1a\u5728\u6587\u4ef6\u957f\u5ea6\u5230\u8fbe\u6307\u5b9a\u503c\u65f6\u5faa\u73af\u8bb0\u5f55\u65e5\u5fd7\uff0c\u6587\u4ef6\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u6307\u5b9a\u503c(\u9ed8\u8ba4\u7684\u6307\u5b9a\u503c\u662f10M byte)\u3002 <pre><code>//FileAppender\u521b\u5efa\u51fd\u6570\nFileAppender(const std::string&amp; name,       //\u540d\u79f0\nconst std::string&amp; fileName,   //\u65e5\u5fd7\u6587\u4ef6\u540d\nbool append = true,            //\u662f\u5426\u5728\u65e5\u5fd7\u6587\u4ef6\u540e\u7ee7\u7eed\u8bb0\u5165\u65e5\u5fd7\uff0c\u8fd8\u662f\u6e05\u7a7a\u539f\u65e5\u5fd7\u6587\u4ef6\u518d\u8bb0\u5f55\nmode_tmode = 00644);           //\u6587\u4ef6\u7684\u6253\u5f00\u65b9\u5f0f\n//RollingFileAppender\u7684\u521b\u5efa\u51fd\u6570\nRollingFileAppender(const std::string&amp;name, \u00a0       const std::string&amp;fileName,\u00a0\u00a0size_t maxFileSize =10*1024*1024, //\u56de\u6eda\u6587\u4ef6\u7684\u6700\u5927\u503c\nunsigned intmaxBackupIndex = 1, //\u56de\u6eda\u6587\u4ef6\u6240\u7528\u7684\u5907\u4efd\u6587\u4ef6\u7684\u6700\u5927\u4e2a\u6570\nboolappend = true,\u00a0\u00a0mode_t mode =00644);\n</code></pre></p> <p>\u3010\u8865\u5145\u3011</p> <ol> <li>\u6240\u8c13\u5907\u4efd\u6587\u4ef6\uff0c\u662f\u7528\u6765\u4fdd\u5b58\u56de\u6eda\u6587\u4ef6\u4e2d\u56e0\u4e3a\u7a7a\u95f4\u4e0d\u8db3\u672a\u80fd\u8bb0\u5f55\u7684\u65e5\u5fd7\uff0c\u5907\u4efd\u6587\u4ef6\u7684\u5927\u5c0f\u4ec5\u6bd4\u56de\u6eda\u6587\u4ef6\u7684\u6700\u5927\u503c\u59271kb\u3002\u6240\u4ee5\u5982\u679cmaxBackupIndex\u53d6\u503c\u4e3a3\uff0c\u5219\u56de\u6eda\u6587\u4ef6(\u5047\u8bbe\u5176\u540d\u79f0\u662frollwxb.log\uff0c\u5927\u5c0f\u4e3a100kb)\u4f1a\u6709\u4e09\u4e2a\u5907\u4efd\u6587\u4ef6\uff0c\u5176\u540d\u79f0\u5206\u522b\u662frollwxb.log.1\uff0crollwxb.log.2\u548crollwxb.log.3\uff0c\u5927\u5c0f\u4e3a101kb\u3002</li> <li>\u5982\u679cmaxBackupIndex\u53d6\u503c\u4e3a0\u6216\u8005\u5c0f\u4e8e0\uff0c\u5219\u56de\u6eda\u6587\u4ef6\u529f\u80fd\u4f1a\u5931\u6548\uff0c\u5176\u8868\u73b0\u5982\u540cFileAppender\u4e00\u6837\uff0c\u4e0d\u4f1a\u6709\u5927\u5c0f\u7684\u9650\u5236\u3002\u8fd9\u4e5f\u8bb8\u662f\u4e00\u4e2abug\u3002</li> </ol> <p>\u3010\u793a\u4f8b\u3011\u7a0b\u5e8f\u8fd0\u884c\u540e\u4f1a\u4ea7\u751f\u4e24\u4e2a\u65e5\u5fd7\u6587\u4ef6wxb.log\u548crollwxb.log\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5907\u4efd\u6587\u4ef6rollwxb.log.1\u3002wxb.log\u7684\u5927\u5c0f\u4e3a7kb\uff0c\u8bb0\u5f55\u4e86\u6240\u6709100\u6761\u65e5\u5fd7;rollwxb.log\u5927\u5c0f\u4e3a2kb\uff0c\u8bb0\u5f55\u4e86\u6700\u65b0\u768422\u6761\u65e5\u5fd7;rollwxb.log.1\u5927\u5c0f\u4e3a6kb\uff0c\u8bb0\u5f55\u4e86\u65e7\u768478\u6761\u65e5\u5fd7\u3002 <pre><code>log4cpp::PatternLayout* pLayout1 = newlog4cpp::PatternLayout();\npLayout1-&gt;setConversionPattern(\"%d: %p %c%x: %m%n\");\nlog4cpp::PatternLayout* pLayout2 = newlog4cpp::PatternLayout();\npLayout2-&gt;setConversionPattern(\"%d: %p %c%x: %m%n\");\nlog4cpp::Appender* fileAppender = newlog4cpp::FileAppender(\"fileAppender\",\"wxb.log\");\nfileAppender-&gt;setLayout(pLayout1);\nlog4cpp::RollingFileAppender* rollfileAppender = newlog4cpp::RollingFileAppender(\u00a0\"rollfileAppender\",\"rollwxb.log\",5*1024,1);\nrollfileAppender-&gt;setLayout(pLayout2);\nlog4cpp::Category&amp; root =log4cpp::Category::getRoot().getInstance(\"RootName\");\nroot.addAppender(fileAppender);\nroot.addAppender(rollfileAppender);\nroot.setPriority(log4cpp::Priority::DEBUG);\nfor (int i = 0; i &lt; 100; i++)\n{\nstring strError;\nostringstream oss;\noss&lt;&lt;i&lt;&lt;\":RootError Message!\";\nstrError = oss.str();\nroot.error(strError);\n}\nlog4cpp::Category::shutdown();\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%B8%89%E4%B8%AA%E7%BB%84%E4%BB%B6/#win32debugappender","title":"Win32DebugAppender","text":"<p>\u3010\u529f\u80fd\u3011Win32DebugAppender\u662f\u4e00\u4e2a\u7528\u4e8e\u8c03\u8bd5\u7684Appender\uff0c\u5176\u529f\u80fd\u662f\u5411Windows\u7684\u8c03\u8bd5\u5668\u4e2d\u5199\u5165\u65e5\u5fd7\uff0c\u76ee\u524d\u652f\u6301MSVC\u548cBorland\u4e2d\u7684\u8c03\u8bd5\u5668 <pre><code>log4cpp::PatternLayout* pLayout1 = newlog4cpp::PatternLayout();\npLayout1-&gt;setConversionPattern(\"%d: %p %c%x: %m%n\");\nlog4cpp::Appender* debugAppender = newlog4cpp::Win32DebugAppender(\"debugAppender\");\ndebugAppender-&gt;setLayout(pLayout1);\nlog4cpp::Category&amp; root =log4cpp::Category::getRoot().getInstance(\"RootName\");\nroot.addAppender(debugAppender);\nroot.setPriority(log4cpp::Priority::DEBUG);\nroot.error(\"Root Error Message!\");\nroot.warn(\"Root Warning Message!\");\nlog4cpp::Category::shutdown();\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%B8%89%E4%B8%AA%E7%BB%84%E4%BB%B6/#nteventlogappender","title":"NTEventLogAppender","text":"<p>\u3010\u529f\u80fd\u3011\u8be5Appender\u53ef\u4ee5\u5c06\u65e5\u5fd7\u53d1\u9001\u5230windows\u7684\u65e5\u5fd7\uff0c\u5728\u8fd0\u884c\u7a0b\u5e8f\u540e\u53ef\u4ee5\u6253\u5f00windows\u7684\u8ba1\u7b97\u673a\u7ba1\u7406-&gt;\u7cfb\u7edf\u5de5\u5177-&gt;\u4e8b\u4ef6\u67e5\u770b\u5668-&gt;\u5e94\u7528\u7a0b\u5e8f <pre><code>log4cpp::PatternLayout* pLayout1 = newlog4cpp::PatternLayout();\npLayout1-&gt;setConversionPattern(\"%d: %p %c%x: %m%n\");\nlog4cpp::Appender* ntAppender = newlog4cpp::NTEventLogAppender(\"debugAppender\",\"wxb_ntlog\");\nntAppender-&gt;setLayout(pLayout1);\nlog4cpp::Category&amp; root =log4cpp::Category::getRoot().getInstance(\"RootName\");\nroot.addAppender(ntAppender);\nroot.setPriority(log4cpp::Priority::DEBUG);\nroot.error(\"Root Error Message!\");\nroot.warn(\"Root Warning Message!\");\nlog4cpp::Category::shutdown();\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%B8%89%E4%B8%AA%E7%BB%84%E4%BB%B6/#layout","title":"\u5e03\u5c40\uff08Layout\uff09","text":"<p>\u3010\u4ecb\u7ecd\u3011\u5e03\u5c40\u7528\u6765\u663e\u793a\u6837\u5f0f\uff0c\u8868\u793a\u8ba9\u7528\u6237\u6839\u636e\u7c7b\u4f3c\u4e8eC\u8bed\u8a00printf\u51fd\u6570\u7684\u8f6c\u6362\u6a21\u5f0f\u6765\u8f93\u51fa\u683c\u5f0f\u3002 \u3010Layout\u7c7b\u3011Layout\u672c\u8eab\u662f\u4e00\u4e2a\u865a\u7c7b\uff0c\u5171\u6709\u4e09\u4e2a\u5b50\u7c7b</p> \u7c7b\u522b \u8bf4\u660e \u4f8b\u5b50 <code>BasicLayout</code> 1. \u4ee5\u201c\u65f6\u95f4\u6233\u201d\u4e3a\u4f18\u5148\u7ea72. NDC\u6807\u7b7e\uff1a\u65e5\u5fd7\u4fe1\u606f <code>1248337987\u00a0ERROR: ..</code> <code>PatternLayout</code> 1. \u8ba9\u7528\u6237\u6839\u636e\u7c7b\u4f3c\u4e8eprintf\u65b9\u5f0f\u8f93\u51fa\u00a02. \u5982\u679c\u4e0d\u9009\u62e9\u6269\u5c55Layout\uff0c\u5efa\u8bae\u4f7f\u7528PatternLayout\uff0c\u4ece\u800c\u8fbe\u5230\u7406\u60f3\u7684\u8f93\u51fa\u683c\u5f0f <code>2009-07-24 15:59:55,703:INFO</code> <code>SimpleLayout</code> 1. \u4ee5\u201c\u65e5\u5fd7\u4fe1\u606f\u201d\u4e3a\u4f18\u5148\u7ea7"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%B8%89%E4%B8%AA%E7%BB%84%E4%BB%B6/#patternlayout","title":"PatternLayout","text":"<p>PatternLayout\u4f7f\u7528setConversionPattern\u51fd\u6570\u6765\u8bbe\u7f6e\u65e5\u5fd7\u7684\u8f93\u51fa\u683c\u5f0f\u3002\u8be5\u51fd\u6570\u7684\u58f0\u660e\u5982\u4e0b\uff1a <pre><code>void log4cpp::PatternLayout::setConversionPattern(const std::string&amp; conversionPattern)\nthrow (ConfigureFailure) [virtual]\n</code></pre> \u53c2\u6570<code>const std::string&amp; conversionPattern</code>\u7528\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6765\u63cf\u8ff0\u683c\u5f0f\uff0c\u5982%c\u3001%d\u3001%p\u7b49\uff0c\u5177\u4f53\u8bf4\u660e\u8bf7\u89c1\u4e0b\u6587\u201cConversionPattern\u7684\u53c2\u6570\u542b\u4e49\u201d\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%B8%89%E4%B8%AA%E7%BB%84%E4%BB%B6/#_1","title":"\u603b\u7ed3","text":"<p>\u8fd9\u4e09\u79cd\u7c7b\u578b\u7684\u7ec4\u4ef6\u4e00\u8d77\u5de5\u4f5c\u4f7f\u5f97\u7cfb\u7edf\u53ef\u4ee5\u6839\u636e\u4fe1\u606f\u7684\u7c7b\u578b\u548c\u7ea7\u522b\u8bb0\u5f55\u5b83\u4eec\uff0c\u5e76\u4e14\u5728\u8fd0\u884c\u65f6\u63a7\u5236\u8fd9\u4e9b\u4fe1\u606f\u7684\u8f93\u51fa\u683c\u5f0f\u548c\u4f4d\u7f6e\u3002 \u4e09\u8005\u5173\u7cfb\uff1a</p> <ol> <li>Category\u548cAppender\u7684\u5173\u7cfb\u662f\uff1a\u591a\u4e2aAppender\u53ef\u4ee5\u9644\u52a0\u5230\u4e00\u4e2aCategory\u4e0a\uff0c\u8fd9\u6837\u4e00\u4e2a\u65e5\u5fd7\u6d88\u606f\u53ef\u4ee5\u540c\u65f6\u8f93\u51fa\u5230\u591a\u4e2a\u8bbe\u5907\u4e0a</li> <li>Appender\u548cLayout\u7684\u5173\u7cfb\u662f\uff1aLayout\u9644\u52a0\u5728Appender\u4e0a\uff0cappender\u8c03\u7528layout\u5904\u7406\u5b8c\u65e5\u5fd7\u6d88\u606f\u540e\uff0c\u8bb0\u5f55\u5230\u67d0\u4e2a\u8bbe\u5907\u4e0a\u3002</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%BD%BF%E7%94%A8/","title":"\u4f7f\u7528","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%BD%BF%E7%94%A8/#_1","title":"\u4e0b\u8f7d","text":"<ol> <li>\u65b9\u5f0f\u4e00\uff1a\u8d44\u6e90\u94fe\u63a5</li> <li>\u65b9\u5f0f\u4e8c\uff1a\u5b98\u7f51</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%BD%BF%E7%94%A8/#windows","title":"\u7f16\u8bd1\u5b89\u88c5\uff08windows\uff09","text":"<ol> <li>\u4e0b\u8f7dcmake\uff08\u4e0b\u8f7d\u5730\u5740\uff09</li> <li> <p>\u89e3\u538b\u538b\u7f29\u5305\uff0c\u8fdb\u5165\u76ee\u5f55\uff0c\u521b\u5efabuild\u76ee\u5f55\uff0c\u8fd0\u884ccmake <pre><code>C:\\Users\\geodoer&gt;cmake --version\ncmake version 3.17.1\n\nCMake suite maintained and supported by Kitware (kitware.com/cmake).\n\nC:\\Users\\geodoer&gt;d:\n\nD:\\&gt;cd D:\\Cpp3D\\3Log\\log4cpp\n\nD:\\Cpp3D\\3Log\\log4cpp&gt;mkdir build\n\nD:\\Cpp3D\\3Log\\log4cpp&gt;cd build\n\nD:\\Cpp3D\\3Log\\log4cpp\\build&gt;cmake ../\n-- Building for: Visual Studio 15 2017\n-- Selecting Windows SDK version 10.0.17763.0 to target Windows 10.0.18363.\n-- The C compiler identification is MSVC 19.16.27038.0\n-- The CXX compiler identification is MSVC 19.16.27038.0\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe - works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/cl.exe - works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\nCMake Warning (dev) in CMakeLists.txt:\n  No cmake_minimum_required command is present.  A line of code such as\n\ncmake_minimum_required(VERSION 3.17)\nshould be added at the top of the file.  The version specified may be lower\n  if you wish to support older CMake versions for this project.  For more\n  information run \"cmake --help-policy CMP0000\".\nThis warning is for project developers.  Use -Wno-dev to suppress it.\n\n-- Configuring done\n-- Generating done\n-- Build files have been written to: D:/Cpp3D/3Log/log4cpp/build\n</code></pre></p> </li> <li> <p>\u7528vs\u6253\u5f00.sln\u6587\u4ef6\uff0c\u751f\u6210<code>ALL_BUILD</code>\u9879\u76ee\u3002\u6b64\u7248\u672c\u9ed8\u8ba4\u662fdebug\u3001win32\u7684</p> </li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%BD%BF%E7%94%A8/#_2","title":"\u5bfc\u5165\u5e93","text":"<p>\u5de5\u7a0b\u76ee\u5f55 </p> <ol> <li>\u5728\u5de5\u7a0b\u76ee\u5f55\u4e0b\u521b\u5efainclude\u6587\u4ef6\u5939\uff0c\u5e76\u628alog4cpp\\include\\log4cpp\u6574\u4e2a\u6587\u4ef6\u5939\u590d\u5236\u8fdb\u53bb</li> <li>\u5728\u5de5\u7a0b\u76ee\u5f55\u4e0b\u521b\u5efalib\u6587\u4ef6\u5939\uff0c\u5e76\u628a\u7f16\u8bd1\u597d\u7684log4cpp.lib\u653e\u8fdb\u53bb\uff08\u8def\u5f84\u53ef\u67e5\u770b\u7f16\u8bd1\u65f6\u751f\u6210\u7684\u7ed3\u679c\uff09</li> <li>\u53f3\u952e\u5de5\u7a0b\uff0c\u6dfb\u52a0\u5934\u6587\u4ef6\u8def\u5f84\uff1a<code>$(SolutionDir)include</code></li> </ol> <p></p> <ol> <li>\u6dfb\u52a0lib\u8def\u5f84\uff1a<code>$(SolutionDir)lib</code></li> </ol> <p></p> <ol> <li>\u6dfb\u52a0lib\u6587\u4ef6\u540d</li> </ol> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%BD%BF%E7%94%A8/#log4cppconf","title":"\u914d\u7f6e\u6587\u4ef6log4cpp.conf","text":"<p><pre><code>#-------\u5b9a\u4e49rootCategory\u7684\u5c5e\u6027-------\n#\u6307\u5b9arootCategory\u7684log\u4f18\u5148\u7ea7\u662fERROR\uff0c\u5176Appenders\u6709\u4e24\u4e2a\uff0c\u5206\u522b\u662fconsole,TESTAppender\nlog4cpp.rootCategory=DEBUG, console, TESTAppender\n#-------\u5b9a\u4e49console\u5c5e\u6027-------\n#consoleAppender\u7c7b\u578b:\u63a7\u5236\u53f0\u8f93\u51fa\n#\u4e0b\u9762\u8fd9\u4e09\u6761\u8bed\u53e5\u8868\u793a\u63a7\u5236\u53f0\u8f93\u51fa\u7684log\u8f93\u51fa\u7684\u5e03\u5c40\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\uff1b\u8f93\u51fa\u683c\u5f0f\u662f\uff1a[%p] %d{%H:%M:%S.%l} (%c): %m%n\nlog4cpp.appender.console=ConsoleAppender\nlog4cpp.appender.console.layout=PatternLayout\nlog4cpp.appender.console.layout.ConversionPattern=[%p] %d{%H:%M:%S.%l} (%c): %m%n\n#-------\u5b9a\u4e49TESTAppender\u7684\u5c5e\u6027-------\n#RollingFileAppender\u7c7b\u578b\uff1a\u8f93\u51fa\u5230\u56de\u5377\u6587\u4ef6\uff0c\u5373\u6587\u4ef6\u5230\u8fbe\u67d0\u4e2a\u5927\u5c0f\u7684\u65f6\u5019\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\n#\u4e0b\u9762\u7684\u8bed\u53e5\u8868\u793a\u6587\u4ef6\u8f93\u51fa\u5230\u6307\u5b9a\u7684log\u6587\u4ef6\uff0c\u8f93\u51fa\u7684\u5e03\u5c40\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\uff0c\u8f93\u51fa\u7684\u683c\u5f0f\u662f\uff1a[%d{%Y-%m-%d %H:%M:%S.%l} - %p] (%c): %m%n\nlog4cpp.appender.TESTAppender=RollingFileAppender\n#\u5f53\u65e5\u5fd7\u6587\u4ef6\u5230\u8fbemaxFileSize\u5927\u5c0f\u65f6\uff0c\u5c06\u4f1a\u81ea\u52a8\u6eda\u52a8\nlog4cpp.appender.TESTAppender.maxFileSize=1024000\n#maxBackupIndex\u6307\u5b9a\u53ef\u4ee5\u4ea7\u751f\u7684\u6eda\u52a8\u6587\u4ef6\u7684\u6700\u5927\u6570\nlog4cpp.appender.TESTAppender.maxBackupIndex=40\n#fileName\u6307\u5b9a\u4fe1\u606f\u8f93\u51fa\u5230logs/irismatch.log\u6587\u4ef6\nlog4cpp.appender.TESTAppender.fileName=/home/qilimi/log.log\n#PatternLayout \u8868\u793a\u53ef\u4ee5\u7075\u6d3b\u6307\u5b9a\u5e03\u5c40\u6a21\u5f0f\nlog4cpp.appender.TESTAppender.layout=PatternLayout\n#append=true \u4fe1\u606f\u8ffd\u52a0\u5230\u4e0a\u9762\u6307\u5b9a\u7684\u65e5\u5fd7\u6587\u4ef6\u4e2d\uff0cfalse\u8868\u793a\u5c06\u4fe1\u606f\u8986\u76d6\u6307\u5b9a\u6587\u4ef6\u5185\u5bb9\nlog4cpp.appender.TESTAppender.append=true\nlog4cpp.appender.TESTAppender.layout.ConversionPattern=[%d{%Y-%m-%d %H:%M:%S.%l} - %p] (%c): %m%n\n</code></pre> \u3010ConversionPattern\u7684\u53c2\u6570\u542b\u4e49\u3011</p> \u7b26\u53f7 \u8bf4\u660e %c \u8f93\u51fa\u65e5\u5fd7\u4fe1\u606f\u6240\u5c5e\u7684\u7c7b\u76ee\uff0c\u901a\u5e38\u5c31\u662f\u6240\u5728\u7c7b\u7684\u5168\u540d %d \u8f93\u51fa\u65e5\u5fd7\u65f6\u95f4\u70b9\u7684\u65e5\u671f\u6216\u65f6\u95f4\uff0c\u65e5\u671f\u53c2\u7167ANSI C\u51fd\u6570\u7684strftime\u793a\u4f8b\uff1a<code>%d{%Y-%m-%d %H:%M:%S.%l}</code>\u3002\u8f93\u51fa\uff1a<code>2017-02-14 09:25:00.953</code> %p \u4f18\u5148\u7ea7\uff0c\u5373DEBUG,INFO\u7b49 %m \u8f93\u51falog\u7684\u5177\u4f53\u4fe1\u606f %n \u6362\u884c\u7b26\uff0c\u4f1a\u6839\u636e\u5e73\u53f0\u7684\u4e0d\u540c\u800c\u4e0d\u540c\uff0c\u4f46\u5bf9\u4e8e\u7528\u6237\u900f\u660e %r \u81ea\u4ecelayout\u88ab\u521b\u5efa\u540e\u7684\u6beb\u79d2\u6570 %R \u4ece1970\u5e741\u67081\u65e50\u65f6\u5f00\u59cb\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u79d2\u6570 %u \u8fdb\u7a0b\u5f00\u59cb\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u65f6\u949f\u5468\u671f\u6570 %x NDC"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%BD%BF%E7%94%A8/#clog4util","title":"Clog4Util\u65e5\u5fd7\u5de5\u5177\u7c7b","text":"<p>Clog4Util.hpp\u6587\u4ef6\uff1a <pre><code>#pragma once\n#include \"log4cpp/Category.hh\"\n#include \"log4cpp/Appender.hh\"\n#include \"log4cpp/FileAppender.hh\"\n#include \"log4cpp/OstreamAppender.hh\"\n#include \"log4cpp/Layout.hh\"\n#include \"log4cpp/BasicLayout.hh\"\n#include \"log4cpp/Priority.hh\"\n#include \"log4cpp/PropertyConfigurator.hh\"\n#include &lt;string&gt;\nnamespace LogUtil {\nint init(const std::string&amp; initfilename);\nvoid close();\nvoid debug(const std::string&amp; tag, const std::string&amp; msg);\nvoid debug(const std::string&amp; msg);\nvoid info(const std::string&amp; tag, const std::string&amp; msg);\nvoid info(const std::string&amp; msg);\nvoid error(const std::string&amp; tag, const std::string&amp; msg);\nvoid error(const std::string&amp; msg);\n}\nnamespace LogUtil {\nint init(const std::string&amp; cfg_fp)\n{\ntry\n{\nlog4cpp::PropertyConfigurator::configure(cfg_fp);\n}\ncatch(log4cpp::ConfigureFailure&amp;f)\n{\nstd::cout &lt;&lt; \"Configure Problem \" &lt;&lt; f.what() &lt;&lt; std::endl;//\u5931\u8d25\nreturn -1;\n}\nreturn 0;\n}\nvoid close()\n{\ntry\n{\nlog4cpp::Category::shutdown();\n}\ncatch(...)\n{\n}\n}\nvoid debug(const std::string&amp; tag, const std::string&amp; msg)\n{\ntry\n{\nlog4cpp::Category&amp; t_debug = log4cpp::Category::getInstance(tag);\nt_debug.debug(msg);\n}\ncatch(...)\n{\n}\n}\nvoid debug(const std::string&amp; msg)\n{\ntry\n{\nlog4cpp::Category&amp; t_debug = log4cpp::Category::getInstance(std::string(\"Debug\"));\nt_debug.debug(msg);\n}\ncatch(...)\n{\n}\n}\nvoid info(const std::string&amp; tag, const std::string&amp; msg)\n{\ntry\n{\nlog4cpp::Category&amp; t_debug = log4cpp::Category::getInstance(tag);\nt_debug.info(msg);\n}\ncatch(...)\n{\n}\n}\nvoid info(const std::string&amp; msg)\n{\ntry\n{\nlog4cpp::Category&amp; t_info = log4cpp::Category::getInstance(std::string(\"Info\"));\nt_info.info(msg);\n}\ncatch(...)\n{\n}\n}\nvoid error(const std::string&amp; tag, const std::string&amp; msg)\n{\ntry\n{\nlog4cpp::Category&amp; t_debug = log4cpp::Category::getInstance(tag);\nt_debug.error(msg);\n}\ncatch(...)\n{\n}\n}\nvoid error(const std::string&amp; msg)\n{\ntry\n{\nlog4cpp::Category&amp; t_error = log4cpp::Category::getInstance(std::string(\"Error\"));\nt_error.error(msg);\n}\ncatch(...)\n{\n}\n}\n}\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E4%BD%BF%E7%94%A8/#_3","title":"\u4f7f\u7528","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;ctype.h&gt;\n#include &lt;signal.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;errno.h&gt;  #include &lt;thread&gt;\n#include &lt;time.h&gt;\n#include \"Clog4Util.h\"\nint main(int argc, char *argv[])\n{\nif(argc &lt; 2){\nprintf(\"Usage: %s base exponent \\n\", argv[0]);\nreturn 1;\n}\nlog4Util::Init(argv[1]);\nprintf(\"test log4cpp\\n\");\n//\u5b58\u653e\u65e5\u5fd7\u4fe1\u606f\nchar strLog_[1024] = { 0 };\n//\u5efa\u65e5\u5fd7\u5199\u5230strLog_\u4e2d\nsprintf(strLog_, \"test error log\uff0c %s:%d.\", __FILE__, __LINE__);\n//\u5199\u5165\u65e5\u5fd7\nlog4Util::Error(strLog_);\n//\u8d4b\u7a7a\nmemset(strLog_, 0, 1024);\n//\u5efa\u65e5\u5fd7\u5199\u5230strLog_\u4e2d\nsprintf(strLog_, \"test error log\uff0c %s:%d.\", __FILE__, __LINE__);\n//\u5199\u5165\u65e5\u5fd7\nlog4Util::Debug(strLog_);\n//\u8d4b\u7a7a\nmemset(strLog_, 0, 1024);\n//\u5efa\u65e5\u5fd7\u5199\u5230strLog_\u4e2d\nsprintf(strLog_, \"test error log\uff0c %s:%d.\", __FILE__, __LINE__);\n//\u5199\u5165\u65e5\u5fd7\nlog4Util::Info(strLog_);\n//\u8d4b\u7a7a\nmemset(strLog_, 0, 1024);\n//\u5efa\u65e5\u5fd7\u5199\u5230strLog_\u4e2d\nsprintf(strLog_, \"test error log\uff0ctag:1 %s:%d.\", __FILE__, __LINE__);\n//\u5199\u5165\u65e5\u5fd7\nlog4Util::Error(\"1\", strLog_);\n//\u8d4b\u7a7a\nmemset(strLog_, 0, 1024);\n//\u5efa\u65e5\u5fd7\u5199\u5230strLog_\u4e2d\nsprintf(strLog_, \"test error log\uff0ctag:2 %s:%d.\", __FILE__, __LINE__);\n//\u5199\u5165\u65e5\u5fd7\nlog4Util::Debug(\"2\", strLog_);\n//\u8d4b\u7a7a\nmemset(strLog_, 0, 1024);\n//\u5efa\u65e5\u5fd7\u5199\u5230strLog_\u4e2d\nsprintf(strLog_, \"test error log\uff0ctag:3 %s:%d.\", __FILE__, __LINE__);\n//\u5199\u5165\u65e5\u5fd7\nlog4Util::Info(\"3\", strLog_);\nlog4Util::close();\nreturn 0;\n}\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/","title":"\u914d\u7f6e\u6587\u4ef6","text":"<p>log4cpp\u652f\u6301\u4ece\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bfb\u53d6Category\u3001Appender\u548cLayout\u7684\u4f18\u5148\u7ea7\u548c\u76f8\u4e92\u9644\u5c5e\u5173\u7cfb\u3002</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/log4cpp/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/#_1","title":"\u793a\u4f8b","text":"<ol> <li> <p>log4cpp.conf <pre><code>#log4cpp\u914d\u7f6e\u6587\u4ef6\n#\u5b9a\u4e49Root category\u7684\u5c5e\u6027\nlog4cpp.rootCategory=DEBUG, RootLog\n#\u5b9a\u4e49RootLog\u5c5e\u6027\nlog4cpp.appender.RootLog=ConsoleAppender\nlog4cpp.appender.RootLog.layout=PatternLayout\nlog4cpp.appender.RootLog.layout.ConversionPattern=%d [%p] -%m%n\n#\u5b9a\u4e49sample category\u7684\u5c5e\u6027\nlog4cpp.category.sample=DEBUG, sample\n#\u5b9a\u4e49sample\u5c5e\u6027\nlog4cpp.appender.sample=FileAppender\nlog4cpp.appender.sample.fileName=sample.log\nlog4cpp.appender.sample.layout=PatternLayout\nlog4cpp.appender.sample.layout.ConversionPattern=%d [%p] -%m%n\n#\u5b9a\u4e49sample.soncategory\u7684\u5c5e\u6027\nlog4cpp.category.sample.son=DEBUG, son\n#\u5b9a\u4e49son\u7684\u5c5e\u6027\nlog4cpp.appender.son=FileAppender\nlog4cpp.appender.son.fileName=son.log\nlog4cpp.appender.son.layout=PatternLayout\nlog4cpp.appender.son.layout.ConversionPattern=%d[%p] - %m%n\n#\u5b9a\u4e49sample.daughtercategory\u7684\u5c5e\u6027\nlog4cpp.category.sample.daughter=DEBUG,daughter\n#\u5b9a\u4e49daughter\u5c5e\u6027\nlog4cpp.appender.daughter=FileAppender\nlog4cpp.appender.daughter.fileName=daughter.log\nlog4cpp.appender.daughter.layout=PatternLayout\nlog4cpp.appender.daughter.layout.ConversionPattern=%d [%p]- %m%n\n</code></pre></p> </li> <li> <p>log4cpp_test.cpp <pre><code>#include&lt;iostream&gt;\n#include&lt;log4cpp/Category.hh&gt;\n#include&lt;log4cpp/PropertyConfigurator.hh&gt;\nint main(int argc,char* argv[])\n{\ntry\n{\nlog4cpp::PropertyConfigurator::configure(\"./log4cpp.conf\");\n}\ncatch(log4cpp::ConfigureFailure&amp; f)\n{\nstd::cout&lt;&lt; \"Configure Problem \"&lt;&lt; f.what()&lt;&lt; std::endl;\nreturn -1;\n}\nlog4cpp::Category&amp; root =log4cpp::Category::getRoot();\nlog4cpp::Category&amp; sub1 =log4cpp::Category::getInstance(std::string(\"sub1\"));\nlog4cpp::Category&amp; sub3 =log4cpp::Category::getInstance(std::string(\"sub1.sub2\"));\nsub1.info(\"This is someinfo\");\nsub1.alert(\"Awarning\");\n// sub3 only have A2 appender.\nsub3.debug(\"This debug messagewill fail to write\");\nsub3.alert(\"All hands abandonship\");\nsub3.critStream() &lt;&lt;\"This will show up&lt;&lt; as \"&lt;&lt; 1 &lt;&lt;\" critical message\"&lt;&lt;log4cpp::CategoryStream::ENDLINE;\nsub3&lt;&lt;log4cpp::Priority::ERROR&lt;&lt;\"And this will be anerror\"\u00a0\u00a0&lt;&lt;log4cpp::CategoryStream::ENDLINE;\nsub3.log(log4cpp::Priority::WARN, \"This will be a logged warning\");\nreturn0;\n}\n</code></pre></p> </li> </ol> <p>\u3010\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528\u603b\u7ed3\u3011</p> <ol> <li>category \u662f\"log4cpp.category.\" + \"categoryname\"</li> <li>category \u540d\u5b57\u53ef\u4ee5\u7528\".\"\u5206\u9694\uff0c\u4ee5\u6807\u8bc6\u5305\u542b\u5173\u7cfb</li> <li>appender \u662f\"log4cpp.appender.\" + \"appendername\"</li> <li>appender \u540d\u5b57 \u4e0d\u80fd\u7528 \".\" \u5206\u9694\uff0c\u5373\u662f\u8bf4 appender \u662f\u6ca1\u6709\u5305\u542b\u5173\u7cfb\u7684</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/spdlog/%E4%BD%BF%E7%94%A8/","title":"\u4f7f\u7528","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/spdlog/%E4%BD%BF%E7%94%A8/#hazel","title":"Hazel\u793a\u4f8b","text":"<pre><code>/*\n * \u8bfe\u7a0b\uff1a006. \u65e5\u5fd7\n */\n#pragma once\n#include \"Hazel/Core/Base.h\"\n#define GLM_ENABLE_EXPERIMENTAL\n#include \"glm/gtx/string_cast.hpp\"\n// This ignores all warnings raised inside External headers\n#pragma warning(push, 0)\n#include &lt;spdlog/spdlog.h&gt;\n#include &lt;spdlog/fmt/ostr.h&gt;\n#pragma warning(pop)\nnamespace Hazel {\nclass Log\n{\npublic:\nstatic void Init();\nstatic Ref&lt;spdlog::logger&gt;&amp; GetCoreLogger() { return s_CoreLogger; }\nstatic Ref&lt;spdlog::logger&gt;&amp; GetClientLogger() { return s_ClientLogger; }\nprivate:\nstatic Ref&lt;spdlog::logger&gt; s_CoreLogger;\nstatic Ref&lt;spdlog::logger&gt; s_ClientLogger;\n};\n}\ntemplate&lt;typename OStream, glm::length_t L, typename T, glm::qualifier Q&gt;\ninline OStream&amp; operator&lt;&lt;(OStream&amp; os, const glm::vec&lt;L, T, Q&gt;&amp; vector)\n{\nreturn os &lt;&lt; glm::to_string(vector);\n}\ntemplate&lt;typename OStream, glm::length_t C, glm::length_t R, typename T, glm::qualifier Q&gt;\ninline OStream&amp; operator&lt;&lt;(OStream&amp; os, const glm::mat&lt;C, R, T, Q&gt;&amp; matrix)\n{\nreturn os &lt;&lt; glm::to_string(matrix);\n}\ntemplate&lt;typename OStream, typename T, glm::qualifier Q&gt;\ninline OStream&amp; operator&lt;&lt;(OStream&amp; os, glm::qua&lt;T, Q&gt; quaternion)\n{\nreturn os &lt;&lt; glm::to_string(quaternion);\n}\n// Core log macros\n#define HZ_CORE_TRACE(...)    ::Hazel::Log::GetCoreLogger()-&gt;trace(__VA_ARGS__)\n#define HZ_CORE_INFO(...)     ::Hazel::Log::GetCoreLogger()-&gt;info(__VA_ARGS__)\n#define HZ_CORE_WARN(...)     ::Hazel::Log::GetCoreLogger()-&gt;warn(__VA_ARGS__)\n#define HZ_CORE_ERROR(...)    ::Hazel::Log::GetCoreLogger()-&gt;error(__VA_ARGS__)\n#define HZ_CORE_CRITICAL(...) ::Hazel::Log::GetCoreLogger()-&gt;critical(__VA_ARGS__)\n// Client log macros\n#define HZ_TRACE(...)         ::Hazel::Log::GetClientLogger()-&gt;trace(__VA_ARGS__)\n#define HZ_INFO(...)          ::Hazel::Log::GetClientLogger()-&gt;info(__VA_ARGS__)\n#define HZ_WARN(...)          ::Hazel::Log::GetClientLogger()-&gt;warn(__VA_ARGS__)\n#define HZ_ERROR(...)         ::Hazel::Log::GetClientLogger()-&gt;error(__VA_ARGS__)\n#define HZ_CRITICAL(...)      ::Hazel::Log::GetClientLogger()-&gt;critical(__VA_ARGS__)\n</code></pre> <pre><code>#include \"hzpch.h\"\n#include \"Hazel/Core/Log.h\"\n#include &lt;spdlog/sinks/stdout_color_sinks.h&gt;\n#include &lt;spdlog/sinks/basic_file_sink.h&gt;\nnamespace Hazel {\nRef&lt;spdlog::logger&gt; Log::s_CoreLogger;\nRef&lt;spdlog::logger&gt; Log::s_ClientLogger;\nvoid Log::Init()\n{\nstd::vector&lt;spdlog::sink_ptr&gt; logSinks;\nlogSinks.emplace_back(std::make_shared&lt;spdlog::sinks::stdout_color_sink_mt&gt;());\nlogSinks.emplace_back(std::make_shared&lt;spdlog::sinks::basic_file_sink_mt&gt;(\"Hazel.log\", true));\nlogSinks[0]-&gt;set_pattern(\"%^[%T] %n: %v%$\");\nlogSinks[1]-&gt;set_pattern(\"[%T] [%l] %n: %v\");\ns_CoreLogger = std::make_shared&lt;spdlog::logger&gt;(\"HAZEL\", begin(logSinks), end(logSinks));\nspdlog::register_logger(s_CoreLogger);\ns_CoreLogger-&gt;set_level(spdlog::level::trace);\ns_CoreLogger-&gt;flush_on(spdlog::level::trace);\ns_ClientLogger = std::make_shared&lt;spdlog::logger&gt;(\"APP\", begin(logSinks), end(logSinks));\nspdlog::register_logger(s_ClientLogger);\ns_ClientLogger-&gt;set_level(spdlog::level::trace);\ns_ClientLogger-&gt;flush_on(spdlog::level::trace);\n}\n}\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/spdlog/%E7%BC%96%E8%AF%91/","title":"\u7f16\u8bd1","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/spdlog/%E7%BC%96%E8%AF%91/#linux","title":"Linux","text":"<p>\u4ee5ubuntu\u4e3a\u4f8b\u3002</p> <p>\u627e\u5230release\u7248\u672c\uff1ahttps://github.com/gabime/spdlog/releases/tag/v1.9.2</p> <pre><code>sudo apt-get install cmake\n\nwget https://github.com/gabime/spdlog/archive/refs/tags/v1.9.2.tar.gz\ntar -zxvf v1.9.2.tar.gz\n\ncd spdlog-1.9.2\nmkdir build\ncd build\ncmake -DCMAKE_INSTALL_PREFIX=/home/cm/codes/Tools/3rdlib_linux/spdlog ..\n\nmake \nsudo make install\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%97%A5%E5%BF%97/spdlog/%E7%BC%96%E8%AF%91/#can-not-be-used-when-making-a-shared-object-recompile-with-fpic","title":"\u95ee\u9898\uff1acan not be used when making a shared object; recompile with -fPIC","text":"<pre><code>spdlog/lib/libspdlog.a(spdlog.cpp.o): relocation R_X86_64_TPOFF32 against `_ZGVZN6spdlog7details2os9thread_idEvE3tid' can not be used when making a shared object; recompile with -fPIC\n</code></pre> <p>\u89e3\u51b3\uff1acmake \u6dfb\u52a0 fpic\u53c2\u6570 <pre><code>set\uff08CMAKE_C_FLAGS\u201c$ {CMAKE_C_FLAGS} -fPIC\u201d\uff09\nset\uff08CMAKE_CXX_FLAGS\u201c$ {CMAKE_CXX_FLAGS} -fPIC\u201d\uff09\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B/%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/print/","title":"Print","text":"","tags":["C++","\u53ef\u53d8\u53c2\u6570\u6a21\u677f"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B/%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/print/#c11","title":"C++11","text":"<pre><code>template&lt;typename Last&gt;\nvoid print(const Last&amp; last)\n{\nstd::cout &lt;&lt; last &lt;&lt; std::endl;\n}\ntemplate&lt;typename First, typename Rest&gt;\nvoid print(const First&amp; first, const Rest&amp;... rest)\n{\nstd::cout &lt;&lt; first &lt;&lt; \" \";\nprint(rest...); //\u4f7f\u7528...\u5c06\u53c2\u6570\u5305\u5c55\u5f00\n}\n</code></pre>","tags":["C++","\u53ef\u53d8\u53c2\u6570\u6a21\u677f"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B/%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/print/#c17","title":"C++17","text":"<p>\u4f7f\u7528C++17\u7684\u6298\u53e0\u8868\u8fbe\u5f0f</p> <pre><code>template&lt;typename... Args&gt;\nvoid print(const Args&amp;... args) //\u6298\u53e0\u8868\u8fbe\u5f0f\u6298\u53e0\u7684\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u8fd9\u91cc\u7684\u96c6\u5408\u5c31\u662f\u4e00\u5806\u53c2\u6570\n{\n( //\u6298\u53e0\u8868\u8fbe\u5f0f\uff0c\u6298\u53e0\u7684\u662f\u64cd\u4f5c\n(std::cout &lt;&lt; args &lt;&lt; \" \") //\u521d\u59cb\u64cd\u4f5c\n,...   //\u9017\u53f7\u8868\u8fbe\u5f0f\uff1a\u5c55\u5f00args\uff0c\u5e76\u91cd\u590d\u521d\u59cb\u64cd\u4f5c\n);\n}\n</code></pre>","tags":["C++","\u53ef\u53d8\u53c2\u6570\u6a21\u677f"]},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/","title":"C++\u6d4b\u8bd5\u6846\u67b6","text":"\u6d4b\u8bd5\u6846\u67b6 Google Test Catch2 DocTest head only \u00d7 \u221a \u221a \u7f16\u8bd1\u901f\u5ea6 \u975e\u5e38\u5feb \u592a\u6162 \u5feb \u4f53\u79ef \u91cd\u91cf\u7ea7\u3002\u5305\u542b\u4e1c\u897f\u591a\uff0c\u5982gmock \u975e\u5e38\u8f7b\u91cf\uff0c\u603b\u5171\u4e03\u5343\u884c\u4ee3\u7801 Api\u53cb\u597d\u7a0b\u5ea6 \u8d85\u7ea7\u53cb\u597d\u3002\u867d\u7136\u65ad\u8a00\u5b8f\u4e0d\u662f\u5f88\u591a\uff0c\u4f46\u5b83\u5206\u89e3\u4e86\u6bd4\u8f83\u8868\u8fbe\u5f0f\uff0c\u6bd4\u5176\u4ed6\u6846\u67b6\u7528\u8d77\u6765\u65b9\u4fbf \u529f\u80fd \u529f\u80fd\u4e30\u5bcc\uff0c\u6bd4\u5982\u652f\u6301\u5bf9\u6a21\u677f\u8fdb\u884c\u6279\u91cf\u6d4b\u8bd5"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>C++\u5de5\u7a0b\u5b9e\u8df5\u5fc5\u5907\u6280\u80fd - \u6398\u91d1 (juejin.cn)</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/doctest/","title":"Doctest","text":"<p>\u5b98\u65b9\u6587\u6863\uff1adoctest/doc/markdown at master \u00b7 doctest/doctest (github.com)</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/doctest/#_1","title":"\u96c6\u6210","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/doctest/#cmake-head-only","title":"CMake Head-Only","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/doctest/#cmake-fetchcontent","title":"CMake FetchContent","text":"<p>Head-only\u5f15\u5165\u7684\u8bdd\uff0c\u7f16\u8bd1\u901f\u5ea6\u4f1a\u6162\u3002\u56e0\u6b64\u5efa\u8bae\u7f16\u8bd1\u540e\u94fe\u63a5\u3002</p> <pre><code>include(FetchContent) FetchContent_Declare(\ndoctest\nGIT_REPOSITORY https://github.com/doctest/doctest.git\nGIT_TAG v2.4.9 GIT_SHALLOW TRUE\n)\nFetchContent_MakeAvailable(doctest) \u00a0\u200b enable_testing()\nadd_executable(test main.cpp)\ntarget_link_libraries(test PRIVATE doctest_with_main)\n</code></pre> <p>main.cpp <pre><code>#include \"doctest/doctest.h\"\nint factorial(int number) { return number &lt;= 1 ? number : factorial(number - 1) * number; }\nTEST_CASE(\"testing the factorial function\") {\nCHECK(factorial(1) == 1);\nCHECK(factorial(2) == 2);\nCHECK(factorial(3) == 6);\nCHECK(factorial(10) == 3628800);\n}\n</code></pre></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/doctest/#_2","title":"\u53c2\u8003\u6587\u7ae0","text":"<p>C++\u5de5\u7a0b\u5b9e\u8df5\u5fc5\u5907\u6280\u80fd - \u6398\u91d1 (juejin.cn)</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1-Cpp/%E7%BC%96%E7%A8%8B%E4%B9%A0%E6%83%AF/for%E4%B8%8Eif/","title":"For\u4e0eif","text":"<p>\u3010\u5199\u6cd5\u4e00\u3011</p> <p>\u4f18\u70b9\uff1a\u7a0b\u5e8f\u7b80\u6d01\u660e\u4e86\uff0c\u903b\u8f91\u6e05\u6670 \u7f3a\u70b9\uff1a</p> <ol> <li>\u6bd4\u5199\u6cd5\u4e8c\uff0c\u591a\u6267\u884c\u4e86n-1\u6b21\u903b\u8f91\u5224\u65ad</li> <li>\u6253\u65ad\u4e86\u5faa\u73af\u201c\u6d41\u6c34\u7ebf\u201d\u4f5c\u4e1a\uff0c\u4f7f\u5f97\u7f16\u8bd1\u5668\u4e0d\u80fd\u5bf9\u5faa\u73af\u8fdb\u884c\u4f18\u5316\u5904\u7406</li> </ol> <pre><code>for (i=0; i&lt;n; i++)\n{\nif (condition)\n{\nDoSomething();\n}\nelse\n{\nDoOtherthing();\n}\n}\n</code></pre> <p>\u3010\u5199\u6cd5\u4e8c\u3011\u7a0b\u5e8f\u6548\u7387\u9ad8</p> <pre><code>if (condition)\n{\nfor (i=0; i&lt;n; i++)\n{\nDoSomething();\n}\n}\nelse\n{\nfor (i=0; i&lt;n; i++)\n{\nDoOtherthing();\n}\n}\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/5-GPU%E7%BC%96%E7%A8%8B/CUDA/%E8%B5%84%E6%96%99/%E3%80%8A%E5%88%A9%E7%94%A8CUDA%E5%8A%A0%E9%80%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%EF%BC%8C%E6%8F%90%E5%8D%87%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E7%B2%BE%E5%BA%A6%E3%80%8B/","title":"\u300a\u5229\u7528CUDA\u52a0\u901f\u56fe\u50cf\u5904\u7406 \uff0c\u63d0\u5347\u7f3a\u9677\u68c0\u6d4b\u7cbe\u5ea6\u300b","text":"<p>\u8bfe\u7a0b\uff1a\u5229\u7528CUDA\u52a0\u901f\u56fe\u50cf\u5904\u7406 \uff0c\u63d0\u5347\u7f3a\u9677\u68c0\u6d4b\u7cbe\u5ea6</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/5-GPU%E7%BC%96%E7%A8%8B/CUDA/%E8%B5%84%E6%96%99/%E3%80%8A%E5%88%A9%E7%94%A8CUDA%E5%8A%A0%E9%80%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%EF%BC%8C%E6%8F%90%E5%8D%87%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E7%B2%BE%E5%BA%A6%E3%80%8B/#cuda","title":"CUDA\u7b80\u4ecb","text":"<p>CUDA, Compute Unified Device Architecture</p> <ul> <li>CUDA\u662fGPU\u7684\u4e00\u4e2a\u7f16\u7a0b\u6a21\u578b</li> <li>\u652f\u6301C/C++/Python/Fortran/Java/\u2026\u2026</li> <li>\u5168\u7403\u8d85\u8fc7\u4e24\u767e\u4e94\u5341\u4e07\u5f00\u53d1\u8005\uff0c\u56fd\u5185\u8d85\u8fc755\u4e07</li> </ul> <p>CUDA C/C++</p> <ul> <li>\u652f\u6301\u5f02\u6784\u7f16\u7a0b\u7684\u6269\u5c55\u65b9\u6cd5</li> <li>\u7b80\u5355\u660e\u4e86\u7684APIs\uff0c\u80fd\u591f\u8f7b\u677e\u7684\u7ba1\u7406\u5b58\u50a8\u7cfb\u7edf</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/5-GPU%E7%BC%96%E7%A8%8B/CUDA/%E8%B5%84%E6%96%99/%E3%80%8A%E5%88%A9%E7%94%A8CUDA%E5%8A%A0%E9%80%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%EF%BC%8C%E6%8F%90%E5%8D%87%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E7%B2%BE%E5%BA%A6%E3%80%8B/#_1","title":"\u5f02\u6784\u8ba1\u7b97","text":"<p>\u5f02\u6784\u8ba1\u7b97</p> <ul> <li>\u628a\u8ba1\u7b97\u91cf\u6700\u5927\u7684\u3001\u6700\u6838\u5fc3\u7684\u5185\u5bb9\uff0c\u5206\u53d1\u7ed9GPU\uff0c\u8ba9GPU\u5e2e\u6211\u4eec\u8ba1\u7b97</li> <li>\u628a\u6d41\u7a0b\u6027\u7684\u4ee3\u7801\u3001\u903b\u8f91\u63a7\u5236\u7684\u4ee3\u7801\uff0c\u4ea4\u7ed9CPU\u6765\u5904\u7406</li> </ul> <p></p> <p>\u8fd9\u91cc\u6d89\u53ca\u5230\u4e24\u4e2a\u672f\u8bed</p> <ul> <li>\u3010Host\u3011CPU\u548c\u5185\u5b58(host memory)</li> <li>\u3010Device\u3011GPU\u548c\u663e\u5b58(device memory)</li> </ul> <p> </p> <p>\u67d0\u5e74\u9ad8\u6027\u80fd\u8ba1\u7b97\u5927\u4f1a\u4e2d</p> <ul> <li>\u3010ISC Top500\u3011137 none GPU\uff1b342 GPU</li> <li>\u3010ISC  Top10\u30113 none GPU\uff1b7 GPU</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/5-GPU%E7%BC%96%E7%A8%8B/CUDA/%E8%B5%84%E6%96%99/%E3%80%8A%E5%88%A9%E7%94%A8CUDA%E5%8A%A0%E9%80%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%EF%BC%8C%E6%8F%90%E5%8D%87%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E7%B2%BE%E5%BA%A6%E3%80%8B/#gpu","title":"GPU\u786c\u4ef6\u7b80\u4ecb","text":"<p>\u57fa\u4e8eGPU\u4f18\u5316\u8ba1\u7b97\u65f6\uff0c\u4e00\u4e2a\u601d\u8def\u5c31\u662f\u5c06\u4e32\u884c\u7b97\u6cd5\u6539\u6210\u5e76\u884c\u7b97\u6cd5\u3002\u8fd9\u79cd\u601d\u8def\u7684\u8f6c\u53d8\uff0c\u6b63\u662f\u56e0\u4e3a\u82af\u7247\u7ed3\u6784\u4e0d\u4e00\u6837\u3002</p> <ul> <li>GPU\u8ba1\u7b97\u6838\u5fc3\u66f4\u591a\uff0c\u4f46\u662fControl\uff08\u63a7\u5236\u3001\u6d41\u6c34\u7ebf\u7684\u4f18\u5316\uff09\u6bd4\u8f83\u5c11\uff0c\u56e0\u6b64\u5728\u903b\u8f91\u5904\u7406\u65b9\u9762\u6ca1\u6709CPU\u5f3a\uff0c\u800c\u8ba1\u7b97\u65b9\u9762\u6bd4CPU\u5f3a</li> <li>\u800c\u4e14GPU\u8ba1\u7b97\u6838\u5fc3\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u6761\u8ba1\u7b97\u6307\u4ee4\uff0c\u8fd8\u53ef\u4ee5\u8ba1\u7b97\u540c\u4e00\u5757Memory</li> </ul> <p></p> <p>\u4e0b\u56fe\u4e3aGA100\u7684\u786c\u4ef6\u67b6\u6784\u56fe</p> <ul> <li>\u7eff\u8272\u7684\u5373\u662f\u8ba1\u7b97\u6838\u5fc3</li> <li>GPC\uff0cGraphics Processing Cluster\uff0c\u56fe\u5f62\u5904\u7406\u5355\u5143\u96c6\u7fa4\uff0cGPC\u7531\u5f88\u591aSM\u7ec4\u6210</li> </ul> <p></p> <p>SM\u5728CUDA\u4e2d\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6982\u5ff5\uff0c\u79f0\u4e4b\u4e3a\u6d41\u591a\u5904\u7406\u5668\uff08Streaming Multiprocessor\uff09</p> <ul> <li>L1\u7f13\u5b58\u662f\u5185\u90e8\u6240\u6709\u4eba\u53ef\u4ee5\u5171\u4eab\u7684\uff0cL0\u662f\u4e00\u4e2a\u8ba1\u7b97\u5355\u5143\u79c1\u6709\u7684</li> <li>\u5728GPU\u4e2d\uff0c\u591a\u4e2a\u786c\u4ef6\u6838\u5fc3\u662f\u53ef\u4ee5\u5171\u7528\u4e00\u4e2a\u76f8\u540c\u6307\u4ee4\u96c6\u7684\uff0c32\u4e2a\u8ba1\u7b97\u6838\u5fc3\u79f0\u4e3a\u4e00\u4e2aWarp<ul> <li>\u5982\u679c\u4f60\u53ea\u9700\u8c03\u75281\u4e2a\u7ebf\u7a0b\uff0c\u786c\u4ef6\u5c42\u9762\u4e5f\u662f\u8c03\u75281\u4e2aWarp\uff081\u4e2a\u7ebf\u7a0b\u653e\u52301\u4e2a\u6838\u5fc3\u91cc\u8ba1\u7b97\uff09</li> <li>32\u4e2a\u7ebf\u7a0b\uff0c\u4e5f\u662f\u8c03\u75281\u4e2aWarp</li> <li>33\u4e2a\u7ebf\u7a0b\uff0c\u9700\u8981\u8c03\u75282\u4e2aWarp</li> </ul> </li> <li>\u5206\u53d1\u5668\u5355\u5143</li> </ul> <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/5-GPU%E7%BC%96%E7%A8%8B/CUDA/%E8%B5%84%E6%96%99/%E3%80%8A%E5%88%A9%E7%94%A8CUDA%E5%8A%A0%E9%80%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%EF%BC%8C%E6%8F%90%E5%8D%87%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E7%B2%BE%E5%BA%A6%E3%80%8B/#cuda_1","title":"CUDA\u5b89\u88c5","text":"<p>\u3010\u9002\u7528\u8bbe\u5907\u3011\u6240\u6709\u5305\u542bNVIDIA GPU\u7684\u670d\u52a1\u5668\u3001\u5de5\u4f5c\u7ad9\u3001\u4e2a\u4eba\u7535\u8111\u3001\u5d4c\u5165\u5f0f\u8bbe\u5907\u7b49\u7535\u5b50\u8bbe\u5907</p> <p>\u3010\u8f6f\u4ef6\u5b89\u88c5\u3011</p> <ol> <li>Windows\uff1a\u5b89\u88c5\u6559\u7a0b\uff0c\u53ea\u9700\u5b89\u88c5\u4e00\u4e2aexe</li> <li>Linux\uff1a\u5b89\u88c5\u6559\u7a0b\uff0c\u9700\u89816\u30017\u4e2a\u6b65\u9aa4</li> <li>Jetson\uff1aJetPack SDK | NVIDIA Developer\uff0c\uff0c\u5229\u7528NVIDIA SDK Manager\u6216\u8005SD Image\u8fdb\u884c\u5237\u673a\u5373\u53ef</li> </ol>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/5-GPU%E7%BC%96%E7%A8%8B/CUDA/%E8%B5%84%E6%96%99/%E3%80%8A%E5%88%A9%E7%94%A8CUDA%E5%8A%A0%E9%80%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%EF%BC%8C%E6%8F%90%E5%8D%87%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E7%B2%BE%E5%BA%A6%E3%80%8B/#cuda_2","title":"CUDA\u7ebf\u7a0b\u5c42\u6b21","text":""},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/5-GPU%E7%BC%96%E7%A8%8B/CUDA/%E8%B5%84%E6%96%99/%E3%80%8A%E5%88%A9%E7%94%A8CUDA%E5%8A%A0%E9%80%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%EF%BC%8C%E6%8F%90%E5%8D%87%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E7%B2%BE%E5%BA%A6%E3%80%8B/#_2","title":"\u4e09\u4e2a\u7ebf\u7a0b\u5c42\u6b21","text":"<p>CUDA\u662f\u4e00\u4e2a\u5e76\u884c\u8ba1\u7b97\u7684\u7f16\u7a0b\u6a21\u578b\uff0c\u5e76\u884c\u8ba1\u7b97\u9014\u4e2d\u4f1a\u540c\u65f6\u7533\u8bf7\u5f88\u591a\u4e2a\u7ebf\u7a0b\u3002\u4e3a\u4e86\u65b9\u4fbf\u7ba1\u7406\u8fd9\u4e9b\u7ebf\u7a0b\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u5206\u5c42\u6b21\uff1a</p> Thread Thread Block Thread Grid sequential execution unit a group of threads a collection of thread blocks \u5c42\u6b21 \u4e00\u4e2a\u7ebf\u7a0b \u591a\u4e2a\u7ebf\u7a0b\u7ec4\u5408\u6210\u4e00\u5757\uff0c\u79f0\u4e3ablock \u591a\u4e2ablock\u7ec4\u6210grid \u786c\u4ef6\u8c03\u5ea6 Core\u7ea7\u522b\u7684\u8c03\u5ea6\u5355\u4f4d SM\u7ea7\u522b\u7684\u8c03\u5ea6\u5355\u4f4d GPU\uff08GPC\uff09\u7ea7\u522b\u7684\u8c03\u5ea6\u5355\u4f4d \u5173\u7cfb \u4e00\u4e2a\u7ebf\u7a0b\u80af\u5b9a\u8fd0\u884c\u5728\u4e00\u4e2aCore\u4e2d block\u4e2d\u7684\u7ebf\u7a0b\u8fd0\u884c\u5728\u4e00\u4e2aSM\u5f53\u4e2d Grid\u4e2d\u7684\u7ebf\u7a0b\u8fd0\u884c\u5728\u4e00\u4e2a\u8bbe\u5907\u4e2d \u4e00\u4e2aCore\u53ef\u80fd\u8fd0\u884c\u591a\u4e2a\u7ebf\u7a0b \u4e00\u4e2aSM\u53ef\u80fd\u8fd0\u884c\u591a\u4e2ablock \u4e00\u4e2aGrid\u5f53\u4e2d\u7684Block\u53ef\u4ee5\u5728\u591a\u4e2aSM\u4e2d\u6267\u884c \u5176\u4ed6 \u5e76\u884c\u6267\u884c \u540c\u4e00\u4e2aBlock\u4e2d\u7684\u7ebf\u7a0b\u53ef\u4ee5\u534f\u4f5c <p></p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/5-GPU%E7%BC%96%E7%A8%8B/CUDA/%E8%B5%84%E6%96%99/%E3%80%8A%E5%88%A9%E7%94%A8CUDA%E5%8A%A0%E9%80%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%EF%BC%8C%E6%8F%90%E5%8D%87%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E7%B2%BE%E5%BA%A6%E3%80%8B/#_3","title":"\u786c\u4ef6\u8c03\u5ea6\u5355\u4f4d","text":"Threads/Warp Block(CTA) Grid \u786c\u4ef6\u8c03\u5ea6 Core\u7ea7\u522b\u7684\u8c03\u5ea6\u5355\u4f4d SM\u7ea7\u522b\u7684\u8c03\u5ea6\u5355\u4f4d GPU\uff08GPC\uff09\u7ea7\u522b\u7684\u8c03\u5ea6\u5355\u4f4d \u5141\u8bb8\u540c\u4e00\u4e2aWarp\u4e2d\u7684thread\u8bfb\u53d6\u5176\u4ed6thread\u7684\u503c \u540c\u4e00\u4e2aSM(Streaming Multiprocessor)\u540c\u4e00\u4e2aSM(Shared Memory) \u5171\u4eab\u540c\u6837\u7684Kenrl\u548cContext <p>\u3010\u6ce8\u610f\u3011</p> <ul> <li>\u540cCPU\u7684\u6838\u5fc3\u4e00\u6837\uff0c\u5f53\u6267\u884c\u4e00\u4e2a\u7ebf\u7a0b\u65f6\u9047\u5230\u6570\u636eIO\uff0c\u5c31\u4f1a\u4ea7\u751f\u7b49\u5f85\uff0c\u6b64\u65f6Core\u5c31\u4f1a\u5c06\u6b64\u7ebf\u7a0b\u6302\u8d77\uff0c\u8f6c\u800c\u53bb\u6267\u884c\u53e6\u4e00\u4e2a\u7ebf\u7a0b</li> <li>\u540c\u6837\uff0c\u4e00\u4e2aSM\u4e2d\u4e0d\u4ec5\u53ea\u6709\u4e00\u4e2ablock\uff0c\u53ef\u80fd\u8fd8\u6709\u5f88\u591a\u4e2ablock\u3002\u5f53\u4e00\u4e2ablock\u9047\u5230\u6570\u636e\u4ea4\u6362\u6216\u7b49\u5f85\u65f6\uff0cSM\u5c31\u4f1a\u53bb\u6267\u884c\u53e6\u4e00\u4e2ablock</li> <li>\u540c\u7406\uff0c\u4e00\u4e2a\u8bbe\u5907\u4e2d\u53ef\u4ee5\u8fd0\u884c\u591a\u4e2aGrid</li> </ul> <p>\u3010\u5982\u6b64\u3011</p> <ul> <li>\u901a\u5e38\u4e5f\u4f1a\u5c06\u8ba1\u7b97\u6838\u5fc3\u7684\u5fd9\u788c\u7a0b\u5ea6\uff0c\u4f5c\u4e3a\u8861\u91cf\u7a0b\u5e8f\u4f18\u5316\u6548\u7387\u7684\u6807\u51c6</li> <li>\u56e0\u6b64\uff0c\u8981\u5c3d\u91cf\u51cf\u5c11\u7a0b\u5e8f\u4e2d\uff0c\u6570\u636e\u4ea4\u6362\u3001\u4ea7\u751f\u5206\u652f\uff08\u5982if\uff09\u3001\u7b49\u5f85\u7684\u90e8\u5206</li> </ul>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/5-GPU%E7%BC%96%E7%A8%8B/CUDA/%E8%B5%84%E6%96%99/%E3%80%8A%E5%88%A9%E7%94%A8CUDA%E5%8A%A0%E9%80%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%EF%BC%8C%E6%8F%90%E5%8D%87%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E7%B2%BE%E5%BA%A6%E3%80%8B/#_4","title":"\u7f16\u53f7","text":"<p>\u3010\u6267\u884c\u8bbe\u7f6e\u3011<code>dim3 grid(3,2,1), block(5,3,1)</code></p> <ol> <li>Grid\u662f3x2x1\u7684\u7ef4\u5ea6</li> <li>block\u662f5x3x1\u7684\u7ef4\u5ea6</li> </ol> <p></p> <pre><code>threadIdx.[x,y,z] //\u662f\u6267\u884c\u5f53\u524dkernel\u51fd\u6570\u7684\u7ebf\u7a0b\u5728block\u4e2d\u7684\u7d22\u5f15\u503c\nblockIdx.[x,y,z]  //\u662f\u6267\u884c\u5f53\u524dkernel\u51fd\u6570\u7684\u7ebf\u7a0b\u6240\u5728block\uff0c\u5728grid\u4e2d\u7684\u7d22\u5f15\u503c\nblockDim.[x,y,z]  //\u8868\u793a\u4e00\u4e2agrid\u4e2d\u5305\u542b\u591a\u5c11\u4e2ablock\ngridDim.[x,y,z]   //\u8868\u793a\u4e00\u4e2ablock\u4e2d\u5305\u542b\u591a\u5c11\u4e2a\u7ebf\u7a0b\n</code></pre> <p>\u3010\u4f8b\u5b50\u3011</p> <ol> <li><code>int a[32]</code></li> <li><code>blockDim.x==8</code>\uff081\u4e2ablock\u67098\u4e2a\u7ebf\u7a0b\uff09\uff0cy\u3001z\u7ef4\u5ea6\u90fd\u4e3a1</li> <li>\u5982\u4f55\u5728CUDA\u7f16\u7a0b\u4e2d\u53d6<code>a[21]</code>\u5143\u7d20</li> </ol> <p></p> <p>\u9700\u8981\u627e\u5230\u4e00\u4e2a\u7ebf\u7a0b\u5728\u5168\u5c40\u5f53\u4e2d\u7684\u7d22\u5f15\u503c</p> <pre><code>//block\u7684y\u3001z\u7ef4\u5ea6\u90fd\u4e3a1\nint index = threadIdx.x  + blockIdx.x * blockDim.x;\n= 5 + 2 * 8;\n= 21;\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/5-GPU%E7%BC%96%E7%A8%8B/CUDA/%E8%B5%84%E6%96%99/%E3%80%8A%E5%88%A9%E7%94%A8CUDA%E5%8A%A0%E9%80%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%EF%BC%8C%E6%8F%90%E5%8D%87%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E7%B2%BE%E5%BA%A6%E3%80%8B/#_5","title":"\u793a\u4f8b\uff1a\u5411\u91cf\u76f8\u52a0","text":"<p>\u3010\u95ee\u9898\u3011\u8ba1\u7b97N\u4e2a\u5411\u91cf\u76f8\u52a0</p>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/5-GPU%E7%BC%96%E7%A8%8B/CUDA/%E8%B5%84%E6%96%99/%E3%80%8A%E5%88%A9%E7%94%A8CUDA%E5%8A%A0%E9%80%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%EF%BC%8C%E6%8F%90%E5%8D%87%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E7%B2%BE%E5%BA%A6%E3%80%8B/#cpu","title":"CPU\u5b9e\u73b0","text":"<pre><code>void vecAdd(int n, int* a, int* b, int* c) {\nfor(int i{0}; i&lt;n; ++i) c[i] = b[i] + a[i];\n}\nvoid main(){\nint size = N * sizeof(int);\nint *a, *b, *c;\na = (int*)malloc(size);\nb = (int*)malloc(size);\nc = (int*)malloc(size);\nmemset(c, 0, size);\ninit_rand_f(a, N);\ninit_rand_f(b, N);\nvecAdd(N, a, b, c);\n}\n</code></pre>"},{"location":"B-%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/5-GPU%E7%BC%96%E7%A8%8B/CUDA/%E8%B5%84%E6%96%99/%E3%80%8A%E5%88%A9%E7%94%A8CUDA%E5%8A%A0%E9%80%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%EF%BC%8C%E6%8F%90%E5%8D%87%E7%BC%BA%E9%99%B7%E6%A3%80%E6%B5%8B%E7%B2%BE%E5%BA%A6%E3%80%8B/#gpu_1","title":"GPU\u5b9e\u73b0","text":"<p>GPU Core\u5e76\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95eeCPU\u7684\u5185\u5b58\uff0c\u56e0\u6b64\u9700\u8981\u5c06\u6570\u636e\u4eceCPU\u901a\u8fc7PCI\u4f20\u8f93\u5230GPU\u5f53\u4e2d</p> <p>\u4e00\u3001\u5728GPU\u4e2d\u5206\u914d\u5185\u5b58</p> <p></p> <p>\u4e8c\u3001\u4f20\u8f93\u6570\u636e</p> <p></p> <p>\u4e09\u3001\u6bcf\u4e2aGPU Core\u6838\u5fc3\u4eceGPU\u5185\u5b58\u4e2d\u8bfb\u53d6\u3001\u5e76\u8ba1\u7b97</p> <p></p> <p>\u56db\u3001\u8ba1\u7b97\u5b8c\u6210\u540e\uff0c\u4f20\u8f93\u56deCPU</p> <p></p> <p>\u4e94\u3001\u56de\u6536GPU\u5185\u5b58</p> <p></p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/","title":"\u6392\u5e8f","text":"\u5185\u90e8\u6392\u5e8f\u7684\u5f52\u5e76\u7b97\u6cd5 \u5916\u90e8\u6392\u5e8f\u7684\u5f52\u5e76\u7b97\u6cd5 \u76f8\u540c\u70b9 \u5b50\u5e8f\u5217\u5b58\u5728\u5185\u5b58\u4e2d \u5b50\u5e8f\u5217\u5728\u5916\u5b58\u4e2d\uff08\u6587\u4ef6\u4e2d\uff09 \u601d\u60f3\u4e00\u6837\uff0c\u90fd\u662f\u4ece\u5c0f\u5355\u5143\u5f52\u5e76\u5230\u5355\u5143"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/","title":"\u5185\u90e8\u6392\u5e8f","text":"<p>\u3010sort\u3011\u65e2\u662f\u4e00\u79cd \u6392\u5e8f\u8fc7\u7a0b\uff0c\u4e5f\u662f\u4e00\u79cd \u5206\u7c7b\u8fc7\u7a0b \u3010\u7a33\u5b9a\u6027\u3011\u6392\u5e8f\u7ed3\u679c\u4e2d\uff0c\u76f8\u540c\u5173\u952e\u8bcd\u7684\u76f8\u5bf9\u4f4d\u7f6e\u6ca1\u6709\u53d1\u751f\u53d8\u5316</p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/#_1","title":"\u5206\u7c7b","text":"<p>\u5185\u90e8\u6392\u5e8f\u7b97\u6cd5\u5206\u7c7b</p> \u7c7b\u522b \u601d\u60f3 \u79cd\u7c7b \u63d2\u5165\u7c7b \u5c06\u5143\u7d20 \u63d2\u5165 \u5230\u6709\u5e8f\u5e8f\u5217\u4e2d \u76f4\u63a5\u63d2\u5165\u6392\u5e8f\uff1b\u6298\u534a\u63d2\u5165\u6392\u5e8f\uff1b\u5e0c\u5c14\u6392\u5e8f\uff1b\u4e8c\u8def\u63d2\u5165\u6392\u5e8f\uff1b\u8868\u63d2\u5165\u6392\u5e8f \u4ea4\u6362\u7c7b \u5728\u65e0\u5e8f\u5e8f\u5217\u4e2d\u8fdb\u884c\u4e24\u4e24 \u4ea4\u6362\uff0c\u6700\u7ec8\u4f1a\u5728\u4e00\u7aef\u5f97\u5230\u4e00\u4e2a\u6700\u503c\u8fd9\u4e5f\u5c31\u662f\u8be5\u5143\u7d20\u7684\u6700\u7ec8\u4f4d\u7f6e \u8d77\u6ce1\u6392\u5e8f\uff1b\u5feb\u901f\u6392\u5e8f \u9009\u62e9\u7c7b \u4ece\u65e0\u5e8f\u5e8f\u5217\u4e2d \u9009\u62e9 \u51fa\u6700\u503c\u5143\u7d20\uff0c\u5e76\u52a0\u5165\u5230\u6709\u5e8f\u5e8f\u5217\u4e2d \u7b80\u5355\u9009\u62e9\u6392\u5e8f\uff1b\u6811\u5f62\u9009\u62e9\u6392\u5e8f\uff1b\u5806\u6392\u5e8f \u5f52\u5e76\u7c7b \u901a\u8fc7 \u5f52\u5e76 \u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684\u5b50\u5e8f\u5217 \u4e8c\u8def\u5f52\u5e76\u6392\u5e8f \u57fa\u6570\u7c7b \u4e0d\u9700\u8981\u5173\u952e\u5b57\u4e4b\u95f4\u7684\u6bd4\u8f83\u548c\u79fb\u52a8\u57fa\u4e8e\u591a\u5173\u952e\u5b57\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u628a\u4e00\u4e2a\u903b\u8f91\u5173\u952e\u5b57\u62c6\u5206\u6210\u591a\u4e2a\u5173\u952e\u5b57\u4f8b\u5982\uff1a\u51c6\u590710\u4e2a\u6876\uff0c\u7f16\u53f7\u4e3a0-9\uff0c\u6309\u7167\u6570\u5b57\u7684\u67d0\u4e00\u4f4d\u8fdb\u884c\u5f52\u7c7b\uff0c\u7136\u540e\u6309\u987a\u5e8f\u9009\u51fa \u57fa\u6570\u6392\u5e8f"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/#_2","title":"\u5404\u7b97\u6cd5\u7b80\u4ecb","text":"\u7b97\u6cd5\u540d\u79f0 \u4ecb\u7ecd \u8bc4\u4ef7 \u5e73\u5747 \u6700\u597d \u6700\u574f \u7a7a\u95f4 \u7a33\u5b9a\u6027 \u76f4\u63a5\u63d2\u5165\u6392\u5e8f \u6bcf\u8d9f\u9009\u4e00\u4e2a\u63d2\u5165 \u5df2\u7ecf\u6709\u5e8f\u7684\u8bdd\uff0c\u53ea\u8981\u904d\u5386\u4e00\u6b21\uff0c\u4e0d\u9700\u8981\u63d2\u5165 \\(O(n^2)\\) \\(O(n)\\) \\(O(n^2)\\) \\(O(1)\\) \u7a33\u5b9a \u6298\u534a\u63d2\u5165\u6392\u5e8f \u5e0c\u5c14\u6392\u5e8f \u7528\u6b65\u957f\u5212\u5206\u6210\u5b50\u5e8f\u5217\uff0c\u5206\u522b\u63d2\u5165\u6392\u5e8f \\(O(nlog_2n)\\) \\(O(n)\\) \\(O(n^2)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u5192\u6ce1\u6392\u5e8f \u4e24\u4e24\u4ea4\u6362 \u5df2\u7ecf\u6709\u5e8f\u7684\u8bdd\uff0c\u53ea\u8981\u904d\u5386\u4e00\u6b21\uff0c\u6ca1\u6709\u4ea4\u6362\u5c31\u7ed3\u675f \\(O(n^2)\\) \\(O(n)\\) \\(O(n^2)\\) \\(O(1)\\) \u7a33\u5b9a \u5feb\u901f\u6392\u5e8f \u6bd4\u5c0f\u660e\u9ad8\u7684\u7ad9\u53f3\u8fb9\uff0c\u77ee\u7684\u5de6\u8fb9 \u8d8a\u6709\u5e8f\u8d8a\u8d39\u52b2 \\(O(nlog_2n)\\) \\(O(nlog_2n)\\) \\(O(n^2)\\) \\(O(log_2n)\\) \u4e0d\u7a33\u5b9a \u7b80\u5355\u9009\u62e9\u6392\u5e8f \u6bcf\u8d9f\u9009\u51fa\u4e00\u4e2a\u6700\u503c \u6bd4\u8f83\u6b21\u6570\u4e0e\u521d\u59cb\u5e8f\u5217\u65e0\u5173 \\(O(n^2)\\) \\(O(n^2)\\) \\(O(n^2)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u5806\u6392\u5e8f \u7528\u5806\u6765\u9009\u62e9\u6700\u503c \u6bd4\u8f83\u6b21\u6570\u4e0e\u521d\u59cb\u4fee\u4e86\u6709\u5173 \\(O(nlog_2n)\\) \\(O(nlog_2n)\\) \\(O(nlog_2n)\\) \\(O(1)\\) \u4e0d\u7a33\u5b9a \u4e8c\u8def\u5f52\u5e76\u6392\u5e8f \u5206\u6210n\u4e2a\u5b50\u5e8f\u5217\uff0c\u4e24\u4e24\u5e8f\u5217\u5f52\u5e76 \\(O(nlog_2n)\\) \\(O(nlog_2n)\\) \\(O(nlog_2n)\\) \\(O(n)\\) \u7a33\u5b9a \u57fa\u6570\u6392\u5e8f \u4e0d\u6bd4\u8f83\uff0c\u5206\u914d\u6536\u96c6 \\(O(d(n+r_d))\\) \\(O(d(n+r_d))\\) \\(O(d(n+r_d))\\) \\(O(r_d)\\) \u7a33\u5b9a"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/#_3","title":"\u6027\u80fd\u8868","text":"\u6027\u80fd \u5206\u6790 \u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6 1. \u5feb\u901f\u3001\u5e0c\u5c14\u3001\u5f52\u5e76\u548c\u5806\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nlog2n)\uff0c\u5176\u4ed6\u90fd\u662fO(n2) 2.  \u7279\u6b8a\uff1a\u57fa\u6570\u6392\u5e8fO(d(n+rd))\uff1bd\u4e3a\u5173\u952e\u5b57\u4f4d\u6570\uff0cr\u4e3a\u4e00\u4f4d\u7684\u5173\u952e\u5b57\u53d6\u503c\u8303\u56f4\uff0cn\u4e3a\u6570\u91cf\u3010\u52a9\u8bb0\u3011<code>\u201c\u5feb\u4e9b\u4ee5nlog2n\u7684\u901f\u5ea6\u5f52\u961f\u201d\uff1a\u5feb\uff08\u5feb\u901f\u6392\u5e8f\uff09\u3001\u4e9b\uff08\u5e0c\u5c14\u6392\u5e8f\uff09\u3001\u5f52\uff08\u5f52\u5e76\u6392\u5e8f\uff09\u3001\u961f\uff08\u5806\u6392\u5e8f\uff09</code> \u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6 1. \u5feb\u901f\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n2)2. \u5176\u4ed6\u90fd\u548c\u5e73\u5747\u60c5\u51b5\u76f8\u7b49 \u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6 1. \u76f4\u63a5\u63d2\u5bb9\u6613\u63d2\u53d8\u6210O(n)\uff0c\u8d77\u6ce1\u8d77\u7684\u597d\u53d8\u6210O(n)2. \u201c\u5bb9\u6613\u63d2\u201d\u3001\u201c\u8d77\u7684\u597d\u201d\u90fd\u662f\u6307\u521d\u59cb\u5e8f\u5217\u5df2\u7ecf\u6709\u5e8f \u7a7a\u95f4\u590d\u6742\u5ea6 1. \u5feb\u901f\u6392\u5e8fO(log2n) 2. \u5f52\u5e76\u6392\u5e8fO(n)3. \u57fa\u6570\u6392\u5e8fO(rd)4. \u5176\u4ed6\u90fd\u662fO(1) \u7a33\u5b9a\u6027 \u3010\u52a9\u8bb0\u3011<code>\u8003\u7814\u590d\u4e60\u75db\u82e6\u554a\uff0c\u5fc3\u60c5\u4e0d\u7a33\u5b9a\uff08\u4e0d\u7a33\u5b9a\u7684\u7b97\u6cd5\uff09\uff0c\u5feb\uff08\u5feb\u901f\u6392\u5e8f\uff09\u4e9b\uff08\u5e0c\u5c14\u6392\u5e8f\uff09\u9009\uff08\u7b80\u5355\u9009\u62e9\u6392\u5e8f\uff09\u4e00\u5806\uff08\u5806\u6392\u5e8f\uff09\u597d\u53cb\u6765\u804a\u5929\u5427</code>\u3002\u8fd94\u79cd\u4e0d\u662f\u7a33\u5b9a\u7684\uff0c\u5176\u4ed6\u81ea\u7136\u90fd\u662f\u7a33\u5b9a\u7684 \u6392\u5e8f\u539f\u7406 1. \u7ecf\u8fc7\u4e00\u8d9f\u6392\u5e8f\uff0c\u5c31\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u5143\u7d20\u5230\u8fbe\u6700\u7ec8\u4f4d\u7f6e\uff1a\u8d77\u6ce1\u3001\u5feb\u901f\uff08\u4ea4\u6362\u7c7b\u7684\u4e24\u79cd\uff09\uff0c\u7b80\u5355\u9009\u62e9\u3001\u5806\uff08\u9009\u62e9\u7c7b\u7684\u4e24\u79cd\uff09 2. \u6392\u5e8f\u65b9\u6cd5\u7684\u5143\u7d20\u6bd4\u8f83\u6b21\u6570\u548c\u539f\u59cb\u5e8f\u5217\u65e0\u5173\uff1a\u7b80\u5355\u9009\u62e9\u6392\u5e8f\u3001\u6298\u534a\u63d2\u5165\u6392\u5e8f3. \u6392\u5e8f\u65b9\u6cd5\u7684\u6392\u5e8f\u8d9f\u6570\u548c\u539f\u59cb\u5e8f\u5217\u6709\u5173\uff1a\u4ea4\u6362\u7c7b\u7684\u6392\u5e8f4. \u6bd4\u8f83\u7c7b\u7684\u7b97\u6cd5\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\u81f3\u5c11O(log2n) \u5176\u4ed6 \u7b80\u5355\u666e\u901a\u7684\u6392\u5e8f\u65b9\u6cd5\u7684\u5347\u7ea7\u7248\u7684\u5e73\u5747\u590d\u6742\u5ea6\u90fd\u4e3aO(nlog2n)\uff0c\u6700\u574f\u7684\u60c5\u51b5\u90fd\u662f\u548c\u6ca1\u6539\u8fdb\u7684\u65f6\u5019\u4e00\u6837O(n^2)\uff0c\u9664\u4e86\u5806\u6392\u5e8f"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/#_4","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u5341\u5927\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5\uff08\u52a8\u56fe\u6f14\u793a\uff09</li> <li>10\u5927\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5\u52a8\u56fe\u6f14\u793a\uff0c\u770b\u8fd9\u7bc7\u5c31\u591f\u4e86\uff01\uff08\u914d\u76f8\u5e94\u4ee3\u7801\uff09 </li> <li>\u6811\u5f62\u9009\u62e9\u6392\u5e8f</li> </ol>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E4%BA%A4%E6%8D%A2%E7%B1%BB/","title":"\u4ea4\u6362\u7c7b","text":""},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E4%BA%A4%E6%8D%A2%E7%B1%BB/#_1","title":"\u5192\u6ce1\u6392\u5e8f","text":"<p>\u8fdb\u884c\u4e24\u4e24\u4ea4\u6362\uff0c\u4e00\u8d9f\u4e0b\u6765\u628a\u4e00\u4e2a\u6700\u503c\u79fb\u5230\u4e86\u6700\u53f3\u8fb9 </p> <p></p> <p></p> <ol> <li>\u3010\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u3011\\(O(n^2)\\)\uff1b\u5f85\u6392\u5e8f\u5217\u9006\u5e8f\uff0c\u57fa\u672c\u64cd\u4f5c\u603b\u7684\u6267\u884c\u6b21\u6570\u4e3a(n-1+1)(n-1)/2=n(n-1)/2</li> <li>\u3010\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\u3011\\(O(n)\\)\uff1b\u5f85\u6392\u5e8f\u5e8f\u5217\u5df2\u7ecf\u6709\u5e8f\uff0c\u7b2c\u4e8c\u5c42\u5faa\u73af\u4e0d\u8fdb\u884c</li> <li>\u3010\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u3011\\(O(n^2)\\)</li> <li>\u3010\u7a7a\u95f4\u590d\u6742\u5ea6\u3011O(1)</li> </ol>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E4%BA%A4%E6%8D%A2%E7%B1%BB/#_2","title":"\u5feb\u901f\u6392\u5e8f","text":"<p>\u7b2c\u4e00\u4e2a\u540c\u5b66\u51fa\u5217\uff0c\u5176\u4ed6\u4eba\u4ee5\u4ed6\u4e3a\u4e2d\u5fc3\uff0c\u6bd4\u4ed6\u77ee\u7684\u5230\u4ed6\u7684\u5de6\u8fb9\uff0c\u6bd4\u4ed6\u9ad8\u7684\u5230\u4ed6\u7684\u53f3\u8fb9</p> <p>\u6b65\u9aa4\uff1a<code>[low, high]</code></p> <ol> <li>\u53d6\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u4f5c\u4e3a\u54e8\u5175\uff0c\u5e76\u4e14\u4fdd\u5b58\u4e0b\u6765<code>key</code></li> <li><code>i=low</code>\uff0c\u7136\u540e\u4ece\u5de6\u5230\u53f3\u641c\u7d22\uff08\u5373<code>i++</code>\uff09\uff1b<code>j=high</code>\u7136\u540e\u4ece\u53f3\u5230\u5de6\u641c\u7d22\uff08\u5373<code>j--</code>\uff09\uff1b\u76f4\u5230<code>i&gt;j</code>\uff0c\u6bcf\u6b21\u5faa\u73af\u6267\u884c<ol> <li>\u5982\u679c<code>arr[j] &lt; key</code>\uff0c\u5c06\u628a\u5b83\u653e\u5230<code>arr[i]</code>\u7684\u4f4d\u7f6e</li> <li>\u5982\u679c<code>arr[i] &gt; key</code>\uff0c\u5c31\u628a\u5b83\u653e\u5230<code>arr[j]</code>\u7684\u4f4d\u7f6e</li> </ol> </li> </ol> <p></p> <pre><code>void QuickSort(int arr[], int low, int high) {\nif(low &gt;= high) return; //\u8d85\u51fa\u8303\u56f4\uff0c\u76f4\u63a5\u9000\u51fa\nauto key = arr[low]; //\u628a\u6700\u5de6\u8fb9\u7684\u5143\u7d20\u4f5c\u4e3a\u54e8\u5175\nauto i = low;\nauto j = high;\nwhile(i &lt; j) {\n//# j\u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u79fb\u52a8\n// \u5982\u679carr[j]\u6bd4\u54e8\u5175\u5927\u5c31\u7ee7\u7eed\u4f4d\u79fb\nwhile(i&lt;j &amp;&amp; arr[j] &gt;= key) --j;\n//\u5982\u679c\u9047\u5230\u6bd4key\u5c0f\uff0c\u8981\u653e\u5728\u54e8\u5175\u5de6\u8fb9\uff0c\u653e\u5230i\u7a7a\u51fa\u6765\u7684\u4f4d\u7f6e\n// \u653e\u5b8c\u540e\uff0c\u56e0\u4e3ai\u7684\u4f4d\u7f6e\u88ab\u586b\u4e0a\u4e86\uff0c\u56e0\u6b64\u8981\u5411\u53f3\u4f4d\u79fb\nif(i &lt; j) arr[i++] = arr[j];\n//# i\u4ece\u5de6\u5230\u53f3\u79fb\u52a8\n// \u5982\u679carr[i]\u6bd4\u54e8\u5175\u5c0f\u5c31\u7ee7\u7eed\u4f4d\u79fb\nwhile(i&lt;j &amp;&amp; arr[i] &lt;= key) ++i;\n//\u5982\u679c\u9047\u5230\u6bd4tmp\u5927\u7684\uff0c\u8981\u653e\u5728\u5de6\u8fb9\n// \u653e\u5b8c\u540e\uff0c\u56e0\u4e3aj\u7684\u4f4d\u7f6e\u88ab\u586b\u4e0a\u4e86\uff0c\u56e0\u6b64\u8981\u5411\u53f3\u4f4d\u79fb\nif(i &lt; j) arr[j--] = arr[i];\n}\n//\u6bd4\u54e8\u5175\u5c0f\u7684\u90fd\u6392\u5728\u5de6\u8fb9\u4e86\uff0c\u6bd4\u54e8\u5175\u5927\u7684\u90fd\u6392\u5728\u53f3\u8fb9\u4e86\n// \u56e0\u6b64\u8fd9\u4e2a\u54e8\u5175\u5c31\u5f04\u5b8c\u4e86\uff0c\u7ee7\u7eed\u5269\u4e0b\u7684\u8303\u56f4\narr[i] = tmp;\nQuickSort(arr, low, i-1);\nQUickSort(arr, i+1, high);\n}\n</code></pre> <p>\u3010\u8bc4\u4ef7\u3011</p> <ol> <li>\u5feb\u901f\u6392\u5e8f\u7684\u6392\u5e8f\u8d9f\u6570\u548c\u521d\u59cb\u5e8f\u5217\u6709\u5173\uff1b</li> <li>\u5728\u540c\u7ea7\u522b\u7684\u7b97\u6cd5\u4e2d\uff08\\(O(X*nlog_2n)\\)\uff09\uff0c\u6b64\u7b97\u6cd5\u7684X\u6700\u5c0f</li> </ol> <p>\u3010\u6700\u597d\u3011\\(O(nlog_2n)\\)\u5e8f\u5217\u8d8a\u63a5\u8fd1\u65e0\u5e8f\uff0c\u8d8a\u6709\u6548</p> <p>\u3010\u6700\u574f\u3011\\(O(n^2)\\)\u5e8f\u5217\u5143\u7d20\u8d8a\u6709\u5e8f\uff0c\u8d8a\u65e0\u6548</p> <p>\u3010\u5e73\u5747\u3011\\(O(nlog_2n)\\)</p> <p>\u3010\u7a7a\u95f4\u590d\u6742\u5ea6\u3011\\(O(log_2n)\\)\u9012\u5f52\u7b97\u6cd5\uff0c\u7a7a\u95f4\u6d88\u8017\u5927\uff0c\u9700\u8981\u7528\u5230\u7cfb\u7edf\u6808</p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E5%9F%BA%E6%95%B0%E7%B1%BB/","title":"\u57fa\u6570\u7c7b","text":""},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E5%9F%BA%E6%95%B0%E7%B1%BB/#_1","title":"\u57fa\u6570\u6392\u5e8f","text":"<p>\u3010\u57fa\u6570\u6392\u5e8f\u3011\u57fa\u6570\u6392\u5e8f\u5c5e\u4e8e\u201c\u5206\u914d\u5f0f\u6392\u5e8f\u201d\uff0c\u53c8\u79f0\u201c\u6876\u5b50\u6cd5\u201d</p> <p>\u3010\u601d\u60f3\u3011\u201c\u591a\u5173\u952e\u5b57\u6392\u5e8f\u201d\uff1a\u5b83\u662f\u901a\u8fc7\u952e\u503c\u7684\u90e8\u4efd\u8d44\u8baf\uff0c\u5c06\u8981\u6392\u5e8f\u7684\u5143\u7d20\u5206\u914d\u81f3\u67d0\u4e9b\u201c\u6876\u201d\u4e2d</p> <p></p> <p>\u3010\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\u3011</p> \u65b9\u6cd5 \u4ecb\u7ecd \u4f8b\u5b50\uff1a\u6251\u514b\u724c \u6700\u9ad8\u4f4d\u4f18\u5148 1. \u5148\u6309\u4e00\u79cd\u89c4\u5219\uff08 \u6700\u9ad8\u4f4d \uff09\u5c06\u6570\u636e\u5206\u6210\u82e5\u5e72\u4e2a\u5b50\u5e8f\u52172. \u518d\u5bf9\u6bcf\u4e2a\u5b50\u5e8f\u5217\u6309 \u6b21\u9ad8\u4f4d \u6392\u5e8f 1. \u5148\u51c6\u59074\u4e2a\u6876\uff0c\u6309 \u82b1\u8272 \uff08\u6700\u9ad8\u4f4d\uff09\u8fdb\u884c\u5206\u914d\uff1b2. \u518d\u5bf9\u6bcf\u79cd\u82b1\u827213\u5f20\u724c\u8fdb\u884c\u6392\u5e8f\uff08\u53ef\u4ee5\u91c7\u7528\u5176\u4ed6\u6392\u5e8f\u65b9\u6cd5\uff0c\u4e5f\u53ef\u91c7\u7528\u6700\u4f4e\u4f4d\u57fa\u6570\u6392\u5e8f\uff09 \u6700\u4f4e\u4f4d\u4f18\u5148 \u4e0d\u5fc5\u5206\u6210\u5b50\u5e8f\u5217 \uff0c\u6bcf\u6b21\u6392\u5e8f \u5168\u4f53\u5143\u7d20\u90fd\u53c2\u4e0e \u3002\u53ef\u4ee5\u4e0d\u901a\u8fc7\u6bd4\u8f83\uff0c\u800c\u901a\u8fc7\u201c\u5206\u914d\u201d\u548c\u201c\u6536\u96c6\u201d\u6765\u8fdb\u884c\u6392\u5e8f 1. \u51c6\u590713\u4e2a\u6876\uff0c\u6309**\u6570\u5b57**\u5c06\u724c\u5206\u914d\u523013\u4e2a\u6876\u4e2d\uff1b2. \u7136\u540e\u4ece\u7b2c\u4e00\u4e2a\u6876\u5f00\u59cb\u4f9d\u6b21\u6536\u96c6\uff1b3. \u518d\u5c06\u6536\u96c6\u597d\u7684\u724c\u6309**\u82b1\u8272**\u5206\u914d\u52304\u4e2a\u6876\u4e2d4. \u7136\u540e\u8fd8\u662f\u4ece\u7b2c\u4e00\u4e2a\u6876\u5f00\u59cb\u4f9d\u6b21\u6536\u96c6\u7ecf\u8fc7\u4e24\u6b21\u201c\u5206\u914d\u201d\u548c\u201c\u6536\u96c6\u201d\u64cd\u4f5c\uff0c\u6700\u7ec8\u4f7f\u724c\u6709\u5e8f <p>\u3010 \u6700\u4f4e\u4f4d\u4f18\u5148\u57fa\u6570\u6392\u5e8f \u7528\u4e8e\u6570\u5b57\u6392\u5e8f\u7684\u6b65\u9aa4\u3011\u4ece \u6700\u4f4e\u4f4d \u5f00\u59cb\u57fa\u6570\u6392\u5e8f</p> <ol> <li>\u51c6\u590710\u4e2a\u6876\uff08\u5148\u8fdb\u5148\u51fa\u7684\u961f\u5217\uff0c\u4ece\u6876\u7684\u4e0a\u9762\u8fdb\uff0c\u4e0b\u9762\u51fa\uff09</li> <li>\u6309\u5173\u952e\u5b57\u7684 \u4e2a\u4f4d \uff0c\u5206\u6d41\u523010\u4e2a\u6876\u4e2d\uff0c\u7136\u540e\u518d\u6309\u987a\u5e8f\u6536\u96c6\u5143\u7d20</li> <li>\u6309\u5173\u952e\u5b57\u7684 \u5341\u4f4d \uff0c\u5206\u6d41\u5230\u6876\u4e2d\uff0c\u7136\u540e\u518d\u6309\u987a\u5e8f\u6536\u96c6\u5143\u7d20</li> <li>\u4e00\u76f4\u4e0b\u53bb\uff0c\u76f4\u5230\u6570\u5b57\u6700\u5927\u503c\u7684\u6700\u9ad8\u4f4d</li> </ol> <p>\u3010\u7279\u6b8a\u7b26\u53f7\u3011</p> <ol> <li>n\uff1a\u4e3a\u5e8f\u5217\u4e2d\u5143\u7d20\u7684\u4e2a\u6570</li> <li>d\uff1a\u4e3a\u5143\u7d20\u7684\u5173\u952e\u5b57\u4f4d\u6570\uff08\u5982930\uff0c\u6709\u4e09\u4f4d\u6570\uff0cd=3\uff09</li> <li>rd\uff1a\u5173\u952e\u5b57\u6bcf\u4e00\u4f4d\u7684\u53d6\u503c\u8303\u56f4\uff08\u5982\u5173\u952e\u5b57\u4e3a930\uff0c\u6bcf\u4e00\u4f4d\u7684\u53d6\u503c\u90fd0-9\uff0c\u6240\u4ee5rd=10\uff09</li> </ol> <p>\u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011\u5e73\u5747\u548c\u6700\u574f\u60c5\u51b5\u4e0b\u90fd\u662fO(d(n+rd))</p> <ol> <li>\u57fa\u6570\u6392\u5e8f\u7684\u6bcf\u4e00\u8d9f\u90fd\u8981\u8fdb\u884c\u201c\u5206\u914d\u201d\uff0c\u201c\u6536\u96c6\u201d \u2192 n+rd<ol> <li>\u5206\u914d\uff1a\u4f9d\u6b21\u5bf9\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u5173\u952e\u5b57\u8fdb\u884c\uff0c\u5373\u8981\u626b\u63cf\u6574\u4e2a\u5e8f\u5217 \u2192 n</li> <li>\u6536\u96c6\uff1a\u9700\u8981\u4f9d\u6b21\u5bf9\u6bcf\u4e2a\u6876\u8fdb\u884c\u6536\u96c6\uff0c\u800c\u6876\u7684\u6570\u91cf\u53d6\u51b3\u4e8e\u5173\u952e\u5b57\u7684\u53d6\u503c\u8303\u56f4 \u2192 rd</li> </ol> </li> <li>\u57fa\u6570\u6392\u5e8f\u9700\u8981d\u8d9f\uff08\u5173\u952e\u5b57\u7684\u4f4d\u6570\uff09  \u2192 d</li> </ol> <p>\u3010\u7a7a\u95f4\u590d\u6742\u5ea6\u3011O(rd)\uff1a\u6bcf\u4e2a\u6876\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u961f\u5217\uff0c\u9700\u8981\u5934\u5c3e\u6307\u9488\uff0c\u5171\u6709rd\u4e2a\u6876\uff0c\u6240\u4ee5\u9700\u89812rd\u4e2a\u5b58\u653e\u6307\u9488\u7684\u7a7a\u95f4</p> <p>\u3010\u8bc4\u4ef7\u3011\u57fa\u6570\u6392\u5e8f\u9002\u5408\u7684 \u5143\u7d20\u5f88\u591a \u7684\u60c5\u51b5\uff0c\u4f46\u7ec4\u6210\u5143\u7d20\u7684\u5173\u952e\u5b57\u7684 \u53d6\u503c\u8303\u56f4\u8f83\u5c0f \uff0c\u5982\u6570\u5b570-9\u662f\u53ef\u4ee5\u63a5\u53d7\u7684</p> <ul> <li>\u5982\u679c\u5173\u952e\u5b57\u53d6\u503c\u8303\u56f4\u5f88\u5927\uff0c\u6bd4\u598226\u4e2a\u5b57\u6bcd\uff0c\u5e76\u4e14\u5e8f\u5217\u4e2d\u5927\u591a\u6570\u5143\u7d20\u7684 \u6700\u9ad8\u4f4d\u5173\u952e\u5b57\u90fd\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u8fd9\u65f6\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 \u201c\u6700\u9ad8\u4f4d\u4f18\u5148\u6cd5\u201d\u3002\u5148\u6839\u636e\u6700\u9ad8\u4f4d\u6392\u6210\u82e5\u5e72\u5b50\u5e8f\u5217\uff0c\u7136\u540e\u5206\u522b\u5bf9\u8fd9\u4e9b\u5b50\u5e8f\u5217\u8fdb\u884c\u76f4\u63a5\u63d2\u5165\u6392\u5e8f</li> </ul>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E5%BD%92%E5%B9%B6%E7%B1%BB/","title":"\u5f52\u5e76\u7c7b","text":"<p>\u3010\u601d\u60f3\u3011\u5f52\u5e76\u6392\u5e8f\u53ef\u4ee5\u770b\u4f5c\u662f\u5206\u800c\u6cbb\u4e4b\u7684\u8fc7\u7a0b</p> <ol> <li>\u628a\u65e0\u5e8f\u5e8f\u5217\u5206\u6210\u597d\u51e0\u4e2a\u5b50\u5e8f\u5217\uff0c\u5148\u5bf9\u6bcf\u4e2a\u5b50\u5e8f\u5217\u5355\u72ec\u5904\u7406</li> <li>\u4e4b\u540e\u5c06\u5b50\u5e8f\u5217\u8fdb\u884c\u5f52\u5e76</li> </ol>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E5%BD%92%E5%B9%B6%E7%B1%BB/#_1","title":"\u4e8c\u8def\u5f52\u5e76\u6392\u5e8f","text":"<p>\u601d\u8def</p> <ol> <li>\u5c06n\u4e2a\u5143\u7d20\u7684\u65e0\u5e8f\u5e8f\u5217\u5206\u6210n\u4e2a\u5e8f\u5217\uff0c\u6240\u4ee5\u6bcf\u4e2a\u5e8f\u5217\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20</li> <li>\u6bcf\u4e2a\u5e8f\u5217\u4e24\u4e24\u5f52\u5e76\uff0c\u5f62\u6210\u51e0\u4e2a\u6709\u5e8f\u7684\u4e8c\u5143\u7ec4</li> <li>\u91cd\u590d\u7b2c\u4e8c\u6b65\uff0c\u76f4\u5230\u53ea\u5269\u4e0b\u4e00\u4e2a\u5e8f\u5217\u65f6\uff0c\u6392\u5e8f\u7ed3\u679c</li> </ol> <p></p> <p></p> <p>\u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011\u6574\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nlog2n)\uff0c\u5f52\u5e76\u7684\u8d9f\u6570\u4e3alog2n</p> <ol> <li>\u5f52\u5e76\u6392\u5e8f\u4e2d\u53ef\u9009\u7528merge()\u51fd\u6570\u4f5c\u4e3a\u201c\u5f52\u5e76\u64cd\u4f5c\u201d\u7684\u57fa\u672c\u64cd\u4f5c\uff0cmerge()\u7684\u4f5c\u7528\u662f\u5c06\u4e24\u4e2a\u6709\u5e8f\u5e8f\u5217\u5f52\u5e76\u6210\u4e00\u4e2a\u6574\u4f53\u6709\u5e8f\u7684\u5e8f\u5217</li> <li>\u5f52\u5e76\u64cd\u4f5c\u5373\u4e3a\u5c06\u5f85\u5f52\u5e76\u8868\u4e2d\u7684\u5143\u7d20\u590d\u5236\u5230\u4e00\u4e2a\u5b58\u50a8\u5f52\u5e76\u7ed3\u679c\u7684\u8868\u4e2d\u7684\u8fc7\u7a0b</li> <li>\u5728\u987a\u5e8f\u8868\u4e2d\uff0cmerge()\u51fd\u6570\u7684\u5f52\u5e76\u64cd\u4f5c\u6267\u884c\u6b21\u6570\u4e3a\u8981\u5f52\u5e76\u7684\u4e24\u4e2a\u5b50\u5e8f\u5217\u4e2d\u5143\u7d20\u4e2a\u6570\u4e4b\u548c</li> <li>\u5f52\u5e76\u64cd\u4f5c\u5982\u4e0b\uff1a<ul> <li>\u7b2c1\u8d9f\u5f52\u5e76\u9700\u8981\u6267\u884c2(n/2)=n\u6b21\u57fa\u672c\u64cd\u4f5c\uff08\u5176\u4e2d2\u4e3a\u4e24\u5b50\u5e8f\u5217\u5143\u7d20\u4e2a\u6570\u4e4b\u548c\uff0cn/2\u4e3a\u8981\u5f52\u5e76\u7684\u5b50\u5e8f\u5217\u5bf9\u7684\u4e2a\u6570\uff1b\u6bcf\u4e2a\u5b50\u5e8f\u5217\u5bf9\u6267\u884c\u4e00\u6b21merge()\u51fd\u6570\uff0c\u4e5f\u5c31\u662f2\u6b21\u57fa\u672c\u64cd\u4f5c\uff09</li> <li>\u7b2c2\u8d9f\u5f52\u5e76\u9700\u8981\u6267\u884c4(n/4)=n\u6b21\u57fa\u672c\u64cd\u4f5c</li> <li>\u7b2c3\u8d9f\u5f52\u5e76\u9700\u8981\u6267\u884c8(n/8)=n\u6b21\u57fa\u672c\u64cd\u4f5c</li> <li>\u7b2ck\u8d9f\u5f52\u5e76\u9700\u8981\u6267\u884c\\(2^k * n/2^k = n\\)\u6b21\u57fa\u672c\u64cd\u4f5c</li> <li>\u5f53\\(n/2^k=1\\)\u65f6\uff0c\u5373\u9700\u8981\u5f52\u5e76\u4e24\u4e2a\u5b50\u5e8f\u5217\u957f\u5ea6\u5747\u4e3a\u539f\u5e8f\u5217\u7684\u4e00\u822c\uff0c\u53ea\u9700\u8981\u6267\u884c\u4e00\u6b21merge()\u51fd\u6570\u5f52\u5e76\u6392\u5e8f\u5373\u53ef\u7ed3\u675f\u3002\u6b64\u65f6\uff0ck=log2n\uff0c\u5373\u603b\u5171\u9700\u8981\u8fdb\u884clog2n\u8d9f\u6392\u5e8f\uff0c\u6bcf\u8d9f\u6392\u5e8f\u6267\u884cn\u6b21\u57fa\u672c\u64cd\u4f5c</li> </ul> </li> <li>\u6574\u4e2a\u5f52\u5e76\u6392\u5e8f\u603b\u7684\u57fa\u672c\u64cd\u4f5c\u6267\u884c\u6b21\u6570\u4e3anlog2n\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(nlog2n)</li> </ol> <p>\u3010\u7a7a\u95f4\u590d\u6742\u5ea6\u3011\u5f52\u5e76\u6392\u5e8f\u9700\u8981\u8f6c\u5b58\u6574\u4e2a\u5f85\u6392\u5e8f\u5e8f\u5217\uff0c\u56e0\u6b64\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(n) </p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E6%8F%92%E5%85%A5%E7%B1%BB/","title":"\u63d2\u5165\u7c7b","text":""},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E6%8F%92%E5%85%A5%E7%B1%BB/#_1","title":"\u76f4\u63a5\u63d2\u5165\u6392\u5e8f","text":"<p>\u601d\u8def</p> <ol> <li>\u5c06\u6570\u7ec4\u5212\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u524d\u9762\u4e00\u90e8\u5206\u662f\u6709\u5e8f\u3001\u540e\u9762\u4e00\u90e8\u5206\u662f\u65e0\u5e8f</li> <li>\u6bcf\u8d9f\u5c06\u65e0\u5e8f\u5e8f\u5217\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u63d2\u5165\u5230\u6709\u5e8f\u5e8f\u5217\u5f53\u4e2d\u3002\u63d2\u5165\u8fc7\u7a0b\u4e2d\u4f34\u968f\u7740\u5143\u7d20\u7684\u79fb\u52a8</li> </ol> <p></p> <p></p> <ol> <li>\u3010\u8bc4\u4ef7\u3011\u65f6\u95f4\u4e3b\u8981\u6d6a\u8d39\u5728\u4ea4\u6362\u4e0a</li> <li>\u3010\u9002\u7528\u3011\u9002\u5408\u521d\u59cb\u5e8f\u5217\u8f83\u6709\u5e8f\u7684\u60c5\u51b5</li> <li>\u3010\u6700\u574f\u3011\\(O(n^2)\\)\u6574\u4e2a\u5e8f\u5217\u662f\u9006\u5e8f\u7684</li> <li>\u3010\u6700\u597d\u3011\\(O(n)\\)\u5e8f\u5217\u5df2\u7ecf\u6709\u5e8f\uff0c\u9700\u8981\u6bd4\u8f83n-1\u6b21\uff0c\u65e0\u9700\u4ea4\u6362\u5143\u7d20</li> <li>\u3010\u5e73\u5747\\(\u3011\\)O(n^2)</li> <li>\u3010\u7a7a\u95f4\u3011\\(O(1)\\)</li> <li>\u3010\u7a33\u5b9a\u6027\u3011\u7a33\u5b9a</li> </ol>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E6%8F%92%E5%85%A5%E7%B1%BB/#_2","title":"\u6298\u534a\u63d2\u5165\u6392\u5e8f","text":"<p>\u76f4\u63a5\u63d2\u5165\u6cd5\u7684\u4f18\u5316\uff0c\u5728\u6709\u5e8f\u5e8f\u5217\u4e2d\u91c7\u7528\uff0c\u6298\u534a\u67e5\u627e\u7684\u65b9\u6cd5\uff0c\u6765\u5b9a\u4f4d\u6bcf\u6b21\u7684\u63d2\u5165\u4f4d\u7f6e</p> <p></p> <ol> <li>\u3010\u8bc4\u4ef7\u3011\u6bd4\u8f83\u6b21\u6570\u4e0e\u521d\u59cb\u5e8f\u5217\u65e0\u5149\uff0c\u6bcf\u6b21\u90fd\u8981\u6298\u534a\uff0c\u6bd4\u8f83\u6b21\u6570\u662f\u4e00\u5b9a\u7684\uff1b\u800c\u5173\u952e\u5b57\u79fb\u52a8\u6b21\u6570\u4e0e\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u662f\u4e00\u6837\u7684</li> <li>\u3010\u9002\u7528\u3011\u9002\u5408\u5173\u952e\u5b57\u8f83\u591a\u7684\u573a\u666f</li> <li>\u3010\u6700\u574f\u3011\\(O(n^2)\\)</li> <li>\u3010\u6700\u597d\u3011\\(O(nlog_2n)\\)</li> <li>\u3010\u5e73\u5747\u3011\\(O(n^2)\\)</li> <li>\u3010\u7a7a\u95f4\u3011\\(O(1)\\)</li> </ol>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E6%8F%92%E5%85%A5%E7%B1%BB/#_3","title":"\u5e0c\u5c14\u6392\u5e8f","text":"<p>\u5e0c\u5c14\u6392\u5e8f\uff0c\u53c8\u540d\u7f29\u5c0f\u589e\u91cf\u6392\u5e8f\u3002</p> <p>\u3010\u4f18\u5316\u3011\u7528\u589e\u91cf\u6765\u5212\u5206\u5b50\u5e8f\u5217\uff0c\u5728\u6bcf\u4e2a\u5b50\u5e8f\u5217\u4e2d\u8fdb\u884c\u63d2\u5165\u6392\u5e8f</p> <p></p> <p></p> <p>\u3010\u589e\u91cf\u9009\u53d6\u89c4\u5219\u3011</p> <ol> <li>\u589e\u91cf\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u503c\u4e00\u5b9a\u53d61</li> <li>\u589e\u91cf\u5e8f\u5217\u4e2d\u7684\u503c\u5e94\u5c3d\u91cf\u6ca1\u6709\u96641\u4e4b\u5916\u7684\u516c\u56e0\u5b50</li> </ol> <p>\u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011\u4e0e\u589e\u91cf\u9009\u53d6\u6709\u5173</p> <ol> <li>\u6bcf\u6b21\u5c06\u589e\u91cf\u9664\u4ee52\u5e76\u5411\u4e0b\u53d6\u6574\\(O(n^2)\\)</li> <li>\u589e\u91cf\\(2^k+1\\)\u300165\u300133\u300117\u30019\u30015\u30013\u30011\uff0c\u5373\\(O(n^{1.5})\\)</li> </ol> <p>\u3010\u7a7a\u95f4\u3011\\(O(1)\\)</p> <p>\u3010\u7a33\u5b9a\u6027\u3011\u4e0d\u7a33\u5b9a</p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/","title":"\u9009\u62e9\u7c7b","text":""},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/#_1","title":"\u7b80\u5355\u9009\u62e9\u6392\u5e8f","text":"<p>\u6bcf\u8d9f\u9009\u62e9\u51fa\u4e00\u4e2a\u6700\u503c\uff0c\u4e0e\u65e0\u5e8f\u5e8f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u4ea4\u6362</p> <p></p> <p></p> <ol> <li>\u3010\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u3011\\(O(n^2)\\)\uff1b\u4e24\u5c42\u5faa\u73af\u7684\u6267\u884c\u6b21\u6570\u548c\u521d\u59cb\u5e8f\u5217\u6ca1\u6709\u5173\u7cfb\uff0c\u6267\u884c\u6b21\u6570<code>(n-1+1)(n-1)/2=n(n-1)/2</code></li> <li>\u3010\u7a7a\u95f4\u590d\u6742\u5ea6\u3011\\(O(1)\\)</li> <li>\u3010\u8bc4\u4ef7\u3011\u6ca1\u6709\u5229\u7528\u4e0a\u6b21\u9009\u62e9\u65f6\u6bd4\u8f83\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u4e4b\u540e\u51fa\u73b0\u4e86\u6811\u5f62\u9009\u62e9\u6392\u5e8f\u548c\u5806\u6392\u5e8f</li> </ol> <p>\u7b80\u5355\u9009\u62e9\u6392\u5e8f\u7a33\u5b9a\u6027\u5206\u6790</p> \u60c5\u51b5\u4e00\uff1a\u4ea4\u6362\u7248\uff08\u9ed8\u8ba4\u7248\u672c\uff09 \u60c5\u51b5\u4e8c\uff1a\u63d2\u5165\u7248\uff08\u5982\u679c\u6709\u7279\u6b8a\u4ea4\u4ee3\uff09 \u8bf4\u660e <code>4(1)\u30013\u30014(2)\u30011\u30015</code> \u9009\u62e9\u51fa\u6700\u5c0f\u503c1\uff0c\u548c4(1)\u4ea4\u6362<code>1\u30013\u30014(2)\u30014(1)\u30015</code> \u9009\u51fa\u7684\u6700\u503c\u63d2\u5165\u5230\u6709\u5e8f\u5e8f\u5217\u4e2d \u7a33\u5b9a\u6027 \u4e0d\u7a33\u5b9a \u7a33\u5b9a \u9002\u5408\u60c5\u51b5 \u6570\u7ec4 \u94fe\u8868"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/#_2","title":"\u6811\u5f62\u9009\u62e9\u6392\u5e8f","text":"<p>\u53c8\u79f0\u9526\u6807\u8d5b\u6392\u5e8f</p> <p>\u601d\u8def</p> <ol> <li>\u6709n\u4e2a\u5f85\u6392\u5e8f\u7684\u5143\u7d20\uff0c\u628a\u5b83\u4eec\u4e24\u4e24\u4e00\u7ec4\u8fdb\u884c\u6bd4\u8f83\uff0c\u53d6\u51fa\u8f83\u5c0f\u7684</li> <li>\u7136\u540e\u5728\u8fd9n/2\u4e2a\u8f83\u5c0f\u8005\u4e2d\u518d\u4e24\u4e24\u4e00\u7ec4\u8fdb\u884c\u6bd4\u8f83\uff0c\u53d6\u51fa\u8f83\u5c0f\u7684</li> <li>\u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u76f4\u5230\u53d6\u51fa\u6700\u5c0f\u5143\u7d20</li> <li>\u8fd9\u4e2a\u8fc7\u7a0b\u7528\u4e00\u68f5\u6ee1\u4e8c\u53c9\u6811\u8868\u793a\uff0c\u5728\u9009\u51fa\u6700\u5c0f\u5173\u5143\u7d20\u540e\uff0c\u5c06\u8fd9\u4e2a\u5143\u7d20\u5bf9\u5e94\u7684\u53f6\u5b50\u8282\u70b9\u7684\u503c\u7f6e\u4e3a\u221e\uff0c\u7136\u540e\u628a\u4e0d\u4e3a\u221e\u7684\u5144\u5f1f\u8282\u70b9\u79fb\u5230\u7236\u8282\u70b9\u7684\u4f4d\u7f6e</li> </ol> <p></p> <ol> <li>\u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011\\(O(nlogn)\\)\uff1b\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a<code>[log2n]+1</code>\uff0c\u6240\u4ee5\u6bcf\u9009\u51fa\u4e00\u4e2a\u6700\u5c0f\u5143\u7d20\u9700\u8981\u8fdb\u884c[log2n][log2n]\u6b21\u6bd4\u8f83\uff0c\u79fb\u52a8\u5143\u7d20\u7684\u6b21\u6570\u5c0f\u4e8e\u7b49\u4e8e\u6bd4\u8f83\u6b21\u6570</li> <li>\u3010\u8bc4\u4ef7\u3011\u8fd9\u79cd\u6392\u5e8f\u65b9\u6cd5\u8f85\u52a9\u5b58\u50a8\u7a7a\u95f4\u8f83\u591a\u3001\u548c\u201c\u6700\u5927\u503c\u201d\u8fdb\u884c\u591a\u4f59\u7684\u6bd4\u8f83\u7b49\u7f3a\u70b9\u3002\u5728\u6b64\u57fa\u7840\u4e0a\u6539\u8fdb\u8bde\u751f\u4e86\u5806\u6392\u5e8f</li> </ol>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/#_3","title":"\u5806\u6392\u5e8f","text":"<p>\u7528\u5806\u6765\u9009\u62e9\u6700\u503c</p> <p></p> <p></p> <ol> <li>\u3010\u7a7a\u95f4\u590d\u6742\u5ea6\u3011\u5c31\u5730\u5efa\u5806\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(1)</li> <li>\u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011\\(O(nlog_2n)\\) </li> </ol>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/%E5%A0%86%E6%8E%92%E5%BA%8F/","title":"\u5806\u6392\u5e8f","text":"","tags":["\u5806","\u4e8c\u53c9\u5806","\u5806\u6392\u5e8f","Top N"]},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/%E5%A0%86%E6%8E%92%E5%BA%8F/#1","title":"1 \u4e8c\u53c9\u5806","text":"<p>\u3010\u5806\u3011\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u662fn\u53c9</p> <p>\u3010\u4e8c\u53c9\u5806\u3011\u53ef\u4ee5\u628a\u5806\u770b\u6210\u662f\u4e00\u9897\u5b8c\u5168\u4e8c\u53c9\u6811</p> <ol> <li>\u3010\u5806\u9876\u3011\u5806\u7684\u6839\u7ed3\u70b9\u79f0\u4e3a\u5806\u9876\uff0c\u4e14 **\u6839\u7ed3\u70b9**\u7684\u6743\u503c\u662f\u6700\u503c</li> <li>\u4efb\u4f55\u4e00\u4e2a \u975e\u53f6\u5b50\u7ed3\u70b9 \u7684\u503c\u90fd\u4e0d\u5927\u4e8e\uff08\u6216\u4e0d\u5c0f\u4e8e\uff09\u5176\u5de6\u53f3\u5b69\u5b50\u7ed3\u70b9\u7684\u503c</li> </ol> \u5206\u7c7b \u8bf4\u660e \u56fe \u5927\u9876\u5806\uff08\u6700\u5927\u5806\uff09 \u7236\u4eb2\u5927\u5b69\u5b50\u5c0f\uff1b\u6839\u7ed3\u70b9\u662f\u6700\u5927\u503c \u5c0f\u9876\u5806\uff08\u6700\u5c0f\u5806\uff09 \u5b69\u5b50\u5927\u7236\u4eb2\u5c0f\uff1b\u6839\u7ed3\u70b9\u662f\u6700\u5c0f\u503c","tags":["\u5806","\u4e8c\u53c9\u5806","\u5806\u6392\u5e8f","Top N"]},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/%E5%A0%86%E6%8E%92%E5%BA%8F/#11","title":"1.1 \u6784\u5efa\u4e8c\u53c9\u5806","text":"<p>\u3010\u6784\u5efa\u4e8c\u53c9\u6811\u3011\u628a\u65e0\u5e8f\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u8c03\u6574\u4e3a\u4e8c\u53c9\u5806</p> <p>\u3010\u505a\u6cd5\u3011\u8ba9\u6240\u6709\u975e\u53f6\u5b50\u7ed3\u70b9\u4f9d\u6b21\u4e0b\u6c89</p> \u793a\u4f8b\uff08\u6700\u5c0f\u5806\uff09 \u8bf4\u660e \u65e0\u5e8f\u7684\u5b8c\u5168\u4e8c\u53c9\u6811 \u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u7ed3\u70b9p\u5f00\u59cb \u4ece10\u5f00\u59cb\uff0c\u5982\u679c10\uff1e\u5de6\u53f3\u5b69\u5b50\uff0c\u53d6\u6700\u5c0f\u7684\u4e00\u4e2a\uff0c\u4e0b\u6c89\u3002\u91cd\u590d\u5904\u740610\uff0c\u76f4\u5230\u4e0b\u6c89\u4e0d\u4e86\u4e86 p\u524d\u79fb\u4e00\u4f4d \u8f6e\u5230\u8282\u70b93\uff0c\u548c\u4e0a\u9762\u4e00\u6837\uff0c\u4e0b\u6c89\u3002\u91cd\u590d\u5904\u7406\u7ed3\u70b93\uff0c\u76f4\u5230\u4e0b\u6c89\u4e0d\u4e86 p\u524d\u79fb\u4e00\u4f4d \u8f6e\u5230\u7ed3\u70b91\uff0c\u4f46\u7ed3\u70b91&lt;6,1&lt;5\uff0c\u4e0d\u505a\u5904\u7406 p\u524d\u79fb\u4e00\u4f4d \u8f6e\u5230\u8282\u70b97\uff0c\u6bd4\u8f837\u7684\u5b69\u5b50\uff0c\u53d6\u6700\u5c0f\u7684\u90a3\u4e2a\u5b69\u5b50\uff0c\u4e0b\u6c89 p\u524d\u79fb\u4e00\u4f4d \u7ee7\u7eed\u5904\u74067\uff0c\u76f4\u5230\u4e0b\u6c89\u4e0d\u4e86 \u76f4\u5230\u5904\u7406\u5b8c\u6240\u6709\u7684\u7ed3\u70b9","tags":["\u5806","\u4e8c\u53c9\u5806","\u5806\u6392\u5e8f","Top N"]},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/%E5%A0%86%E6%8E%92%E5%BA%8F/#12","title":"1.2 \u63d2\u5165\u7ed3\u70b9","text":"<p>\u3010\u63d2\u5165\u7ed3\u70b9\u3011\u63d2\u5728\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff1b\u7136\u540e\u548c\u7236\u4eb2\u6bd4\u8f83\uff1b\u4e0d\u6ee1\u8db3\u6761\u4ef6\u5c31\u4e0a\u6d6e</p> \u793a\u4f8b\uff08\u6700\u5c0f\u5806\uff09 \u8bf4\u660e \u5728\u6700\u540e\u4e00\u4f4d\u63d2\u5165\u65b0\u7ed3\u70b9 \u63d2\u5165\u4e00\u4e2a\u65b0\u7ed3\u70b90 \u4e0a\u6d6e \u7ed3\u70b90\u548c\u5b83\u7684\u7236\u8282\u70b95\u6bd4\u8f83\uff1a0&lt;5\uff0c\u4e0a\u6d6e\uff08\u548c\u7236\u8282\u70b9\u4ea4\u6362\u4f4d\u7f6e\uff09 \u7ee7\u7eed\u548c\u7236\u4eb2\u6bd4\u8f83\uff1a0\uff1c3\uff0c\u7ee7\u7eed\u4e0a\u6d6e \u4e0a\u6d6e\u81f3\u6ee1\u8db3\u6761\u4ef6 \u6700\u7ec8\u6d6e\u5230\u4e86\u5806\u9876\u4f4d\u7f6e","tags":["\u5806","\u4e8c\u53c9\u5806","\u5806\u6392\u5e8f","Top N"]},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/%E5%A0%86%E6%8E%92%E5%BA%8F/#13","title":"1.3 \u5220\u9664\u7ed3\u70b9","text":"<p>\u3010\u5220\u9664\u7ed3\u70b9\u3011\u5220\u9664\u5806\u9876\u7684\u7ed3\u70b9\uff1b\u628a\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u8865\u5145\u5230\u5806\u9876\uff1b\u5bf9\u5806\u9876\u8fdb\u884c\u4e0b\u6c89\u5904\u7406</p> \u793a\u4f8b\uff08\u6700\u5c0f\u5806\uff09 \u8bf4\u660e \u5220\u9664\u5806\u9876 \u628a\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u8865\u4e0a \u8ba9\u65b0\u7ed3\u70b9\u4e0b\u6c89 10\u548c\u5b83\u5de6\u53f3\u5b69\u5b50\u6bd4\u8f83\uff1a10&lt;3\uff0c10&lt;2\uff0c2&lt;3\uff1b\u53d6\u6700\u5c0f\u7684\u90a3\u4e2a\u5b69\u5b502\uff0c\u4e0b\u6c89 \u7ee7\u7eed\u4e0b\u6c89\uff0c\u76f4\u5230\u6ee1\u8db3\u5806\u7684\u6761\u4ef6","tags":["\u5806","\u4e8c\u53c9\u5806","\u5806\u6392\u5e8f","Top N"]},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/%E5%A0%86%E6%8E%92%E5%BA%8F/#2","title":"2 \u5806\u6392\u5e8f","text":"<p>\u3010\u5806\u6392\u5e8f\u3011\u5806\u6392\u5e8f\u662f**\u7b80\u5355\u9009\u62e9\u6392\u5e8f**\u7684**\u6539\u826f\u7248**\uff0c\u5b83\u4f7f\u7528**\u5806**\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u91cd\u590d\u5229\u7528\u4e86\u4e4b\u524d\u7684\u6bd4\u8f83\u7ed3\u679c\uff0c\u51cf\u5c11\u4e86\u65f6\u95f4\u590d\u6742\u5ea6</p> <p>\u3010\u601d\u60f3\u3011\u7528**\u5806**\u6765\u9009\u62e9\u51fa\u6bcf\u8d9f\u7684\u6700\u503c\uff1b\u518d\u4ea4\u6362\u5230\u65e0\u5e8f\u5e8f\u5217\u7684\u8fb9\u754c\u4e0a\uff0c\u8ba9\u5b83\u5f52\u5165\u5230\u6709\u5e8f\u5e8f\u5217</p> <p>\u3010\u5806\u6392\u5e8f\u8fc7\u7a0b\u3011</p> <ol> <li>\u5efa\u5806\uff1b</li> <li>\u5220\u9664\u7ed3\u70b9\uff0c\u52a0\u5165\u5230\u6709\u5e8f\u5e8f\u5217\u4e2d\uff1b</li> <li>\u91cd\u590d2\uff0c\u76f4\u5230\u5806\uff08\u65e0\u5e8f\u5e8f\u5217\uff09\u4e2d\u65e0\u5143\u7d20</li> </ol> <p></p>","tags":["\u5806","\u4e8c\u53c9\u5806","\u5806\u6392\u5e8f","Top N"]},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/%E5%A0%86%E6%8E%92%E5%BA%8F/#21","title":"2.1 \u4ee3\u7801","text":"<p>\u3010\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u987a\u5e8f\u5b58\u50a8\u3011</p> \u4e0b\u6807\u4ece0\u5f00\u59cb \u4e0b\u6807\u4ece1\u5f00\u59cb n=6  n=10","tags":["\u5806","\u4e8c\u53c9\u5806","\u5806\u6392\u5e8f","Top N"]},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/%E5%A0%86%E6%8E%92%E5%BA%8F/#211","title":"2.1.1 \u7528\u5c0f\u9876\u5806\u8fdb\u884c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f","text":"<pre><code>/* arr[]\u4e2d\u5143\u7d20\u4ece0\u5f00\u59cb\u5b58\u50a8 */\n// \u82e5arr[low]\u4e0d\u6ee1\u8db3\u5806\u5b9a\u4e49\uff0c\u5219\u5728[low, high]\u8303\u56f4\u5185\u8c03\u6574\uff08\u4e0b\u6c89\uff09\nvoid Sift(int arr[], int low, int high) {\nint i=low;\nint j=2*i+1; //i\u7684\u5de6\u5b69\u5b50\nint tmp=arr[i]; //\u5c06\u8981\u8c03\u6574\u7684\u5143\u7d20\u5907\u4efd\nwhile (j&lt;=high) {\n//\u5de6\u53f3\u5b69\u5b50\u53d6\u66f4\u5c0f\u7684\u90a3\u4e2a\uff08\u5c0f\u9876\u5806\uff09\nif (j&lt;high &amp;&amp; arr[j]&gt;arr[j+1]) //\u53f3\u5b69\u5b50\u6bd4\u8f83\u5c0f\n++j; //\u628aj\u6307\u5411\u53f3\u5b69\u5b50\nif (tmp&gt;arr[j]) { //\u5143\u7d20&gt;\u5b83\u7684\u5b69\u5b50\uff08\u5c0f\u9876\u5806\uff09\n//\u5143\u7d20\u4e0b\u6c89\narr[i]=arr[j];\ni=j;//i\u4e3a\u5143\u7d20\u4e0b\u6c89\u4e4b\u540e\u7684\u4f4d\u7f6e\nj=2*i+1; //j\u4e3ai\u7684\u5de6\u5b69\u5b50\n} else //\u5143\u7d20&lt;\u5b83\u7684\u5b69\u5b50\uff08\u5c0f\u9876\u5806\uff09\uff1a\u8c03\u6574\u7ed3\u675f\nbreak;\n}\narr[i]=tmp; //i\u8bb0\u4e3a\u5143\u7d20\u8c03\u6574\u4e4b\u540e\u7684\u4f4d\u7f6e\n}\n// \u5806\u6392\u5e8f\uff08\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff09\uff1aarr[]\u4ece0\u5f00\u59cb\u5b58\u50a8\nvoid HeapSort(int arr[], int n) {\nint i,tmp;\n// \u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u7ed3\u70b9\u5f00\u59cb\u8c03\u6574\nfor (i=n/2-1; i&gt;=0; --i)\nSift(arr, i, n-1);\n// \u5806\u6392\u5e8f\nfor (i=n-1; i&gt;=1; --i) { //\u4ece\u5c0f\u9876\u5806\u4e2d\u53d6n-1\u6b21\u5806\u9876\n// \u5806\u9876\u548c\u5806\u5c3e\u4ea4\u6362\ntmp=arr[0]; //\u53d6\u51fa\u5806\u9876\narr[0]=arr[i]; //\u5806\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u653e\u5230\u5806\u9876\narr[i]=tmp; //\u628a\u6b64\u8d9f\u7684\u6700\u503c\u653e\u5165\u5806\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\n// arr[i]\u5373\u53d8\u6210\u4e86\u6709\u5e8f\u5e8f\u5217\nSift(arr, 0, i-1); //\u8c03\u6574[0, i-1]\n}\n}\n</code></pre>","tags":["\u5806","\u4e8c\u53c9\u5806","\u5806\u6392\u5e8f","Top N"]},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/%E5%A0%86%E6%8E%92%E5%BA%8F/#212","title":"2.1.2 \u7528\u5927\u9876\u5806\u8fdb\u884c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f","text":"<pre><code>/* arr[]\u4e2d\u5143\u7d20\u4ece0\u5f00\u59cb\u5b58\u50a8 */\n// \u82e5arr[low]\u4e0d\u6ee1\u8db3\u5806\u5b9a\u4e49\uff0c\u5219\u5728[low, high]\u8303\u56f4\u5185\u8c03\u6574\uff08\u4e0b\u6c89\uff09\nvoid Sift(int arr[], int low, int high) {\nint i=low;\nint j=2*i+1; //i\u7684\u5de6\u5b69\u5b50\u7ed3\u70b9\nint tmp=arr[i]; //\u628a\u5c06\u8981\u8c03\u6574\u7684\u5143\u7d20\u5907\u4efd\nwhile (j&lt;=high) {\n// \u5927\u9876\u5806 -&gt; \u5de6\u53f3\u5b69\u5b50\u4e2d\u53d6\u66f4\u5927\u7684\u90a3\u4e2a\nif (j&lt;high &amp;&amp; arr[j]&lt;arr[j+1] ) //\u53f3\u5b69\u5b50\u6bd4\u8f83\u5927\n++j; //\u628aj\u6307\u5411\u53f3\u5b69\u5b50\nif (tmp&lt;arr[j]) { //\u5143\u7d20&lt;\u5b83\u7684\u5b69\u5b50\uff08\u5927\u9876\u5806\uff09\n//\u5143\u7d20\u4e0b\u6c89\narr[i]=arr[j];\ni=j; //i\u4e3a\u5143\u7d20\u4e0b\u6c89\u4e4b\u540e\u7684\u4f4d\u7f6e\nj=2*i+1; //j\u4e3ai\u7684\u5de6\u5b69\u5b50\n} else { //\u5143\u7d20&gt;\u5b83\u7684\u5b69\u5b50\uff1a\u8c03\u6574\u7ed3\u675f\nbreak;\n}\n}\narr[i]=tmp; //i\u8bb0\u4e3a\u5143\u7d20\u8c03\u6574\u4e4b\u540e\u7684\u4f4d\u7f6e\n}\n// \u5806\u6392\u5e8f\uff08\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff09\uff1aarr[]\u4ece0\u5f00\u59cb\u5b58\u50a8\nvoid HeapSort(int arr[], int n) {\nint i, tmp;\n// \u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u7ed3\u70b9\u5f00\u59cb\u8c03\u6574\nfor (i=n/2-1; i&gt;=0; --i) //\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9n\u7684\u7236\u4eb2   \nSift(arr, i, n-1);\n// \u5806\u6392\u5e8f\nfor (i=n-1; i&gt;=1; --i) { //\u4ece\u5927\u9876\u5806\u4e2d\u53d6n-1\u6b21\u6700\u503c\n// \u5806\u9876\u548c\u5806\u5c3e\u4ea4\u6362\ntmp=arr[0]; //\u4ece\u5927\u9876\u5806\u4e2d\u53d6\u51fa\u5806\u9876\uff08\u6700\u5927\u503c\uff09\narr[0]=arr[i];//\u5c06\u5806\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u653e\u5728\u5806\u9876\narr[i]=tmp; //\u5c06\u6700\u5927\u503c\u653e\u5165\u5927\u9876\u5806\u7684\u6700\u53f3\u8fb9\n// arr[i]\u5373\u52a0\u5165\u4e86\u6709\u5e8f\u5e8f\u5217\nSift(arr, 0, i-1); //\u8c03\u6574[0, i-1]-&gt;\u5927\u7684\u5728\u53f3\u8fb9-&gt;\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n}\n}\n</code></pre>","tags":["\u5806","\u4e8c\u53c9\u5806","\u5806\u6392\u5e8f","Top N"]},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/%E5%A0%86%E6%8E%92%E5%BA%8F/#22","title":"2.2 \u8bc4\u4ef7","text":"<p>\u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011O(nlog2n)</p> <ol> <li>\u5bf9\u4e8eSift()\u51fd\u6570\uff0c\u663e\u7136j\u8d70\u4e86\u4e00\u6761\u4ece\u5f53\u524d\u7ed3\u70b9\u5230\u53f6\u5b50\u7ed3\u70b9\u7684\u8def\u5f84\uff0c\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u4e3a \u2308log2(n+1) \u2309    \u5373\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u8c03\u6574\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(log2n)</li> <li>\u5bf9\u4e8eheapSort()\u51fd\u6570\uff0c\u57fa\u672c\u64cd\u4f5c\u603b\u6b21\u6570\u5e94\u8be5\u662f\u4e24\u4e2a\u5e8f\u5217\u7684for\u5faa\u73af\u4e2d\u57fa\u672c\u64cd\u4f5c\u6b21\u6570\u76f8\u52a0</li> <li>\u7b2c\u4e00\u4e2a\u5faa\u73af\u7684\u57fa\u672c\u64cd\u4f5c\u6b21\u6570\u4e3aO(log2n)*n/2</li> <li>\u7b2c\u4e8c\u6b21\u5faa\u73af\u7684\u57fa\u672c\u64cd\u4f5c\u6b21\u6570\u4e3aO(log2n)*(n-1)</li> <li>\u6574\u4e2a\u7b97\u6cd5\uff1a<code>O(log2n)*n/2 + O(log2n)*(n-1)=O(nlog2n)</code></li> </ol> <p>\u3010\u7a7a\u95f4\u590d\u6742\u5ea6\u3011O(1)</p> <p>\u5806\u6392\u5e8f\u6240\u7528\u7684\u5806\uff08\u4e8c\u53c9\u6811\uff09\uff0c\u662f\u5728\u6570\u7ec4\u7684\u672c\u8eab\u4e0a\u8fdb\u884c\u7684\uff0c\u6ca1\u6709\u7528\u4ec0\u4e48\u8f85\u52a9\u7a7a\u95f4</p> <p>\u3010\u8bc4\u4ef7\u3011</p> <ol> <li>\u5806\u6392\u5e8f\u5728 \u6700\u574f\u60c5\u51b5 \u4e0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662fO(nlog2n)\uff0c\u8fd9\u662f\u76f8\u5bf9 \u5feb\u901f\u6392\u5e8f \u7684\u6700\u5927\u4f18\u70b9</li> <li>\u5806\u6392\u5e8f\u7684 \u7a7a\u95f4\u590d\u6742\u5ea6 O(1)\uff0c\u5728\u6240\u6709 \u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nlog2n)\u4e2d\u662f\u6700\u5c0f\u7684</li> <li>\u5806\u6392\u5e8f\u9002\u5408\u7684\u573a\u666f\u662f\u5173\u952e\u5b57\u6570\u5f88\u591a\u7684\u60c5\u51b5\uff0c\u5982\u679c\u8bb0\u5f55\u6570\u8f83\u5c11\uff0c\u5219\u4e0d\u63d0\u5021\u4f7f\u7528</li> </ol> <p>\u3010\u7ecf\u5178\u4f8b\u5b50\u3011\u4ece10 000\u4e2a\u5173\u952e\u5b57\u4e2d\u9009\u51fa\u524d10\u4e2a\u6700\u5c0f\u7684</p>","tags":["\u5806","\u4e8c\u53c9\u5806","\u5806\u6392\u5e8f","Top N"]},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E7%B1%BB/%E5%A0%86%E6%8E%92%E5%BA%8F/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u5929\u52e4\u6570\u636e\u7ed3\u6784\u9ad8\u5206\u7b14\u8bb0</li> </ol>","tags":["\u5806","\u4e8c\u53c9\u5806","\u5806\u6392\u5e8f","Top N"]},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F%E5%BD%92%E5%B9%B6%E7%AE%97%E6%B3%95/","title":"\u5916\u90e8\u6392\u5e8f\u5f52\u5e76\u7b97\u6cd5","text":"<p>todo: \u6574\u7406\u7b14\u8bb0\u3002https://geodoer.blog.csdn.net/article/details/83076081</p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F%E5%BD%92%E5%B9%B6%E7%AE%97%E6%B3%95/#_1","title":"\u5916\u90e8\u6392\u5e8f\u5f52\u5e76\u7b97\u6cd5","text":"\u5916\u90e8\u6392\u5e8f\u5f52\u5e76\u64cd\u4f5c\u6cd5 \u6d89\u53ca\u7684\u5185\u5bb9 \u8bf4\u660e \u6587\u4ef6\u5185\u5bb9 \u6587\u4ef6\u4e2d\u5b58\u6709n\u4e2a\u6570\uff0c\u4f46\u5185\u5b58\u5927\u5c0f\u53ea\u80fd\u5b58\u653em\u4e2a\u6570 <code>15 19 04 83 12 27 11 25 16 34 26 07 10 90 06</code> \u7b2c\u4e00\u9636\u6bb5 \u7f6e\u6362-\u9009\u62e9\u6392\u5e8f \u5c06\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u5904\u7406\u6210\u591a\u4e2a \u6709\u5e8f\u5b50\u5e8f\u5217 \u3010\u7b2c\u4e00\u79cd\u7ed3\u679c\u3011\u6bcf\u4e2a\u5b50\u5e8f\u5217\u957f\u5ea6\u76f8\u540c\uff1a<code>4 12 15 19 83 | 11 16 25 27 34 | 6 7 10 26 90</code>\u3010\u7b2c\u4e8c\u79cd\u7ed3\u679c\u3011\u6bcf\u4e2a\u5b50\u5e8f\u5217\u957f\u5ea6\u4e0d\u540c\uff1a<code>4 12 15 19 25 27 34 83 | 7 10 11 16 26 90 | 6</code> \u53ef\u9009\u6b65\u9aa4 \u6700\u4f73\u5f52\u5e76\u6811\uff08\u751f\u6210\u54c8\u592b\u66fc\u6811\u7684\u65b9\u6cd5\uff09 \u8ba1\u7b97\u6700\u4f18\u7684\u5f52\u5e76\u65b9\u6848 \u6587\u4ef6\u4e2d\u751f\u6210\u4e863\u4e2a\u6709\u5e8f\u5b50\u5e8f\u5217\uff0c\u4f46\u957f\u5ea6\u90fd\u4e0d\u76f8\u540c\u3002\u5728\u8fdb\u884c\u4e8c\u8def\u5f52\u5e76\u65f6\uff0c\u7b56\u7565\u5c31\u6709\u5f88\u591a\uff1a12\u5148\u5f52\u5e76\uff1b\u518d\u548c3\uff1b13\u5148\u5f52\u5e76,\u518d\u548c2\uff1b23\u5148\u5f52\u5e76, \u518d\u548c1\u5f52\u5e76\u65b9\u6848\u5f88\u591a\uff0c\u5982\u4f55\u53d6\u6700\u4f18\u7684\u5f52\u5e76\u65b9\u6848\u5462\uff1f \u7b2c\u4e8c\u9636\u6bb5 \u8d25\u8005\u6811\uff08\u9009\u62e9\u6bcf\u4e2a\u5f52\u5e76\u6bb5\u7684\u6700\u5c0f\u503c\uff09 \u5bf9\u6587\u4ef6\u4e2d\u7684 \u591a\u4e2a\u6709\u5e8f\u5b50\u5e8f\u5217 \u8fdb\u884c\u5f52\u5e76\u64cd\u4f5c <code>4 6 7 10 11 12 15 16 19 25 26 27 34 83 90</code>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F%E5%BD%92%E5%B9%B6%E7%AE%97%E6%B3%95/#_2","title":"\u6027\u80fd\u5206\u6790","text":"<p>\u3010\u7a7a\u95f4\u590d\u6742\u5ea6\u3011O(1)</p> <p>\u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011</p> \u6b65\u9aa4 \u8bf4\u660e \u65f6\u95f4\u590d\u6742\u5ea6 I/O\u64cd\u4f5c \u3010\u7b2c\u4e00\u9636\u6bb5\u3011\u521d\u59cb\u5f52\u5e76\u6bb5\u7684\u751f\u6210 \u7f6e\u6362\u9009\u62e9\u6392\u5e8f \u9009\u62e9\u6700\u503c\u90a3\u4e00\u6b65\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8981\u6839\u636e\u8003\u8bd5\u8981\u6c42\u9009\u62e9\u7b97\u6cd5\u800c\u5b9a \u6240\u6709\u8bb0\u5f55\u90fd\u8981\u8fdb\u884c\u4e24\u6b21I/O\u64cd\u4f5c \u3010\u53ef\u9009\u9636\u6bb5\u3011\u6700\u4f73\u5f52\u5e76\u6811 \u751f\u6210\u54c8\u592b\u66fc\u6811 \u3010\u7b2c\u4e8c\u9636\u6bb5\u3011\u9009\u62e9\u6700\u503c \u7528\u8d25\u8005\u6811\u9009\u62e9\u6700\u503c 1. \u3010\u8d25\u8005\u6811\u5efa\u6811\u3011O(klog2k)2. k\u8def\u5f52\u5e76\u7684\u8d25\u8005\u6811\u9ad8\u5ea6\u2308log2k\u2309+1\uff0c\u4ecek\u4e2a\u8bb0\u5f55\u4e2d\u9009\u62e9\u6700\u503c\u9700\u8981\u8fdb\u884c\u2308log2k\u2309\u6b64\u6bd4\u8f83\uff0c\u5373\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(log2k) \u3010\u7b2c\u4e8c\u9636\u6bb5\u3011\u5f52\u5e76 \u5f52\u5e76 m\u4e2a\u521d\u59cb\u5f52\u5e76\u6bb5\u8fdb\u884ck\u8def\u5f52\u5e76\uff0c\u5f52\u5e76\u7684\u8d9f\u6570\u2308logkm\u2309 \u6bcf\u6b21\u5f52\u5e76\uff0c\u6240\u6709\u8bb0\u5f55\u90fd\u8981\u8fdb\u884c\u4e24\u6b21I/O\u64cd\u4f5c"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F%E5%BD%92%E5%B9%B6%E7%AE%97%E6%B3%95/#-","title":"\u7f6e\u6362-\u9009\u62e9\u6392\u5e8f","text":""},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F%E5%BD%92%E5%B9%B6%E7%AE%97%E6%B3%95/#_3","title":"\u6700\u4f73\u5f52\u5e76\u6811","text":"<p>\u3010I/O\u6b21\u6570\u8ba1\u7b97\u65b9\u6cd5<code>I/O\u6b21\u6570=\u5e26\u6743\u8def\u5f84\u957f\u5ea6*2</code>\u3011 I/O\u6b21\u6570=2*WPL=446</p> <p></p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AC%94%E8%AE%B0/%E6%8E%92%E5%BA%8F/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F/%E5%A4%96%E9%83%A8%E6%8E%92%E5%BA%8F%E5%BD%92%E5%B9%B6%E7%AE%97%E6%B3%95/#_4","title":"\u8d25\u8005\u6811","text":""},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E6%8E%92%E5%BA%8F/%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%AC%20K%20%E5%A4%A7%E6%95%B4%E6%95%B0/","title":"\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2c K \u5927\u6574\u6570","text":"<p>1985. \u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2c K \u5927\u6574\u6570 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E6%8E%92%E5%BA%8F/%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%AC%20K%20%E5%A4%A7%E6%95%B4%E6%95%B0/#_1","title":"\u9898\u76ee","text":"<p>\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2cK\u5927\u6574\u6570</p> <ol> <li>\u6570\u7ec4\u4e0d\u662f\u4ee5\u6574\u6570\u7684\u5f62\u5f0f\u7ed9\u51fa\uff0c\u800c\u662f\u5b57\u7b26\u4e32\uff08\u524d\u7f00\u6ca1\u67090\uff09</li> <li>\u6570\u7ec4\u7684\u503c\u53ef\u80fd\u4f1a\u91cd\u590d\uff0c\u800c\u4e14\u8981\u8003\u8651\u91cd\u590d\uff0c\u4e0d\u80fd\u53bb\u91cd</li> </ol> <p>\u6570\u636e\u7ed3\u6784\u4e0e\u51fd\u6570</p> <pre><code>class Solution {\npublic:\nstring kthLargestNumber(vector&lt;string&gt;&amp; nums, int k) {\n//todo\n}\n};\n</code></pre>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E6%8E%92%E5%BA%8F/%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%AC%20K%20%E5%A4%A7%E6%95%B4%E6%95%B0/#_2","title":"\u89e3\u9898\uff1a\u6392\u5e8f","text":"<pre><code>class Solution {\npublic:\nstring kthLargestNumber(vector&lt;string&gt;&amp; nums, int k) {\n// \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u5728 s1 \u5bf9\u5e94\u7684\u6574\u6570\u8f83\u5927\u65f6\u8fd4\u56de true\uff0c\u53cd\u4e4b\u8fd4\u56de false\nauto cmp = [](const string&amp; s1, const string&amp; s2) -&gt; bool{\n// \u9996\u5148\u6bd4\u8f83\u5b57\u7b26\u4e32\u957f\u5ea6\nif (s1.size() &gt; s2.size()){\nreturn true;\n}\nelse if (s1.size() &lt; s2.size()){\nreturn false;\n}\nelse{\n// \u957f\u5ea6\u76f8\u7b49\u65f6\u6bd4\u8f83\u5b57\u7b26\u4e32\u5b57\u5178\u5e8f\u5927\u5c0f\nreturn s1 &gt; s2;\n}\n};\nsort(nums.begin(), nums.end(), cmp);\nreturn nums[k-1];\n}\n};\n</code></pre>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E6%8E%92%E5%BA%8F/%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%AC%20K%20%E5%A4%A7%E6%95%B4%E6%95%B0/#_3","title":"\u89e3\u9898\uff1a\u5806\u6392\u5e8f","text":"<p>\u9762\u8bd5\u9ad8\u9891\u7b97\u6cd5\u771f\u9898 | \u963f\u79c0\u7684\u5b66\u4e60\u7b14\u8bb0 (interviewguide.cn)</p> <pre><code>#include&lt;queue&gt;\n#include&lt;vector&gt;\n//\u7528\u5927\u9876\u5806\u8fdb\u884c\u6392\u5e8f\uff0c\u518d\u9009\u7b2ck\u5927\nclass Solution {\npublic:\n//\u7b2ck\u5927 =&gt; \u5927\u9876\u5806 =&gt; \u5927\u9876\u5806\u8981\u5347\u5e8f =&gt; \u5347\u5e8f\u7684\u8bdd\u8981\u4f20less\u51fd\u6570\n//less\u51fd\u6570 =&gt; \u8981\u6ee1\u8db3\u4e25\u683c\u5f31\u5e8f =&gt; \u5373&lt;\u8fd4\u56detrue; &gt;=\u7684\u60c5\u51b5\u8fd4\u56defalse\nstruct LessCompare\n{\n//\u5bf9\u6bd4\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u4f18\u5148\u7ea7\nbool operator()(const string&amp; lhs, const string&amp; rhs)\n{\nauto lhs_size = lhs.size();\nauto rhs_size = rhs.size();\nif(lhs_size != rhs_size) {\n//\u957f\u7684\u8d8a\u5927\nreturn lhs_size &lt; rhs_size;\n} else { //\u76f8\u7b49\uff0c\u7528\u5b57\u7b26\u4e32\u5224\u65ad\u5373\u53ef\nreturn lhs &lt; rhs;\n}\n}\n};\nstring kthLargestNumber(vector&lt;string&gt;&amp; nums, int k) {\n//C++\u4e2d\u7684\u4f18\u5148\u961f\u5217\uff0c\u5176\u5185\u90e8\u5b9e\u73b0\u662f\u5927\u9876\u5806\nstd::priority_queue&lt;string, std::vector&lt;string&gt;, LessCompare&gt; queue;\n//\u4f9d\u6b21\u653e\u5165\uff0c\u4f18\u5148\u961f\u5217\u662f\u4e0d\u53bb\u91cd\u7684\nfor(const auto&amp; item : nums) {\nqueue.emplace(item);\n}\n//\u82e5k==1\uff0c\u5373\u7b2c1\u5927\uff0c\u5c31\u4e0d\u8981pop =&gt; \u56e0\u6b64\u662f\u5148--\nwhile(--k) {\nqueue.pop();\n}\n//\u53d6\u6808\u9876\nreturn queue.top();\n}\n};\n</code></pre>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E6%8E%92%E5%BA%8F/%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%AC%20K%20%E5%A4%A7%E6%95%B4%E6%95%B0/#_4","title":"\u89e3\u9898\uff1a\u5feb\u6392","text":"<p>todo: \u8d85\u65f6\uff0c\u8fd8\u9700\u8981\u4f18\u5316</p> <pre><code>//\u7528\u5feb\u6392\uff0c\u53d6\u7b2c7\u5927\u7684\u5143\u7d20\u5373\u53ef\nclass Solution {\npublic:\n//lhs &lt;= rhs, return true\n//\u5426\u5219\uff0creturn false\nbool lessAndEqual(const std::string&amp; lhs, const std::string&amp; rhs) {\nauto lhs_size = lhs.size();\nauto rhs_size = rhs.size();\nif(lhs_size != rhs_size) {\n//\u957f\u7684\u8d8a\u5927\nreturn lhs_size &lt; rhs_size;\n} else { //\u76f8\u7b49\uff0c\u7528\u5b57\u7b26\u4e32\u5224\u65ad\u5373\u53ef\nreturn lhs &lt;= rhs;\n}\n}\n//\u5bf9arr\u6570\u7ec4\uff0c[low, high]\u8303\u56f4\u5185\u8fdb\u884c\u5feb\u6392\n// \u5904\u7406\u5230\u4e0b\u6807\u4e3aaim_idx\u7684\u5143\u7d20\u65f6\uff0c\u505c\u6b62\u9000\u51fa\nvoid quickSort(vector&lt;string&gt;&amp; arr, int low, int high, int aim_idx) {\nauto key = arr[low]; //\u53d6\u6700\u4f4e\u4f4d\u4f5c\u4e3a\u54e8\u5175\nauto i = low;\nauto j = high;\nwhile(i&lt;j) {\n//# j\u4ece\u53f3\u5230\u5de6\u626b\u63cf\nwhile(i&lt;j &amp;&amp; lessAndEqual(key, arr[j])==true ) {\n//\u5982\u679ckey&lt;=arr[j], j\u7ee7\u7eed\u5f80\u5de6\u8d70\n--j;\n}\nif(i&lt;j) {\n//i&lt;j\u5373\u4ee3\u8868\u4e0a\u9762\u7684while\u4e2d\u9014\u9000\u51fa\u4e86\uff0c\u4e5f\u5c31\u662f\u53d1\u73b0\u4e86key&gt;arr[j]\n// \u90a3\u4e48\u5c31\u8981\u5c06arr[j]\u653e\u5230\u5de6\u4fa7\n// \u653e\u5b8c\u4e4b\u540ei\u8981\u5411\u53f3\u4f4d\u79fb\narr[i++] = arr[j]; //\u5982\u679c\u53d1\u73b0key\n}\n//# i\u4ece\u5de6\u5230\u53f3\u626b\u63cf\nwhile(i&lt;j &amp;&amp; lessAndEqual(arr[i], key)==true ) {\n//\u5982\u679carr[i]&lt;=key, i\u7ee7\u7eed\u5f80\u53f3\u8d70\n++i;\n}\nif(i&lt;j) {\n//i&lt;j\u5373\u4ee3\u8868\u4e0a\u9762\u7684while\u4e2d\u9014\u9000\u51fa\u4e86\uff0c\u4e5f\u5c31\u662f\u53d1\u73b0\u4e86arr[i]&gt;key\n// \u90a3\u4e48\u8981\u5c06arr[i]\u653e\u5230\u53f3\u4fa7\n// \u653e\u5b8c\u4e4b\u540ej\u8981\u5411\u5de6\u4f4d\u79fb\narr[j--] = arr[i];\n}\n}\narr[i] = key; //key\u7684\u6b63\u786e\u4f4d\u7f6e\u662fi\nif(i == aim_idx) {\n//\u5df2\u7ecf\u627e\u5230\u76ee\u6807\u4f4d\u7f6e\nreturn; //\u7ed3\u675f\n}\n//\u6ca1\u6709\u5230\u76ee\u6807\u4f4d\u7f6e\uff0c\u9700\u8981\u7ee7\u7eed\u6392\u5e8f\n//\u770baim_idx\u5728\u54ea\u4e2a\u4f4d\u7f6e\nif(aim_idx &lt; i)\n{\n//\u5728\u5de6\u4fa7 =&gt; \u5bf9\u5de6\u4fa7\u6392\u5e8f\u5373\u53ef\nquickSort(arr, low, i-1, aim_idx);\n}\nelse if(aim_idx &gt; i)\n{\n//\u5728\u53f3\u4fa7 =&gt; \u5bf9\u53f3\u4fa7\u6392\u5e8f\u5373\u53ef\nquickSort(arr, i+1, high, aim_idx);\n}\n}\nstring kthLargestNumber(vector&lt;string&gt;&amp; nums, int k) {\nauto size = nums.size();\n//\u7b2ck\u5927\u5143\u7d20\u6240\u5728\u7684\u4e0b\u6807\nint aim_idx = size - k;\n//size  k   aim_idx \u516c\u5f0f\n//1     1   0       1-1\n//5     2   3       5-2\n//5     3   2       5-3\n//5     1   4       5-1\nquickSort(nums, 0, size-1, aim_idx);\nreturn nums[aim_idx];\n}\n};\n</code></pre>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E6%8E%92%E5%BA%8F/%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%AC%20K%20%E5%A4%A7%E6%95%B4%E6%95%B0/#_5","title":"\u89e3\u9898\uff1a\u5206\u6cbb\u601d\u60f3","text":"<p>\u7ebf\u6027\u65f6\u95f4\u6c42\u53d6\u7b2c K \u5927\u6570 - \u77e5\u4e4e (zhihu.com)</p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/206%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/","title":"206 \u53cd\u8f6c\u94fe\u8868","text":"<p>206. \u53cd\u8f6c\u94fe\u8868 - \u529b\u6263\uff08LeetCode\uff09  \u4f18\u8d28\u9898\u89e3\uff1a\u3010\u53cd\u8f6c\u94fe\u8868\u3011\uff1a\u53cc\u6307\u9488\uff0c\u9012\u5f52\uff0c\u5996\u9b54\u5316\u7684\u53cc\u6307\u9488 - \u53cd\u8f6c\u94fe\u8868 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/206%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/#_1","title":"\u9898\u76ee","text":"<p>\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9\uff0c\u53cd\u8f6c\u8be5\u94fe\u8868\u5e76\u8f93\u51fa\u53cd\u8f6c\u540e\u94fe\u8868\u7684\u5934\u8282\u70b9\u3002</p> <pre><code>\u8f93\u5165: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL\n\u8f93\u51fa: 5-&gt;4-&gt;3-&gt;2-&gt;1-&gt;NULL\n</code></pre> <p>\u6570\u636e\u7ed3\u6784</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\nListNode* reverseList(ListNode* head) {\n}\n};\n</code></pre>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/206%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/#_2","title":"\u89e3\u6cd5\uff1a\u8fed\u4ee3","text":"<pre><code>            1 --&gt; 2 --&gt; 3 --&gt; 4 --&gt; 5 --&gt; nullptr\nnullptr &lt;-- 1 &lt;-- 2 &lt;-- 3 &lt;-- 4 &lt;-- 5\n</code></pre> <p>\u601d\u8003\u8fc7\u7a0b</p> <ol> <li>\u5217\u51fa\u8f93\u5165\u3001\u8f93\u51fa\uff0c\u8fdb\u884c\u601d\u8003</li> <li>\u6d89\u53ca\u5230\u5c40\u90e8\u65ad\u94fe\uff0c\u80af\u5b9a\u8981\u4fdd\u5b58\u539f\u59cb\u7684\u5316\u5b66\u952e\uff0c\u4f18\u5148\u8003\u8651\u53cc\u6307\u9488\u6765\u4fdd\u5b58</li> <li>\u5f53\u524d\u8003\u8651\u7b2c\u4e00\u4e2a\u5143\u7d20<code>1</code>\uff0c\u56e0\u6b64\u53cc\u6307\u9488\u4e2d\u7684\u4e00\u4e2a\u80af\u5b9a\u6307\u5411<code>1</code>\uff0c\u8fd8\u6709\u4e00\u4e2a\u6307\u5411\u8c01\uff1f<ol> <li>\u4ece\u7ed3\u679c\u8003\u8651\u6700\u597d\uff0c\u4e00\u4e2a\u6307\u5411\u4e86<code>1</code>\uff0c\u53e6\u4e00\u4e2a\u53ea\u80fd\u6307\u5411<code>nullptr</code>\uff0c\u800c\u4e0d\u662f<code>2</code>\u3002\u56e0\u4e3a<code>1-&gt;next = nullptr</code></li> <li>\u5982\u679c<code>1-&gt;next=nullptr</code>\u6267\u884c\u5b8c\u6bd5\uff0c<code>1--&gt;2</code>\u7684\u952e\u65ad\u88c2\uff0c\u56e0\u6b64\u8981\u4e8b\u5148\u5c062\u4fdd\u5b58\u4e0b\u6765\uff0c\u5373<code>next=2</code></li> <li>\u5230\u8fd9\u91cc\uff0c1\u5c31\u8003\u8651\u5b8c\u4e86\uff0c\u5f53\u524d\u72b6\u6001<code>nullptr &lt;-- 1</code>\u3001<code>2 --&gt; 3 --&gt; 4 --&gt; 5 --&gt; nullptr</code></li> <li>\u6839\u636e\u53cc\u6307\u9488\u7684\u610f\u4e49\uff0c\u53ef\u4ee5\u77e5\u9053\uff1a<code>curr=1</code>\u3001<code>pre=nullptr</code>\uff08pre\u8868\u793acurr\u7684\u524d\u4e00\u4e2a\uff09</li> </ol> </li> <li>\u8003\u8651\u7b2c\u4e8c\u4e2a\u5143\u7d202<ol> <li>\u8981\u5c06\u53cc\u6307\u9488\u5f80\u540e\u4f4d\u79fb\uff0c\u5373<code>pre=1</code>\u3001<code>curr=2</code></li> <li>\u540c\u6837\uff0c\u4fdd\u5b58<code>2-&gt;next</code>\uff0c\u518d\u6302\u63a5<code>2-&gt;next=1</code></li> <li>\u53d1\u73b0\u5230\u8fd9\u91cc\u6ca1\u6709\u95ee\u9898\uff0c\u5148\u6309\u7167\u524d\u9762\u7684\u5206\u6790\uff08while\u7684\u4e2d\u6b62\u6761\u4ef6\u5148\u7a7a\u7740\u4e0d\u5199\uff09\uff0c\u628a\u4ee3\u7801\u5199\u4e0b\u6765</li> </ol> </li> <li>\u8003\u8651\u5faa\u73af\u4f53\u4e2d\u6b62\u60c5\u51b5<ol> <li>\u56e0\u4e3a\u5faa\u73af\u4f53\u5185\u4f1a\u6709<code>curr-&gt;next</code>\uff0c\u4f1a\u8bbf\u95eecurr\u7684\u5185\u5b58\uff0c\u56e0\u6b64\u8981\u4fdd\u8bc1<code>curr!=nullptr</code></li> </ol> </li> <li>\u8003\u8651\u8fd4\u56de\u503c<ol> <li>\u6839\u636e\u5faa\u73af\u4f53\u4e2d\u6b62\u60c5\u51b5\uff0c\u53ef\u4ee5\u77e5\u9053\u8df3\u51fa\u5faa\u73af\u4f53\u7684\u72b6\u6001\u662f<code>curr==nullptr</code>\uff0c\u90a3\u4e48<code>pre==5</code></li> <li>\u56e0\u6b64\uff0c\u8981\u8fd4\u56de<code>pre</code></li> </ol> </li> <li>\u6700\u540e\uff0c\u8003\u8651\u5728\u8fb9\u754c\u6761\u4ef6\u4e0b\uff0c\u6b64\u903b\u8f91\u662f\u5426\u6ee1\u8db3\uff0c\u4e0d\u6ee1\u8db3\u9700\u8981\u518d\u52a0\u989d\u5916\u7684\u5224\u65ad\u3002\u6839\u636e\u7279\u4f8b\u9010\u4e00\u8003\u8651\u5373\u53ef<ol> <li>\u7a7a\u94fe\u8868\uff0c\u8981\u8fd4\u56de<code>nullptr</code>\u3002\u6839\u636e\u4ee3\u7801\uff0c\u786e\u5b9e\u662f\u8fd4\u56de<code>nullptr</code></li> <li><code>1 -&gt; nullptr</code>\u7684\u60c5\u51b5\uff0c\u8981\u8fd4\u56de<code>1</code>\u3002\u6839\u636e\u4ee3\u7801\uff0c\u786e\u5b9e\u662f\u8fd4\u56de<code>1</code></li> <li>\u56e0\u6b64\uff0c\u4e0d\u9700\u8981\u989d\u5916\u6dfb\u52a0\u6761\u4ef6</li> </ol> </li> </ol> <pre><code>class Solution {\npublic:\nListNode* reverseList(ListNode* head) {\nListNode* pre = nullptr;\nListNode* curr = head;\nwhile(curr != nullptr) {\n//\u65ad\u94fe\u524d\uff0c\u8981\u5c06next\u4fdd\u5b58\u4e0b\u6765\nauto next = curr-&gt;next;\n//\u9006\u5e8f\uff0c\u63a5\u94fe\ncurr-&gt;next = pre;\n//\u4e0b\u4e00\u4e2a\u72b6\u6001\npre = curr;\ncurr = next;\n}\nreturn pre;\n}\n};\n</code></pre>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/206%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/#_3","title":"\u89e3\u6cd5\uff1a\u9012\u5f52","text":""},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/206%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/#_4","title":"\u5e38\u89c4","text":"<p>\u9012\u5f52\u76f8\u5bf9\u8f83\u5bb9\u6613</p> <ol> <li>\u5148\u628a\u8fb9\u754c\u6761\u4ef6\u5199\u6e05\u695a\uff0c\u5982\u679c\u6ca1\u6709\u628a\u63e1\u53ef\u4ee5\u591a\u5199\u4e00\u4e2a\u8fb9\u754c\u6761\u4ef6\uff0c\u4fdd\u9669\u4e9b</li> <li>\u7136\u540e\u5c31\u662f\u9012\u5f52\u8fdb\u5165\u4e0b\u4e00\u4e2a\u72b6\u6001\u5c31\u597d\u4e86\uff0c\u628a\u4ee3\u7801\u5199\u4e0b</li> <li>\u5e26\u5165\u4f8b\u5b50\uff0c\u68c0\u9a8c\u4ee3\u7801</li> <li>\u6700\u540e\uff0c\u518d\u4ece\u7b80\u5355\u5230\u96be\uff0c\u9010\u4e00\u8003\u8651\u7279\u4f8b</li> </ol> <pre><code>class Solution {\npublic:\nListNode* reverseList(ListNode* head) {\n//\u8fb9\u754c\u6761\u4ef6\nif(head == nullptr) return head;\nif(head-&gt;next == nullptr) return head;\nauto old_head = head;           //\u5148\u4fdd\u7559\u65e7\u7684head\nhead = reverseList(head-&gt;next); //\u7ffb\u8f6c\u540e\u9762\n//\u5c06old_head\u6302\u63a5\u5728\u6700\u540e\nauto p = head;\nwhile(p-&gt;next != nullptr) { //p\u6709\u4e0b\u4e00\u4e2a\np = p-&gt;next; //\u7ee7\u7eed\u4f4d\u79fb\n}\np-&gt;next = old_head;        //\u6302old_head\nold_head-&gt;next = nullptr;  //\u8bb0\u5f97old_head\u7684next\u8981\u7f6e\u7a7a\nreturn head;\n}\n};\n</code></pre>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/206%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/#_5","title":"\u4f18\u5316","text":"<pre><code>class Solution {\npublic:\nListNode* reverseList(ListNode* head) {\n//\u8fb9\u754c\u6761\u4ef6\nif(head == nullptr) return head;\nif(head-&gt;next == nullptr) return head;\nListNode* newHead = reverseList(head-&gt;next); //\u8f6c\u5269\u4e0b\u7684\n//head-&gt;next\u5176\u5b9e\u5c31\u662f\uff0cnewHead\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4e86\n// \u65e0\u9700\u518d\u904d\u5386\u4e00\u6b21\uff0c\u76f4\u63a5\u6302\u63a5\u5373\u53ef\nhead-&gt;next-&gt;next = head; head-&gt;next = nullptr; //\u8bb0\u5f97\u65e7head-&gt;next\u8981\u7f6e\u7a7a\nreturn newHead;\n}\n};\n</code></pre> <p>\u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011\u5b8c\u6574\u904d\u5386\u4e86\u4e00\u6b21\u94fe\u8868\uff0c<code>O(n)</code></p> <p>\u3010\u7a7a\u95f4\u590d\u6742\u5ea6\u3011\u53d6\u51b3\u4e8e\u9012\u5f52\u8c03\u7528\u7684\u6240\u9700\u7684\u6808\u7a7a\u95f4\uff0c\u5373\u8c03\u7528\u7684\u6700\u5927\u6df1\u5ea6\u3002\u540c\u6837\u7684\uff0c\u9700\u8981\u5b8c\u6574\u904d\u5386\u4e00\u6b21\u94fe\u8868\uff0c\u5373<code>O(n)</code></p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/21%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8/","title":"21 \u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u94fe\u8868","text":"<p>21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/21%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8/#_1","title":"\u9898\u76ee","text":"<p>\u5c06\u4e24\u4e2a\u6709\u5e8f\u7684\u94fe\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u94fe\u8868\uff0c\u8981\u6c42\u65b0\u7684\u94fe\u8868\u662f\u901a\u8fc7\u62fc\u63a5\u4e24\u4e2a\u94fe\u8868\u7684\u8282\u70b9\u6765\u751f\u6210\u7684</p> <pre><code>\u8f93\u5165\uff1a1-&gt;2-&gt;4, 1-&gt;3-&gt;4\n\u8f93\u51fa\uff1a1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4\n</code></pre> <p>\u6570\u636e\u7ed3\u6784</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\n</code></pre>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/21%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8/#_2","title":"\u89e3\u6cd5\uff1a\u8fed\u4ee3","text":""},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/21%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8/#_3","title":"\u666e\u901a","text":"<pre><code>class Solution {\npublic:\nListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\nListNode *result = nullptr; //\u5b58\u653e\u6700\u7ec8\u7ed3\u679c\nListNode *r = nullptr; //\u65b0\u94fe\u8868\u7684\u6307\u9488\nauto p = l1; //l1\u7684\u6307\u9488\nauto q = l2; //l2\u7684\u6307\u9488\nwhile(p!=nullptr &amp;&amp; q!=nullptr) { //\u4e24\u4e2a\u90fd\u4e0d\u4e3a\u7a7a\nListNode* next = nullptr; //\u65b0\u94fe\u8868\u7684\u4e0b\u4e00\u4e2a\n//\u6bd4\u5927\u5c0f\nif(p-&gt;val &lt;= q-&gt;val) {\nnext = p;\np = p-&gt;next;\n}\nelse {\nnext = q;\nq = q-&gt;next;\n}\n//\u6302\u63a5\nif(result == nullptr) { //\u7b2c\u4e00\u4e2a\nresult = r = next;\n} else { //\u4e0d\u662f\u7b2c\u4e00\u4e2a\nr-&gt;next = next;\nr = r-&gt;next; //\u6ce8\u610f\u4f4d\u79fb\n}\n}\n//l1\u3001l2\u53ef\u80fd\u6709\u5269\u4e0b\u7684\u5143\u7d20\uff0c\u4e0e\u4e0a\u9762\u4e00\u6837\u5904\u7406\nListNode* next = nullptr;\nif(p!=nullptr) {\nnext = p;\n}\nif(q!=nullptr) {\nnext = q;\n}\nif(result == nullptr) {\nresult = next;\n} else {\nr-&gt;next = next;\n}\nreturn result;\n}\n};\n</code></pre>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/21%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8/#_4","title":"\u9884\u8bbe\u8d77\u59cb\u8282\u70b9","text":"<p>\u9884\u5148\u8bbe\u7f6e\u4e00\u4e2a\u8d77\u59cb\u8282\u70b9\uff0c\u9632\u6b62\u521d\u59cb\u6761\u4ef6\u4e0b\u5224\u7a7a\u7684\u64cd\u4f5c\u3002</p> <pre><code>class Solution {\npublic:\nListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\n//\u4e34\u754c\u6761\u4ef6\nif(l1 == nullptr) return l2;\nif(l2 == nullptr) return l1;\n//\u589e\u52a0\u4e00\u4e2ahead\uff0c\u540e\u7eed\u5c31\u65e0\u9700\u5224\u65ad\u8d77\u59cb\u8282\u70b9\u662f\u5426\u4e3anullptr\nListNode head(-1);\nauto h = &amp;head;\nwhile(l1!=nullptr &amp;&amp; l2!=nullptr) { //\u4e24\u4e2a\u90fd\u4e0d\u4e3a\u7a7a\n//\u6bd4\u8f83\u5927\u5c0f\uff0c\u5e76\u6302\u63a5\nif(l1-&gt;val &lt;= l2-&gt;val) {\nh-&gt;next = l1;\nl1 = l1-&gt;next;\n}\nelse{\nh-&gt;next = l2;\nl2 = l2-&gt;next;\n}\nh = h-&gt;next;\n}\n//\u6ce8\u610f\uff0c\u53ef\u80fd\u8fd8\u6709\u5269\u4f59\nif(l1!=nullptr) {\nh-&gt;next = l1;\n}\nif(l2!=nullptr) {\nh-&gt;next = l2;\n}\nreturn head.next;\n//head\u662f\u6808\u4e0a\u7684\u5185\u5b58\uff0c\u65e0\u9700\u91ca\u653e\n}\n};\n</code></pre> <p>\u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011\u4e24\u4e2a\u94fe\u8868\u90fd\u904d\u5386\u4e86\u4e00\u904d\uff0c<code>O(n+m)</code></p> <p>\u3010\u7a7a\u95f4\u590d\u6742\u5ea6\u3011\u5e38\u6570\u7ea7\u522b\uff0c\u5373<code>O(1)</code></p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/21%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8/#_5","title":"\u89e3\u6cd5\uff1a\u9012\u5f52","text":"<pre><code>class Solution {\npublic:\nListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\n//\u4e34\u754c\u6761\u4ef6\nif(l1 == nullptr) return l2;\nif(l2 == nullptr) return l1;\n//\u5bf9\u6bd4\u4e24\u4e2a\u5927\u5c0f\nif(l1-&gt;val &lt;= l2-&gt;val) {\n//\u6b64\u6b21\u8ba1\u7b97\uff0c\u9996\u8282\u70b9\u662fl1\n// \u90a3\u4e48\uff0cnext\u662f\u5269\u4f59\u6570\u636e\u7684mergeTwoLists\u7684\u7ed3\u679c\nl1-&gt;next = mergeTwoLists(l1-&gt;next, l2);\nreturn l1;\n}\nelse\n{\n//\u6b64\u6b21\u8ba1\u7b97\uff0c\u9996\u8282\u70b9\u662fl2\nl2-&gt;next = mergeTwoLists(l1, l2-&gt;next);\nreturn l2;\n}\n}\n};\n</code></pre> <p>\u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011\u4e24\u4e2a\u94fe\u8868\u90fd\u904d\u5386\u4e86\u4e00\u904d\uff0c<code>O(n+m)</code></p> <p>\u3010\u7a7a\u95f4\u590d\u6742\u5ea6\u3011\u9012\u5f52\u9700\u8981\u6d88\u8017\u6808\u7a7a\u95f4\uff0c\u6808\u7a7a\u95f4\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e\u9012\u5f52\u6df1\u5ea6\u3002\u5982\u679c\u8f93\u5165\u6570\u636e\u5f88\u4e0d\u597d\uff0c\u6700\u591a\u53ef\u80fd\u8c03\u7528<code>n+m</code>\u6b21\uff0c\u56e0\u6b64\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a<code>O(n+m)</code></p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/328%20%E5%A5%87%E5%81%B6%E9%93%BE%E8%A1%A8/","title":"328 \u5947\u5076\u94fe\u8868","text":"<p>328. \u5947\u5076\u94fe\u8868 - \u529b\u6263\uff08LeetCode\uff09 \u4f18\u8d28\u9898\u89e3\uff1a\u5947\u5076\u94fe\u8868 - \u5947\u5076\u94fe\u8868 - \u529b\u6263\uff08LeetCode\uff09</p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/328%20%E5%A5%87%E5%81%B6%E9%93%BE%E8%A1%A8/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u628a\u6240\u6709\u7684\u5947\u6570\u8282\u70b9\u548c\u5076\u6570\u8282\u70b9\u5206\u522b\u6392\u5728\u4e00\u8d77\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u5947\u6570\u8282\u70b9\u548c\u5076\u6570\u8282\u70b9\u6307\u7684\u662f\u8282\u70b9\u7f16\u53f7\u7684\u5947\u5076\u6027\uff0c\u800c\u4e0d\u662f\u8282\u70b9\u7684\u503c\u7684\u5947\u5076\u6027\u3002</p> <pre><code>\u8f93\u5165: head = [1,2,3,4,5]\n\u8f93\u51fa:\u00a0[1,3,5,2,4]\n\n\u8f93\u5165: head = [2,1,3,5,6,4,7]\n\u8f93\u51fa: [2,3,6,7,1,5,4]\n</code></pre> <p>\u6570\u636e\u7ed3\u6784</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\nListNode* oddEvenList(ListNode* head) {\n//todo\n}\n};\n</code></pre>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%A2%98%E9%9B%86/%E9%93%BE%E8%A1%A8/328%20%E5%A5%87%E5%81%B6%E9%93%BE%E8%A1%A8/#_2","title":"\u89e3\u6cd5\uff1a\u8fed\u4ee3","text":"<pre><code>\u8f93\u5165\uff1a 1 --&gt; 2 --&gt; 3 --&gt; 4 --&gt; 5\n\u8f93\u51fa\uff1a 1 --&gt; 3 --&gt; 5 --&gt; 2 --&gt; 4\n</code></pre> <p>\u601d\u8003\u8fc7\u7a0b</p> <ol> <li>\u5217\u51fa\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u8fdb\u884c\u601d\u8003</li> <li>\u6d89\u53ca\u5230\u5c40\u90e8\u65ad\u94fe\uff0c\u80af\u5b9a\u8981\u4fdd\u5b58\u539f\u59cb\u952e\uff0c\u4f18\u5148\u8003\u8651\u53cc\u6307\u9488\u6765\u4fdd\u5b58\u3002</li> <li>\u95ee\u9898\u672c\u8d28\u662f\uff1a\u5947\u6570\u8282\u70b9\u8fde\u5728\u4e00\u8d77\uff1b\u5076\u6570\u8282\u70b9\u8fde\u5728\u4e00\u8d77\uff1b\u7136\u540e\u518d\u4e32\u8d77\u6765<ol> <li><code>1 --&gt; 3 --&gt; 5</code></li> <li><code>2 --&gt; 4 --&gt; nullptr</code></li> <li>\u7136\u540e<code>5 --&gt; 2</code></li> </ol> </li> <li>\u521a\u597d\uff0c\u53cc\u6307\u9488\u4e00\u4e2a\u6307\u5411\u5947\u6570\u8282\u70b9\u3001\u53e6\u4e00\u4e2a\u6307\u5411\u5076\u6570\u8282\u70b9</li> <li>\u5f00\u59cb\u8003\u8651\u7b2c\u4e00\u8f6e\uff1a<code>odd = 1</code>\u3001<code>even\u00a0=\u00a02</code><ol> <li>\u6302\u63a5\u5947\u6570\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\uff1a<code>odd-&gt;next = even-&gt;next</code>\uff0c\u5373<code>1-&gt;next = 2-&gt;next = 3</code></li> <li>\u6302\u63a5\u5076\u6570\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\uff1a<code>even-&gt;next = even-&gt;next-&gt;next</code>\uff0c\u5373<code>2-&gt;next = 2-&gt;next-&gt;next = 4</code></li> <li>\u4f4d\u79fb\u53cc\u6307\u9488\uff0c\u8fdb\u5165\u4e0b\u4e00\u8f6e<ol> <li><code>odd = odd-&gt;next</code>\uff0c\u5373<code>odd = 3</code></li> <li><code>even = even-&gt;next</code>\uff0c\u5373<code>even = 4</code></li> </ol> </li> </ol> </li> <li>\u4e0b\u4e00\u8f6e\u548c\u4e0a\u4e00\u8f6e\u4e00\u6837\u8fd0\u884c\uff0c\u81ea\u5df1\u624b\u7b97\u770b\u4e0b\u5bf9\u4e0d\u5bf9</li> <li>\u8003\u8651\u5faa\u73af\u4f53\u4e2d\u6b62\u60c5\u51b5<ol> <li>\u5faa\u73af\u4f53\u5185\u6709\u8bbf\u95ee\u5185\u5b58\u7684\u64cd\u4f5c\uff0c<code>even-&gt;next</code>\u548c<code>even-&gt;next-&gt;net</code>\uff0c\u56e0\u6b64\u6761\u4ef6\u5c31\u662f\u8fd9\u4e24\u4e2a\u4e0d\u80fd\u4e3a\u7a7a</li> </ol> </li> <li>\u8003\u8651\u5faa\u73af\u4f53\u5916\u90e8<ol> <li>\u81ea\u5df1\u624b\u7b97\u4e00\u904d\u5faa\u73af\u4f53\uff0c\u53d1\u73b0\u8fd8\u672a\u5c06\u5947\u6570\u3001\u5076\u6570\u94fe\u6302\u63a5\u8d77\u6765</li> <li>\u5076\u6570\u94fe\u7684\u5f00\u5934\u5373<code>even_head = head-&gt;next</code>\uff0c\u8fd9\u4e2a\u8981\u4e8b\u5148\u4fdd\u5b58\u4e0b\u6765\uff0c\u4e0d\u7136\u65ad\u94fe\u64cd\u4f5c\u4f1a\u5bfc\u81f4\u4e22\u5931<code>next</code></li> <li>\u5947\u6570\u94fe\u7684\u5f00\u5934\u5373<code>head</code>\u6307\u9488\uff0c\u4e0d\u4f1a\u53d8\u3002\u56e0\u6b64\uff0c\u9000\u51fa\u5faa\u73af\u4f53\u4e4b\u540e\uff0c<code>odd-&gt;next = even_head</code></li> </ol> </li> <li>\u8003\u8651\u8fd4\u56de\u503c<ol> <li>\u5947\u6570\u94fe\u7684\u5f00\u5934\u5373<code>head</code>\uff0c\u8fd4\u56de<code>head</code>\u5373\u53ef</li> </ol> </li> <li>\u6700\u540e\uff0c\u8003\u8651\u5728\u8fb9\u754c\u6761\u4ef6\u4e0b\uff0c\u6b64\u903b\u8f91\u662f\u5426\u6ee1\u8db3\uff0c\u4e0d\u6ee1\u8db3\u9700\u8981\u518d\u52a0\u989d\u5916\u7684\u5224\u65ad\u3002\u6839\u636e\u7279\u4f8b\u9010\u4e00\u8003\u8651\u5373\u53ef\uff0c\u591a\u52a0\u6761\u4ef6\u4e5f\u6ca1\u5173\u7cfb\uff0c\u80af\u5b9a\u6ca1\u9519\u7684\uff0c\u53cd\u800c\u8fd8\u66f4\u4fdd\u9669</li> </ol> <pre><code>class Solution {\npublic:\nListNode* oddEvenList(ListNode* head) {\n//\u8fb9\u754c\u6761\u4ef6\nif(head == nullptr) return head;\nif(head-&gt;next == nullptr) return head;\nif(head-&gt;next-&gt;next == nullptr) return head; //\u7ec6\u60f3\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u6761\u4ef6\u53ef\u4ee5\u4e0d\u52a0\u7684\u3002\u4f46\u4f60\u52a0\u4e0a\u4e5f\u6ca1\u4e8b\uff0c\u53cd\u800c\u66f4\u4fdd\u9669\n//\u8bb0\u5f55\u4e0b\u5076\u6570\u94fe\u7684\u5934\nListNode* even_head = head-&gt;next;\nListNode* odd = head;           //\u5947\u6570\u94fe\u7684\u6307\u9488\nListNode* even = head-&gt;next;    //\u5076\u6570\u94fe\u7684\u6307\u9488\nwhile(even &amp;&amp; even-&gt;next) {     //\u4fdd\u8bc1\u5faa\u73af\u4f53\u5185\uff0c\u8bbf\u95ee\u5185\u5b58\u7684\u64cd\u4f5c\u4e0d\u5d29\u6e83\u5373\u53ef\nodd-&gt;next = even-&gt;next;\neven-&gt;next = even-&gt;next-&gt;next;\n//\u4e0b\u4e00\u4e2a\u72b6\u6001\nodd = odd-&gt;next;\neven = even-&gt;next;\n}\n//\u5c06\u5947\u6570\u94fe\u3001\u5076\u6570\u94fe\uff0c\u6302\u63a5\u8d77\u6765\nodd-&gt;next = even_head;\n//\u5947\u6570\u94fe\u7684\u5f00\u5934\u5373\u662f\u539f\u6765\u7684head\uff0c\u6ca1\u6709\u53d8\u8fc7\nreturn head;\n}\n};\n</code></pre> <p>\u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011\u672c\u8d28\u4e0a\u5faa\u73af\u4f53\u5185\uff0c\u53ea\u5bf9\u94fe\u8868\u904d\u5386\u4e86\u4e00\u6b21\uff0c\u5373O(n) \u3010\u7a7a\u95f4\u590d\u6742\u5ea6\u3011\u5e38\u6570\u9879\uff0cO(1)</p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/UML/%E7%B1%BB%E5%9B%BE/","title":"UML\u7c7b\u56fe","text":""},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/C%2B%2B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/Singleton%E5%8D%95%E4%BB%B6%E6%A8%A1%E5%BC%8F/","title":"Singleton\u5355\u4ef6\u6a21\u5f0f","text":"<p>\u3010\u5355\u4f8b\u7c7b\u7684\u5b9a\u4e49\u3011 <pre><code>class Singleton{\nprivate:    //\u628a\u6784\u9020\u51fd\u6570\u8bbe\u7f6e\u6210\u79c1\u6709\uff0c\u8ba9\u5916\u754c\u4e0d\u80fd\u521b\u5efa\u5b83\nSingleton();\nSingleton(const Singleton&amp; other);\nstatic Singleton* m_instance;\npublic:\nstatic Singleton* getInstance();\n};\nSingleton* Singleton::m_instance=nullptr;\n</code></pre></p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/C%2B%2B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/Singleton%E5%8D%95%E4%BB%B6%E6%A8%A1%E5%BC%8F/#_1","title":"\u7248\u672c\u4e00\uff1a\u7ebf\u7a0b\u975e\u5b89\u5168","text":"<pre><code>//[\u7248\u672c\u4e00] \u7ebf\u7a0b\u975e\u5b89\u5168\u7248\u672c\nSingleton* Singleton::getInstance() {\nif (m_instance == nullptr) {        //\u8bed\u53e5\u4e00\nm_instance = new Singleton();   //\u8bed\u53e5\u4e8c\n}\nreturn m_instance;\n}\n/*\n \u5047\u8bbe\u5bf9\u8c61\u8fd8\u6ca1\u6709\u521b\u5efa\uff0cm_instance\u73b0\u5728\u4e3anullptr\n \u7ebf\u7a0bA\u3001\u7ebf\u7a0bB\u4e24\u4e2a\u4e00\u8d77\u8fdb\u5165\u8bed\u53e5\u4e8c\uff0c\u4e00\u8d77\u6267\u884c\u8bed\u53e5\u4e8c\n \u6240\u4ee5\u4f1a\u5bfc\u81f4\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u88ab\u521b\u5efa\u591a\u6b21\uff0c\u800c\u771f\u6b63\u88ab\u91ca\u653e\u7684\u53ea\u6709\u4e00\u4e2a\n */\n</code></pre>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/C%2B%2B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/Singleton%E5%8D%95%E4%BB%B6%E6%A8%A1%E5%BC%8F/#_2","title":"\u7248\u672c\u4e8c\uff1a\u7ebf\u7a0b\u5b89\u5168","text":"<pre><code>Singleton* Singleton::getInstance() {\nLock lock; //\u52a0\u9501\nif (m_instance == nullptr) {        //\u8bfb\u64cd\u4f5c\nm_instance = new Singleton();   //\u5199\u64cd\u4f5c\n}\nreturn m_instance;  //\u8bfb\u64cd\u4f5c\n} //\u9000\u51fa\u4ee5\u540e\uff0c\u9501lock\u88ab\u91ca\u653e\uff0c\u522b\u7684\u7ebf\u7a0b\u624d\u80fd\u6267\u884c\u51fd\u6570\n/*\n \u53ea\u6709\u5199\u64cd\u4f5c\u9700\u8981\u4e0a\u9501\uff0c\u8bfb\u64cd\u4f5c\u662f\u4e0d\u9700\u8981\u4e0a\u9501\u7684\uff0c\u4f46\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8bfb\u64cd\u4f5c\u4e5f\u88ab\u4e0a\u9501\u4e86\u3002\n \u9501\u662f\u6709\u4ee3\u4ef7\u7684\uff0c\u8981\u7b49\u5f85\u522b\u4eba\u5b8c\u6210\uff0c\u6240\u4ee5\u5bf9\u8bfb\u4e0a\u9501\uff0c\u4f1a\u9020\u6210\u6d6a\u8d39\n \u56e0\u6b64\uff0c\u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u9501\u7684\u4ee3\u4ef7\u8fc7\u9ad8\u3002\u5982\u679c\u5728\u9ad8\u5e76\u53d1\u7684\u573a\u666f\u4e0b\uff0c\u8fd9\u4e2a\u4ee3\u4ef7\u662f\u5f88\u9ad8\u7684\n*/\n</code></pre>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/C%2B%2B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/Singleton%E5%8D%95%E4%BB%B6%E6%A8%A1%E5%BC%8F/#_3","title":"\u7248\u672c\u4e09\uff1a\u7ebf\u7a0b\u5b89\u5168\uff0c\u5e76\u53cc\u68c0\u67e5\u9501","text":"<pre><code>//[\u7248\u672c\u4e09] \u53cc\u68c0\u67e5\u9501(double check lock)\uff0c\u4f46\u7531\u4e8e\u5185\u5b58\u8bfb\u5199reorder\u4e0d\u5b89\u5168\nSingleton* Singleton::getInstance() {\nif(m_instance==nullptr){ //\u662f\u5426\u7a7a\nLock lock;  //\u7a7a\u624d\u52a0\u9501\nif (m_instance == nullptr) {\n/*\u52a0\u5b8c\u9501\u4e4b\u540e\uff0c\u8fd8\u9700\u8981\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\n            m_instance == nullptr\u5224\u65ad\u662f\u5fc5\u8981\u7684\uff01\u53ef\u4ee5\u505c\u4e0b\u6765\u60f3\u60f3\u4e3a\u4ec0\u4e48\u662f\u5fc5\u8981\u7684\n            \u5176\u5b9e\u5982\u679c\u6ca1\u6709\u8fd9\u53e5\uff0c\u6267\u884c\u60c5\u51b5\u548c\u7248\u672c\u4e8c\u662f\u4e00\u6837\u7684\uff0c\u4e5f\u4f1a\u88ab\u521b\u5efa\u4e24\u6b21\n            */\nm_instance = new Singleton();\n}\n}\nreturn m_instance;\n}\n</code></pre>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/C%2B%2B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/Singleton%E5%8D%95%E4%BB%B6%E6%A8%A1%E5%BC%8F/#_4","title":"\u7248\u672c\u56db\uff1a\u7ebf\u7a0b\u5b89\u5168\uff0c\u8de8\u5e73\u53f0","text":"<pre><code>//C++ 11\u7248\u672c\u4e4b\u540e\u7684\u8de8\u5e73\u53f0\u5b9e\u73b0 (volatile)\nstd::atomic&lt;Singleton*&gt; Singleton::m_instance;\nstd::mutex Singleton::m_mutex;\nSingleton* Singleton::getInstance() {\nSingleton* tmp = m_instance.load(std::memory_order_relaxed);\nstd::atomic_thread_fence(std::memory_order_acquire);//\u83b7\u53d6\u5185\u5b58fence\nif (tmp == nullptr) {\nstd::lock_guard&lt;std::mutex&gt; lock(m_mutex);\ntmp = m_instance.load(std::memory_order_relaxed);\nif (tmp == nullptr) {\ntmp = new Singleton;\nstd::atomic_thread_fence(std::memory_order_release);//\u91ca\u653e\u5185\u5b58fence\nm_instance.store(tmp, std::memory_order_relaxed);\n}\n}\nreturn tmp;\n}\n</code></pre>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/C%2B%2B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/Singleton%E5%8D%95%E4%BB%B6%E6%A8%A1%E5%BC%8F/#stdcall_once","title":"\u7248\u672c\u4e94\uff1a\u7ebf\u7a0b\u5b89\u5168\uff08std::call_once\uff09","text":"<p><pre><code>#include&lt;mutex&gt; //std::call_once\n//\u591a\u7ebf\u7a0b\u5b89\u5168\nglal::ModelImporter* ModelImporter::getInstance()\n{\nstatic ModelImporter instance;\n//\u53ea\u6267\u884c\u4e00\u6b21\u521d\u59cb\u5316\u51fd\u6570\nstatic std::once_flag oc;\nstd::call_once(oc, &amp;ModelImporter::_init, &amp;instance);\nreturn &amp;instance;\n}\n//\u521d\u59cb\u5316\u51fd\u6570\nvoid ModelImporter::_init()\n{\n//\u521d\u59cb\u5316\u64cd\u4f5c...\n}\n</code></pre> \u5982\u679c\u521d\u59cb\u5316\u51fd\u6570\u505a\u7684\u4e8b\u60c5\u6bd4\u8f83\u5c11\uff0c\u4e5f\u53ef\u4ee5\u7528\u533f\u540d\u51fd\u6570\uff0c\u6bd4\u5982 <pre><code>AlgoFactory* AlgoFactory::getInstance()\n{\nstatic AlgoFactory instance;\nstatic std::once_flag oc;\nstd::call_once(oc, []()\n{\n//\u52a0\u8f7d\u63d2\u4ef6\nint successSize = dan::SGPluginManager::instance()-&gt;loadPluginsByFolder(\"\", dan::StringList() &lt;&lt; \"glal.algo.provider.*.dll\");\n});\nreturn &amp;instance;\n}\n</code></pre></p>"},{"location":"C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/C%2B%2B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/Singleton%E5%8D%95%E4%BB%B6%E6%A8%A1%E5%BC%8F/#_5","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u8bbe\u8ba1\u6a21\u5f0f\u4e4b\u5355\u4f8b\u6a21\u5f0f(c++\u7248) - SegmentFault \u601d\u5426</li> </ol>"},{"location":"D-%E5%89%8D%E7%AB%AF/Wasm/","title":"WebAssembly","text":""},{"location":"D-%E5%89%8D%E7%AB%AF/Wasm/#_1","title":"\u76f8\u5173\u6587\u7ae0","text":"<ol> <li>https://mp.weixin.qq.com/s/GtJGjW5-P--YACgaMcSJFg</li> </ol> <p>Rust</p> <p>WebAssembly \u5e94\u7528\uff08\u4e0a\uff09_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>C#</p> <ol> <li>Blazor WebAssembly \u6781\u7b80\u5165\u95e8\u6559\u7a0b\uff08\u5b8c\u7ed3\uff09_\u54d4\u54e9\u54d4\u54e9_bilibili</li> </ol> <p>C++</p> <ol> <li>https://mbebenita.github.io/WasmExplorer/</li> <li>WebAssemblyinAction: \u300aWebAssembly in Action With examples using C++ and Emscripten (Gerard Gallant) (z-lib.org).pdf\u300b\u4e00\u4e66\u7684\u5b66\u4e60\u4ee3\u7801 (gitee.com)</li> </ol>"},{"location":"G-CICD/%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%E5%99%A8/doxygen/","title":"doxygen","text":"<p>Doxygen\u662f\u4e00\u6b3e\u6587\u6863\u751f\u6210\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u4ece\u4ee3\u7801\u4e2d\u63d0\u53d6\u51fa\u76f8\u5e94\u7684\u6587\u6863\uff0c\u5e76\u7ec4\u7ec7\uff0c\u8f93\u51fa\u6210\u5404\u79cd\u6f02\u4eae\u7684\u6587\u6863\uff08\u5982HTML\uff0cPDF\uff0cRTF\u7b49\uff09</p> <ul> <li>\u9002\u7528\u4e8eC++\u3001C\u3001Java\u3001Objective-C\u3001Python\u3001IDL\uff08CORBA\u548cMicrosoft flavors\uff09\u3001Fortran\u3001VHDL\u3001PHP\u3001C#\u548cD\u8bed\u8a00\u7684\u6587\u6863\u751f\u6210\u5668</li> <li>\u5b83\u53ef\u4ee5\u5728\u5927\u591a\u6570\u7c7bUnix\u64cd\u4f5c\u7cfb\u7edf\u3001macOS\u4ee5\u53caMicrosoft Windows\u4e0a\u8fd0\u884c\u3002</li> </ul>"},{"location":"G-CICD/%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%E5%99%A8/doxygen/#_1","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>\u5b98\u65b9\u6587\u6863</li> <li>Doxygen\u4f7f\u7528\u6559\u7a0b</li> <li>Doxygen + graphviz + Windows Help Workshop\u751f\u6210\u51fd\u6570\u8c03\u7528\u56fe\u548cchm\u6587\u4ef6</li> </ol>"},{"location":"G-CICD/%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%E5%99%A8/doxygen/#_2","title":"\u5b89\u88c5","text":"<ol> <li>\u5b89\u88c5\u00a0Doxygen(Windows) </li> <li>\u5b89\u88c5\u00a0graphviz(Windows)\uff1agraphviz\u00a0\u662f\u4e00\u4e2a\u7531AT&amp;T\u5b9e\u9a8c\u5ba4\u542f\u52a8\u7684\u5f00\u6e90\u5de5\u5177\u5305\uff0c\u7528\u4e8e\u7ed8\u5236DOT\u8bed\u8a00\u811a\u672c\u63cf\u8ff0\u7684\u56fe\u5f62\u3002Doxygen\u00a0\u4f7f\u7528\u00a0graphviz\u00a0\u81ea\u52a8\u751f\u6210\u7c7b\u4e4b\u95f4\u548c\u6587\u4ef6\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\u56fe\uff0c\u5982\u4e0d\u9700\u8981\u6b64\u529f\u80fd\u53ef\u4e0d\u5b89\u88c5\u8be5\u5de5\u5177\u5305\u3002</li> <li>\u5b89\u88c5\u00a0Windows\u00a0Help\u00a0Workshop\u00a01.32\uff1aDoxygen\u00a0\u4f7f\u7528\u8fd9\u4e2a\u5de5\u5177\u53ef\u4ee5\u751f\u6210\u00a0CHM\u00a0\u683c\u5f0f\u7684\u6587\u6863</li> </ol>"},{"location":"G-CICD/%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%E5%99%A8/doxygen/#_3","title":"\u4f7f\u7528","text":""},{"location":"G-CICD/%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%E5%99%A8/doxygen/#_4","title":"\u547d\u4ee4\u884c","text":"<p>\u4e0b\u8f7d\u94fe\u63a5\uff1b\u89e3\u538b\u6587\u4ef6\u5939\uff0c\u6dfb\u52a0\u73af\u5883\u53d8\u91cf</p> <pre><code># \u751f\u6210\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\ndoxygen -g\n# \u5f00\u59cb\u751f\u6210\ndoxygen .\\Doxyfile\n</code></pre>"},{"location":"G-CICD/%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%E5%99%A8/doxygen/#gui","title":"GUI","text":"<p>\u4e0b\u8f7d\u94fe\u63a5\uff1b\u4e0b\u8f7d\u8fd0\u884c\u5b89\u88c5</p> <ol> <li>C#\u4f7f\u7528</li> <li>Doxygen + graphviz + Windows Help Workshop\u751f\u6210\u51fd\u6570\u8c03\u7528\u56fe\u548cchm\u6587\u4ef6</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/","title":"\u6587\u4ef6\u683c\u5f0f","text":"<p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>List of file formats - Wikipedia</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/1-%E5%9F%BA%E7%A1%80%E6%A0%BC%E5%BC%8F/JSON/CppJson/","title":"CppJson","text":"\u7b2c\u4e09\u65b9\u5e93 Starts \u8bf4\u660e \u8981\u6c42 stephenberry/glaze Extremely fast, in memory, JSON and interface library for modern C++ C++20 nlohmann/json 33.1k header only simdjson/simdjson 16.3k Parsing gigabytes of JSON per second"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/2-%E5%9B%BE%E7%89%87/stb/","title":"stb","text":"<p>\u76f8\u5173\u94fe\u63a5\uff1a</p> <ol> <li>nothings/stb: stb single-file public domain libraries for C/C++ (github.com)</li> </ol> <p>\u652f\u6301</p> <ol> <li>image loading/decoding from file/memory: JPG, PNG, TGA, BMP, PSD, GIF, HDR, PIC</li> <li>image writing to disk: PNG, TGA, BMP</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/2-%E5%9B%BE%E7%89%87/webp/","title":"WebP","text":"<p>WebP\u662f\u4e00\u79cd\u540c\u65f6\u63d0\u4f9b\u4e86\u6709\u635f\u538b\u7f29\u4e0e\u65e0\u635f\u538b\u7f29\uff08\u53ef\u9006\u538b\u7f29\uff09\u7684\u56fe\u7247\u6587\u4ef6\u683c\u5f0f\u3002</p> <p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>WebP API \u6587\u6863 \u00a0|\u00a0 Google Developers</li> <li>\u7f16\u8bd1\u5b9e\u7528\u7a0b\u5e8f \u00a0|\u00a0 WebP \u00a0|\u00a0 Google Developers</li> <li>\u4f7f\u7528\u5165\u95e8 \u00a0|\u00a0 WebP \u00a0|\u00a0 Google Developers</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/2-%E5%9B%BE%E7%89%87/webp/#_1","title":"\u7b80\u4ecb","text":"<p>\u6765\u6e90\uff1aWebP - \u7ef4\u57fa\u767e\u79d1\uff0c\u81ea\u7531\u7684\u767e\u79d1\u5168\u4e66 (wikipedia.org)</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/2-%E5%9B%BE%E7%89%87/webp/#_2","title":"\u5386\u53f2","text":"<p>WebP\u6700\u521d\u57282010\u5e749\u6708\u53d1\u5e03\uff0c\u5176\u652f\u6301\u5e93\u4e8e2018\u5e744\u6708\u53d1\u5e031.0\u7248\u672c\u3002\u622a\u81f32021\u5e745\u6708\uff0c\u5df2\u670994%\u7684\u6d4f\u89c8\u5668\u652f\u6301\u6b64\u683c\u5f0f\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/2-%E5%9B%BE%E7%89%87/webp/#_3","title":"\u8bbe\u8ba1\u76ee\u7684","text":"<p>WebP\u7684\u8bbe\u8ba1\u76ee\u6807\u662f\u5728\u51cf\u5c11\u6587\u4ef6\u5927\u5c0f\u7684\u540c\u65f6\uff0c\u8fbe\u5230\u548cJPEG\u3001PNG\u3001GIF\u683c\u5f0f\u76f8\u540c\u7684\u56fe\u7247\u8d28\u91cf\uff0c\u5e76\u5e0c\u671b\u501f\u6b64\u80fd\u591f\u51cf\u5c11\u56fe\u7247\u6863\u5728\u7f51\u7edc\u4e0a\u7684\u53d1\u9001\u65f6\u95f4\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/2-%E5%9B%BE%E7%89%87/webp/#_4","title":"\u6027\u80fd","text":"<p>\u6839\u636eGoogle\u8f83\u65e9\u7684\u6d4b\u8bd5\uff0cWebP\u7684\u65e0\u635f\u538b\u7f29\u6bd4\u7f51\u7edc\u4e0a\u627e\u5230\u7684PNG\u6863\u5c11\u4e8645\uff05\u7684\u6587\u4ef6\u5927\u5c0f\uff0c\u5373\u4f7f\u8fd9\u4e9bPNG\u6863\u5728\u4f7f\u7528pngcrush\u548cPNGOUT\u5904\u7406\u8fc7\uff0cWebP\u8fd8\u662f\u53ef\u4ee5\u51cf\u5c1128\uff05\u7684\u6587\u4ef6\u5927\u5c0f\u3002</p> <p>WebP\u652f\u6301\u7684\u50cf\u7d20\u6700\u5927\u6570\u91cf\u662f16383x16383\u3002</p> <ul> <li>\u6709\u635f\u538b\u7f29\u7684WebP\u4ec5\u652f\u63018-bit\u7684YUV 4:2:0\u683c\u5f0f</li> <li>\u800c\u65e0\u635f\u538b\u7f29\uff08\u53ef\u9006\u538b\u7f29\uff09\u7684WebP\u652f\u6301VP8L\u7f16\u7801\u4e0e8-bit\u4e4bRGBA\u8272\u5f69\u7a7a\u95f4</li> <li>\u800c\u65e0\u8bba\u662f\u6709\u635f\u6216\u65e0\u635f\u538b\u7f29\u7686\u652f\u6301Alpha\u900f\u660e\u901a\u9053\u3001ICC\u8272\u5f69\u914d\u7f6e\u3001XMP\u8be0\u91ca\u8d44\u6599\u3002</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/2-%E5%9B%BE%E7%89%87/webp/#c","title":"C++\u8bfb\u5199","text":"<p>WebP\u8bfb\u5199\u5e93\u4e0b\u8f7d\u5730\u5740\uff08\u5185\u542b\u7f16\u8bd1\u7248\u672c\u4e0e\u6e90\u4ee3\u7801\uff09\uff1aGoogle WebP\u5e93</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/","title":"\u4e09\u7ef4\u683c\u5f0f","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/#_1","title":"\u80cc\u666f","text":"<p>3D\u5185\u5bb9\u7684\u6765\u6e90\u975e\u5e38\u590d\u6742\uff0c\u5b83\u4eec\u5f80\u5f80\u8fd8\u5177\u6709\u4e0d\u540c\u7684\u6587\u4ef6\u683c\u5f0f\u3002\u8fd9\u91cc\u7ed9\u51fa\u4e86\u591a\u4e2a\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u652f\u6301\u7684\u8d85\u8fc770\u79cd\u4e0d\u540c\u76843D\u6570\u636e\u6587\u4ef6\u683c\u5f0f\u3002</p> <ol> <li>\u901a\u5e38\uff0c\u539f\u751f\u76843D\u6570\u636e\u75313D\u626b\u63cf\u5668\u626b\u63cf\u5f97\u5230\u3002\u8fd9\u4e9b\u626b\u63cf\u5668\u901a\u5e38\u5c06\u626b\u63cf\u5f97\u5230\u76843D\u6570\u636e\u4ee5OBJ\uff0cPLY\u6216STL\u683c\u5f0f\u5b58\u50a8\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u573a\u666f\u7ed3\u6784\u4fe1\u606f\u4ee5\u53ca3D\u6570\u636e\u5982\u4f55\u88ab\u6e32\u67d3\u7684\u4fe1\u606f</li> <li>\u66f4\u4e3a\u590d\u6742\u76843D\u573a\u666f\u6570\u636e\u901a\u5e38\u662f\u4f7f\u7528\u4e00\u4e9b\u521b\u4f5c\u8f6f\u4ef6\u5f97\u5230\u7684\u3002\u8fd9\u4e9b\u521b\u4f5c\u8f6f\u4ef6\u5141\u8bb8\u5bf9\u573a\u666f\u8fdb\u884c\u7f16\u8f91\uff0c\u6bd4\u5982\u5bf9\u5149\u6e90\u3001\u76f8\u673a\u548c\u52a8\u753b\u8fdb\u884c\u7f16\u8f91\u3002\u521b\u4f5c\u8f6f\u4ef6\u901a\u5e38\u4ee5\u81ea\u5df1\u7684\u65b9\u5f0f\u6765\u5b58\u50a8\u8fd9\u4e9b\u53ef\u4ee5\u7f16\u8f91\u76843D\u573a\u666f\u6570\u636e\u3002\u6bd4\u5982Blender\u5c06\u5b83\u7684\u573a\u666f\u6570\u636e\u5b58\u50a8\u4e3a.blend\u6587\u4ef6\uff0cLightWave3D\u5c06\u5b83\u7684\u573a\u666f\u6570\u636e\u5b58\u50a8\u4e3a.lws\u6587\u4ef6\uff0c3ds Max\u5c06\u5b83\u7684\u573a\u666f\u6570\u636e\u5b58\u50a8\u4e3a.max\u6587\u4ef6\uff0cMaya\u5c06\u5b83\u7684\u573a\u666f\u6570\u636e\u5b58\u50a8\u4e3a.ma\u6587\u4ef6\u3002</li> </ol> <p>\u4e3a\u4e86\u6e32\u67d3\u6765\u6e90\u4e0d\u540c\u76843D\u5185\u5bb9\uff0c\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u80fd\u591f\u8bfb\u53d6\u8fd9\u4e9b\u4e2a\u6570\u4e0d\u540c\u76843D\u6570\u636e\u6587\u4ef6\u3002\u4e3a\u4e86\u8fdb\u884c\u6e32\u67d3\uff0c\u573a\u666f\u6570\u636e\u548c3D\u51e0\u4f55\u6570\u636e\u9700\u8981\u8f6c\u6362\u4e3a\u56fe\u5f62API\u53ef\u4ee5\u63a5\u53d7\u7684\u5f62\u5f0f\uff0c\u4ece\u800c\u53ef\u4ee5\u88ab\u4f20\u8f93\u5230\u663e\u5361\u4e0a\u8fdb\u884c\u6e32\u67d3\u3002</p> <p>\u901a\u5e38\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e3a\u6b64\u9700\u8981\u7f16\u5199\u5bfc\u5165\u7a0b\u5e8f\u3001\u52a0\u8f7d\u7a0b\u5e8f</p> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/#_2","title":"\u4e09\u7ef4\u683c\u5f0f\u7684\u5206\u7c7b","text":"<p>\u4e2a\u4eba\u89c2\u70b9\uff0c\u6b22\u8fce\u8ba8\u8bba</p> <p>\u6839\u636e\u4e09\u7ef4\u683c\u5f0f\u6240\u5b58\u50a8\u4e0e\u5173\u6ce8\u7684\u4fe1\u606f\u7c7b\u578b\u4e0d\u540c\uff0c\u7b14\u8005\u5c06\u5b83\u4eec\u5212\u5206\u4e3a\u4ee5\u4e0b\u4e09\u4e2a\u5c42\u7ea7\u3002</p> <ol> <li>\u51e0\u4f55\u5c42\u7ea7\uff1a\u53ea\u8868\u8fbe\uff08\u6216\u91cd\u70b9\u8868\u8fbe\uff09\u7269\u4f53\u51e0\u4f55\u5f62\u4f53\u7684\u683c\u5f0f\uff0c\u4e0d\u5305\u542b\uff08\u6216\u8868\u8fbe\u80fd\u529b\u6709\u9650\uff09\u6a21\u578b\u6811\u3001\u6750\u8d28\u3001\u52a8\u753b\u7b49\u4fe1\u606f\u7684\u683c\u5f0f\u3002\u6b64\u7c7b\u683c\u5f0f\u4e0d\u4ec5\u5305\u62ec\u5b58\u50a8\u8868\u9762\u7f51\u683c\u7684OFF\u3001Ply\u4e0eObj\u683c\u5f0f\uff1b\u8fd8\u5305\u542b\u5b58\u50a8\u53c2\u6570\u5316\u5efa\u6a21\u7ed3\u679c\u7684\u51e0\u4f55\u683c\u5f0f\uff0c\u5982igs\u3001brep\u683c\u5f0f\uff1b\u751a\u81f3\u8fd8\u5305\u542b\u5b58\u50a8\u4f53\u7d20\u7f51\u683c\u7684\u683c\u5f0f\uff0c\u5982vtk\u683c\u5f0f\uff1b</li> <li>\u6a21\u578b\u5c42\u7ea7\uff1a\u5728\u51e0\u4f55\u5c42\u7ea7\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e86\u5bf9\u6a21\u578b\u6811\u3001\u6750\u8d28\u3001\u5c5e\u6027\u7b49\u4fe1\u606f\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u4f46\u4e0d\u5305\u542b\uff08\u6216\u8868\u8fbe\u80fd\u529b\u6709\u9650\uff09\u52a8\u753b\u3001\u6444\u50cf\u673a\u3001\u5149\u6e90\u7b49\u4fe1\u606f\u7684\u683c\u5f0f\uff0c\u4f8b\u5982IFC\u30013DTiles\u7b49\u683c\u5f0f\uff1b</li> <li>\u573a\u666f\u5c42\u7ea7\uff1a\u5728\u6a21\u578b\u5c42\u7ea7\u7684\u57fa\u7840\u4e0a\uff0c\u4fa7\u91cd\u573a\u666f\u7ea7\u522b\u7684\u8868\u8fbe\u4e0e\u5b58\u50a8\uff0c\u80fd\u591f\u8f83\u597d\u7684\u8868\u8fbe\u4e09\u7ef4\u4e2d\u7684\u5404\u7c7b\u4fe1\u606f\u3002\u6b64\u7c7b\u683c\u5f0f\u8bf8\u5982glTF\u3001blend\u7b49\u7b49\u3002</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/#_3","title":"\u76f8\u5173\u6587\u7ae0","text":"<ol> <li>wiki 3D graphics file formats</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/#_4","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>Introduction to glTF using WebGL\uff1b\u4e2d\u6587\u7ffb\u8bd1</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/","title":"Obj\u683c\u5f0f","text":"<p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>Object Files (.obj)</li> <li>opengl\u6559\u7a0b\uff1a\u6a21\u578b\u52a0\u8f7d</li> <li>obj\u6587\u4ef6\u683c\u5f0f\u8be6\u7ec6\u4ecb\u7ecd</li> <li>wiki/obj</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/#_1","title":"\u7b80\u4ecb","text":"<p>The Wavefront Object File (.obj) Format\u3002\u8fd9\u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5b83\u628a\u7a7a\u95f4\u4e2d\u7684\u4e00\u5806\u9876\u70b9\u3001\u6cd5\u7ebf\u3001\u7eb9\u7406\u5750\u6807\u5206\u5f00\u6765\u8868\u793a\uff0c\u7136\u540e\u518d\u628a\u5b83\u4eec\u7ec4\u7ec7\u8d77\u6765</p> <p>obj\u6a21\u578b\u5185\u90e8\u4ee5\u6587\u672c\u5b58\u50a8</p> <ul> <li><code>.obj</code>\u6587\u4ef6\u5b58\u50a8\u51e0\u4f55\u9020\u578b</li> <li><code>.obj</code>\u5185\u53ef\u80fd\u4f1a\u94fe\u63a5\u4e00\u4e2a\u6750\u8d28\u5e93\u6587\u4ef6<code>.mtl</code>\uff0c<code>.mtl</code>\u5185\u90e8\u53ef\u80fd\u4f1a\u94fe\u63a5\u4e00\u4e9b\u6750\u8d28\u4fe1\u606f\uff08\u4f8b\u5982<code>.png</code>\u56fe\u7247\u7b49\uff09</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/#_2","title":"\u793a\u4f8b","text":"<pre><code># Blender3D v249 OBJ File: untitled.blend\n# www.blender3d.org\n\nmtllib cube.mtl\n\nv 1.000000 -1.000000 -1.000000\nv 1.000000 -1.000000 1.000000\nv -1.000000 -1.000000 1.000000\n...\nvt 0.748573 0.750412\nvt 0.749279 0.501284\nvt 0.999110 0.501077\n...\nvn 0.000000 0.000000 -1.000000\nvn -1.000000 -0.000000 -0.000000\nvn -0.000000 -0.000000 1.000000\n...\n\nusemtl Material_ray.png\ns off\nf 5/1/1 1/2/1 4/3/1\nf 5/1/1 4/3/1 8/4/1\nf 3/5/2 7/6/2 8/7/2\nf 8/11/7 7/12/7 6/10/7\n...\n</code></pre> <p>\u6ce8\u91ca</p> <ol> <li>`#\u662f\u6ce8\u91ca\u6807\u8bb0</li> <li><code>usemtl</code>\u548c<code>mtlib</code>\u63cf\u8ff0\u6a21\u578b\u7684\u5916\u89c2\uff0c\u8868\u793a\u6750\u8d28\u76f8\u5173\u7684\u6570\u636e</li> <li><code>o</code> \u8fd9\u91cc\u6ca1\u6709\uff0c\u5b83\u8868\u793a\u5f15\u5165\u4e00\u4e2a\u65b0\u7684object</li> <li><code>v</code>\u4ee3\u8868\u9876\u70b9</li> <li><code>vt</code>\u4ee3\u8868\u9876\u70b9\u7684\u7eb9\u7406\u5750\u6807</li> <li><code>vn</code>\u4ee3\u8868\u9876\u70b9\u7684\u6cd5\u5411\u91cf</li> <li><code>f</code>\u4ee3\u8868\u9762</li> </ol> <p>\u89e3\u91ca\uff1a<code>f 8/11/7 7/12/7 6/10/7</code></p> <ol> <li><code>8/11/7</code>\u63cf\u8ff0\u4e09\u89d2\u5f62\u7684\u7b2c\u4e00\u4e2a\u9876\u70b9<ol> <li><code>8</code>\u8868\u793a\u9876\u70b9\u7d22\u5f15\uff08\u7d22\u5f15\u4ece1\u5f00\u59cb\uff0c\u5e76\u4e0d\u662f\u50cfC++\u4ece0\u5f00\u59cb\uff09\uff0c\u5728\u8fd9\u91cc\u5373\u662f<code>-1.000000 1.000000 -1.000000</code></li> <li><code>11</code>\u8868\u793a\u7eb9\u7406\u7d22\u5f15\uff08\u7d22\u5f15\u4ece1\u5f00\u59cb\uff09\uff0c\u5373<code>0.748355 0.998230</code></li> <li><code>7</code>\u8868\u793a\u6cd5\u7ebf\u7d22\u5f15\uff08\u7d22\u5f15\u4ece1\u5f00\u59cb\uff09\uff0c\u5373<code>0.000000 1.000000 -0.000000</code></li> </ol> </li> <li><code>7/12/7</code>\u63cf\u8ff0\u4e09\u89d2\u5f62\u7684\u7b2c\u4e8c\u4e2a\u9876\u70b9</li> <li><code>6/10/7</code>\u63cf\u8ff0\u4e09\u89d2\u5f62\u7684\u7b2c\u4e09\u4e2a\u9876\u70b9</li> </ol> <p>\u6211\u4eec\u79f0\u8fd9\u4e2a\u4e3a\u6570\u5b57\u7d22\u5f15\u3002\u82e5\u51e0\u4e2a\u9876\u70b9\u5171\u7528\u4e00\u4e2a\u5750\u6807\uff0c\u7d22\u5f15\u5c31\u663e\u5f97\u5f88\u65b9\u4fbf\uff0c\u6587\u4ef6\u4e2d\u53ea\u9700\u4fdd\u5b58\u4e00\u4e2a<code>v</code>\uff0c\u53ef\u4ee5\u591a\u6b21\u5f15\u7528\uff0c\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\u3002\u7f3a\u70b9\uff1a\u65e0\u6cd5\u8ba9OpenGL\u6df7\u7528\u9876\u70b9\u3001\u7eb9\u7406\u548c\u6cd5\u7ebf\u7d22\u5f15</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/#io","title":"IO\u5e93","text":"\u7b2c\u4e09\u65b9\u5e93 \u8bed\u8a00 \u8bf4\u660e tinyobjloader C++ \u5f00\u6e90\u3001\u8f7b\u91cf\u5316\u3002\u652f\u6301\u8bfbobj\uff0c\u5185\u90e8\u4e5f\u63d0\u4f9b\u5199obj\u7684\u793a\u4f8b\uff0c\u4f46\u4e0d\u5b8c\u6574 assimp C++"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8/","title":"Obj\u683c\u5f0f\u5c5e\u6027\u5217\u8868","text":"\u4fe1\u606f \u5185\u5bb9 \u6807\u8bc6 \u9876\u70b9\u6570\u636e(Vertex data) \u51e0\u4f55\u4f53\u9876\u70b9(Geometric vertices) v \u7eb9\u7406\u5750\u6807(Texture vertices) vt \u9876\u70b9\u6cd5\u7ebf(Vertex normals) vn \u53c2\u6570\u7a7a\u683c\u9876\u70b9(Paramter space vertices) vp \u81ea\u7531\u5f62\u6001\u66f2\u7ebf(Free-form curve)/\u8868\u9762\u5c5e\u6027(surface attributes) \u5ea6(degree) deg \u57fa\u7840\u77e9\u9635(Basis matrix) bmat \u6b65\u5c3a\u5bf8(Step size) step \u66f2\u7ebf\u6216\u8868\u9762\u7c7b\u578b(curve or surface type) cstype \u5143\u7d20(Element) \u70b9(Point) p \u7ebf(line) l \u9762(Face) f \u66f2\u7ebf(curve) curv 2D\u66f2\u7ebf(2D curve) curve2 \u8868\u9762(surface) surf \u81ea\u7531\u5f62\u6001\u66f2\u7ebf(Free-form curve)/\u8868\u9762\u4e3b\u4f53\u9648\u8ff0(surface body statements) \u53c2\u6570\u503c\u00a0(Parameter values )\u00a0 parm \u5916\u90e8\u4fee\u526a\u5faa\u73af\u00a0(Outer trimming loop) trim \u5185\u90e8\u6574\u4fee\u5faa\u73af\u00a0(Inner trimming loop)\u00a0 hole \u7279\u6b8a\u66f2\u7ebf\u00a0(Special curve)\u00a0 scrv \u7279\u6b8a\u7684\u70b9\u00a0(Special point)\u00a0 sp \u7ed3\u675f\u9648\u8ff0\u00a0(End statement)\u00a0 end \u81ea\u7531\u5f62\u6001\u8868\u9762\u4e4b\u95f4\u7684\u8fde\u63a5(Connectivity betweenfree-form surfaces) \u8fde\u63a5\u00a0(Connect)\u00a0 con \u6210\u7ec4(Grouping) \u7ec4\u540d\u79f0\u00a0(Group name)\u00a0 g \u5149\u6ed1\u7ec4\u00a0(Smoothing group)\u00a0 s \u5408\u5e76\u7ec4\u00a0(Merging group) mg \u5bf9\u8c61\u540d\u79f0\u00a0(Object name) o \u663e\u793a(Display)/\u6e32\u67d3\u5c5e\u6027(render attributes) \u5bfc\u89d2\u63d2\u503c\u00a0(Bevel interpolation)\u00a0 bevel \u989c\u8272\u63d2\u503c\u00a0(Color interpolation)\u00a0 c_interp \u6eb6\u89e3\u63d2\u503c\u00a0(Dissolve interpolation)\u00a0 d_interp \u7ec6\u8282\u5c42\u6b21\u00a0(Level of detail)\u00a0 lod \u6750\u8d28\u540d\u79f0\u00a0(Material name)\u00a0 usemtl \u6750\u8d28\u5e93\u00a0(Material library) mtllib \u6295\u5c04\u9634\u5f71\u00a0(Shadow casting)\u00a0 shadow_obj \u5149\u7ebf\u8ddf\u8e2a\u00a0(Ray tracing)\u00a0 trace_obj \u66f2\u7ebf\u8fd1\u4f3c\u6280\u672f\u00a0(Curve approximation technique) ctech \u8868\u9762\u8fd1\u4f3c\u6280\u672f\u00a0(Surface approximation technique) stech"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/","title":"Mtl\u6587\u4ef6","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_1","title":"\u7b80\u4ecb","text":"<p>\u6587\u4ef6\u4ecb\u7ecd</p> <ol> <li>mtl\u6587\u4ef6\u8be6\u89e3</li> </ol> <p>mtl\uff0c\u5168\u79f0Material Library File\uff0c\u6750\u8d28\u5e93\u6587\u4ef6\u3002</p> <ol> <li>mtl\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u6750\u8d28\u7684\u5b9a\u4e49\uff0c\u6bcf\u4e2a\u5b9a\u4e49\u5747\u5305\u542b\u5404\u4e2a\u6750\u8d28\u7684\u989c\u8272\u3001\u7eb9\u7406\u548c\u53cd\u5c04\u8d34\u56fe(reflection map)\u3002\u8fd9\u4e9b\u5c06\u5e94\u7528\u4e8e\u5bf9\u8c61\u7684\u8868\u9762\u548c\u9876\u70b9</li> <li>\u6750\u8d28\u6587\u4ef6\u4ee5ASCII\u683c\u5f0f\u5b58\u50a8\uff0c\u5e76\u5177\u6709.mtl\u6269\u5c55\u540d</li> <li>mtl\u6587\u4ef6\u4e0e\u5176\u4ed6Alias|Wavefront\u5c5e\u6027\u6587\u4ef6\uff08\u5982light\u548catmosphere\u6587\u4ef6\uff09\u4e0d\u540c\u5728\u4e8e\uff1amtl\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u6750\u8d28\u5b9a\u4e49\uff0c\u800c\u5176\u4ed6\u5c5e\u6027\u6587\u4ef6\u53ea\u80fd\u5305\u542b\u4e00\u9879\u5b9a\u4e49</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_2","title":"\u6750\u8d28\u53c2\u6570","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_3","title":"\u57fa\u7840\u6750\u8d28","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_4","title":"\u73af\u5883\u5149","text":"<p>The ambient color of the material is declared using Ka. Color definitions are in RGB where each channel's value is between 0 and 1.</p> <pre><code># white\nKa 1.000 1.000 1.000\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_5","title":"\u6f2b\u53cd\u5c04","text":"<p>Similarly, the diffuse color is declared using Kd.</p> <pre><code># white\nKd 1.000 1.000 1.000\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_6","title":"\u9ad8\u5149","text":"<p>The specular color is declared using Ks, and weighted using the specular exponent Ns.</p> <p><code>Ks</code>\u6307\u5b9a\u9ad8\u5149\uff08\u955c\u9762\u53cd\u5c04\uff09\u989c\u8272\u3002</p> <p><code>Ns</code>\u6307\u5b9a\u4eae\u5ea6\uff0c\u5373<code>shininess</code>\uff0c\u4e00\u822c[0, 1000]</p> <pre><code># black (off)\nKs 0.000 0.000 0.000\n# ranges between 0 and 1000\nNs 10.000\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_7","title":"\u900f\u660e\u5ea6","text":"<p>Materials can be transparent. This is referred to as being dissolved. Unlike real transparency, the result does not depend upon the thickness of the object. A value of 1.0 for \"d\" is the default and means fully opaque, as does a value of 0.0 for \"Tr\". Dissolve works on all illumination models.</p> <pre><code># some implementations use 'd'\nd 0.9\n# others use 'Tr' (inverted: Tr = 1 - d)\nTr 0.1\n</code></pre> <p>Transparent materials can additionally have a Transmission Filter Color, specified with \"Tf\".</p> <p>\u900f\u660e\u6750\u6599\u8fd8\u53ef\u4ee5\u6709\u900f\u5c04\u6ee4\u955c\u989c\u8272\uff0c\u7531<code>Tf</code>\u6307\u5b9a\u3002</p> <pre><code># Transmission Filter Color (using R G B)\nTf 1.0 0.5 0.5\n\n# Transmission Filter Color (using CIEXYZ) - y and z values are optional and assumed to be equal to x if omitted\nTf xyz 1.0 0.5 0.5\n\n# Transmission Filter Color from spectral curve file (not commonly used)\nTf spectral &lt;filename&gt;.rfl &lt;optional factor&gt;\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_8","title":"\u6298\u5c04\u7387","text":"<p>A material can also have an optical density for its surface. This is also known as index of refraction.</p> <p>\u6750\u6599\u7684\u8868\u9762\u4e5f\u53ef\u4ee5\u6709\u5149\u5bc6\u5ea6\uff0c\u4e5f\u88ab\u79f0\u4e4b\u4e3a\u6298\u5c04\u7387\u3002 <pre><code># optical density\nNi 1.45000\n</code></pre></p> <p>Values can range from 0.001 to 10. A value of 1.0 means that light does not bend as it passes through an object. Increasing the optical density increases the amount of bending. Glass has an index of refraction of about 1.5. Values of less than 1.0 produce bizarre results and are not recommended.[7]</p> <p>\u53d6\u503c\u8303\u56f4\u4e3a0.001 ~ 10\u3002\u503c\u4e3a1.0\u610f\u5473\u7740\u5149\u5728\u7a7f\u8fc7\u7269\u4f53\u65f6\u4e0d\u4f1a\u5f2f\u66f2\u3002\u589e\u52a0\u5149\u5bc6\u5ea6\u4f1a\u589e\u52a0\u5f2f\u66f2\u91cf\u3002\u73bb\u7483\u7684\u6298\u5c04\u7387\u7ea6\u4e3a1.5\u3002\u5c0f\u4e8e1.0\u7684\u503c\u4f1a\u4ea7\u751f\u5947\u602a\u7684\u7ed3\u679c\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_9","title":"\u7167\u660e\u6a21\u578b","text":"<pre><code>illum 2\n</code></pre> <p>Multiple illumination models are available, per material. Note that it is not required to set a transparent illumination model in order to achieve transparency with \"d\" or \"Tr\", and in modern usage illum models are often not specified, even with transparent materials. The illum models are enumerated as follows:</p> <pre><code>0. Color on and Ambient off\n1. Color on and Ambient on\n2. Highlight on\n3. Reflection on and Ray trace on\n4. Transparency: Glass on, Reflection: Ray trace on\n5. Reflection: Fresnel on and Ray trace on\n6. Transparency: Refraction on, Reflection: Fresnel off and Ray trace on\n7. Transparency: Refraction on, Reflection: Fresnel on and Ray trace on\n8. Reflection on and Ray trace off\n9. Transparency: Glass on, Reflection: Ray trace off\n10. Casts shadows onto invisible surfaces\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_10","title":"\u7eb9\u7406\u6620\u5c04","text":"<p>\u5728\u57fa\u7840\u6750\u8d28\u4e2d\uff0c\u662f\u7528\u4e00\u4e2a\u53c2\u6570\u503c\u6765\u63cf\u8ff0\uff0c\u4f46\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a\u7eb9\u7406\u6765\u505a\u6620\u5c04\u3002</p> <p>Textured materials use the same properties as above, and additionally define texture maps. Below is an example of a common material file. See the full Wavefront file format reference for more details.</p> <p>\u4f8b\u5982\uff1a <pre><code>newmtl Textured\n\u00a0 \u00a0Ka 1.000 1.000 1.000\n\u00a0 \u00a0Kd 1.000 1.000 1.000\n\u00a0 \u00a0Ks 0.000 0.000 0.000\n\u00a0 \u00a0d 1.0\n\u00a0 \u00a0illum 2\n\u00a0 \u00a0\n\u00a0 \u00a0# the ambient texture map\n\u00a0 \u00a0map_Ka lemur.tga\n\n\u00a0 \u00a0# the diffuse texture map (most of the time, it will be the same as the\n\u00a0 \u00a0# ambient texture map)\n\u00a0 \u00a0map_Kd lemur.tga\n\n\u00a0 \u00a0# specular color texture map\n\u00a0 \u00a0map_Ks lemur.tga\n\n\u00a0 \u00a0# specular highlight component\n\u00a0 \u00a0map_Ns lemur_spec.tga\n\n\u00a0 \u00a0# the alpha texture map\n\u00a0 \u00a0map_d lemur_alpha.tga\n\n\u00a0 \u00a0# some implementations use 'map_bump' instead of 'bump' below\n\u00a0 \u00a0map_bump lemur_bump.tga\n\n\u00a0 \u00a0# bump map (which by default uses luminance channel of the image)\n\u00a0 \u00a0bump lemur_bump.tga\n\n\u00a0 \u00a0# displacement map\n\u00a0 \u00a0disp lemur_disp.tga\n\n\u00a0 \u00a0# stencil decal texture (defaults to 'matte' channel of the image)\n\u00a0 \u00a0decal lemur_stencil.tga\n</code></pre></p> <p>Texture map statements may also have option parameters (see full spec).</p> <pre><code>\u00a0 \u00a0# texture origin (1,1,1)\n\u00a0 \u00a0map_Ka -o 1 1 1 ambient.tga\n\n\u00a0 \u00a0# spherical reflection map\n\u00a0 \u00a0refl -type sphere clouds.tga\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_11","title":"\u7eb9\u7406\u9009\u9879","text":"<pre><code>-blendu on | off \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # set horizontal texture blending (default on)\n-blendv on | off \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # set vertical texture blending (default on)\n-boost float_value \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # boost mip-map sharpness\n-mm base_value gain_value \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0# modify texture map values (default 0 1)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0# \u00a0 \u00a0 base_value = brightness, gain_value = contrast\n-o u [v [w]] \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Origin offset \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (default 0 0 0)\n-s u [v [w]] \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Scale \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (default 1 1 1)\n-t u [v [w]] \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Turbulence \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0(default 0 0 0)\n-texres resolution \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # texture resolution to create\n-clamp on | off \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0# only render texels in the clamped 0-1 range (default off)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0# \u00a0 When unclamped, textures are repeated across a surface,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0# \u00a0 when clamped, only texels which fall within the 0-1\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0# \u00a0 range are rendered.\n-bm mult_value \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # bump multiplier (for bump maps only)\n-imfchan r | g | b | m | l | z \u00a0 \u00a0 \u00a0 \u00a0 # specifies which channel of the file is used to\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0# create a scalar or bump texture. r:red, g:green,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0# b:blue, m:matte, l:luminance, z:z-depth..\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0# (the default for bump is 'l' and for decal is 'm')\n</code></pre> <p>\u4f8b\u5b50 <pre><code># says to use the red channel of bumpmap.tga as the bumpmap\nbump -imfchan r bumpmap.tga\n</code></pre></p> <p>For reflection maps... <pre><code>-type sphere \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # specifies a sphere for a \"refl\" reflection map\n-type cube_top \u00a0 \u00a0| cube_bottom | \u00a0 \u00a0 \u00a0# when using a cube map, the texture file for each\n\u00a0 \u00a0 \u00a0 cube_front \u00a0| cube_back \u00a0 | \u00a0 \u00a0 \u00a0# side of the cube is specified separately\n\u00a0 \u00a0 \u00a0 cube_left \u00a0 | cube_right\n</code></pre></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_12","title":"\u5176\u4ed6\u9009\u9879","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#pbr","title":"pbr","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_13","title":"\u6570\u636e\u7ed3\u6784","text":"<p>\u6765\u6e90\u4e8etiny_obj_loader\u7684\u6e90\u7801</p> <pre><code>struct material_t {\nstd::string name;\nreal_t ambient[3]; \u00a0//Ka \u73af\u5883\u5149 [0,1]\nreal_t diffuse[3]; \u00a0//Kd \u6f2b\u53cd\u5c04 [0,1]\nreal_t specular[3]; //Ks \u955c\u9762\u53cd\u5c04\uff08\u9ad8\u5149\uff09 [0,1]\nreal_t transmittance[3]; \u00a0//\nreal_t emission[3];\nreal_t shininess;\nreal_t ior; \u00a0 \u00a0 \u00a0 // index of refraction\nreal_t dissolve; \u00a0// 1 == opaque; 0 == fully transparent\n// illumination model (see http://www.fileformat.info/format/material/)\nint illum;\nint dummy; \u00a0// Suppress padding warning.\nstd::string ambient_texname; \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // map_Ka\nstd::string diffuse_texname; \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // map_Kd\nstd::string specular_texname; \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// map_Ks\nstd::string specular_highlight_texname; \u00a0// map_Ns\nstd::string bump_texname; \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// map_bump, map_Bump, bump\nstd::string displacement_texname; \u00a0 \u00a0 \u00a0 \u00a0// disp\nstd::string alpha_texname; \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // map_d\nstd::string reflection_texname; \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// refl\ntexture_option_t ambient_texopt;\ntexture_option_t diffuse_texopt;\ntexture_option_t specular_texopt;\ntexture_option_t specular_highlight_texopt;\ntexture_option_t bump_texopt;\ntexture_option_t displacement_texopt;\ntexture_option_t alpha_texopt;\ntexture_option_t reflection_texopt;\n// PBR extension\n// http://exocortex.com/blog/extending_wavefront_mtl_to_support_pbr\nreal_t roughness; \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// [0, 1] default 0\nreal_t metallic; \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // [0, 1] default 0\nreal_t sheen; \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// [0, 1] default 0\nreal_t clearcoat_thickness; \u00a0// [0, 1] default 0\nreal_t clearcoat_roughness; \u00a0// [0, 1] default 0\nreal_t anisotropy; \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // aniso. [0, 1] default 0\nreal_t anisotropy_rotation; \u00a0// anisor. [0, 1] default 0\nreal_t pad0;\nstd::string roughness_texname; \u00a0// map_Pr\nstd::string metallic_texname; \u00a0 // map_Pm\nstd::string sheen_texname; \u00a0 \u00a0 \u00a0// map_Ps\nstd::string emissive_texname; \u00a0 // map_Ke\nstd::string normal_texname; \u00a0 \u00a0 // norm. For normal mapping.\ntexture_option_t roughness_texopt;\ntexture_option_t metallic_texopt;\ntexture_option_t sheen_texopt;\ntexture_option_t emissive_texopt;\ntexture_option_t normal_texopt;\nint pad2;\nstd::map&lt;std::string, std::string&gt; unknown_parameter;\n};\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_14","title":"\u6587\u4ef6\u7ec4\u7ec7","text":"<p>.mtl\u6587\u4ef6\u7684\u7ec4\u7ec7\u5982\u4e0b\uff1a</p> <pre><code>\u00a0 \u00a0newmtl my_red\n\u00a0 \u00a0 \u00a0 Material color\n\u00a0 \u00a0 \u00a0 &amp; illumination\n\u00a0 \u00a0 \u00a0 statements\n\u00a0 \u00a0 \u00a0 texture map\n\u00a0 \u00a0 \u00a0 statements\n\u00a0 \u00a0 \u00a0 reflection map\n\u00a0 \u00a0 \u00a0 statement\n\u00a0 \u00a0newmtl my_blue\n\u00a0 \u00a0 \u00a0 Material color\n\u00a0 \u00a0 \u00a0 &amp; illumination\n\u00a0 \u00a0 \u00a0 statements\n\u00a0 \u00a0 \u00a0 texture map\n\u00a0 \u00a0 \u00a0 statements\n\u00a0 \u00a0 \u00a0 reflection map\n\u00a0 \u00a0 \u00a0 statement\n\u00a0 \u00a0newmtl my_green\n\u00a0 \u00a0 \u00a0 Material color\n\u00a0 \u00a0 \u00a0 &amp; illumination\n\u00a0 \u00a0 \u00a0 statements\n\u00a0 \u00a0 \u00a0 texture map\n\u00a0 \u00a0 \u00a0 statements\n\u00a0 \u00a0 \u00a0 reflection map\n\u00a0 \u00a0 \u00a0 statement\n</code></pre> <p>obj\u6302\u63a5\u7eb9\u7406 <pre><code>#\u5f15\u5165\u6750\u8d28\u6587\u4ef6\nmtllib 1.mtl\n\n#\u5728Face\u524d\u5f15\u7528\nusemtl mat1\nf 1 2 3\n</code></pre></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_15","title":"\u793a\u4f8b","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_16","title":"\u9713\u8679\u7eff","text":"<p>\u8fd9\u662f\u4e00\u79cd\u4eae\u7eff\u8272\u7684\u6750\u6599\u3002\u5e94\u7528\u4e8e\u5bf9\u8c61\u65f6\uff0c\u65e0\u8bba\u573a\u666f\u4e2d\u7684\u4efb\u4f55\u706f\u5149\uff0c\u5b83\u90fd\u5c06\u4fdd\u6301\u4eae\u7eff\u8272\u3002</p> <pre><code>newmtl neon_green\nKd 0.0000 1.0000 0.0000\nillum 0\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_17","title":"\u5e73\u5766\u7684\u7eff\u8272","text":"<p>\u8fd9\u662f\u5e73\u5766\u7684\u7eff\u8272\u6750\u6599\u3002</p> <pre><code>newmtl flat_green\nKa 0.0000 1.0000 0.0000\nKd 0.0000 1.0000 0.0000\nillum 1\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_18","title":"\u6eb6\u89e3\u7684\u7eff\u8272","text":"<p>\u8fd9\u662f\u4e00\u79cd\u7eaf\u7eff\u8272\u7684\uff0c\u90e8\u5206\u6eb6\u89e3\u7684\u6750\u6599\u3002</p> <pre><code>newmtl diss_green\nKa 0.0000 1.0000 0.0000\nKd 0.0000 1.0000 0.0000\nd 0.8000\nillum 1\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_19","title":"\u95ea\u4eae\u7684\u7eff\u8272","text":"<p>\u8fd9\u662f\u95ea\u4eae\u7684\u7eff\u8272\u6750\u6599\u3002\u5e94\u7528\u4e8e\u5bf9\u8c61\u65f6\uff0c\u5b83\u5c06\u663e\u793a\u767d\u8272\u955c\u9762\u9ad8\u5149\u3002</p> <pre><code>newmtl Shiny_green\nKa 0.0000 1.0000 0.0000\nKd 0.0000 1.0000 0.0000\nKs 1.0000 1.0000 1.0000\nNs 200.0000\nillum 1\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_20","title":"\u7eff\u955c","text":"<p>\u8fd9\u662f\u4e00\u79cd\u53cd\u5c04\u6027\u7684\u7eff\u8272\u6750\u6599\u3002\u5f53\u5e94\u7528\u4e8e\u5bf9\u8c61\u65f6\uff0c\u5b83\u5c06\u53cd\u6620\u540c\u4e00\u573a\u666f\u4e2d\u7684\u5176\u4ed6\u5bf9\u8c61\u3002</p> <pre><code>newmtl green_mirror\nKa 0.0000 1.0000 0.0000\nKd 0.0000 1.0000 0.0000\nKs 0.0000 1.0000 0.0000\nNs 200.0000\nillum 3\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_21","title":"\u5047\u6321\u98ce\u73bb\u7483","text":"<p>\u6b64\u6750\u6599\u8fd1\u4f3c\u4e8e\u73bb\u7483\u8868\u9762\u3002\u5b83\u51e0\u4e4e\u662f\u5b8c\u5168\u900f\u660e\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u663e\u793a\u573a\u666f\u4e2d\u5176\u4ed6\u5bf9\u8c61\u7684\u53cd\u5c04\u3002\u5b83\u4e0d\u4f1a\u4f7f\u900f\u8fc7\u6750\u6599\u770b\u5230\u7684\u7269\u4f53\u7684\u56fe\u50cf\u53d8\u5f62\u3002</p> <pre><code>newmtl fake_windsh\nKa 0.0000 0.0000 0.0000\nKd 0.0000 0.0000 0.0000\nKs 0.9000 0.9000 0.9000\nd 0.1000\nNs 200\nillum 4\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_22","title":"\u83f2\u6d85\u8033\u84dd","text":"<p>\u8fd9\u79cd\u6750\u6599\u8868\u73b0\u51fa\u4e00\u79cd\u79f0\u4e3a\u83f2\u6d85\u8033\u53cd\u5c04\u7684\u6548\u679c\u3002\u5f53\u65bd\u52a0\u5230\u7269\u4f53\uff0c\u767d\u8272\u6761\u7eb9\u53ef\u80fd\u4f1a\u51fa\u73b0\u5728\u5bf9\u8c61\u7684\u4ee5\u63a0\u5c04\u89d2\u5ea6\u67e5\u770b\u8868\u9762\u3002</p> <pre><code>newmtl fresnel_blu\nKa 0.0000 0.0000 0.0000\nKd 0.0000 0.0000 0.0000\nKs 0.6180 0.8760 0.1430\nNs 200\nillum 5\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_23","title":"\u771f\u5b9e\u7684\u6321\u98ce\u73bb\u7483","text":"<p>\u8be5\u6750\u6599\u7cbe\u786e\u5730\u4ee3\u8868\u4e86\u73bb\u7483\u8868\u9762\u3002\u5b83\u8fc7\u6ee4\u901a\u8fc7\u5b83\u770b\u5230\u7684\u5bf9\u8c61\u7684\u989c\u8272\u3002\u6839\u636e\u6750\u6599\u7684\u900f\u5c04\u8272\u8fdb\u884c\u8fc7\u6ee4\u3002\u8be5\u6750\u6599\u8fd8\u4f1a\u6839\u636e\u5176\u5149\u5bc6\u5ea6\u626d\u66f2\u5bf9\u8c61\u7684\u56fe\u50cf\u3002\u8bf7\u6ce8\u610f\uff0c\u8be5\u6750\u6599\u672a\u6eb6\u89e3\uff0c\u5e76\u4e14\u5176\u73af\u5883\u8272\uff0c\u6f2b\u53cd\u5c04\u8272\u548c\u955c\u9762\u53cd\u5c04\u8272\u5df2\u8bbe\u7f6e\u4e3a\u9ed1\u8272\u3002\u53ea\u6709\u900f\u5c04\u8272\u662f\u975e\u9ed1\u8272\u7684\u3002</p> <pre><code>newmtl real_windsh\nKa 0.0000 0.0000 0.0000\nKd 0.0000 0.0000 0.0000\nKs 0.0000 0.0000 0.0000\nTf 1.0000 1.0000 1.0000\nNs 200\nNi 1.2000\nillum 6\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/mtl%E6%96%87%E4%BB%B6/#_24","title":"\u83f2\u6d85\u8033\u6321\u98ce\u73bb\u7483","text":"<p>\u8be5\u6750\u6599\u7ed3\u5408\u4e86\u793a\u4f8b7\u548c8\u4e2d\u7684\u6548\u679c</p> <pre><code>newmtl fresnel_win\nKa 0.0000 0.0000 1.000\nKd 0.0000 0.0000 1.0000\nKs 0.6180 0.8760 0.1430\nTf 1.0000 1.0000 1.0000\nNs 200\nNi 1.2000\nillum 7\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/%E5%BF%AB%E9%80%9F%E7%BB%9F%E8%AE%A1Obj%E6%A0%BC%E5%BC%8F%E7%9A%84%E5%8C%85%E5%9B%B4%E7%9B%92/","title":"\u5feb\u901f\u7edf\u8ba1Obj\u683c\u5f0f\u7684\u5305\u56f4\u76d2","text":"<p>\u6d4b\u8bd5\u6570\u636e\uff1a139Mb</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/%E5%BF%AB%E9%80%9F%E7%BB%9F%E8%AE%A1Obj%E6%A0%BC%E5%BC%8F%E7%9A%84%E5%8C%85%E5%9B%B4%E7%9B%92/#6186ms","title":"\u65b9\u6cd5\u4e00\uff1a6186ms","text":"<pre><code>BoundingBox box;\nstd::ifstream in(inFile);\nif (!in)\n{\nreturn {};\n}\nfor (std::string tmp; getline(in, tmp); )\n{\nstd::istringstream lineIn(tmp);\nstd::string flag;\nlineIn &gt;&gt; flag;\nif (flag == \"v\")\n{\ndouble xyz[3];\nfor (int i = 0; i &lt; 3 &amp;&amp; !lineIn.eof(); ++i)\n{\nlineIn &gt;&gt; xyz[i];\n}\nbox.expandBy(xyz[0], xyz[1], xyz[2]);\n}\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/%E5%BF%AB%E9%80%9F%E7%BB%9F%E8%AE%A1Obj%E6%A0%BC%E5%BC%8F%E7%9A%84%E5%8C%85%E5%9B%B4%E7%9B%92/#2980ms","title":"\u65b9\u6cd5\u4e8c\uff1a2980ms","text":"<pre><code>BoundingBox calObjAABB(const std::string&amp; inFile)\n{\nstd::ifstream in(inFile);\nif (!in)\n{\nstd::cerr &lt;&lt; \"[Warning] \" &lt;&lt; inFile &lt;&lt; \"Open Failed!\" &lt;&lt; std::endl;\nreturn {};\n}\nauto safeGetline = [](std::istream &amp;is, std::string &amp;t)-&gt;std::istream&amp;\n{\nt.clear();\nstd::istream::sentry se(is, true);\nstd::streambuf *sb = is.rdbuf();\nif (se) {\nfor (;;) {\nint c = sb-&gt;sbumpc();\nswitch (c) {\ncase '\\n':\nreturn is;\ncase '\\r':\nif (sb-&gt;sgetc() == '\\n') sb-&gt;sbumpc();\nreturn is;\ncase EOF:\n// Also handle the case when the last line has no line ending\nif (t.empty()) is.setstate(std::ios::eofbit);\nreturn is;\ndefault:\nt += static_cast&lt;char&gt;(c);\n}\n}\n}\nreturn is;\n};\nauto isSpace = [](const char&amp; x)\n{\nreturn (((x) == ' ') || ((x) == '\\t'));\n};\nauto isDigit = [](const char&amp; x)-&gt;bool\n{\nreturn (static_cast&lt;unsigned int&gt;((x)-'0') &lt; static_cast&lt;unsigned int&gt;(10));\n};\nauto tryParseDouble = [&amp;isDigit](const char *s, const char *s_end, double *result)\n{\nif (s &gt;= s_end) {\nreturn false;\n}\ndouble mantissa = 0.0;\n// This exponent is base 2 rather than 10.\n// However the exponent we parse is supposed to be one of ten,\n// thus we must take care to convert the exponent/and or the\n// mantissa to a * 2^E, where a is the mantissa and E is the\n// exponent.\n// To get the final double we will use ldexp, it requires the\n// exponent to be in base 2.\nint exponent = 0;\n// NOTE: THESE MUST BE DECLARED HERE SINCE WE ARE NOT ALLOWED\n// TO JUMP OVER DEFINITIONS.\nchar sign = '+';\nchar exp_sign = '+';\nchar const *curr = s;\n// How many characters were read in a loop.\nint read = 0;\n// Tells whether a loop terminated due to reaching s_end.\nbool end_not_reached = false;\nbool leading_decimal_dots = false;\n/*\n                BEGIN PARSING.\n        */\n// Find out what sign we've got.\nif (*curr == '+' || *curr == '-') {\nsign = *curr;\ncurr++;\nif ((curr != s_end) &amp;&amp; (*curr == '.')) {\n// accept. Somethig like `.7e+2`, `-.5234`\nleading_decimal_dots = true;\n}\n}\nelse if (isDigit(*curr)) { /* Pass through. */\n}\nelse if (*curr == '.') {\n// accept. Somethig like `.7e+2`, `-.5234`\nleading_decimal_dots = true;\n}\nelse {\ngoto fail;\n}\n// Read the integer part.\nend_not_reached = (curr != s_end);\nif (!leading_decimal_dots) {\nwhile (end_not_reached &amp;&amp; isDigit(*curr)) {\nmantissa *= 10;\nmantissa += static_cast&lt;int&gt;(*curr - 0x30);\ncurr++;\nread++;\nend_not_reached = (curr != s_end);\n}\n// We must make sure we actually got something.\nif (read == 0) goto fail;\n}\n// We allow numbers of form \"#\", \"###\" etc.\nif (!end_not_reached) goto assemble;\n// Read the decimal part.\nif (*curr == '.') {\ncurr++;\nread = 1;\nend_not_reached = (curr != s_end);\nwhile (end_not_reached &amp;&amp; isDigit(*curr)) {\nstatic const double pow_lut[] = {\n1.0, 0.1, 0.01, 0.001, 0.0001, 0.00001, 0.000001, 0.0000001,\n};\nconst int lut_entries = sizeof pow_lut / sizeof pow_lut[0];\n// NOTE: Don't use powf here, it will absolutely murder precision.\nmantissa += static_cast&lt;int&gt;(*curr - 0x30) *\n(read &lt; lut_entries ? pow_lut[read] : std::pow(10.0, -read));\nread++;\ncurr++;\nend_not_reached = (curr != s_end);\n}\n}\nelse if (*curr == 'e' || *curr == 'E') {\n}\nelse {\ngoto assemble;\n}\nif (!end_not_reached) goto assemble;\n// Read the exponent part.\nif (*curr == 'e' || *curr == 'E') {\ncurr++;\n// Figure out if a sign is present and if it is.\nend_not_reached = (curr != s_end);\nif (end_not_reached &amp;&amp; (*curr == '+' || *curr == '-')) {\nexp_sign = *curr;\ncurr++;\n}\nelse if (isDigit(*curr)) { /* Pass through. */\n}\nelse {\n// Empty E is not allowed.\ngoto fail;\n}\nread = 0;\nend_not_reached = (curr != s_end);\nwhile (end_not_reached &amp;&amp; isDigit(*curr)) {\nif (exponent &gt; std::numeric_limits&lt;int&gt;::max() / 10) {\n// Integer overflow\ngoto fail;\n}\nexponent *= 10;\nexponent += static_cast&lt;int&gt;(*curr - 0x30);\ncurr++;\nread++;\nend_not_reached = (curr != s_end);\n}\nexponent *= (exp_sign == '+' ? 1 : -1);\nif (read == 0) goto fail;\n}\nassemble:\n*result = (sign == '+' ? 1 : -1) *\n(exponent ? std::ldexp(mantissa * std::pow(5.0, exponent), exponent)\n: mantissa);\nreturn true;\nfail:\nreturn false;\n};\nauto parseReal = [&amp;tryParseDouble](const char **token, double default_value = 0.0)-&gt;double\n{\n(*token) += strspn((*token), \" \\t\");\nconst char *end = (*token) + strcspn((*token), \" \\t\\r\");\ndouble val = default_value;\ntryParseDouble((*token), end, &amp;val);\ndouble f = static_cast&lt;double&gt;(val);\n(*token) = end;\nreturn f;\n};\nBoundingBox box;\nstd::string linebuf;\nwhile (in.peek() != -1)\n{\nsafeGetline(in, linebuf);\n// Trim newline '\\r\\n' or '\\n'\nif (linebuf.size() &gt; 0)\n{\nif (linebuf[linebuf.size() - 1] == '\\n')\nlinebuf.erase(linebuf.size() - 1);\n}\nif (linebuf.size() &gt; 0)\n{\nif (linebuf[linebuf.size() - 1] == '\\r')\nlinebuf.erase(linebuf.size() - 1);\n}\n// Skip if empty line.\nif (linebuf.empty())\n{\ncontinue;\n}\n// Skip leading space.\nconst char *token = linebuf.c_str();\ntoken += strspn(token, \" \\t\");\nif (token[0] == 'v' &amp;&amp; isSpace(token[1]))\n{\ntoken += 2;\ndouble x = parseReal(&amp;token);\ndouble y = parseReal(&amp;token);\ndouble z = parseReal(&amp;token);\nbox.expandBy(x, y, z);\n}\n}\nreturn box;\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/%E7%AE%80%E5%8D%95%E8%AF%BB%E5%8F%96Obj%E6%96%87%E4%BB%B6/","title":"\u7b80\u5355\u8bfb\u53d6Obj\u6587\u4ef6","text":"<pre><code>// - \u6253\u5f00\u6587\u4ef6\nFILE * file = fopen(path, \"r\");\nif( file == NULL )\n{\nprintf(\"Impossible to open the file !n\");\nreturn false;\n}\n// - \u8bfb\u6587\u4ef6\u76f4\u5230\u6587\u4ef6\u672b\u5c3e\nwhile( 1 )\n{\n// - \u8bfb\u4e00\u884c\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcd\nchar lineHeader[128];   //\u5047\u8bbe\u7b2c\u4e00\u884c\u6587\u5b57\u957f\u5ea6\u4e0d\u8d85\u8fc7128\nint res = fscanf(file, \"%s\", lineHeader);\nif (res == EOF)\nbreak; // EOF = End Of File. Quit the loop.\nelse:\n// \u89e3\u6790lineHeader\n// \u5904\u7406\u9876\u70b9\nif ( strcmp( lineHeader, \"v\" ) == 0 )\n{\n// \u82e5\u7b2c\u4e00\u4e2a\u5b57\u662f'v'\uff0c\u5219\u540e\u9762\u4e00\u5b9a\u662f3\u4e2afloat\nglm::vec3 vertex;\nfscanf(file, \"%f %f %fn\", &amp;vertex.x, &amp;vertex.y, &amp;vertex.z );\ntemp_vertices.push_back(vertex);\n}\nelse if ( strcmp( lineHeader, \"vt\" ) == 0 )\n{\n// \u82e5\u7b2c\u4e00\u4e2a\u5b57\u662f'vt'\uff0c\u5219\u540e\u9762\u4e00\u5b9a\u662f2\u4e2afloat\nglm::vec2 uv;\nfscanf(file, \"%f %fn\", &amp;uv.x, &amp;uv.y );\ntemp_uvs.push_back(uv);\n}\nelse if ( strcmp( lineHeader, \"vn\" ) == 0 )\n{\n//\u5904\u7406\u6cd5\u7ebf\nglm::vec3 normal;\nfscanf(file, \"%f %f %fn\", &amp;normal.x, &amp;normal.y, &amp;normal.z );\ntemp_normals.push_back(normal);\n}\nelse if ( strcmp( lineHeader, \"f\" ) == 0 )\n{\n// \u5904\u7406\u9762\nstd::string vertex1, vertex2, vertex3;\nunsigned int vertexIndex[3], uvIndex[3], normalIndex[3];\nint matches = fscanf(file, \"%d/%d/%d %d/%d/%d %d/%d/%dn\", &amp;vertexIndex[0], &amp;uvIndex[0], &amp;normalIndex[0], &amp;vertexIndex[1], &amp;uvIndex[1], &amp;normalIndex[1], &amp;vertexIndex[2], &amp;uvIndex[2], &amp;normalIndex[2]\n);\nif (matches != 9){\nprintf(\"File can't be read by our simple parser : ( Try exporting with other optionsn\");\nreturn false;\n}\nvertexIndices.push_back(vertexIndex[0]);\nvertexIndices.push_back(vertexIndex[1]);\nvertexIndices.push_back(vertexIndex[2]);\nuvIndices    .push_back(uvIndex[0]);\nuvIndices    .push_back(uvIndex[1]);\nuvIndices    .push_back(uvIndex[2]);\nnormalIndices.push_back(normalIndex[0]);\nnormalIndices.push_back(normalIndex[1]);\nnormalIndices.push_back(normalIndex[2]);\n}\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/TinyObjLoader/","title":"tinyobjloader","text":"<p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>Github\u5730\u5740</li> <li>\u4f7f\u7528\u6848\u4f8b\uff1a\u5b9e\u73b0OBJ\u6587\u4ef6\u7684\u8f7d\u5165</li> <li>OpenGL+TinyObjLoader\u52a0\u8f7dObj</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/TinyObjLoader/#_1","title":"\u5e93\u4e2d\u6570\u636e\u7ed3\u6784","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/TinyObjLoader/#attrib_t","title":"\u9876\u70b9\u6570\u636e\u4fe1\u606fattrib_t","text":"<p>\u4e3b\u8981\u5b58\u653e\u7684\u662fOBJ\u6587\u4ef6\u4e2d\u6240\u6709\u9876\u70b9\u6570\u636e\u4fe1\u606f\uff0c\u5e76\u4e14OBJ\u4e2d\u53ea\u6709\u4e00\u4efd\u9876\u70b9\u6570\u636e\uff0c\u5176\u4ed6\u5b58\u7684\u90fd\u662f\u7d22\u5f15</p> <pre><code>typedef struct {\nstd::vector&lt;real_t&gt; vertices; \u00a0 // 'v' \u00a0\u9876\u70b9\u4f4d\u7f6e\u4fe1\u606f\nstd::vector&lt;real_t&gt; normals; \u00a0 \u00a0// 'vn' \u6cd5\u7ebf\u4fe1\u606f\nstd::vector&lt;real_t&gt; texcoords; \u00a0// 'vt' \u7eb9\u7406\u5750\u6807\u4fe1\u606f\nstd::vector&lt;real_t&gt; colors; \u00a0 \u00a0 // extension: vertex colors \u989c\u8272\u4fe1\u606f\n} attrib_t;\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/TinyObjLoader/#shape_t","title":"\u7269\u4f53\u7684\u4e00\u90e8\u5206shape_t","text":"<p>shape_t\u8868\u793a\u7269\u4f53\u7684\u4e00\u90e8\u5206</p> <p>\u5728\u6587\u4ef6\u4e2d<code>o xxx</code>\u8868\u793a\u8fd9\u90e8\u5206\u7684\u5f00\u59cb\uff1a\u5b58\u50a8\u7684\u4fe1\u606f\u6709\uff1a</p> <pre><code>typedef struct {\nstd::string name; //\u8fd9\u90e8\u5206\u7684\u540d\u79f0\nmesh_t mesh; \u00a0 \u00a0//\u6784\u6210\u8fd9\u90e8\u5206\u7684\u9876\u70b9\u4fe1\u606f\uff0c\u901a\u8fc7\u4f7f\u7528\u7d22\u5f15\u7684\u65b9\u5f0f\u8bb0\u5f55\uff08\u9876\u70b9\u6570\u636e\u90fd\u5728attrib_t\u4e2d\uff09\npath_t path; \u00a0 \u00a0//pairs of indices for lines [?]\u7ebf\u6bb5\u7684\u7d22\u5f15\n} shape_t;\n</code></pre> <p>\u3010\u9876\u70b9\u4fe1\u606fmesh_t\uff08\u7d22\u5f15\uff09\u3011</p> <pre><code>// \u7d22\u5f15\u7ed3\u6784\u652f\u6301\u4e0d\u540c\u7684\u7d22\u5f15\uff0c\u5982vtx/normal/texcoord.\n// -1\u8868\u793a\u672a\u4f7f\u7528\ntypedef struct {\nint vertex_index; //\u9876\u70b9\u4f4d\u7f6e\u4fe1\u606f\nint normal_index; //\u6cd5\u7ebf\u4fe1\u606f\nint texcoord_index; //\u7eb9\u7406\u5750\u6807\u4fe1\u606f\n} index_t; //\u7d22\u5f15\u4fe1\u606f\ntypedef struct {\nstd::vector&lt;index_t&gt; indices; //\u7d22\u5f15\u4fe1\u606f\nstd::vector&lt;unsigned char&gt; num_face_vertices; //\u6bcf\u4e2aface\u7684\u9876\u70b9\u6570\n//3 = polygon, 4 = quad, ... Up to 255.\nstd::vector&lt;int&gt; material_ids; \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //\u6bcf\u4e2aface\u7684\u6750\u6599\u6807\u8bc6\nstd::vector&lt;unsigned int&gt; smoothing_group_ids; //\u6bcf\u4e2aface\u7684smoothing\u7ec4\n// ID(0 = off. positive value = group id)\nstd::vector&lt;tag_t&gt; tags; \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// SubD tag\n} mesh_t;\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/TinyObjLoader/%E7%A4%BA%E4%BE%8B%EF%BC%9Atinyobjloader%E5%86%99%E5%85%A5/","title":"\u793a\u4f8b\uff1atinyobjloader\u5199\u5165","text":"<pre><code>std::cout &lt;&lt; \"# of vertices \u00a0: \" &lt;&lt; (attrib.vertices.size() / 3) &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"# of normals \u00a0 : \" &lt;&lt; (attrib.normals.size() / 3) &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"# of texcoords : \" &lt;&lt; (attrib.texcoords.size() / 2) &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"# of shapes \u00a0 \u00a0: \" &lt;&lt; shapes.size() &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"# of materials : \" &lt;&lt; materials.size() &lt;&lt; std::endl;\n///1. \u83b7\u53d6\u5404\u79cd\u6750\u8d28\u548c\u7eb9\u7406\n{\nfor (int i = 0; i &lt; materials.size(); i++) {\nMaterial* m = new Material();\ntinyobj::material_t tm = materials[i];\nstring name = tm.name;\nif (name.size()) {\nm-&gt;name = name;\n}\nm-&gt;ambient.r = tm.ambient[0];\nm-&gt;ambient.g = tm.ambient[1];\nm-&gt;ambient.b = tm.ambient[2];\nm-&gt;diffuse.r = tm.diffuse[0];\nm-&gt;diffuse.g = tm.diffuse[1];\nm-&gt;diffuse.b = tm.diffuse[2];\nm-&gt;specular.r = tm.specular[0];\nm-&gt;specular.g = tm.specular[1];\nm-&gt;specular.b = tm.specular[2];\nm-&gt;transmittance.r = tm.transmittance[0];\nm-&gt;transmittance.g = tm.transmittance[1];\nm-&gt;transmittance.b = tm.transmittance[2];\nm-&gt;emission.r = tm.emission[0];\nm-&gt;emission.g = tm.emission[1];\nm-&gt;emission.b = tm.emission[2];\nm-&gt;shininess = tm.shininess;\nm-&gt;ior = tm.ior;\nm-&gt;dissolve = tm.dissolve;\nm-&gt;illum = tm.illum;\nm-&gt;pad0 = tm.pad0;\nm-&gt;ambient_tex_id = -1;\nm-&gt;diffuse_tex_id = -1;\nm-&gt;specular_tex_id = -1;\nm-&gt;specular_highlight_tex_id = -1;\nm-&gt;bump_tex_id = -1;\nm-&gt;displacement_tex_id = -1;\nm-&gt;alpha_tex_id = -1;\nm-&gt;ambient_texname = \"\";\nm-&gt;diffuse_texname = \"\";\nm-&gt;specular_texname = \"\";\nm-&gt;specular_highlight_texname = \"\";\nm-&gt;bump_texname = \"\";\nm-&gt;displacement_texname = \"\";\nm-&gt;alpha_texname = \"\";\nif (tm.ambient_texname.size()) {\n}\nif (tm.diffuse_texname.size()) {\n}\nif (tm.specular_texname.size()) {\n}\nif (tm.specular_highlight_texname.size()) {\n}\nif (tm.bump_texname.size()) {\n}\nif (tm.displacement_texname.size()) {\n}\nif (tm.alpha_texname.size()) {\n}\nthis-&gt;materials.push_back(m);\n}\n}\n/// 2.\u9876\u70b9\u6570\u636e\n{\n// For each shape \u904d\u5386\u6bcf\u4e00\u4e2a\u90e8\u5206\nfor (size_t i = 0; i &lt; shapes.size(); i++) {\n// \u8fd9\u90e8\u5206\u7684\u540d\u79f0\nprintf(\"shape[%ld].name = %s\\n\", static_cast&lt;long&gt;(i),\nshapes[i].name.c_str());\n// \u7f51\u683c\u7684\u70b9\u6570\nprintf(\"Size of shape[%ld].mesh.indices: %lu\\n\", static_cast&lt;long&gt;(i),\nstatic_cast&lt;unsigned long&gt;(shapes[i].mesh.indices.size()));\n//printf(\"Size of shape[%ld].path.indices: %lu\\n\", static_cast&lt;long&gt;(i),static_cast&lt;unsigned long&gt;(shapes[i].path.indices.size()));\n//assert(shapes[i].mesh.num_face_vertices.size() == shapes[i].mesh.material_ids.size());\n//assert(shapes[i].mesh.num_face_vertices.size() == shapes[i].mesh.smoothing_group_ids.size());\nprintf(\"shape[%ld].num_faces: %lu\\n\", static_cast&lt;long&gt;(i),\nstatic_cast&lt;unsigned long&gt;(shapes[i].mesh.num_face_vertices.size()));\nModel* model = new Model(); // \u6bcf\u4e00\u90e8\u5206\u7684\u6a21\u578b\u6570\u636e\n// \u9876\u70b9\u6570\u91cf \u00a0= face\u7684\u6570\u91cfx3\nmodel-&gt;mesh_num = shapes[i].mesh.num_face_vertices.size() * 3;\n// \u5f00\u8f9f\u7a7a\u95f4\nVertex *mesh_data = new Vertex[model-&gt;mesh_num];\nsize_t index_offset = 0;\n// For each face\nfor (size_t f = 0; f &lt; shapes[i].mesh.num_face_vertices.size(); f++) {\nsize_t fnum = shapes[i].mesh.num_face_vertices[f];\n// \u83b7\u5f97\u6240\u7d22\u5f15\u4e0b\u6807\ntinyobj::index_t idx;\nint vertex_index[3];\nint normal_index[3];\nint texcoord_index[3];\nfor (size_t v = 0; v &lt; fnum; v++) {\nidx = shapes[i].mesh.indices[index_offset + v];\nvertex_index[v] = idx.vertex_index;\ntexcoord_index[v] = idx.texcoord_index;\nnormal_index[v] = idx.normal_index;\n}\nfor (size_t v = 0; v &lt; fnum; v++) {\n// v\nmesh_data[index_offset + v].pos.x = attrib.vertices[(vertex_index[v]) * 3 + 0];\nmesh_data[index_offset + v].pos.y = attrib.vertices[(vertex_index[v]) * 3 + 1];\nmesh_data[index_offset + v].pos.z = attrib.vertices[(vertex_index[v]) * 3 + 2];\nmesh_data[index_offset + v].pos.w = 1.0f;\n// vt\nmesh_data[index_offset + v].tc.u = attrib.texcoords[texcoord_index[v] * 2 + 0];\nmesh_data[index_offset + v].tc.v = attrib.texcoords[texcoord_index[v] * 2 + 1];\n// vn\nmesh_data[index_offset + v].normal.x = attrib.normals[normal_index[v] * 3 + 0];\nmesh_data[index_offset + v].normal.y = attrib.normals[normal_index[v] * 3 + 1];\nmesh_data[index_offset + v].normal.z = attrib.normals[normal_index[v] * 3 + 2];\nmesh_data[index_offset + v].normal.w = 1.0f;\n// color\nmesh_data[index_offset + v].color.r = 1.0f;\nmesh_data[index_offset + v].color.g = 1.0f;\nmesh_data[index_offset + v].color.b = 1.0f;\nmesh_data[index_offset + v].color.a = 1.0f;\n}\n// \u504f\u79fb\nindex_offset += fnum;\n}\nmodel-&gt;mesh = mesh_data;\nmodels.push_back(model);\n}\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Obj%E6%A0%BC%E5%BC%8F/TinyObjLoader/%E7%A4%BA%E4%BE%8B%EF%BC%9Atinyobjloader%E8%AF%BB%E5%8F%96/","title":"\u793a\u4f8b\uff1atinyobjloader\u8bfb\u53d6","text":"<p>\u53ef\u53c2\u8003\u6e90\u4ee3\u7801\u4e2d\u7684loader_exmaple.cc</p> <ol> <li>\u52a0\u5165\u6e90\u4ee3\u7801\uff1a\u5c06tiny_obj_loader.h\u653e\u5165\u5de5\u7a0b</li> <li> <p>include\uff1a <pre><code>#define TINYOBJLOADER_IMPLEMENTATION\n#include \"tiny_obj_loader.h\"\n</code></pre></p> </li> <li> <p>\u8bfb\u53d6\u5e76\u5b58\u50a8\u6570\u636e <pre><code>bool Object::make_mesh_and_material_by_obj(const char* filename,\nconst char* basepath,\nbool triangulate){\nstd::cout &lt;&lt; \"Loading \" &lt;&lt; filename &lt;&lt; std::endl;\ntinyobj::attrib_t attrib; // \u6240\u6709\u7684\u6570\u636e\u653e\u5728\u8fd9\u91cc\nstd::vector&lt;tinyobj::shape_t&gt; shapes;\n// \u4e00\u4e2ashape,\u8868\u793a\u4e00\u4e2a\u90e8\u5206,\n// \u5176\u4e2d\u4e3b\u8981\u5b58\u7684\u662f\u7d22\u5f15\u5750\u6807mesh_t\u7c7b,\u653e\u5728indices\u4e2d\nstd::vector&lt;tinyobj::material_t&gt; materials;\nstd::string warn;\nstd::string err;\nbool ret = tinyobj::LoadObj(&amp;attrib, &amp;shapes, &amp;materials, &amp;warn, &amp;err, filename,\nbasepath, triangulate);\n// \u63a5\u4e0b\u91cc\u5c31\u662f\u4ece\u4e0a\u9762\u7684\u5c5e\u6027\u4e2d\u53d6\u503c\u4e86\nif (!warn.empty()) {\nstd::cout &lt;&lt; \"WARN: \" &lt;&lt; warn &lt;&lt; std::endl;\n}\nif (!err.empty()) {\nstd::cerr &lt;&lt; \"ERR: \" &lt;&lt; err &lt;&lt; std::endl;\n}\nif (!ret) {\nprintf(\"Failed to load/parse .obj.\\n\");\nreturn false;\n}\nstd::cout &lt;&lt; \"# Loading Complete #\"&lt;&lt; std::endl;\n//PrintInfo(attrib, shapes, materials);\nreturn true;\n}\n</code></pre></p> </li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Off%E6%A0%BC%E5%BC%8F/","title":"Off\u683c\u5f0f","text":"<p>\u7269\u4f53\u6587\u4ef6\u683c\u5f0f\uff08.off\uff09\u6587\u4ef6\u901a\u8fc7\u63cf\u8ff0\u7269\u4f53\u8868\u9762\u7684\u591a\u8fb9\u5f62\u6765\u8868\u793a\u4e00\u4e2a\u6a21\u578b\u7684\u51e0\u4f55\u7ed3\u6784\uff0c\u8fd9\u91cc\u7684\u591a\u8fb9\u5f62\u53ef\u4ee5\u6709\u4efb\u610f\u6570\u91cf\u7684\u9876\u70b9\u3002</p> <p>\u666e\u6797\u65af\u987f\u5f62\u72b6 Banchmark\uff08Princeton Shape Benchmark\uff09\u4e2d\u7684 .off \u6587\u4ef6\u9075\u5faa\u4ee5\u4e0b\u6807\u51c6\uff1a</p> <ul> <li>OFF\u6587\u4ef6\u5168\u662f\u4ee5OFF\u5173\u952e\u5b57\u5f00\u59cb\u7684ASCII\u6587\u4ef6\u3002</li> <li>\u4e0b\u4e00\u884c\u8bf4\u660e\u9876\u70b9\u7684\u6570\u91cf\u3001\u9762\u7247\u7684\u6570\u91cf\u3001\u8fb9\u7684\u6570\u91cf\u3002\u8fb9\u7684\u6570\u91cf\u53ef\u4ee5\u5b89\u5168\u5730\u7701\u7565\u3002</li> <li>\u9876\u70b9\u6309\u6bcf\u884c\u4e00\u4e2a\u5217\u51fax\u3001y\u3001z\u5750\u6807\u3002</li> <li>\u5728\u9876\u70b9\u5217\u8868\u540e\uff0c\u9762\u7247\u6309\u7167\u6bcf\u884c\u4e00\u4e2a\u5217\u8868\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u9762\u7247\uff0c\u9876\u70b9\u7684\u6570\u91cf\u662f\u6307\u5b9a\u7684\uff0c\u63a5\u4e0b\u6765\u662f\u9876\u70b9\u7d22\u5f15\u5217\u8868\u3002</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Off%E6%A0%BC%E5%BC%8F/#_1","title":"\u793a\u4f8b","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Off%E6%A0%BC%E5%BC%8F/#_2","title":"\u70b9\u4e91","text":"<pre><code>OFF\n\u9876\u70b9\u6570 \u9762\u7247\u6570 \u8fb9\u6570\nx y z\nx y z\n...\nn\u4e2a\u9876\u70b9 \u9876\u70b91\u7684\u7d22\u5f15 \u9876\u70b92\u7684\u7d22\u5f15 \u2026 \u9876\u70b9n\u7684\u7d22\u5f15\n...\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Off%E6%A0%BC%E5%BC%8F/#_3","title":"\u6a21\u578b","text":"<pre><code>OFF\n8 12 0\n-0.274878 -0.274878 -0.274878\n-0.274878  0.274878 -0.274878\n 0.274878  0.274878 -0.274878\n 0.274878 -0.274878 -0.274878\n-0.274878 -0.274878  0.274878\n-0.274878  0.274878  0.274878\n 0.274878  0.274878  0.274878\n 0.274878 -0.274878  0.274878\n3  0 1 3\n3  3 1 2\n3  0 4 1\n3  1 4 5\n3  3 2 7\n3  7 2 6\n3  4 0 3\n3  7 4 3\n3  6 4 7\n3  6 5 4\n3  1 5 6\n3  2 1 6\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Off%E6%A0%BC%E5%BC%8F/#_4","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>https://people.sc.fsu.edu/~jburkardt/data/off/off.html</li> <li>http://local.wasp.uwa.edu.au/~pbourke/dataformats/off/</li> <li>http://www.holmes3d.net/graphics/offfiles/offdesc.txt</li> <li>http://www.holmes3d.net/graphics/offfiles/</li> <li>http://shape.cs.princeton.edu/benchmark/documentation/off_format.html</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Ply%E6%A0%BC%E5%BC%8F/","title":"Ply\u683c\u5f0f","text":"<p>\u300cply\u300dPolygon File Format\uff08\u591a\u8fb9\u5f62\u6587\u4ef6\u683c\u5f0f\uff09\u6216Stanford Triangle Format\uff08\u65af\u5766\u798f\u4e09\u89d2\u5f62\u6863\u6848\uff09</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Ply%E6%A0%BC%E5%BC%8F/#_1","title":"\u793a\u4f8b","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Ply%E6%A0%BC%E5%BC%8F/#_2","title":"\u6a21\u578b","text":"<pre><code>ply                 \nformat ascii 1.0   \n    //\u6570\u636e\u4fdd\u5b58\u683c\u5f0f\uff0c\u4e09\u7c7b\n    //format ascii 1.0\n    //format binary_little_endian 1.0\n    //format binary_big_endian 1.0\nelement vertex 8 //\u5143\u7d20\uff1a\u9876\u70b9 \u4e2a\u6570\u4e3a8\nproperty float x    \nproperty float y    \nproperty float z    //\u9876\u70b9\u683c\u5f0f\uff1a\u4f9d\u6b21\u4e3ax,yz\u5750\u6807\nelement edge 6  //\u5143\u7d20\uff1a\u8fb9 6\u6761\nproperty int vertex1\nproperty int vertex2\nproperty uchar red  \nproperty uchar green\nproperty uchar blue //\u8fb9\u5b58\u50a8\u683c\u5f0f\u4e3a\uff1a \u9876\u70b9id 1\uff0c2\uff0c\u989c\u8272r,g,b\nend_header  //\u5934\uff0c\u4ee5end_header\u7ed3\u675f\n0.194585 0.0202505 -0.654565\n0.393574 0.0181872 -0.634588\n0.196413 0.220227 -0.652125\n0.174584 0.0180056 -0.455581\n0.811062 -0.0294865 -0.551833\n0.991697 -0.0650619 -0.473697\n0.845413 0.167279 -0.541659\n0.73238 -0.0252545 -0.368009  //\u70b9\u5185\u5bb9\uff0c8\u4e2a\u9876\u70b9\uff08x,y,z\uff09\u5750\u6807\n0 1 255 0 0\n0 2 0 255 0\n0 3 0 0 255\n4 5 255 0 0\n4 6 0 255 0\n4 7 0 0 255   //6\u6761\u8fb9\uff0c\uff08id1,id2,r,g,b\uff09\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Ply%E6%A0%BC%E5%BC%8F/#_3","title":"\u70b9\u4e91","text":"<pre><code>ply\nformat ascii 1.0\nelement vertex %(vert_num)\nproperty float x\nproperty float y\nproperty float z\nproperty uchar red\nproperty uchar green\nproperty uchar blue\nend_header\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Stl%E6%A0%BC%E5%BC%8F/","title":"STL\u683c\u5f0f","text":"<p>STL\u6587\u4ef6\u7ed3\u6784\u975e\u5e38\u7b80\u5355\uff0c\u5176\u53ea\u80fd\u63cf\u8ff0\u4e09\u7ef4\u7269\u4f53\u7684\u51e0\u4f55\u4fe1\u606f\uff0c\u4e0d\u652f\u6301\u989c\u8272\u6750\u8d28\u7b49\u4fe1\u606f\uff0c\u662f\u4e09\u7ef4\u6253\u5370\u673a\u652f\u6301\u7684\u6700\u5e38\u89c1\u7684\u6587\u4ef6\u683c\u5f0f\u4e4b\u4e00\u3002</p> <p>stl\u6587\u4ef6\u6709\u4e24\u79cd\uff1a</p> <ol> <li>\u4e00\u79cd\u662f\u660e\u7801\u683c\u5f0f</li> <li>\u53e6\u4e00\u79cd\u662f\u4e8c\u8fdb\u5236\u683c\u5f0f</li> </ol> <p>\u76f8\u5173\u5e93</p> <ol> <li>https://github.com/dacunni/stlloader</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Stl%E6%A0%BC%E5%BC%8F/#stl","title":"\u660e\u7801STL","text":"<pre><code>solid filename stl     //\u6587\u4ef6\u8def\u5f84\u53ca\u6587\u4ef6\u540d \nfacet normal x y z     //\u4e09\u89d2\u9762\u7247\u6cd5\u5411\u91cf\u76843\u4e2a\u5206\u91cf\u503c \nouter loop \n   vertex x y z        //\u4e09\u89d2\u9762\u7247\u7b2c\u4e00\u4e2a\u9876\u70b9\u5750\u6807 \n   vertex x y z        //\u4e09\u89d2\u9762\u7247\u7b2c\u4e8c\u4e2a\u9876\u70b9\u5750\u6807 \n   vertex x y z        //\u4e09\u89d2\u9762\u7247\u7b2c\u4e09\u4e2a\u9876\u70b9\u5750\u6807 \n   endloop   \n   endfacet            //\u5b8c\u6210\u4e00\u4e2a\u4e09\u89d2\u9762\u7247\u5b9a\u4e49 \n   --- \nendsolid filename stl  //\u6574\u4e2aSTL\u6587\u4ef6\u5b9a\u4e49\u7ed3\u675f\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/1-%E4%B8%89%E7%BB%B4%E5%87%A0%E4%BD%95%E6%A0%BC%E5%BC%8F/Stl%E6%A0%BC%E5%BC%8F/#stl_1","title":"\u4e8c\u8fdb\u5236STL","text":"<pre><code>UINT8[80]         -   Header\nUINT32            -   Number of triangles\nforeach triangle\n  REAL32[3]       -    Normal vector\n  REAL32[3]       -    Vertex 1\n  REAL32[3]       -    Vertex 2\n  REAL32[3]       -    Vertex 3\n  UINT16          -    Attribute byte count\nend\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/DGN%E6%A0%BC%E5%BC%8F%28bentley%29/","title":"bentley\u6570\u636e\u683c\u5f0f","text":"<p>\u5185\u5bb9\u6765\u81eaChatGPT\uff0c[\u221a]\u5df2\u9a8c\u8bc1\u662f\u6b63\u786e\u4fe1\u606f\uff0c[\u00d7]\u9519\u8bef\u4fe1\u606f\uff0c\u5176\u4ed6\u7684\u672a\u9a8c\u8bc1</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/DGN%E6%A0%BC%E5%BC%8F%28bentley%29/#dgn","title":"DGN","text":"<p>DGN\uff08Design\uff09\u683c\u5f0f\u662fBentley\u8f6f\u4ef6\u81ea\u4e3b\u4e09\u7ef4\u6570\u636e\u683c\u5f0f</p> <ul> <li>\u8be5\u683c\u5f0f\u662f\u4e00\u79cd\u57fa\u4e8e\u4e8c\u8fdb\u5236\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u7528\u4e8e\u5b58\u50a8CAD\u548cGIS\u6570\u636e\uff0c\u5e76\u652f\u6301\u590d\u6742\u7684\u4e8c\u7ef4\u548c\u4e09\u7ef4\u51e0\u4f55\u5143\u7d20\u3001\u5c5e\u6027\u548c\u5173\u7cfb\u6570\u636e</li> <li>DGN\u683c\u5f0f\u6700\u521d\u662f\u7531Intergraph\u516c\u53f8\u5f00\u53d1\uff0c\u540e\u6765\u88abBentley Systems\u91c7\u7528\u5e76\u6210\u4e3a\u5176\u4e3b\u8981\u7684\u4e09\u7ef4\u6570\u636e\u4ea4\u6362\u683c\u5f0f\u4e4b\u4e00</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/DGN%E6%A0%BC%E5%BC%8F%28bentley%29/#_1","title":"\u8f6f\u4ef6","text":"<p>\u652f\u6301DGN\u7684\u8f6f\u4ef6\u5982\u4e0b\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f</p> <ol> <li>\u4e0d\u540c\u7684\u8f6f\u4ef6\u3001\u5de5\u5177\u3001\u5f00\u53d1\u5305\u548c\u7b2c\u4e09\u65b9\u5e93\u5bf9DGN\u683c\u5f0f\u7684\u652f\u6301\u7a0b\u5ea6\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u67d0\u4e9b\u7279\u5b9a\u7248\u672c\u53ef\u80fd\u652f\u6301\u7684\u529f\u80fd\u4e5f\u4f1a\u5b58\u5728\u5dee\u5f02</li> <li>\u5728\u9009\u62e9\u4f7f\u7528\u65f6\uff0c\u8bf7\u4ed4\u7ec6\u67e5\u770b\u5b83\u4eec\u7684\u6587\u6863\u548c\u529f\u80fd\u5217\u8868\uff0c\u5e76\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u8fdb\u884c\u9009\u62e9</li> </ol> \u8f6f\u4ef6 \u7b80\u4ecb Bentley MicroStation Bentley Systems\u5f00\u53d1\u7684CAD/BIM\u8f6f\u4ef6\uff0c\u80fd\u591f\u76f4\u63a5\u8bfb\u53d6\u3001\u7f16\u8f91\u548c\u521b\u5efaDGN\u683c\u5f0f\u6587\u4ef6 Autodesk AutoCAD Autodesk\u516c\u53f8\u5f00\u53d1\u7684CAD\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u63d2\u4ef6\u6216\u8005\u5176\u4ed6\u65b9\u5f0f\u5b9e\u73b0\u5bf9DGN\u683c\u5f0f\u6587\u4ef6\u7684\u8bfb\u53d6 Siemens PLM Solid Edge Siemens PLM Software\u5f00\u53d1\u7684\u673a\u68b0\u8bbe\u8ba1\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u8bfb\u53d6\u548c\u7f16\u8f91DGN\u683c\u5f0f\u6587\u4ef6 Esri ArcGIS Esri\u5f00\u53d1\u7684\u5730\u7406\u4fe1\u606f\u7cfb\u7edf\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u8bfb\u53d6\u548c\u5904\u7406DGN\u683c\u5f0f\u7684\u5730\u56fe\u6570\u636e FME Safe Software\u516c\u53f8\u5f00\u53d1\u7684\u6570\u636e\u8f6c\u6362\u548c\u96c6\u6210\u5de5\u5177\uff0c\u80fd\u591f\u8bfb\u53d6\u3001\u8f6c\u6362\u548c\u5bfc\u51fa\u591a\u79cdCAD\u548cGIS\u683c\u5f0f\uff0c\u5305\u62ecDGN\u683c\u5f0f"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/DGN%E6%A0%BC%E5%BC%8F%28bentley%29/#_2","title":"\u547d\u4ee4\u884c\u5de5\u5177","text":"\u547d\u4ee4\u884c\u5de5\u5177 \u7b80\u4ecb \u6536\u8d39 bentley MicroStation msbatch \u5b89\u88c5bentley\u8f6f\u4ef6\u540e\uff0c\u5728\u5b89\u88c5\u76ee\u5f55\u4e0b\u6709msbatch\uff0c\u4f46\u6587\u6863\u5f88\u5c11\u3002 ODA Teigha File Converter 4.7\u4ee5\u4e0a\u7248\u672c([\u00d7]\u6ca1\u6709\u627e\u52304.7\u7248\u672c\uff0c\u5176\u4ed6\u7248\u672c\u4e0d\u652f\u6301\u8bfb\u5165DGN) Open Design Alliance\u63d0\u4f9b\u7684\u514d\u8d39\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u53ef\u4ee5\u5b9e\u73b0\u591a\u79cdCAD\u548cBIM\u683c\u5f0f\u4e4b\u95f4\u7684\u76f8\u4e92\u8f6c\u6362\uff0c\u5305\u62ecDGN\u683c\u5f0f\u3002\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u8be5\u5de5\u5177\u5c06DGN\u6587\u4ef6\u8f6c\u6362\u4e3a\u5176\u4ed6CAD/BIM\u683c\u5f0f\uff0c\u4f8b\u5982DWG\u3001DXF\u3001IGES\u548cSTEP\u7b49\u3002 \u514d\u8d39\u8f6f\u4ef6\uff0c\u65e0\u9700\u6ce8\u518c\u6216\u6fc0\u6d3b FME Desktop \u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u6a21\u5f0f\u5b9e\u73b0\u5bf9DGN\u683c\u5f0f\u6587\u4ef6\u7684\u8bfb\u53d6\u3001\u8f6c\u6362\u548c\u5bfc\u51fa"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/DGN%E6%A0%BC%E5%BC%8F%28bentley%29/#_3","title":"\u5f00\u53d1\u5305","text":"\u5f00\u53d1\u5305 \u7b80\u4ecb \u6536\u8d39 Open Design Alliance Teigha Open Design Alliance\u63d0\u4f9b\u7684CAD\u5f00\u53d1\u5305\uff0c\u53ef\u4ee5\u8bfb\u53d6\u548c\u5199\u5165\u591a\u79cdCAD\u683c\u5f0f\uff0c\u5176\u4e2d\u5305\u62ecDGN\u683c\u5f0f \u6536\u8d39 Bentley DGN SDK Bentley Systems\u63d0\u4f9b\u7684\u4e13\u95e8\u9488\u5bf9DGN\u683c\u5f0f\u7684\u8f6f\u4ef6\u5f00\u53d1\u5de5\u5177\u5305\uff0c\u5305\u62ecC++ API\u548c.NET API\u3002\u8be5SDK\u53ef\u7528\u4e8e\u8bfb\u53d6\u3001\u7f16\u8f91\u548c\u521b\u5efaDGN\u6587\u4ef6\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u6587\u6863\u548c\u793a\u4f8b\u4ee3\u7801 \u6536\u8d39 GDAL/OGR \u5f00\u6e90\u7684\u5730\u7406\u7a7a\u95f4\u6570\u636e\u5904\u7406\u5e93\uff0c\u53ef\u4ee5\u8bfb\u53d6\u3001\u8f6c\u6362\u548c\u5904\u7406\u591a\u79cdGIS\u683c\u5f0f\uff0c\u5305\u62ecDGN\u683c\u5f0f"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/DGN%E6%A0%BC%E5%BC%8F%28bentley%29/MicroStation%E8%BD%AF%E4%BB%B6/","title":"MicroStation\u8f6f\u4ef6","text":"<p>MicroStation\u662fBentley\u5f00\u53d1\u7684CAD/BIM\u8f6f\u4ef6\uff0c\u652f\u6301\u5f88\u591a\u683c\u5f0f\u3002\u53ef\u4ee5\u4eba\u5de5\u6253\u5f00DGN\u683c\u5f0f\uff0c\u5e76\u5bfc\u51fa\u6210\u5176\u4ed6\u6240\u652f\u6301\u7684\u683c\u5f0f\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/DGN%E6%A0%BC%E5%BC%8F%28bentley%29/MicroStation%E8%BD%AF%E4%BB%B6/#_1","title":"\u5bfc\u5165","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/DGN%E6%A0%BC%E5%BC%8F%28bentley%29/MicroStation%E8%BD%AF%E4%BB%B6/#_2","title":"\u5bfc\u51fa","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/DGN%E6%A0%BC%E5%BC%8F%28bentley%29/MicroStation%E8%BD%AF%E4%BB%B6/#_3","title":"\u6279\u8f6c\u6362\u5de5\u5177","text":"<p>\u76f8\u5173\u6587\u6863\uff1a\u4ece\u7cfb\u7edf\u547d\u4ee4\u884c\u8fd0\u884c\u4fdd\u5b58\u7684\u6279\u8f6c\u6362\u4f5c\u4e1a (bentley.com)</p> <p>\u5de5\u5177\u4f4d\u7f6e\uff1a\u6587\u4ef6 &gt; \u5de5\u5177 &gt; \u6279\u8f6c\u6362\u5668</p> <p>\u201c\u6279\u8f6c\u6362\u201d\u6240\u652f\u6301\u7684\u201c\u8f93\u51fa\u683c\u5f0f\u201d\uff1aDGN V8\u3001DGN V7\u3001DWG\u3001DXF\u3001IGES\u3001STEP\u3001CGM\u3001XMT\u3001SAT\u3001STL\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/DGN%E6%A0%BC%E5%BC%8F%28bentley%29/MicroStation%E8%BD%AF%E4%BB%B6/#_4","title":"\u4e8c\u6b21\u5f00\u53d1","text":"<p>MicroStation dotnet\u4e8c\u6b21\u5f00\u53d1\uff0c\u53ef\u4ee5\u65e0\u9700\u4e0b\u8f7dSDK\uff0c\u94fe\u63a5\u8f6f\u4ef6\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684dll\u5373\u53ef\u3002</p> <p>\u76f8\u5173\u8d44\u6599</p> <ol> <li>MicroStation Wednesday\u89c6\u9891\u5206\u4eab </li> <li>\u6df1\u5165\u63a2\u8ba8MicroStation DGN\u57fa\u672c\u6982\u5ff5\u7cfb\u5217</li> <li>\u4e00\u6b65\u6b65\u5b66\u4e60MicroStation CE Addin\u5f00\u53d1</li> <li>\u4e00\u6b65\u6b65\u5b66\u4e60MicroStation CE MDL\u5f00\u53d1</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/","title":"IFC\u683c\u5f0f","text":"<p>IFC\uff0cIndustry Foundation Classes\u5de5\u4e1a\u57fa\u7840\u7c7b\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/#ifc","title":"IFC\u6807\u51c6","text":"<p>IFC\u662f\u4e00\u4e2a\u6807\u51c6\uff0c\u6307\u5b9aIFC\u6807\u51c6\u7684\u7ec4\u7ec7\u4e0d\u63d0\u4f9b\u89e3\u6790\u5e93\uff0c\u5e02\u9762\u4e0a\u6709\u5f88\u591aIFC\u7684\u89e3\u6790\u5e93\uff0c\u5176\u4e2dIfcEngine\u6bd4\u8f83\u6743\u5a01\u3002</p> <p>IFC\u6807\u51c6\u7528<code>EXPRESS</code>\u8bed\u8a00\u63cf\u8ff0</p> <ul> <li><code>EXPRESS</code>\u8bed\u8a00\u7684\u540e\u7f00\u540d.exp</li> <li>\u4e00\u4e2aIFC\u6807\u51c6\u5bf9\u5e94\u4e00\u4e2aEXP\uff08\u653e\u5728Tools\\IFCTo3dTiles\\bin\\x64\\Debug\\\u76ee\u5f55\u4e0b\uff0cIfcEngine\u4f7f\u7528\u5bf9\u5e94\u7248\u672c\u7684exp\u89e3\u6790\u6587\u4ef6\uff09</li> </ul> <p>IFC\u7248\u672c</p> <ol> <li><code>IFC2X3_TC1.exp</code></li> <li><code>IFC4.exp</code>\uff1b\uff08IFC4_ADD1.exp\uff1bIFC4_ADD2.exp\u662f4\u7684\u5c0f\u7248\u672c\uff09</li> <li><code>IFC4X1.exp</code></li> </ol> <p>IFC\u628a\u5b9e\u4f53\u3001\u5b9e\u4f53\u7684\u51e0\u4f55\u7ed3\u6784\u3001\u5173\u7cfb\u3001\u5c5e\u6027\u90fd\u62bd\u8c61\u6210\u4e86\u5bf9\u8c61\u3002\u53ef\u4ee5\u8bf4\uff0cIFC\u672c\u8eab\u662f\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/#ifc_1","title":"Ifc\u6570\u636e\u7ed3\u6784","text":"<p>IFC\u5bf9\u8c61\u95f4\uff08\u63cf\u8ff0\u4e00\u4e2a\u7a7a\u95f4\u7ed3\u6784\uff09\u7684\u6811\u72b6\u5173\u7cfb\uff1a\u6700\u591a\u4e3a\u56db\u5c42  </p> <ol> <li>IfcProject\u9879\u76ee  </li> <li>IfcSite\u573a\u5730  </li> <li>IfcBuilding\u697c\u623f  </li> <li>IfcBuildingStorey\uff08\u5bf9\u8c61\u7684\u6700\u5c0f\u5355\u5143\uff09  </li> </ol> <p>\u6784\u4ef6\uff08IfcBuildingStorey\u7684\u4e00\u4e2a\u4e2a\u90e8\u4ef6\uff09\uff0c\u5305\u542b\u4e86\u51e0\u4f55\u3001\u5c5e\u6027\u3001\u989c\u8272\u3001\u6750\u8d28  </p> <ol> <li>\u6784\u4ef6\u66ff\u4ee3\u7269\uff1a\u81ea\u5b9a\u4e49\u7684\u6784\u4ef6  </li> </ol> <p>\u5b9e\u4f53\u95f4\u7684\u5173\u7cfb\u662f\u7528\u5173\u7cfb\u7c7b\u6765\u8868\u793a\u7684\uff0c\u5173\u7cfb\u6709\u5f88\u591a\uff0c\u800c\u4e14\u5bf9\u4e8e\u4e0d\u540c\u5b9e\u4f53\u95f4\u7528\u4e0d\u540c\u7684\u5173\u7cfb\u7c7b\u8868\u793a\uff0c\u5173\u7cfb\u7c7b\u4e5f\u652f\u6301\u81ea\u5b9a\u4e49\u6269\u5c55\u3002  </p> <ol> <li>\u7a7a\u95f4\u7ed3\u6784  </li> <li>\u5f15\u7528\u7ed3\u6784  </li> <li>\u5305\u542b\u7ed3\u6784  </li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/#_1","title":"\u76f8\u5173\u8d44\u6599","text":"<ol> <li>IFC\u57fa\u7840</li> <li>IFC\u51e0\u4f55\u6a21\u578b</li> <li>IFC(Industry Foundation Classes)\u5b66\u4e60\u7b14\u8bb0\u4e00</li> <li>IFCEngine\u7b14\u8bb0</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IFC%E7%9B%B8%E5%85%B3%E8%BD%AF%E4%BB%B6/","title":"IFC\u76f8\u5173\u8f6f\u4ef6","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IFC%E7%9B%B8%E5%85%B3%E8%BD%AF%E4%BB%B6/#bimvision","title":"BIMVision","text":"<p>\u7528\u4e8e\u67e5\u770bIFC\u7684\u51e0\u4f55\u6a21\u578b\u4ee5\u53ca\u5efa\u7b51\u6784\u4ef6\u7684\u5c5e\u6027</p> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IFC%E7%9B%B8%E5%85%B3%E8%BD%AF%E4%BB%B6/#zeal","title":"zeal","text":"<p>\u7528\u4e8e\u67e5\u9605IFC\u5b9e\u4f53\u7684\u542b\u4e49</p> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IFC%E7%9B%B8%E5%85%B3%E8%BD%AF%E4%BB%B6/#ifcbrowser","title":"IFCBrowser","text":"<p>IFC\u6587\u4ef6\u6d4f\u89c8\u5668\uff0c\u53ef\u4ee5\u5feb\u901f\u627e\u5230IFC\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u8054</p> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IFC%E7%9B%B8%E5%85%B3%E8%BD%AF%E4%BB%B6/#ifcviewer-c_64bit_unicode","title":"ifcviewer-C++_64bit_Unicode","text":"<p><code>D:\\dev\\ifcengine (build 1259)\\bin\\64bit</code></p> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IFC%E6%A0%87%E5%87%86/","title":"IFC\u6807\u51c6","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IFC%E6%A0%87%E5%87%86/#ifc","title":"IFC\u4fe1\u606f\u6a21\u578b\u4f53\u7cfb\u7ed3\u6784","text":"<p>IFC\u4fe1\u606f\u6a21\u578b\u4f53\u7cfb\u7ed3\u6784\u7531\u56db\u4e2a\u6982\u5ff5\u5c42\u6b21\u7ec4\u6210</p> <ol> <li>\u8d44\u6e90\u5c42\uff1a\u63d0\u4f9b\u8d44\u6e90\u7c7b\u578b\uff0c\u53ef\u88ab\u9ad8\u5c42\u6b21\u7684\u7c7b\u578b\u8c03\u7528</li> <li>\u6838\u5fc3\u5c42\uff1a\u63d0\u4f9b\u5efa\u7b51\u5de5\u7a0b\u6838\u5fc3\u6570\u636e\u6a21\u578b\uff0c\u5305\u62ec\u4e00\u4e2a\u5185\u6838\u6a21\u5757\u548c\u51e0\u4e2a\u6838\u5fc3\u6269\u5c55\u6a21\u5757</li> <li>\u534f\u540c\u5c42\uff1a\u63d0\u4f9b\u4e00\u7cfb\u5217\u6a21\u5757\uff0c\u5b9a\u4e49\u4e86\u8de8\u591a\u4e2a\u4e13\u4e1a\u9886\u57df\u6216AEC\u5de5\u4e1a\u9886\u57df\u7684\u5171\u540c\u6982\u5ff5\u6216\u5bf9\u8c61</li> <li>\u4e13\u4e1a\u9886\u57df\u5c42\uff1a\u5b83\u662fIFC\u4fe1\u606f\u6a21\u578b\u7684\u6700\u9ad8\u5c42\u6b21\uff0c\u4e3a\u7279\u5b9aAEC\u5de5\u4e1a\u9886\u57df\u6216\u5e94\u7528\u7c7b\u578b\u5b9a\u5236\u4e00\u7cfb\u5217\u6a21\u5757</li> </ol> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IFC%E6%A0%87%E5%87%86/#_1","title":"\u8d44\u6e90\u5c42","text":"<p>\u8d44\u6e90\u5c42\u63d0\u4f9b\u8d44\u6e90\u7c7b\u7684\u5b9e\u4f53\uff0c\u4e3a\u4e0a\u5c42\u63d0\u4f9b\u670d\u52a1\u3002\u5177\u4f53\u5305\u62ec\uff1a\u4eba\u5458\u4e0e\u7ec4\u7ec7\u3001\u65e5\u671f\u65f6\u95f4\u3001\u51e0\u4f55\u3001\u62d3\u6251\u3001\u51e0\u4f55\u6a21\u578b\u3001\u8868\u8fbe\u3001\u51e0\u4f55\u7ea6\u675f\u3001\u622a\u9762\u3001\u6750\u6599\u3001\u5c5e\u6027\u3001\u6570\u91cf\u3001\u5ea6\u91cf\u3001\u5916\u90e8\u5f15\u7528\u4e0e\u5de5\u5177\u7b49\u3002</p> \u57fa\u672c\u6982\u5ff5\u4e0e\u8bbe\u5b9a \u5305\u542b\u5185\u5bb9 \u51e0\u4f55 \u51e0\u4f55\u6a21\u5f0f\u5b9a\u4e49\u51e0\u4f55\u8868\u8fbe\u8d44\u6e90\u3002\u8fd9\u4e2a\u6a21\u5f0f\u4e3b\u8981\u5e94\u7528\u5728\u5f62\u6210\u4ea7\u54c1\u6a21\u5f0f\u7684\u5f62\u72b6\u6216\u51e0\u4f55\u7684\u8868\u8fbe 1. \u7528\u5750\u6807\u503c\u76f4\u63a5\u5b9a\u4e49\u70b92. \u5b9a\u4e49\u65b9\u5411\u3001\u77e2\u91cf\u548c\u5750\u6807\u8f743. \u5b9a\u4e49\u53d8\u6362\u64cd\u4f5c4. \u5b9a\u4e49\u53c2\u6570\u66f2\u7ebf\uff08\u5305\u62ec\u5b50\u7c7b\u578b\uff095. \u5b9a\u4e49\u4e8c\u6b21\u66f2\u7ebf\u548c\u57fa\u672c\u66f2\u9762\uff08\u5305\u62ec\u5b50\u7c7b\u578b\uff096. \u7531\u53c2\u6570\u66f2\u9762\u5b9a\u4e49\u7684\u66f2\u7ebf7. \u5b9a\u4e49\u626b\u63a0\u66f2\u97628. \u5b9a\u4e49\u504f\u7f6e\u66f2\u7ebf \u62d3\u6251 \u62d3\u6251\u6a21\u5f0f\u5b9a\u4e49\u7528\u4e8e\u62d3\u6251\u8868\u8fbe\u7684\u5404\u79cd\u8d44\u6e90\u3002\u8fd9\u4e2a\u8d44\u6e90\u7684\u9996\u8981\u5e94\u7528\u5c31\u662f\u5176\u5728\u5f62\u72b6\u7684\u8fb9\u754c\u8868\u8fbe\u6216\u4ea7\u54c1\u6a21\u578b\u7684\u51e0\u4f55\u5f62\u72b6 1. \u57fa\u672c\u7684\u62d3\u6251\u5b9e\u4f53\u5b9a\u4e49\uff0c\u5305\u62ec\u9876\u70b9\u3001\u8fb9\u548c\u9762\uff0c\u53ca\u5176\u5b83\u4eec\u7684\u7279\u6b8a\u7684\u5b50\u7c7b\u578b\uff0c\u8fd9\u4e9b\u5b50\u7c7b\u578b\u5206\u522b\u4e0e\u51e0\u4f55\u4e2d\u7684\u70b9\u3001\u66f2\u7ebf\u548c\u9762\u5173\u80542. \u5f62\u6210\u62d3\u6251\u7ed3\u6784\u7684\u57fa\u672c\u5b9e\u4f53\u96c6\u548c\uff0c\u5305\u62ec\u8def\u5f84\u3001\u73af\u548c\u58f3\uff0c\u4ee5\u53ca\u4fdd\u8bc1\u8fd9\u4e9b\u7ed3\u6784\u5b8c\u6574\u6027\u7684\u7ea6\u675f3. \u62d3\u6251\u5b9e\u4f53\u7684\u65b9\u5411\u00a0 \u51e0\u4f55\u6a21\u578b \u51e0\u4f55\u6a21\u578b\u6a21\u5f0f\u5b9a\u4e49\u7528\u4e8e\u51e0\u4f55\u6a21\u578b\u8868\u8fbe\u7684\u8d44\u6e90\u3002\u8fd9\u4e2a\u8d44\u6e90\u7684\u4e3b\u8981\u5e94\u7528\u662f\u4e3a\u4e86\u8868\u8fbe\u4ea7\u54c1\u6a21\u578b\u7684\u5f62\u72b6\u6216\u51e0\u4f55\u5916\u5f62 1. \u4e09\u7ef4\u5b9e\u4f53\u5bf9\u8c61\u7684\u7cbe\u786e\u51e0\u4f55\u6570\u636e\u63cf\u8ff02. \u6784\u9020\u5b9e\u4f53\u51e0\u4f55\uff08CSG\uff09\u6a21\u578b3. \u534a\u7a7a\u95f4\uff08\u7b80\u5355CSG\u4e0d\u5728\u8303\u56f4\u5185\uff09\u5b9a\u4e494. \u7528\u626b\u63a0\u64cd\u4f5c\uff08\u53ea\u6709\u626b\u63a0\u9762\u5b9e\u4f53\uff09\u5efa\u7acb\u5b9e\u4f53\u6a21\u578b5. \u591a\u79cd\u8fb9\u754c\u8868\u8fbe\uff08BRep\uff09\u6a21\u578b\uff08\u9650\u5236\u4e8e\u5c0f\u9762\u7247BRep\uff096. \u8868\u9762\u6a21\u578b7. \u51e0\u4f55\u96c6 \u8868\u8fbe \u8868\u8fbe\u6a21\u5f0f\u4e3aIFC\u4fe1\u606f\u6a21\u578b\u4e2d\u5b9a\u4e49\u7684\u4ea7\u54c1\u63d0\u4f9b\u4f5c\u4e3a\u91cd\u8981\u5b9a\u4e49\u5c5e\u6027\u7684\u5f62\u72b6\u548c\u62d3\u6251\u8868\u8fbe\u5b9a\u4e49\u8fd9\u4e9b\u8868\u8fbe\u523b\u753b\u4ea7\u54c1\u7684\u67d0\u4e9b\u5c5e\u6027\uff0c\u800c\u4e14\u53ef\u4ee5\u4e3a\u4efb\u4f55\u4ea7\u54c1\u5b9a\u4e490\u30011\u6216\u66f4\u591a\u8fd9\u6837\u7684\u5c5e\u6027 \u672c\u6a21\u5f0f\u5b9a\u4e49\u4e24\u79cd\u8868\u8fbe\u4ea7\u54c1\u5b9a\u4e49\u5c5e\u6027\u7684\u65b9\u6cd51. \u62d3\u6251\u8868\u8fbe2. \u51e0\u4f55\u5f62\u72b6\u8868\u8fbe\uff08IfcGeometricRepresentationContext\u51e0\u4f55\u5f62\u72b6\u8868\u8fbe\u5141\u8bb81. \u4e00\u4e2a\u4ea7\u54c1\u7684\u540c\u4e00\u4ea7\u54c1\u5b9a\u4e49\u5f62\u72b6\u7684\u591a\u4e2a\u5f62\u72b6\u8868\u8fbe2. \u7528\u5f62\u72b6\u5916\u8868\u5206\u79bb\u4ea7\u54c1\u5b9a\u4e49\u5f62\u72b6\u7684\u90e8\u4ef6\u6216\u90e8\u5206\u7684\u5f62\u72b6\u8868\u8fbe \u51e0\u4f55\u7ea6\u675f \u51e0\u4f55\u7ea6\u675f\u6a21\u5f0f\u5b9a\u4e49\u7528\u4e8e\u51b3\u5b9a\u5728\u5de5\u7a0b\u7684\u51e0\u4f55\u8868\u8fbe\u73af\u5883\u4e2d\u7684\u4ea7\u54c1\u5f62\u72b6\u8868\u8fbe\u7684\u4f4d\u7f6e\u7684\u8d44\u6e90\u3002\u5b83\u4e5f\u7ea6\u675f\u5206\u914d\u7ed9\u4ea7\u54c1\u8fde\u63a5\u5b9a\u4e49\u7684\u8d44\u6e90\u5b9a\u4e49\uff0c\u51b3\u5b9a\u90a3\u4e9b\u4ea7\u54c1\u4e4b\u95f4\u7684\u51e0\u4f55\u8fde\u63a5\u7ea6\u675f \u4e3b\u8981\u5c06\u8fd9\u4e2a\u8d44\u6e90\u5e94\u7528\u52301. \u51b3\u5b9a\u7528\u4e8e\u5bf9\u8c61\u5f62\u72b6\u8868\u8fbe\u7684\u5bf9\u8c61\u5750\u68072. \u51b3\u5b9a\u5e94\u7528\u5230\u5bf9\u8c61\u4e24\u4e2a\u5f62\u72b6\u4e4b\u95f4\u8fde\u63a5\u7684\u7ea6\u675f \u754c\u9762 \u622a\u9762\u6a21\u5f0f\u5b9a\u4e49\u7528\u4e8e\u5b9a\u4e49\u51e0\u4f55\u5f62\u72b6\u8868\u8fbe\u7684\u4e8c\u7ef4\u622a\u9762\u6216\u6a2a\u622a\u9762 \u622a\u9762\u5b9a\u4e49\u5e94\u7528\u4e8e\uff1a\u626b\u63a0\u9762\u3001\u626b\u63a0\u533a\u57df\u5b9e\u4f53\u3001\u810a\u7ebf"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IFC%E6%A0%87%E5%87%86/IfcSweptAreaSolid/","title":"IfcSweptAreaSolid","text":"<p>IFC\u5728\u6570\u636e\u7ed3\u6784\u5c42\u9762\u5c31\u5b9a\u4e49\u4e86\u626b\u63a0\u4f53\uff0c\u5373IfcSweptAreaSolid\u3002</p> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IFC%E6%A0%87%E5%87%86/IfcSweptAreaSolid/#ifcextrudedareasolid","title":"IfcExtrudedAreaSolid","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IFC%E6%A0%87%E5%87%86/IfcSweptAreaSolid/#_1","title":"\u793a\u4f8b","text":"<p>IfcPlusPlus\u5b98\u65b9\u793a\u4f8b\uff1a CreateWallAndWriteFile</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IFC%E6%A0%87%E5%87%86/IfcSweptAreaSolid/#_2","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>IfcExtrudedAreaSolid\uff1bIfcExtrudedAreaSolid\u2014Extruded solid</li> <li>IfcSweptAreaSolid</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IfcEngine/","title":"IfcEngine","text":"<p>\u7b14\u8005\uff1aIfcEngine\u662f\u9762\u5411\u8fc7\u7a0b\u7684\uff0c\u6709\u5f88\u591a\u5751\uff0c\u614e\u5165\u3002</p> <p>IfcEngine</p> <ol> <li>ifcengine-latest\uff1aIFCEngine\u7684\u5e93\u548c\u5934\u6587\u4ef6</li> <li>ifcengine(build 1259)\uff1aIFCEngine\u5b98\u65b9\u793a\u4f8b\u4ee3\u7801</li> </ol> <p>IFCEngine\u5f15\u64ce\u6709\u4e24\u4e2a\u90e8\u5206</p> <ol> <li>\u89e3\u6790\u51e0\u4f55\u7684\u6a21\u5757<code>#include \"engine.h\"</code></li> <li>\u89e3\u6790\u5c5e\u6027\u7684\u6a21\u5757\u540d<code>#include \"ifcengine.h\"</code></li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IfcEngine/#ifcengine","title":"IfcEngine\u63d0\u4f9b\u7684\u5c0f\u5de5\u5177","text":"<p>ifcengine\u63d0\u4f9b\u4e86\u5f88\u591a\u5c0f\u5de5\u5177\uff0c\u5c0f\u5de5\u5177\u662f\u5f00\u6e90\u7684\u3002\u6709\u4e24\u4e2a\u662f\u6bd4\u8f83\u5e38\u7528\u7684</p> <ol> <li>ifceditor\u7528\u4e8e\u67e5\u770bIFC\u5b9e\u4f53\u5305\u542b\u7684\u5c5e\u6027\u540d\uff0c\u53d6IFC\u7684\u5b9e\u4f53\u5c5e\u6027\u9700\u8981\u901a\u8fc7\u5c5e\u6027\u540d\u53bb\u53d6\uff0c\u56e0\u6b64\u501f\u52a9\u8fd9\u4e2a\u5de5\u5177\u53ef\u4ee5\u627e\u5230\u8981\u53d6\u7684\u5c5e\u6027\u540d\uff0c\u6e90\u7801\u53ef\u4ee5\u5b66\u4e60\u5982\u4f55\u89e3\u6790IFC\u5b9e\u4f53\u7684\u5c5e\u6027\uff1b</li> <li>ifcviewer\u7528\u4e8e\u67e5\u770bIFC\u7684\u51e0\u4f55\u6a21\u578b\uff0c\u901a\u8fc7DirectX\u6e32\u67d3\uff0c\u662fBIMVision\u7684\u7b80\u6613\u7248\uff0c\u6e90\u7801\u53ef\u4ee5\u5b66\u4e60\u5982\u4f55\u89e3\u6790IFC\u7684\u51e0\u4f55\u6a21\u578b</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IfcOpenShell/","title":"IfcOpenShell","text":"<p>\u76f8\u5173\u5730\u5740\uff1a</p> <ol> <li>IfcOpenShell github\u5730\u5740</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IfcPlusPlus/IfcPlusPlus%20Bug%E5%90%88%E9%9B%86/","title":"IfcPlusPlus Bug\u5408\u96c6","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IfcPlusPlus/IfcPlusPlus%20Bug%E5%90%88%E9%9B%86/#carve","title":"\u8f6c\u6210carve\u6570\u636e\u7ed3\u6784\u4e4b\u540e\uff0c\u5750\u6807\u4f4d\u7f6e\u4e0d\u5bf9\u7684\u95ee\u9898","text":"<p><code>GeometryConverter.h``resetIfcSiteLargeCoords(ifc_site)</code>\u91cc\u624b\u52a8\u5750\u4e86\u504f\u79fb\uff0c\u6ce8\u91ca\u6389\u5373\u53ef</p> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IfcPlusPlus/IfcPlusPlus%E7%BC%96%E8%AF%91/","title":"IfcPlusPlus\u7f16\u8bd1","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IfcPlusPlus/IfcPlusPlus%E7%BC%96%E8%AF%91/#vs19","title":"VS19","text":"<p>\u76f4\u63a5\u7f16\u8bd1\u5373\u53ef</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IfcPlusPlus/IfcPlusPlus%E7%BC%96%E8%AF%91/#vs17","title":"VS17","text":"<p>s17\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff0c\u6d89\u53ca\u5230\u4e00\u4e9bC++17\u6700\u65b0\u7684\u7528\u6cd5</p> <p>\u628atoupper\u6539\u6210towupper</p> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IfcPlusPlus/IfcPlusPlus%E7%BC%96%E8%AF%91/#ubuntu","title":"ubuntu","text":"<ol> <li>\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230ubuntu\u4e0a\uff1aifcplusplus-1.1.tar.gz</li> <li>\u4fee\u6539cmake\uff0c\u9ed8\u8ba4\u4e0d\u7f16\u8bd1\u4f8b\u5b50 <pre><code>option(BUILD_CONSOLE_APPLICATION \"Build an example CLI application\" OFF)\noption(BUILD_VIEWER_APPLICATION \"Build the viewer example application\" OFF)\n</code></pre></li> <li>\u4fee\u6539\u6e90\u7801\uff0c\u6ce8\u91caifcsite\u4f4d\u7f6e\u5f520</li> <li>\u6dfb\u52a0\u6e90\u4ee3\u7801\u4e2d\u7684earcut.hpp\u5230\u5b89\u88c5include\u76ee\u5f55 <pre><code>cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=/home/cm/codes/Tools/3rdlib_linux/IfcPlusPlus -DCMAKE_BUILD_TYPE=Release ../\nmake\nmake install\n</code></pre></li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/IFC%E6%A0%BC%E5%BC%8F/IfcPlusPlus/IfcPlusPlus%E7%BC%96%E8%AF%91/#_1","title":"\u8b66\u544a","text":"<ol> <li>\u7f16\u8bd1\u65f6\u4f1a\u8b66\u544a\uff1awarning: 'template class std::auto_ptr' is deprecated [-Wdeprecated-declarations]\u3002\u8bf4\u660e auto_ptr \u5df2\u7ecf\u8fc7\u65f6\u4e86\u3002 <li>warning: ignoring return value of \u2018int wctomb(char*, wchar_t)\u2019</li>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/2-%E4%B8%89%E7%BB%B4%E6%A8%A1%E5%9E%8B%E6%A0%BC%E5%BC%8F/Step%E6%A0%BC%E5%BC%8F/","title":"Step\u683c\u5f0f","text":"<p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>https://mp.weixin.qq.com/s/La6LGdZfDcEx0Eo1dRHT9w</li> <li>https://www.adobe.com/creativecloud/file-types/image/vector/step-file.html#open</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/COLLADA%E6%A0%BC%E5%BC%8F/","title":"COLLADA\u683c\u5f0f","text":"<p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>OpenCollada</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/","title":"Fbx\u683c\u5f0f","text":"<p>FBX\u662fAutodesk\u7684\u4e00\u4e2a\u7528\u4e8e\u8de8\u5e73\u53f0\u7684\u514d\u8d39\u4e09\u7ef4\u6570\u636e\u4ea4\u6362\u7684\u683c\u5f0f\u3002</p> <ol> <li>FBX\u6700\u65e9\u4e0d\u662f\u7531Autodesk\u5f00\u53d1\uff0c\u4f46\u540e\u6765\u88ab\u5176\u6536\u8d2d</li> <li>\u76ee\u524d\u88ab\u4f17\u591a\u7684\u6807\u51c6\u5efa\u6a21\u8f6f\u4ef6\u6240\u652f\u6301\uff0c\u5728\u6e38\u620f\u5f00\u53d1\u9886\u57df\u4e5f\u5e38\u7528\u6765\u4f5c\u4e3a\u5404\u79cd\u5efa\u6a21\u5de5\u5177\u7684\u6807\u51c6\u5bfc\u51fa\u683c\u5f0f</li> <li>Autodesk\u63d0\u4f9b\u4e86\u57fa\u4e8eC++\uff08\u8fd8\u6709Python\uff09\u7684SDK\u6765\u5b9e\u73b0\u5bf9FBX\u683c\u5f0f\u7684\u5404\u79cd\u8bfb\u5199\u3001\u4fee\u6539\u4ee5\u53ca\u8f6c\u6362\u7b49\u64cd\u4f5c\uff0c\u4e4b\u6240\u4ee5\u5982\u6b64\u662f\u56e0\u4e3aFBX\u7684\u683c\u5f0f\u4e0d\u662f\u516c\u5f00\u7684\uff0c\u8fd9\u4e5f\u662fFBX\u7684\u8bdf\u75c5\u4e4b\u4e00</li> <li>\u4e0eFBX\u76f8\u5bf9\u7684\u5219\u662f\u683c\u5f0f\u5f00\u6e90\u7684Collada\uff0c\u5b83\u7684\u5e94\u7528\u4e5f\u5f88\u5e7f\u6cdb\u3002\u603b\u4f53\u6765\u8bf4\u8fd9\u4e24\u79cd\u683c\u5f0f\u8fd8\u662f\u5404\u6709\u4f18\u52a3\u4e0d\u76f8\u4e0a\u4e0b\uff0c\u5173\u4e8e\u4e24\u79cd\u683c\u5f0f\u5728\u6e38\u620f\u5f00\u53d1\u4e2d\u4f7f\u7528\u7684\u5bf9\u6bd4\u4e0e\u8ba8\u8bba\u4e5f\u6bd4\u8f83\u591a\uff0c\u53ef\u89c1GameDev\u4e2d\u7684\u5e16\u5b50</li> </ol> <p>fbx\u8bfb\u5199\u5e93</p> <ol> <li>fbx sdk\uff08autodesk\u5b98\u65b9\u63d0\u4f9b\uff09</li> <li>assimp\u7b2c\u4e09\u65b9\u5e93\uff08\u652f\u6301\u6709\u9650\uff09</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/","title":"FbxSDK C++","text":"<p>\u6700\u65b0\u7248\u7684SDK\u4e0e\u4e4b\u524d\u7684\u7248\u672c\u5728\u7ec6\u8282\u4e0a\u6709\u6240\u4e0d\u540c\uff0c\u800c\u4e14\u6700\u65b0\u7248\u7684\u652f\u6301\u6700\u65b0\u7684fbx\u683c\u5f0f\uff0c\u56e0\u6b64\u6700\u597d\u76f4\u63a5\u4f7f\u7528\u6700\u65b0\u7248\u3002</p> <p>\u9644\uff1a</p> <ol> <li>fbx sdk\uff082020\u7248\u672c\uff09\u4e0b\u8f7d</li> <li>\u5728\u7ebf\u5e2e\u52a9\u6587\u6863</li> <li>FBX SDK\u5bf9\u8c61\u6a21\u578b</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>FBX SDK\u5feb\u901f\u7b80\u7b14\uff08\u57fa\u672c\uff09</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E5%AF%B9%E8%B1%A1/","title":"\u5bf9\u8c61","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E5%AF%B9%E8%B1%A1/#_1","title":"\u521b\u5efa\u5bf9\u8c61","text":"<p>\u7c7bFbxManager\u7528\u4e8e\u5185\u5b58\u7ba1\u7406\uff0c\u7ba1\u7406Fbx\u7684\u76f8\u5173\u8d44\u6e90\u3002</p> <pre><code>//\u521b\u5efa\u4e00\u4e2a\u7ba1\u7406\u8005\nFbxManager* lSdkManager = FbxManager::Create();\n//\u521b\u5efa\u65b0\u5bf9\u8c61\n//1. \u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a\u7236\u8282\u70b9\u6307\u9488\n//2. \u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1a\u540d\u79f0\nFbxScene* lScene = FbxScene::Create(lSdkManager, \"Scene Name\");\n//\u7531\u4e8e\u573a\u666f\u662f\u6839\u8282\u70b9\uff0c\u9700\u8981\u4f7f\u7528FbxManager\u6765\u521b\u5efa\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3aFbxManager\n//\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\u5bf9\u8c61\uff0c\u5176\u7236\u8282\u70b9\u4e3alScene\nFbxNode* lNode = FbxNode::Create(lScene , \"node\");\n//\u521b\u5efa\u4e00\u4e2a\u7f51\u683c\u5bf9\u8c61\uff0c\u5176\u7236\u8282\u70b9\u4e3alScene\nFbxMesh* lMesh = FbxMesh::Create(lScene , \"Mesh\");\n//\u9500\u6bc1\nlMesh-&gt;Destroy();      // \u9500\u6bc1\u7f51\u683c\nlNode-&gt;Destroy();      // \u9500\u6bc1\u8282\u70b9\nlScene-&gt;Destroy();     // \u7834\u574f\u573a\u666f\u548c\u5b83\u7684\u5bf9\u8c61\nlSDKManager-&gt;Destroy() // \u9500\u6bc1SDK\u7ba1\u7406\u5668\u548c\u5b83\u7ba1\u7406\u7684\u4efb\u4f55\u5269\u4f59\u5bf9\u8c61\u3002\n</code></pre> <p>\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528<code>FbxObject::GetFbxManager()</code>\u6765\u68c0\u7d22\u7528\u4e8e\u5b9e\u4f8b\u5316<code>FbxObject</code>\u7684\u7ba1\u7406\u8005</p> <p>\u4e3e\u4f8b\uff1aFbxImporter\uff08FbxImporter-&gt;FbxIO-&gt;FbxObject\uff09 <pre><code>FbxImporter* pImporter;\nFbxManager* lSdkManager = pImporter-&gt;GetFbxManager();\n//\u83b7\u5f97\u521b\u5efapImporter\u7684FbxManger\n</code></pre></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E5%AF%B9%E8%B1%A1/#_2","title":"\u590d\u5236\u4e00\u4e2a\u5bf9\u8c61","text":"<pre><code>// \u5047\u8bbelScene\u662f\u4e00\u4e2a\u6307\u5411\u6709\u6548Scene\u5bf9\u8c61\u7684\u6307\u9488\u3002\nFbxMesh* lSourceMesh = FbxMesh::Create (lScene, \"\");\n// \u4e3alSourceMesh\u5b9a\u4e49\u63a7\u5236\u70b9\u7b49\nFbxMesh* lTargetMesh = FbxMesh::Create (lScene, \"\");\n//\u5c06\u6570\u636e\u4ecelSourceMesh\u590d\u5236\u5230lTargetMesh\nlTargetMesh-&gt;Copy(lSourceMesh);\n//\u6e90\u5bf9\u8c61\u548c\u76ee\u6807\u5bf9\u8c61\u5fc5\u987b\u662f\u5b9e\u4f8b\u76f8\u540c\u7684\u7c7b\n</code></pre> <p>\u6ce8\u610f\uff1a\u590d\u5236\uff0c\u53ea\u4f1a\u590d\u5236\u5b83\u548c\u5b83\u7684\u5c5e\u6027\uff0c\u4e0d\u4f1a\u590d\u5236\u5230\u4e0e\u5176\u4ed6\u4eba\u7684\u5173\u7cfb</p> <ol> <li>\u590d\u5236FbxObject\uff0c\u8fd8\u5c06\u590d\u5236\u5b83\u6240\u6709\u5173\u8054\u7684FbxProperty\u5b9e\u4f8b\u548c\u503c</li> <li>\u4f46\u4e0d\u4f1a\u590d\u5236\u5b83\u4efb\u4f55\u5bf9\u8c61\u95f4\u7684\u8fde\u63a5\uff08\u4f8b\u5982\uff0c\u7236-\u5b50\u5173\u7cfb\uff09</li> </ol> <pre><code>//\u521d\u59cb\u5316FbxNode* lNode ...\n//\u5206\u522b\u8c03\u7528FbxProperty::set()\u548cFbxProperty::Get()\u6765\u8bbe\u7f6e\u548c\u8bbf\u95ee\u7684\u6570\u636e\u3002\nFbxDouble3 translation = lNode-&gt;LclTranslation.Get();\nFbxDouble3 rotation = lNode-&gt;LclRotation.Get();\nFbxDouble3 scaling = lNode-&gt;LclScaling.Get();\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E5%B1%9E%E6%80%A7FbxProperty/","title":"\u5c5e\u6027FbxProperty","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E5%B1%9E%E6%80%A7FbxProperty/#_1","title":"\u7ba1\u7406\u5c5e\u6027","text":"<pre><code>FbxProperty p = FbxProperty::Create(pScene, DTDouble3, \"Vector3Property\");\n//\u53ef\u4ee5FbxProperty::GetName()\u6765\u8bbf\u95ee\u521b\u5efaFbxProperty\u7684\u540d\u79f0\n//\u901a\u8fc7\u8c03\u7528\u6839\u5c5e\u6027\u4e0a\u7684FbxProperty::destroyrecur()\u6765\u9500\u6bc1FbxProperty\u7684\u5c42\u6b21\u7ed3\u6784\u3002\n//\u4f7f\u7528\u4ee5\u4e0a\u7c7b\u578b\u4f20\u9012\u7ed9\nFbxSet&lt;FbxDouble3&gt;(p, FbxDouble3(1.1, 2.2, 3.3));\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E5%B1%9E%E6%80%A7FbxProperty/#_2","title":"\u8bbf\u95ee\u5c5e\u6027","text":"<p>\u8bbf\u95ee\u8282\u70b9\u7684\u5c5e\u6027</p> <pre><code>//\u521d\u59cb\u5316FbxNode* lNode ...\n//\u5206\u522b\u8c03\u7528FbxProperty::set()\u548cFbxProperty::Get()\u6765\u8bbe\u7f6e\u548c\u8bbf\u95ee\u7684\u6570\u636e\nFbxDouble3 translation = lNode-&gt;LclTranslation.Get();\nFbxDouble3 rotation = lNode-&gt;LclRotation.Get();\nFbxDouble3 scaling = lNode-&gt;LclScaling.Get();\n</code></pre> <p>\u8bbf\u95ee\u8282\u70b9\u7684\u5c5e\u6027\u7ed3\u6784\uff1a\u7531\u4e8e\u5c5e\u6027\u4e5f\u53ef\u4ee5\u662f\u6811\u72b6\u7ed3\u6784\uff0c\u6240\u4ee5\u8bbf\u95ee\u5c5e\u6027\u7684\u5b9e\u8d28\u4e5f\u662f\u8bbf\u95ee\u904d\u5386\u6811\u3002</p> <p>\u8bbf\u95ee\u5c5e\u6027\u7684\u7ed3\u6784\u6709\u597d\u51e0\u79cd\u65b9\u5f0f</p> <ol> <li>\u641c\u7d22\uff1a<code>FbxObject::FindProperty()</code></li> <li>\u8fed\u4ee3\u5668\uff1a<code>FbxObject::GetFirstProperty()</code>\u548c<code>FbxObject::GetNextProperty()</code></li> <li>\u81ea\u884c\u904d\u5386\u6811\u7ed3\u6784\uff08\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u5bfc\u822a\u51fd\u6570\u6765\u5b8c\u6210\u904d\u5386\uff09</li> <li><code>FbxProperty::GetParent()</code></li> <li><code>FbxProperty::GetChild()</code></li> <li><code>FbxProperty::GetSibling()</code></li> <li><code>FbxProperty::Find()</code></li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E5%B1%9E%E6%80%A7FbxProperty/#fbxpropertyflagsefbxpropertyflags","title":"\u5c5e\u6027\u8fd8\u53ef\u4ee5\u5305\u542b\u4e00\u7ec4<code>FbxPropertyFlags::eFbxPropertyFlags</code>","text":"<p>\u53ef\u4ee5\u4f7f\u7528<code>FbxProperty::GetFlag()</code>\u548c<code>FbxProperty::ModifyFlag()</code>\u8fdb\u884c\u64cd\u4f5c</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E5%B1%9E%E6%80%A7FbxProperty/#_3","title":"\u5c5e\u6027\u6bd4\u8f83\u4e0e\u8d4b\u503c","text":"<p>FbxProperty\u91cd\u8f7d\u4e86\u6bd4\u8f83\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26</p> <ol> <li><code>FbxProperty::operator==()</code></li> <li><code>FbxProperty::operator::operator!=()</code></li> <li><code>FbxProperty::operator=()</code></li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E5%B1%9E%E6%80%A7FbxProperty/#fbxpropertyfbxobjectmetadata","title":"\u793a\u4f8b\uff1a\u521b\u5efa\u81ea\u5df1\u7684FbxProperty\uff0c\u5e76\u7ed1\u5b9a\u5230FbxObjectMetaData\u4e2d","text":"<pre><code>//FbxScene* pScene ....; \u521b\u5efa\u4e00\u4e2a\u573a\u666f\n//\u5728pScene\u4e2d\u521b\u5efa\u4e00\u4e2aFbxObjectMetaData*\u5bf9\u8c61\u3002\nFbxObjectMetaData* lFamilyMetaData = FbxObjectMetaData::Create(pScene, \"Family\");\n//\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u5e76\u7ed1\u5b9a\u5230FbxObjectMetaData\u4e2d\n//1. \u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5c5e\u6027\u7684\u7236\u8282\u70b9\n//2. \u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u6570\u636e\u7c7b\u578b\uff0c\u6709DTString\u3001DTFloat\u3001DTDouble\n//3. \u7b2c\u4e09\u4e2a\u53c2\u6570\uff1a\u5c5e\u6027\u540d\n//4. \u7b2c\u56db\u4e2a\u53c2\u6570\uff1a\u53ef\u9009\u7684\u6807\u7b7e\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u901a\u8fc7FbxProperty::GetLabel()\u548cFbxProperty::SetLabel()\u65b9\u6cd5\u83b7\u5f97\u4e0e\u4fee\u6539\n//5. \u53ef\u4ee5\u901a\u8fc7FbxProperty::Set()\u8bbe\u7f6e\u5c5e\u6027\u503c\nFbxProperty::Create(lFamilyMetaData, DTString, \"Level\",\"Level\").Set(FbxString(\"Family\")); // String\nFbxProperty::Create(lFamilyMetaData, DTString, \"Type\", \"Type\").Set(FbxString(\"Wall\"));     // String\nFbxProperty::Create(lFamilyMetaData, DTFloat, \"Width\", \"Width\").Set(10.0f);              // float\nFbxProperty::Create(lFamilyMetaData, DTDouble, \"Weight\", \"Weight\").Set(25.0);            // double\nFbxProperty::Create(lFamilyMetaData, DTDouble, \"Cost\", \"Cost\").Set(1.25);                // double\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E5%B1%9E%E6%80%A7FbxProperty/#_4","title":"\u81ea\u5b9a\u4e49\u5c5e\u6027","text":"<p>FbxProperty\u4e5f\u662f\u4e00\u4e2a\u6811\u8282\u70b9\uff0c\u56e0\u6b64\u5b83\u4e5f\u53ef\u4ee5\u5177\u6709\u5f88\u591a\u5b50\u8282\u70b9\u3002\u53ef\u4ee5\u8fde\u63a5FbxObject\u6216FbxProperty\u3002</p> <p>\u8865\uff1a\u4f8b\u5b50SDK&gt;samples&gt;ExportScene05\u8bf4\u660e\u4e86\u5c5e\u6027\u5c42\u6b21\u7ed3\u6784\u7684\u6784\u9020</p> <pre><code>#define PROPERTY \"attribute_name\"\nFbxMesh* pMesh = (FbxMesh*)pFbxChildNode-&gt;GetNodeAttribute();\nFbxProperty p = pFbxChildNode-&gt;FindProperty(PROPERTY, false);\nif (p.IsValid())\n{\nstd::string nodeName = p.GetName();\nstd::cout &lt;&lt; \"found property: \" &lt;&lt; nodeName &lt;&lt;std::endl;\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E5%B1%9E%E6%80%A7FbxProperty/#3ds-maxuser-defined","title":"3ds max\u7684User Defined\u5b57\u6bb5","text":"<p>3ds max\u91cc\u67e5\u770b\uff1a\u9009\u62e9\u4e00\u4e2a\u6a21\u578b &gt; \u7f16\u8f91 &gt; \u5bf9\u8c61\u5c5e\u6027 &gt; \u7528\u6237\u5b9a\u4e49</p> <p></p> <pre><code>//\u7528\u6237\u5b9a\u4e49\u7684\u5c5e\u6027\u5b58\u50a8\u5728\u201c UDP3DSMAX\u201d FBX\u5c5e\u6027\u4e2d\u3002\nFbxProperty p = m_node-&gt;FindProperty(\"UDP3DSMAX\");\nif (p.IsValid())\nFbxString str = p.Get&lt;FbxString&gt;();\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%BC%96%E8%AF%91%E3%80%81%E5%AE%89%E8%A3%85/","title":"\u7f16\u8bd1\u3001\u5b89\u88c5","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%BC%96%E8%AF%91%E3%80%81%E5%AE%89%E8%A3%85/#linux","title":"Linux","text":"<p>\u76f4\u63a5\u4e0b\u8f7dLinux\u7248\u672c\uff1ahttps://www.autodesk.com/content/dam/autodesk/www/adn/fbx/2020-0-1/fbx202001_fbxsdk_linux.tar.gz</p> <ol> <li> <p>\u89e3\u538b\u6587\u4ef6 <pre><code>tar -zxvf fbx202001_fbxsdk_linux.tar.gz\n</code></pre></p> </li> <li> <p>\u8bf7\u786e\u4fdd\u60a8\u5bf9\u5b89\u88c5\u5177\u6709\u6267\u884c\u6743\u9650\u7a0b\u5e8f(FBX202001_FBXFILESDK_LINUX): <pre><code>% ./FBX202001_FBXFILESDK_LINUX /usr\n</code></pre></p> </li> <li> <p>\u6267\u884c\u5b89\u88c5\uff0c usr\u4ee3\u8868\u5b89\u88c5\u76ee\u5f55 <pre><code>% ./FBX202001_FBXFILESDK_LINUX /usr\n</code></pre></p> </li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E8%BF%9E%E6%8E%A5Connections/","title":"\u8fde\u63a5Connections","text":"<p>Visualizing connections\u53ef\u89c6\u5316\u7684\u8fde\u63a5\uff0c\u8fde\u63a5\u662f\u4e00\u4e2aFBX SDK\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u7ba1\u7406FBX\u5bf9\u8c61\u548cFBX\u5c5e\u6027\u4e4b\u95f4\u7684\u53cc\u5411\u5173\u7cfb\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E8%BF%9E%E6%8E%A5Connections/#_1","title":"\u8fde\u63a5\u7684\u7c7b\u578b","text":"<p>\u4e3a\u4e86\u4fdd\u8bc1FBX SDK\u5185\u8fde\u63a5\u7684\u4e00\u81f4\u6027\uff0c\u5b9e\u9645\u7684\u6570\u636e\u7ed3\u6784\u4e0d\u4f1a\u516c\u5f00\u3002\u76f8\u53cd\uff0c\u53ef\u4ee5\u4f7f\u7528FbxObject\u548cFbxProperty\u8fde\u63a5\u7ba1\u7406\u65b9\u6cd5\u6765\u64cd\u4f5c\u8fde\u63a5\uff0c\u5982\uff1a<code>FbxObject::ConnectSrcObject()</code>\u3001<code>FbxObject::ConnectDstObject()</code>\u3001<code>FbxProperty::ConnectDstObject()</code>\u3001<code>FbxProperty::ConnectSrcProperty()</code>\u7b49\u3002</p> <p>FBX\u5bf9\u8c61\u548c\u5c5e\u6027\u5173\u7cfb\u53ef\u5206\u4e3a</p> \u5173\u7cfb \u8bf4\u660e \u65b9\u6cd5 \u5bf9\u8c61-\u5c5e\u6027\u8fde\u63a5 \u5c5e\u6027\u4f5c\u4e3a\u6e90\u5305\u542b\u5728\u5bf9\u8c61\u4e2d 1. FbxObject::GetSrcProperty()\uff1a\u5c06\u5728\u7ed9\u5b9a\u7684\u7d22\u5f15\u5904\u8fd4\u56de\u5bf9\u8c61\u7684\u6e90\u5c5e\u60272. FbxProperty::GetDstObject()\uff1a\u5c06\u8fd4\u56de\u5c5e\u6027\u7684\u76ee\u6807\u5bf9\u8c61 \u5bf9\u8c61-\u5bf9\u8c61\u8fde\u63a5 \u5bf9\u8c61\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\u4f7f\u7528\u8fde\u63a5(\u4f8b\u5982:\u573a\u666f\u7684\u8282\u70b9\u5c42\u6b21\u7ed3\u6784)\uff0c 1. \u901a\u5e38\uff0c\u5bf9\u8c61\u7684\u5b50\u5bf9\u8c61\u662f\u6e90\uff0c\u53ef\u4ee5\u4f7f\u7528FbxObject::GetSrcObject()\u8bbf\u95ee2. \u5bf9\u8c61\u7684\u7236\u5bf9\u8c61\u662f\u4e00\u4e2a\u76ee\u7684\u5730\uff0c\u4f7f\u7528FbxObject::GetDstObject()\u8bbf\u95ee\u5b83 \u5c5e\u6027-\u5c5e\u6027\u8fde\u63a5 \u5c5e\u6027\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\u4e5f\u4f7f\u7528\u8fde\u63a5(\u4f8b\u5982:fbxiosetings\u7684\u5c5e\u6027\u5c42\u6b21\u7ed3\u6784) 1. \u901a\u5e38\uff0c\u5c5e\u6027\u7684\u5b50\u5143\u7d20\u662f\u6e90\uff0c\u53ef\u4ee5\u4f7f\u7528FbxProperty::GetSrcProperty()\u6765\u8bbf\u95ee2. \u5c5e\u6027\u7684\u7236\u7ea7\u88ab\u5f15\u7528\u4e3a\u76ee\u6807\uff0c\u5e76\u4f7f\u7528FbxProperty::GetDstProperty()\u6765\u8bbf\u95ee <p>\u6ce8\u91ca\uff1a</p> <ol> <li>\u5b50\u8282\u70b9\u662f\u7236\u8282\u70b9\u7684\u6e90\u5bf9\u8c61\uff08Src\uff09</li> <li>\u7236\u8282\u70b9\u662f\u5b50\u8282\u70b9\u7684\u76ee\u6807\u5bf9\u8c61\uff08Dst\uff09</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E8%BF%9E%E6%8E%A5Connections/#_2","title":"\u793a\u4f8b","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E8%BF%9E%E6%8E%A5Connections/#obj0","title":"\u8bbf\u95ee<code>obj0</code>\u7684\u6e90\u5bf9\u8c61","text":"<pre><code>//\u2026\u2026\u5047\u8bbeobj0\u5df2\u7ecf\u88ab\u521d\u59cb\u5316\uff0c\u4ee5\u53cd\u6620\u4e0a\u9762\u7684\u5173\u7cfb\u56fe\u2026\n//\u4e3a\u4e86\u4fbf\u4e8e\u8bf4\u660e\uff0c\u8ba1\u7b97\u8fde\u63a5\u5230obj0\u7684\u6e90\u5bf9\u8c61\u7684\u6570\u91cf\u3002\nint numSrcObjects = obj0-&gt;GetSrcObjectCount(); // numSrcObjects = 2\n//\u8bbf\u95ee\u8fde\u63a5\u5230obj0\u7684\u4e24\u4e2a\u6e90\u5bf9\u8c61\n//\u6ce8\u610f\uff0cobj0-&gt;GetSrcObject(0)\u7b49\u4ef7\u4e8e\u8c03\u7528obj0-&gt;GetSrcObject()\nFbxObject* obj1 = obj0-&gt;GetSrcObject(0);\nFbxObject* obj2 = obj0-&gt;GetSrcObject(1);\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E8%BF%9E%E6%8E%A5Connections/#obj0_1","title":"\u8bbf\u95ee<code>obj0</code>\u7684\u6e90\u5c5e\u6027","text":"<pre><code>//\u2026\u2026\u5047\u8bbeobj0\u5df2\u7ecf\u88ab\u521d\u59cb\u5316\uff0c\u4ee5\u53cd\u6620\u4e0a\u9762\u7684\u5173\u7cfb\u56fe\u2026\nFbxProperty* prop0 = obj0-&gt;GetSrcProperty();\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E8%BF%9E%E6%8E%A5Connections/#obj1","title":"\u8bbf\u95ee<code>obj1</code>\u7684\u76ee\u6807\u5bf9\u8c61","text":"<pre><code>//\u2026\u2026\u5047\u8bbeobj1\u5df2\u7ecf\u88ab\u521d\u59cb\u5316\uff0c\u4ee5\u53cd\u6620\u4e0a\u9762\u7684\u5173\u7cfb\u56fe\u2026\nFbxObject* obj0 = obj1-&gt;GetDstObject();\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E8%BF%9E%E6%8E%A5Connections/#obj2","title":"\u4ee5\u7279\u522b\u7684\u65b9\u5f0f\u4ece<code>obj2</code>\u5f00\u59cb\u904d\u5386\u6811\u72b6\u7ed3\u6784","text":"<pre><code>//\u2026\u2026\u5047\u8bbeobj2\u5df2\u7ecf\u88ab\u521d\u59cb\u5316\uff0c\u4ee5\u53cd\u6620\u4e0a\u9762\u7684\u5173\u7cfb\u56fe\u2026\n//\u4f7f\u7528obj2\u8bbf\u95eeprop2\u3002\nFbxProperty* prop2 = obj2-&gt;GetSrcProperty();\n//\u4e3a\u4e86\u8bf4\u660e\uff0c\u8ba1\u7b97prop2\u7684\u6e90\u5c5e\u6027\u7684\u6570\u91cf\u3002\nint numSrcProperties = prop2-&gt;GetSrcPropertyCount(); // numSrcProperties = 2\n//\u8bbf\u95eeprop3\u548cprop4\uff0c\u8fd9\u662f\u5173\u4e8eprop2\u7684\u6765\u6e90\uff0c\n//\u5206\u522b\u4ee50\u548c1\u4e3a\u7d22\u5f15\u3002\nFbxProperty* prop3 = prop2-&gt;GetSrcProperty(0);\nFbxProperty* prop4 = prop2-&gt;GetSrcProperty(1);\n//\u4f7f\u7528obj2\u8bbf\u95eeobj0\u3002\nFbxObject* obj0 = obj2-&gt;GetDstObject();\n//\u4f7f\u7528obj0\u8bbf\u95eeprop0\u3002\nFbxProperty* prop0 = obj0-&gt;GetSrcProperty();\n//\u4f7f\u7528obj0\u8bbf\u95eeobj1\u3002\n//\u8fd9\u91cc\uff0c\u6211\u4eec\u5047\u8bbeobj1\u7684\u7d22\u5f15\u4f4d\u7f6e\u662f0\uff0c\u800cobj2\u7684\u7d22\u5f15\u4f4d\u7f6e\u662f1\u3002\nFbxObject* obj1 = obj0-&gt;GetSrcObject(0);\n//\u4f7f\u7528obj1\u8bbf\u95eeprop1\u3002\nFbxProperty* prop1 = obj1-&gt;GetSrcProperty();\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E8%BF%9E%E6%8E%A5Connections/#_3","title":"\u8fde\u63a5\u5bf9\u8c61\u548c\u5c5e\u6027","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E9%A2%9C%E8%89%B2/","title":"\u989c\u8272","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E9%A2%9C%E8%89%B2/#mesh","title":"\u5bf9\u4e00\u4e2aMesh\u8bbe\u7f6e\u989c\u8272","text":"<pre><code>lMesh-&gt;Color.Set(FbxDouble3(1, 1, 1));\n//FbxNodeAttribute::Color\n//FbxMesh\u662fFbxNodeAttribute\u7684\u5b50\u5b59\n</code></pre> <p>\u95ee\u9898\uff1afbx\u6587\u4ef6\u4e2d\u6709\u989c\u8272\u4fe1\u606f\u8f93\u51fa\uff0c\u4f46\u7528\u8f6f\u4ef6\u6253\u5f00\u6ca1\u7528</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/","title":"FbxSDK C++\u793a\u4f8b","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/#_1","title":"\u5b98\u65b9\u793a\u4f8b","text":"<p>\u793a\u4f8b\u5728fbx sdk\u7684\u5b89\u88c5\u76ee\u5f55\u4e0b\uff0c\u4f7f\u7528cmake\u4e00\u4e0b\u5c31\u80fd\u7f16\u8fc7\u3002</p> <p>\u95ee\u9898\uff1a\u627e\u4e0d\u5230\u5bf9\u5e94\u7684lib</p> <ol> <li>\u5c06<code>C:\\Program Files\\Autodesk\\FBX\\FBX SDK\\2020.0.1\\lib\\vs2017`\u7684\u5185\u5bb9\u62f7\u8d1d\u5230\u76ee\u5f55`C:\\Program Files\\Autodesk\\FBX\\FBX SDK\\2020.0.1\\lib</code>\u4e2d</li> </ol> <p>\u793a\u4f8b\u8bf4\u660e\uff1a <pre><code>samples\n- ExportScene03\n    - \u7ee7\u627fFbxMesh\u3001FbxObject\u7684\u7c7b\uff0c\u521b\u5efa\u5c5e\u4e8e\u81ea\u5df1\u7684MyKFbxMesh\u548cMyFbxObject\n        - \u6ce8\u518c\u81ea\u5df1\u7684\u7c7b\uff1b\n        - \u5c5e\u6027\u7684\u521b\u5efa\n    - \u521b\u5efa\u5e26\u6709\u7eb9\u7406\u7684cube\n        - \u6cd5\u5411\u91cf\uff1a\u6dfb\u52a0\u6cd5\u5411\u91cf\u3001\u4e00\u4e2a\u63a7\u5236\u70b9\u4e00\u4e2a\u6cd5\u5411\u91cf\n        - \u521b\u5efa\u7eb9\u7406\n    - \u521b\u5efa\u5e26\u6750\u8d28\u7684\u7acb\u65b9\u4f53\n    - \u521b\u5efa\u4e09\u89d2\u5f62\n- ExportScene04 \u76f8\u673a\n- ExportScene05 \u8bf4\u660e\u4e86\u5c5e\u6027\u5c42\u6b21\u7ed3\u6784\u7684\u6784\u9020\n</code></pre></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/ExportScene03%20%E5%B1%9E%E6%80%A7/","title":"ExportScene03 \u5c5e\u6027","text":"<p>\u8f93\u51fa\u7684\u5c5e\u6027</p> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/%E8%AF%BB%E5%8F%96%E7%A4%BA%E4%BE%8B/","title":"\u8bfb\u53d6\u793a\u4f8b","text":"<p>\u94fe\u63a5\uff1a</p> <ol> <li>\u57fa\u4e8eFBX SDK\u7684FBX\u6a21\u578b\u89e3\u6790\u4e0e\u52a0\u8f7d\uff08\u4e00\uff09 \u2014\u2014\u51e0\u4f55\u7f51\u683c</li> <li>\u57fa\u4e8eFBX SDK\u7684FBX\u6a21\u578b\u89e3\u6790\u4e0e\u52a0\u8f7d \uff08\u4e8c\uff09\u2014\u2014\u6750\u8d28</li> <li>\u57fa\u4e8eFBX SDK\u7684FBX\u6a21\u578b\u89e3\u6790\u4e0e\u52a0\u8f7d \uff08\u4e09\uff09\u2014\u2014\u6444\u50cf\u673a\u3001\u706f\u5149\u3001\u52a8\u753b</li> <li>\u57fa\u4e8eFBX SDK\u7684FBX\u6a21\u578b\u89e3\u6790\u4e0e\u52a0\u8f7d \uff08\u56db\uff09\u2014\u2014\u9aa8\u9abc\u8499\u76ae\u52a8\u753b</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/%E8%AF%BB%E5%8F%96%E7%A4%BA%E4%BE%8B/#kfbxsdkmanagerkfbxscene","title":"\u521d\u59cb\u5316KFbxSdkManager\u3001KFbxScene","text":"<p>\u5728\u4f7f\u7528SDK\u5bf9FBX\u7684\u5904\u7406\u64cd\u4f5c\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u521d\u59cb\u5316\u4e24\u4e2aFBX\u5bf9\u8c61</p> <ol> <li>KFbxSdkManager \u7528\u6765\u5bf9\u6240\u6709\u7684FBX\u5bf9\u8c61\u8fdb\u884c\u5185\u5728\u7ba1\u7406</li> <li>\u6240\u6709\u4f7f\u7528SDK\u52a0\u8f7d\u7684\u8d44\u6e90\u5747\u5728\u6b64\u5bf9\u8c61\u7684\u7ba1\u63a7\u4e4b\u4e0b\uff0c\u6700\u7ec8\u7684\u8d44\u6e90\u91ca\u653e\u4e5f\u7531\u5176\u6765\u5b8c\u6210</li> <li>\u6709\u4e86\u5185\u5b58\u7ba1\u7406\u5668\u4e4b\u540e\uff0c\u518d\u5728\u5176\u4e0a\u521b\u5efa\u4e00\u4e2a\u76f8\u5173\u7684 KFbxScene \u5bf9\u8c61\u4e4b\u540e\u5373\u53ef\u4ee5\u8fdb\u884c\u6a21\u578b\u7684\u52a0\u622a\u4e0e\u5904\u7406\u4e86</li> <li>KFbxScene \u5176\u5b9e\u76f8\u5f53\u4e8eManager\u63d0\u4f9b\u7684\u6574\u4e2a\u573a\u666f\u5bf9\u8c61\u7684\u4e00\u4e2a\u5165\u53e3</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/%E8%AF%BB%E5%8F%96%E7%A4%BA%E4%BE%8B/#sdkmanager","title":"\u521d\u59cb\u5316SDKManager","text":"<pre><code>bool FBXImporter::Initialize()\n{\n// Create the FBX SDK Manager, destroy the old manager at first\nif(mpFBXSDKManager)\n{\nmpFBXSDKManager-&gt;Destroy();\n}\nmpFBXSDKManager = KFbxSdkManager::Create();\nif(mpFBXSDKManager == NULL)\n{\nreturn false;\n}\n// Create an IOSettings object\nKFbxIOSettings* ios = KFbxIOSettings::Create(mpFBXSDKManager , IOSROOT);\nmpFBXSDKManager-&gt;SetIOSettings(ios);\n// Load plug-ins from the executable directory\nKString lExtension = \"dll\";\nKString lPath = KFbxGetApplicationDirectory();\nmpFBXSDKManager-&gt;LoadPluginsDirectory(lPath.Buffer() , lExtension.Buffer());\n// Create the entity that hold the whole Scene\nmpFBXSDKScene = KFbxScene::Create(mpFBXSDKManager , \"\");\nreturn true;\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/%E8%AF%BB%E5%8F%96%E7%A4%BA%E4%BE%8B/#fbxscene","title":"\u521d\u59cb\u5316FbxScene","text":"<pre><code>bool FBXImporter::LoadScene(const char* pSeneName)\n{\nif(mpFBXSDKManager == NULL)\n{\nreturn false;\n}\n// Get the file version number generate by the FBX SDK.\nKFbxSdkManager::GetFileFormatVersion(mSDKVersion.mMajor , mSDKVersion.mMinor , mSDKVersion.mRevision);\n// Create an importer.\nKFbxImporter* pKFBXImporter = KFbxImporter::Create(mpFBXSDKManager , \"\");\n// Initialize the importer by providing a filename\nFBXFileVersion fileVersion;\nbool importStatus = pKFBXImporter-&gt;Initialize(fileName , -1 , mpFBXSDKManager-&gt;GetIOSettings());\nlImporter-&gt;GetFileVersion(fileVersion.mMajor , fileVersion.mMinor , fileVersion.mRevision);\nif(!importStatus)\n{\nreturn false;\n}\n// Import the scene\nmpFBXScene-&gt;Clear();\nimportStatus = pKFBXImporter-&gt;Import(m_mpFBXScene);\n// Destroy the importer.\npKFBXImporter-&gt;Destroy();\nreturn importStatus;\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/%E8%AF%BB%E5%8F%96%E7%A4%BA%E4%BE%8B/#_1","title":"\u904d\u5386\u6811\u7ed3\u6784","text":"<p>\u5728\u5b8c\u6210\u4e86\u5bf9KFbxScene\u7684\u521d\u59cb\u5316\u64cd\u4f5c\u4e4b\u540e\u5373\u53ef\u4ee5\u4ece\u5176\u4e2d\u5f97\u5230\u6574\u4e2a\u6a21\u578b\u7684\u6240\u6709\u4fe1\u606f\u3002 \u7531\u4e8eFBX\u7684\u662f\u91c7\u7528\u4e86\u7c7b\u4f3c\u4e8e\u6811\u7684\u7ed3\u6784\u6765\u8fdb\u884c\u5b58\u50a8\uff0c\u56e0\u800c\u5c31\u5f88\u5bb9\u6613\u4f7f\u7528\u7c7b\u4f3c\u4e8e\u6811\u7684\u9012\u5f52\u65b9\u6cd5\u6765\u904d\u5386\u5176\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u5e76\u6839\u636e\u7ed3\u70b9\u7684\u5c5e\u6027\u9009\u62e9\u5408\u9002\u7684\u5904\u7406\u64cd\u4f5c</p> <p>\u4e0b\u8ff0\u4ee3\u7801\u5c31\u5b8c\u6210\u4e86\u4ece\u6839\u7ed3\u70b9\u5f00\u59cb\u7684\u5168\u5c40\u904d\u5386 <pre><code>void ProcessNode(KFbxNode* pNode)\n{\nKFbxNodeAttribute::EAttributeType attributeType;\nif(pNode-&gt;GetNodeAttribute())\n{\nswitch(pNode-&gt;GetNodeAttribute()-&gt;GetAttributeType())\n{\ncase KFbxNodeAttribute::eMESH:\nProcessMesh(pNode);\nbreak;\ncase KFbxNodeAttribute::eSKELETON:\nProcessSkeleton(pNode);\nbreak;\ncase KFbxNodeAttribute::eLIGHT:\nProcessLight(pNode);\nbreak;\ncase KFbxNodeAttribute::eCAMERA:\nProcessCamera();\nbreak;\n}\n}\nfor(int i = 0 ; i &lt; pNode-&gt;GetChildCount() ; ++i)\n{\nProcessNode(pNode-&gt;GetChild(i));\n}\n}\n</code></pre> \u4e0a\u8ff0\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355\uff0c\u76f4\u63a5\u4f20\u5165\u7531KFbxScene\u4e2d\u83b7\u5f97\u7684\u6839\u7ed3\u70b9\u4e4b\u540e\u5373\u53ef\u904d\u5386\u5230\u6bcf\u4e00\u4e2a\u5b50\u7ed3\u70b9</p> <ol> <li>\u5728FBX\u7684\u5b58\u50a8\u4e2d\uff0c\u6bcf\u4e2a\u7236\u7ed3\u70b9\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u5b50\u7ed3\u70b9\uff0c\u4f46\u6bcf\u4e2a\u5b50\u7ed3\u70b9\u53ea\u6709\u4e00\u4e2a\u6839\u7ed3\u70b9\uff0c\u800c\u4e14\u8fd9\u5176\u4e2d\u7684\u8054\u7cfb\u662f\u53cc\u5411\u7684</li> <li>\u8fd9\u6837\u5f88\u65b9\u4fbf\uff0c\u6bd4\u5982\u5728\u5904\u7406Skeleton\u65f6\u5c31\u5e38\u5e38\u9700\u8981\u4ece\u5b50\u7ed3\u70b9\u4e2d\u5f97\u5230\u7236\u7ed3\u70b9\u7684matrix\u7b49\u4fe1\u606f\uff0c\u800c\u8fd9\u79cd\u53cc\u5411\u5173\u7cfb\u4f7f\u5f97\u8fd9\u4e9b\u64cd\u4f5c\u5f88\u5bb9\u6613\u5b9e\u73b0</li> </ol> <p>\u3010\u6ce8\u610f\u3011\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u6709<code>pNode-&gt;GetNodeAttribute()</code>\u68c0\u67e5\u64cd\u4f5c\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u5e76\u4e0d\u662f\u6240\u6709\u7684\u7ed3\u70b9\u90fd\u6709\u76f8\u5e94\u7684\u5c5e\u6027\uff08Attribute\u4e5f\u662f\u4ee5\u5b50\u7ed3\u70b9\u7684\u65b9\u5f0f\u5173\u8054\u5230\u5f53\u524d\u7684\u7ed3\u70b9\u4e0a\u7684\uff0c\u56e0\u800c\u53ef\u80fd\u4e3a\u7a7a\uff09</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/%E8%AF%BB%E5%8F%96%E7%A4%BA%E4%BE%8B/#_2","title":"\u52a0\u8f7d\u51e0\u4f55\u7f51\u683c","text":"<p>FBX\u5bf9\u51e0\u4f55\u7f51\u683c\u652f\u6301\u5f97\u8fd8\u662f\u5f88\u597d\u7684\uff0cNurbes\u3001Polygon\u3001Triangle\u7b49\u5747\u53ef\u4ee5\u5b58\u50a8\u3002</p> <p>\u4e0d\u8fc7\u4e3a\u4e86\u7b80\u5316\u52a0\u8f7d\u548c\u5904\u7406\u65f6\u7684\u64cd\u4f5c\uff0c\u6700\u597d\u76f4\u63a5\u5728FBX\u5bfc\u51fa\u63d2\u4ef6\u4e2d\u9009\u62e9\u4e00\u79cd\u7edf\u4e00\u7684\u6a21\u5f0f</p> <ol> <li>\u6bd4\u5982\u53ef\u4ee5\u5728\u5bfc\u51fa\u751f\u6210FBX\u65f6\u9009\u4e2dTriangluation\u7684\u5c5e\u6027\uff0c\u90a3\u4e48FBX\u5bfc\u51fa\u63d2\u4ef6\u4f1a\u81ea\u52a8\u628a\u6240\u6709\u7684Nurbes\u3001Polygon\u4e09\u89d2\u5316\u4e3a\u4e09\u89d2\u5f62\u8fdb\u884c\u5b58\u50a8</li> <li>\u5f53\u7136\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u5728\u6a21\u578b\u8fdb\u884c\u52a0\u8f7d\u65f6\u6765\u8fdb\u884c\u3002\u8fd9\u6837\u5728\u5f97\u5230\u7684FBX\u4e2d\u5c31\u53ea\u6709\u4e09\u89d2\u5f62\u8fd9\u6837\u4e00\u79cd\u7f51\u683c\u6a21\u578b\uff0c\u65b9\u4fbf\u4e86\u52a0\u8f7d\u7684\u64cd\u4f5c</li> </ol> <p>\u6a21\u578b\u7684\u51e0\u4f55\u6570\u636e\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u90e8\u5206\uff1a</p> \u5185\u5bb9 \u8bf4\u660e Vertex \u7ec4\u6210\u7f51\u683c\u7684\u9876\u70b9\u4fe1\u606f\uff0c\u8fd9\u4e00\u90e8\u5206\u662f\u5fc5\u987b\u7684 Color\u00a0 \u6bcf\u4e2a\u9876\u70b9\u7684\u989c\u8272 Normal \u6bcf\u4e2a\u9876\u70b9\u6240\u5bf9\u5e94\u7684\u6cd5\u5411\uff0c\u662f\u7531FBX\u5bfc\u51fa\u63d2\u4ef6\u8ba1\u7b97\u751f\u6210\uff0c\u53ef\u4ee5\u662f\u9010\u9762\u7247\u6216\u9010\u9876\u70b9 Tangent \u6bcf\u4e2a\u9876\u70b9\u6240\u5bf9\u5e94\u7684\u5207\u5411\uff0c\u662f\u7531FBX\u5bfc\u51fa\u63d2\u4ef6\u8ba1\u7b97\u751f\u6210\uff0c\u53ef\u4ee5\u662f\u9010\u9762\u7247\u6216\u9010\u9876\u70b9 uv \u6bcf\u4e2a\u9876\u70b9\u6240\u5bf9\u5e94\u7684\u8d34\u56feUV\u503c\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u6bcf\u4e2aUV\u5bf9\u5e94\u4e00\u4e2aLayer\uff0c\u4e00\u4e2a\u9876\u70b9\u53ef\u4ee5\u6709\u591a\u4e2aUV\u901a\u9053\uff0c\u8fd9\u5728\u8bfb\u5165\u7684\u65f6\u95f4\u9700\u8981\u8fdb\u884c\u5224\u65ad <p>\u51e0\u4f55\u7f51\u683c\u7684\u52a0\u8f7d\u6bd4\u8f83\u7b80\u5355\uff0c\u76f4\u63a5\u9012\u5f52\u5730\u4ece\u6839\u7ed3\u70b9\u6765\u904d\u5386\u6574\u4e2agraph\uff0c\u68c0\u6d4b\u5f53\u524d\u7684\u7ed3\u70b9\u662f\u5426\u4e3aeMESH\u7684\u5c5e\u6027\uff0c\u82e5\u662f\u5373\u5904\u7406\u5176\u4e2d\u7684\u51e0\u4f55\u6570\u636e\uff0c\u4e3b\u8981\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a <pre><code>void ProcessMesh(KFbxNode* pNode)\n{\nKFbxMesh* pMesh = pNode-&gt;GetMesh();\nif(pMesh == NULL)\n{\nreturn;\n}\nD3DXVECTOR3 vertex[3];\nD3DXVECTOR4 color[3];\nD3DXVECTOR3 normal[3];\nD3DXVECTOR3 tangent[3];\nD3DXVECTOR2 uv[3][2];\nint triangleCount = pMesh-&gt;GetPolygonCount();\nint vertexCounter = 0;\nfor(int i = 0 ; i &lt; triangleCount ; ++i)\n{\nfor(int j = 0 ; j &lt; 3 ; j++)\n{\nint ctrlPointIndex = pMesh-&gt;GetPolygonVertex(i , j);\n// Read the vertex\nReadVertex(pMesh , ctrlPointIndex , &amp;vertex[j]);\n// Read the color of each vertex\nReadColor(pMesh , ctrlPointIndex , vertexCounter , &amp;color[j]);\n// Read the UV of each vertex\nfor(int k = 0 ; k &lt; 2 ; ++k)\n{\nReadUV(pMesh , ctrlPointIndex , pMesh-&gt;GetTextureUVIndex(i, j) , k , &amp;(uv[j][k]));\n}\n// Read the normal of each vertex\nReadNormal(pMesh , ctrlPointIndex , vertexCounter , &amp;normal[j]);\n// Read the tangent of each vertex\nReadTangent(pMesh , ctrlPointIndex , vertexCounter , &amp;tangent[j]);\nvertexCounter++;\n}\n// \u6839\u636e\u8bfb\u5165\u7684\u4fe1\u606f\u7ec4\u88c5\u4e09\u89d2\u5f62\uff0c\u5e76\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4f7f\u7528\u5373\u53ef\uff0c\u6bd4\u5982\u5b58\u5165\u5230\u5217\u8868\u4e2d\u3001\u4fdd\u5b58\u5230\u6587\u4ef6\u7b49...\n}\n}\n</code></pre> \u4e0a\u8ff0\u4ee3\u7801\u5b8c\u6210\u4e86\u4ece\u4e00\u4e2aNode\u91cc\u8fb9\u8bfb\u51fa\u76f8\u5e94\u7684\u7f51\u683c\u4fe1\u606f</p> <ol> <li>\u9996\u5148\uff0c\u4eceNode\u91cc\u8fb9\u5f97\u5230\u76f8\u5e94KFbxMesh\u6307\u9488\uff0c\u53ef\u77e5\uff0c\u5982\u679c\u8be5Node\u4e0d\u662feMESH\u5c5e\u6027\u7684\u8bdd\u90a3\u4e48\u8be5\u6307\u9488\u5c31\u4e3a\u7a7a\uff0c\u540e\u7ee7\u64cd\u4f5c\u4e0d\u80fd\u518d\u8fdb\u884c</li> <li>\u6ce8\u610f\u5176\u4e2d\u7528<code>triangleCount</code>\u53d8\u91cf\u6765\u5b58\u50a8<code>pMesh-&gt;GetPolygonCount()</code>\u7684\u503c\uff0c\u8fd9\u4e3b\u8981\u662f\u5728\u524d\u9762\u4e5f\u63d0\u5230\u8fc7\u4e86\uff0c\u5047\u5b9a\u5bf9\u4e8e\u6240\u6709\u7684FBX\u6a21\u578b\u5728\u5b58\u50a8\u65f6\u5747\u9009\u5b9a\u4e86Triangulation\u7684\u64cd\u4f5c\uff0c\u56e0\u800c\u5176\u4e2d\u5b58\u50a8\u7684Polygon\u662f\u4e09\u89d2\u5f62\uff0c\u5982\u6b64\u4e00\u6765\u6bcf\u4e2a\u91cc\u8fb9\u4e00\u5b9a\u53ea\u5305\u542b3\u4e2a\u9876\u70b9\uff0c\u4f9d\u6b21\u8bfb\u5165\u8fd93\u4e2a\u9876\u70b9\u6240\u5bf9\u5e94\u7684\u5404\u5c5e\u6027\u4fe1\u606f\u5373\u53ef</li> </ol> <p>\u5728FBX\u4e2d**\u5bf9\u4e8e\u6bcf\u4e2a\u9876\u70b9\u6240\u5bf9\u5e94\u7684\u5404\u79cd\u989d\u5916\u5c5e\u6027**\uff0c\u6bd4\u5982Normal\u3001Tangent\u3001UV\u7b49**\u5747\u53ef\u5bf9\u5e94\u591a\u4e2a\u901a\u9053**\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5728**\u6bcf\u4e2aMesh**\u91cc\u8fb9**\u589e\u52a0\u76f8\u5e94\u5c5e\u6027\u7684\u4e00\u4e2aLayer**\u5373\u53ef\u5b9e\u73b0\uff0c\u5728\u4f7f\u7528FBX SDK\u5199\u51faFBX\u6587\u4ef6\u65f6\u5f88\u5bb9\u6613\u505a\u5230\u3002 \u6bd4\u5982\u4e0a\u8ff0\u4ee3\u7801\u4e2d</p> <ol> <li>\u4eceFBX\u4e2d\u8bfb\u51fa4\u4e2aUV\u901a\u9053\u4e2d\u7684\u503c\uff08\u7b2c\u4e00\u4e2a\u662f\u6b63\u5e38\u7684\u8d34\u56fe\u901a\u9053\uff0c\u7b2c\u4e8c\u5c42\u662fLightMap\u7684\u901a\u9053\uff09</li> <li><code>vertexCounter</code>\u662f\u8bb0\u5f55\u5df2\u7ecf\u5904\u7406\u8fc7\u7684\u9876\u70b9\u7684\u6570\u76ee\uff0c\u8fd9\u4e3b\u8981\u662f\u9876\u70b9\u4fe1\u606f\u8bfb\u53d6\u5728\u67d0\u4e9b\u6620\u5c04\u6a21\u5f0f\u4e0b\uff08\u6bd4\u5982\u4e0b\u8ff0\u4f7f\u7528\u5230vertexCounter\u7684eBY_POLYGON_VERTEX\u7b49\uff09\u9700\u8981\u77e5\u9053\u5176\u5728\u5168\u5c40\u9876ControlPoints\u4e2d\u7684\u4fe1\u606f\uff0c\u56e0\u800c\u589e\u52a0\u8fd9\u6837\u7684\u4e00\u4e2a\u53d8\u91cf\u6765\u8fdb\u884c\u8bb0\u5f55</li> </ol> <p>\u8bfbNormal\u3001Tangent\u3001UV\u7b49\u4fe1\u606f\u7684\u51fd\u6570\u5176\u5b9e\u90fd\u5dee\u4e0d\u591a</p> <ol> <li>\u9996\u5148\u9700\u8981\u5224\u65ad\u6709\u6ca1\u6709\u76f8\u5e94\u7684Layer\u5173\u8054\u5728\u5f53\u524d\u7684Mesh\u4e2d\uff0c\u82e5\u6709\u5219\u83b7\u53d6\u5176\u5730\u5740</li> <li>\u7136\u540e\u6839\u636e\u4e0d\u540c\u7684\u6620\u5c04\u65b9\u5f0f\u4f7f\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u76f8\u5e94\u7684\u503c\u5373\u53ef</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/%E8%AF%BB%E5%8F%96%E7%A4%BA%E4%BE%8B/#_3","title":"\u8bfb\u9876\u70b9","text":"<pre><code>void ReadVertex(KFbxMesh* pMesh , int ctrlPointIndex , D3DXVECTOR3* pVertex)\n{\nKFbxVector4* pCtrlPoint = pMesh-&gt;GetControlPoints();\npVertex-&gt;x = pCtrlPoint[ctrlPointIndex].GetAt(0);\npVertex-&gt;y = pCtrlPoint[ctrlPointIndex].GetAt(1);\npVertex-&gt;z = pCtrlPoint[ctrlPointIndex].GetAt(2);\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/%E8%AF%BB%E5%8F%96%E7%A4%BA%E4%BE%8B/#color","title":"\u8bfbcolor","text":"<pre><code>//ctrlPointIndex\u70b9\u7684\u4e0b\u6807\n//\nvoid ReadColor(KFbxMesh* pMesh , int ctrlPointIndex , int vertexCounter , D3DXVECTOR4* pColor)\n{\nif(pMesh-&gt;GetElementVertexColorCount &lt; 1)\n{\nreturn;\n}\nKFbxGeometryElementVertexColor* pVertexColor = pMesh-&gt;GetElementVertexColor(0);\nswitch(pVertexColor-&gt;GetMappingMode())\n{\ncase KFbxGeometryElement::eBY_CONTROL_POINT:\n{\nswitch(pVertexColor-&gt;GetReferenceMode())\n{\ncase KFbxGeometryElement::eDIRECT:\n{\npColor-&gt;x = pVertexColor-&gt;GetDirectArray().GetAt(ctrlPointIndex).mRed;\npColor-&gt;y = pVertexColor-&gt;GetDirectArray().GetAt(ctrlPointIndex).mGreen;\npColor-&gt;z = pVertexColor-&gt;GetDirectArray().GetAt(ctrlPointIndex).mBlue;\npColor-&gt;w = pVertexColor-&gt;GetDirectArray().GetAt(ctrlPointIndex).mAlpha;\n}\nbreak;\ncase KFbxGeometryElement::eINDEX_TO_DIRECT:\n{\nint id = pVertexColor-&gt;GetIndexArray().GetAt(ctrlPointIndex);\npColor-&gt;x = pVertexColor-&gt;GetDirectArray().GetAt(id).mRed;\npColor-&gt;y = pVertexColor-&gt;GetDirectArray().GetAt(id).mGreen;\npColor-&gt;z = pVertexColor-&gt;GetDirectArray().GetAt(id).mBlue;\npColor-&gt;w = pVertexColor-&gt;GetDirectArray().GetAt(id).mAlpha;\n}\nbreak;\ndefault:\nbreak;\n}\n}\nbreak;\ncase KFbxGeometryElement::eBY_POLYGON_VERTEX:\n{\nswitch (pVertexColor-&gt;GetReferenceMode())\n{\ncase KFbxGeometryElement::eDIRECT:\n{\npColor-&gt;x = pVertexColor-&gt;GetDirectArray().GetAt(vertexCounter).mRed;\npColor-&gt;y = pVertexColor-&gt;GetDirectArray().GetAt(vertexCounter).mGreen;\npColor-&gt;z = pVertexColor-&gt;GetDirectArray().GetAt(vertexCounter).mBlue;\npColor-&gt;w = pVertexColor-&gt;GetDirectArray().GetAt(vertexCounter).mAlpha;\n}\nbreak;\ncase KFbxGeometryElement::eINDEX_TO_DIRECT:\n{\nint id = pVertexColor-&gt;GetIndexArray().GetAt(vertexCounter);\npColor-&gt;x = pVertexColor-&gt;GetDirectArray().GetAt(id).mRed;\npColor-&gt;y = pVertexColor-&gt;GetDirectArray().GetAt(id).mGreen;\npColor-&gt;z = pVertexColor-&gt;GetDirectArray().GetAt(id).mBlue;\npColor-&gt;w = pVertexColor-&gt;GetDirectArray().GetAt(id).mAlpha;\n}\nbreak;\ndefault:\nbreak;\n}\n}\nbreak;\n}\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/%E8%AF%BB%E5%8F%96%E7%A4%BA%E4%BE%8B/#uv","title":"\u8bfbuv","text":"<pre><code>bool ReadUV(KFbxMesh* pMesh , int ctrlPointIndex ,    //\u70b9\u4e0b\u6807\nint textureUVIndex ,    //\u7eb9\u7406\u4e0b\u6807\nint uvLayer ,           //\u901a\u9053\u6570\nD3DXVECTOR2* pUV)\n{\nif(uvLayer &gt;= 2 || pMesh-&gt;GetElementUVCount() &lt;= uvLayer)\n{\nreturn false;\n}\n//\u5f97\u5230\u6307\u5b9a\u901a\u9053\u7684uv\u503c\nKFbxGeometryElementUV* pVertexUV = pMesh-&gt;GetElementUV(uvLayer);\nswitch(pVertexUV-&gt;GetMappingMode())\n{\ncase KFbxGeometryElement::eBY_CONTROL_POINT:\n{\nswitch(pVertexUV-&gt;GetReferenceMode())\n{\ncase KFbxGeometryElement::eDIRECT:\n{\npUV-&gt;x = pVertexUV-&gt;GetDirectArray().GetAt(ctrlPointIndex).GetAt(0);\npUV-&gt;y = pVertexUV-&gt;GetDirectArray().GetAt(ctrlPointIndex).GetAt(1);\n}\nbreak;\ncase KFbxGeometryElement::eINDEX_TO_DIRECT:\n{\nint id = pVertexUV-&gt;GetIndexArray().GetAt(ctrlPointIndex);\npUV-&gt;x = pVertexUV-&gt;GetDirectArray().GetAt(id).GetAt(0);\npUV-&gt;y = pVertexUV-&gt;GetDirectArray().GetAt(id).GetAt(1);\n}\nbreak;\ndefault:\nbreak;\n}\n}\nbreak;\ncase KFbxGeometryElement::eBY_POLYGON_VERTEX:\n{\nswitch (pVertexUV-&gt;GetReferenceMode())\n{\ncase KFbxGeometryElement::eDIRECT:\ncase KFbxGeometryElement::eINDEX_TO_DIRECT:\n{\npUV-&gt;x = pVertexUV-&gt;GetDirectArray().GetAt(textureUVIndex).GetAt(0);\npUV-&gt;y = pVertexUV-&gt;GetDirectArray().GetAt(textureUVIndex).GetAt(1);\n}\nbreak;\ndefault:\nbreak;\n}\n}\nbreak;\n}\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/%E8%AF%BB%E5%8F%96%E7%A4%BA%E4%BE%8B/#normal","title":"\u8bfbNormal","text":"<pre><code>void ReadNormal(KFbxMesh* pMesh , int ctrlPointIndex , int vertexCounter , D3DXVECTOR3* pNormal)\n{\nif(pMesh-&gt;GetElementNormalCount() &lt; 1)\n{\nreturn;\n}\nKFbxGeometryElementNormal* leNormal = pMesh-&gt;GetElementNormal(0);\nswitch(leNormal-&gt;GetMappingMode())\n{\ncase KFbxGeometryElement::eBY_CONTROL_POINT:\n{\nswitch(leNormal-&gt;GetReferenceMode())\n{\ncase KFbxGeometryElement::eDIRECT:\n{\npNormal-&gt;x = leNormal-&gt;GetDirectArray().GetAt(ctrlPointIndex).GetAt(0);\npNormal-&gt;y = leNormal-&gt;GetDirectArray().GetAt(ctrlPointIndex).GetAt(1);\npNormal-&gt;z = leNormal-&gt;GetDirectArray().GetAt(ctrlPointIndex).GetAt(2);\n}\nbreak;\ncase KFbxGeometryElement::eINDEX_TO_DIRECT:\n{\nint id = leNormal-&gt;GetIndexArray().GetAt(ctrlPointIndex);\npNormal-&gt;x = leNormal-&gt;GetDirectArray().GetAt(id).GetAt(0);\npNormal-&gt;y = leNormal-&gt;GetDirectArray().GetAt(id).GetAt(1);\npNormal-&gt;z = leNormal-&gt;GetDirectArray().GetAt(id).GetAt(2);\n}\nbreak;\ndefault:\nbreak;\n}\n}\nbreak;\ncase KFbxGeometryElement::eBY_POLYGON_VERTEX:\n{\nswitch(leNormal-&gt;GetReferenceMode())\n{\ncase KFbxGeometryElement::eDIRECT:\n{\npNormal-&gt;x = leNormal-&gt;GetDirectArray().GetAt(vertexCounter).GetAt(0);\npNormal-&gt;y = leNormal-&gt;GetDirectArray().GetAt(vertexCounter).GetAt(1);\npNormal-&gt;z = leNormal-&gt;GetDirectArray().GetAt(vertexCounter).GetAt(2);\n}\nbreak;\ncase KFbxGeometryElement::eINDEX_TO_DIRECT:\n{\nint id = leNormal-&gt;GetIndexArray().GetAt(vertexCounter);\npNormal-&gt;x = leNormal-&gt;GetDirectArray().GetAt(id).GetAt(0);\npNormal-&gt;y = leNormal-&gt;GetDirectArray().GetAt(id).GetAt(1);\npNormal-&gt;z = leNormal-&gt;GetDirectArray().GetAt(id).GetAt(2);\n}\nbreak;\ndefault:\nbreak;\n}\n}\nbreak;\n}\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/%E8%AF%BB%E5%8F%96%E7%A4%BA%E4%BE%8B/#tangent","title":"\u8bfbTangent","text":"<pre><code>void ReadTangent(KFbxMesh* pMesh , int ctrlPointIndex , int vertecCounter , D3DXVECTOR3* pTangent)\n{\nif(pMesh-&gt;GetElementTangentCount() &lt; 1)\n{\nreturn;\n}\nKFbxGeometryElementTangent* leTangent = pMesh-&gt;GetElementTangent(0);\nswitch(leTangent-&gt;GetMappingMode())\n{\ncase KFbxGeometryElement::eBY_CONTROL_POINT:\n{\nswitch(leTangent-&gt;GetReferenceMode())\n{\ncase KFbxGeometryElement::eDIRECT:\n{\npTangent-&gt;x = leTangent-&gt;GetDirectArray().GetAt(ctrlPointIndex).GetAt(0);\npTangent-&gt;y = leTangent-&gt;GetDirectArray().GetAt(ctrlPointIndex).GetAt(1);\npTangent-&gt;z = leTangent-&gt;GetDirectArray().GetAt(ctrlPointIndex).GetAt(2);\n}\nbreak;\ncase KFbxGeometryElement::eINDEX_TO_DIRECT:\n{\nint id = leTangent-&gt;GetIndexArray().GetAt(ctrlPointIndex);\npTangent-&gt;x = leTangent-&gt;GetDirectArray().GetAt(id).GetAt(0);\npTangent-&gt;y = leTangent-&gt;GetDirectArray().GetAt(id).GetAt(1);\npTangent-&gt;z = leTangent-&gt;GetDirectArray().GetAt(id).GetAt(2);\n}\nbreak;\ndefault:\nbreak;\n}\n}\nbreak;\ncase KFbxGeometryElement::eBY_POLYGON_VERTEX:\n{\nswitch(leTangent-&gt;GetReferenceMode())\n{\ncase KFbxGeometryElement::eDIRECT:\n{\npTangent-&gt;x = leTangent-&gt;GetDirectArray().GetAt(vertecCounter).GetAt(0);\npTangent-&gt;y = leTangent-&gt;GetDirectArray().GetAt(vertecCounter).GetAt(1);\npTangent-&gt;z = leTangent-&gt;GetDirectArray().GetAt(vertecCounter).GetAt(2);\n}\nbreak;\ncase KFbxGeometryElement::eINDEX_TO_DIRECT:\n{\nint id = leTangent-&gt;GetIndexArray().GetAt(vertecCounter);\npTangent-&gt;x = leTangent-&gt;GetDirectArray().GetAt(id).GetAt(0);\npTangent-&gt;y = leTangent-&gt;GetDirectArray().GetAt(id).GetAt(1);\npTangent-&gt;z = leTangent-&gt;GetDirectArray().GetAt(id).GetAt(2);\n}\nbreak;\ndefault:\nbreak;\n}\n}\nbreak;\n}\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/FbxSDK%20C%2B%2B/%E7%A4%BA%E4%BE%8B/%E8%AF%BB%E5%8F%96%E7%A4%BA%E4%BE%8B/#_4","title":"\u52a0\u8f7d\u6750\u8d28","text":"<p>Material\u662f\u4e00\u4e2a\u6a21\u578b\u6e32\u67d3\u65f6\u5fc5\u4e0d\u53ef\u5c11\u7684\u90e8\u5206\uff0c\u5f53\u7136\uff0c\u8fd9\u4e9b\u4fe1\u606f\u4e5f\u88ab\u5b58\u5230\u4e86FBX\u4e4b\u4e2d\uff08\u751a\u81f3\u5404\u79cd\u8d34\u56fe\u7b49\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5185\u5d4c\u5230FBX\u5185\u90e8\uff09\uff0c\u5c31\u9700\u8981\u4eceFBX\u4e2d\u52a0\u8f7d\u8fd9\u4e9b\u4fe1\u606f\u4ee5\u5b8c\u6210\u5e26\u6709\u6750\u8d28\u7684\u6e32\u67d3\u3002\u6750\u8d28\u7684\u52a0\u8f7d\u53ef\u4ee5\u4e0eMesh\u7684\u52a0\u8f7d\u76f8\u7ed3\u5408\u6765\u5b8c\u6210\uff0c\u4f46\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u72ec\u7acb\u8fdb\u884c\uff0c\u8fd9\u6837\u5404\u6a21\u5757\u95f4\u7684\u5173\u7cfb\u66f4\u6e05\u6670\uff0c\u4f46\u8fd9\u5c31\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u90a3\u5c31\u662f\u5173\u8054Mesh\u4e0eMaterial\u3002FBX\u4e2d\u7684\u6750\u8d28\u5bf9\u8c61\u5305\u542b\u4e86\u4e30\u5bcc\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u6700\u5e38\u89c4\u7684\u4eceMax\u4e2d\u53ef\u4ee5\u770b\u5230\u90a3\u4e9b\u6750\u8d28\u5c5e\u6027\uff0c\u5982ambient\u3001diffuse\u3001specular\u7684color\u548ctexture\uff1bshininess\u3001opacity\u503c\u7b49\uff0c\u66f4\u9ad8\u7ea7\u4e00\u70b9\u7684\u5c5e\u6027\u8bf8\u5982Effect\u7684\u53c2\u6570\u3001\u6e90\u6587\u4ef6\u7b49\u90fd\u53ef\u4ee5\u4fdd\u5b58\u3002\u5b83\u662f\u5c3d\u53ef\u80fd\u4fdd\u8bc1\u4ece\u5efa\u6a21\u5de5\u5177\u4e2d\u5bfc\u51fa\u65f6\u4e0d\u4e22\u5931\u5730\u4fdd\u5b58\u6750\u8d28\u4fe1\u606f\uff0c\u4f46\u6211\u4eec\u5728\u4f7f\u7528\u65f6\u5374\u53ef\u4ee5\u6709\u9009\u62e9\u5730\u8bfb\u53d6\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F/Fbx%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/Fbx%E6%A0%BC%E5%BC%8F%E7%89%88%E6%9C%AC/","title":"Fbx\u683c\u5f0f\u7248\u672c","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/","title":"glTF","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/#_1","title":"\u76f8\u5173\u94fe\u63a5","text":"\u7c7b\u578b \u8d44\u6e90 \u8bf4\u660e glTF\u5b98\u65b9\u7f51\u7ad9 Github\u4ed3\u5e93 glTF\u6807\u51c6\u4e66 Github\u4ed3\u5e93\u4e2d\u7684\u6807\u51c6\u4e66\uff1bgltf2.0\u6807\u51c6\u4e66\u6587\u6863 glTF\u6559\u7a0b 1. Github\u4ed3\u5e93\u4e2d\u7684\u6559\u7a0b\uff1bglTF\u6559\u7a0b\uff08\u4e2d\u6587\u7ffb\u8bd1\uff09 glTF\u6a21\u578b \u5b98\u65b9\u6587\u4ef6\u793a\u4f8b glTF\u6e32\u67d3\u5668 1. OpenGL 4.5\u6e32\u67d3glTF\uff08\u5305\u542bpbr\uff092. Vulkan\u6e32\u67d3glTF\uff08\u5305\u542bpbr\uff09"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/#_2","title":"\u5f15\u8a00","text":"<p>\u6458\u81ea\uff1a3dTiles \u6570\u636e\u89c4\u8303\u8be6\u89e3</p> <p>\u5728WebGL\uff08\u5305\u62ec\u6240\u6709GPU\u56fe\u5f62\u6e32\u67d3\u7f16\u7a0b\uff09\u7684\u773c\u91cc\uff0c\u5b83\u53ea\u8ba4\u8bc6\uff1a\u9876\u70b9\u3001\u9876\u70b9\u989c\u8272\u3001\u9876\u70b9\u6cd5\u7ebf\u3001\u7740\u8272\u8bed\u8a00\u2026\u2026</p> <p>\u6240\u4ee5\uff0c\u4e09\u7ef4\u56fe\u5f62\u754c\u7684\u901a\u7528\u683c\u5f0f\uff1aglTF\u5e94\u8fd0\u800c\u751f\u3002glTF\u9762\u5411\u7ec8\u70b9\uff08\u6570\u636e\u7684\u6700\u7ec8\u90fd\u662f\u6e32\u67d3\u4e0e\u5c55\u793a\uff09\uff0c\u5b83\u76f4\u63a5\u6309\u7167\u56fe\u5f62\u7f16\u7a0b\u6240\u9700\u7684\u683c\u5f0f\u6765\u5b58\u50a8\u6570\u636e\uff0c\u501f\u4ee5\u4e8c\u8fdb\u5236\u7f16\u7801\u63d0\u9ad8\u4f20\u8f93\u901f\u5ea6\u3002</p> <ul> <li>\u5b83\u4e0d\u518d\u4f7f\u7528 \u9762\u5411\u5bf9\u8c61\u7684\u601d\u7ef4 \u5b58\u50a8\u4e09\u7ef4\u6a21\u578b\u3001\u8d34\u56fe\u7eb9\u7406\uff0c\u800c\u662f\u6309 \u663e\u5361\u7684\u601d\u7ef4\u5b58\u50a8 \u3002\u5b58\u7684\u662f\u9876\u70b9\u3001\u6cd5\u7ebf\u3001\u9876\u70b9\u989c\u8272\u7b49\u6700\u57fa\u7840\u7684\u4fe1\u606f\uff0c\u53ea\u4e0d\u8fc7 \u7ec4\u7ec7\u7ed3\u6784\u4e0a\u8fdb\u884c\u4e86\u7cbe\u5fc3\u7684\u8bbe\u8ba1 \u3002</li> <li>\u5b83\u9762\u5411\u7ec8\u70b9\uff0c\u5c31\u610f\u5473\u7740\u53ef\u7f16\u8f91\u6027\u5dee\uff0c\u56e0\u4e3a\u6e32\u67d3\u6027\u80fd\u7684\u63d0\u9ad8\u727a\u7272\u4e86\u53ef\u7f16\u8f91\u6027\uff0c\u5b83\u4e0d\u518d\u50cf3ds\u3001dae\u751a\u81f3\u662fmax\u3001skp\u4e00\u6837\u5bb9\u6613\u7f16\u8f91\u548c\u8f6c\u6362\u3002</li> </ul> <p>\u800c\u4e14\uff0c\u5927\u591a\u6570\u4e09\u7ef4\u8f6f\u4ef6\u63d0\u4f9b\u4e86glTF\u683c\u5f0f\u7684\u8f6c\u6362\uff0c\u6216\u591a\u4e00\u6b65\uff0c\u6216\u4e00\u6b65\u5230\u4f4d\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/#_3","title":"\u80cc\u666f","text":"<ol> <li>\u5982\u4eca\u5df2\u7ecf\u5b58\u5728\u76843D\u683c\u5f0f\uff1a\u6709\u4e00\u4e9b\u6ca1\u6709\u5305\u542b\u573a\u666f\u4fe1\u606f\uff1b\u6709\u4e00\u4e9b\u867d\u7136\u5305\u542b\u4e86\u573a\u666f\u4fe1\u606f\uff0c\u4f46\u8fd9\u4e9b\u573a\u666f\u4fe1\u606f\u53ea\u9002\u7528\u4e8e\u67d0\u4e9b\u7279\u5b9a\u8f6f\u4ef6\u3002\u56e0\u6b64\uff0c\u8bb8\u591a\u65f6\u5019\uff0c\u6211\u4eec\u90fd\u9700\u8981\u5bf9\u51e0\u4f55\u6570\u636e\u8fdb\u884c\u9884\u5904\u7406\u4e4b\u540e\uff0c\u624d\u80fd\u8fdb\u884c\u6e32\u67d3</li> <li>\u73b0\u5b58\u76843D\u6570\u636e\u683c\u5f0f\u4e0d\u65b9\u4fbf\u5728\u7f51\u4e0a\u4f20\u8f93\uff0c\u4ee5\u53ca\u76f4\u63a5\u8fdb\u884c\u9ad8\u6548\u6e32\u67d3</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/#_4","title":"\u76ee\u6807","text":"<p>glTF\uff0cGraphics Language Transmission Formator\uff0c\u56fe\u5f62\u8bed\u8a00\u4f20\u8f93\u683c\u5f0f\u3002\u7531Khronos 3D\u6807\u51c6\u7ec4\u7ec7\u521b\u5efa\u4e0e\u7ba1\u7406\u3002</p> <p>glTF\u683c\u5f0f\u662f\u5f00\u653e\u76843D\u6a21\u578b\u548c\u573a\u666f\u683c\u5f0f\uff0c\u65e8\u5728\u4e3a3D\u6570\u636e\u683c\u5f0f\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u6807\u51c6\uff0c\u4ee5\u6709\u6548\u5730\u4f20\u8f93\u4e30\u5bcc\u7684\u573a\u666f3D\u6570\u636e\uff0c\u4e0e\u65b9\u4fbf\u5e94\u7528\u7a0b\u5e8f\u7684\u8bfb\u53d6\u4e0e\u6e32\u67d3\u3002</p> <p>glTF\u7684\u76ee\u6807\u662f\u4f5c\u4e3a\u4e00\u4e2a\u4e2d\u8f6c\u683c\u5f0f\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u65b0\u76843D\u683c\u5f0f\u3002</p> <ul> <li>\u4f7f\u7528JSON\u6765\u63cf\u8ff0\u573a\u666f\u7ed3\u6784\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u88ab\u5e94\u7528\u7a0b\u5e8f\u5206\u6790\u5904\u7406</li> <li>3D\u6570\u636e\u4ee5\u4e00\u79cd\u53ef\u4ee5\u88ab\u5927\u591a\u6570\u56fe\u5f62API\u76f4\u63a5\u4f7f\u7528\u7684\u65b9\u5f0f\u8fdb\u884c\u5b58\u50a8\uff0c\u4e0d\u9700\u8981\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u89e3\u7801\u6216\u9884\u5904\u7406\u64cd\u4f5c</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/#_5","title":"\u7279\u70b9","text":"<ul> <li>\u6570\u636e\u5757\u8fde\u7eed\u5b58\u50a8</li> <li>\u63d0\u4f9b\u89c6\u56fe\u3001\u8bbf\u95ee\u5668\u7684\u6982\u5ff5</li> <li>\u903b\u8f91\u5c42\u4e0e\u6570\u636e\u5c42\u5206\u79bb</li> <li>\u903b\u8f91\u5c42\u7528JSON\u4fdd\u5b58</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/#_6","title":"\u4f18\u70b9","text":"<p>\u6613\u4e8e\u8bfb\u5199</p> <p>\u5feb\u901f\u9ad8\u6548</p> <p>\u76f4\u63a5\u8bfb\u53d6\u6e38\u620f\u5f15\u64ce</p> <p>\u6765\u81ea\u6807\u51c6\u7ec4\u7684\u6307\u5bfc</p> <p>\u4e30\u5bcc\u7684\u573a\u666f\u6570\u636e</p> <p>\u589e\u5f3a\u73b0\u5b9e</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/#_7","title":"\u7f3a\u70b9","text":"<p>\u4e0d\u53ef\u7f16\u8f91\u76843D\u6a21\u578b</p> <p>\u65e0\u7740\u8272\u5668\u7f51\u7edc</p> <p>\u975e\u5411\u540e\u517c\u5bb9\u6269\u5c55</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/#_8","title":"\u5f53\u524d\u7684\u5e94\u7528\u60c5\u51b5","text":"<ol> <li>\u76ee\u524d\u5df2\u7ecf\u6709\u4e00\u4e9b3D\u5185\u5bb9\u521b\u5efa\u8f6f\u4ef6\u53ef\u4ee5\u5c063D\u573a\u666f\u4ee5glTF\u7684\u683c\u5f0f\u8fdb\u884c\u5b58\u50a8</li> <li>\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884cglTF\u573a\u666f\u6570\u636e\u7684\u6e32\u67d3</li> </ol> <ol> <li>\u51e0\u4e4e\u6240\u6709\u76843D\u5185\u5bb9\u521b\u4f5c\u8f6f\u4ef6\u90fd\u652f\u6301\u5c06\u573a\u666f\u5bfc\u51fa\u5230COLLADA\u683c\u5f0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u6b64\u683c\u5f0f\u4f5c\u4e3a\u4e2d\u8f6c</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/#_9","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>BIM\u8f7b\u91cf\u5316\u4e4b\u8def\uff08\u4e8c\uff09-revit\u5bfc\u51faGLTF</li> <li>glTF vs FBX: \u5e94\u8be5\u4f7f\u7528\u54ea\u79cd\u683c\u5f0f?\uff1b\u4e2d\u6587\u7ffb\u8bd1</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/","title":"glTF\u76f8\u5173\u5de5\u5177","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/#_1","title":"\u67e5\u770b\u5668","text":"\u8bf4\u660e gltf-viewer.donmccurdy \u7f51\u9875\u67e5\u770b\u5668 clay-viewer vscode gltf tools\u63d2\u4ef6 \u6253\u5f00gltf\u6587\u4ef6 &gt; alt+G\u6253\u5f00\u9884\u89c8"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/#_2","title":"\u683c\u5f0f\u8f6c\u6362","text":"\u683c\u5f0f\u8f6c\u6362 \u8bf4\u660e COLLADA 1. COLLADA2GLTF OBJ 1. obj2gltf fbx 1. fbx2gltf revit 1. Revit2glTF"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/#_3","title":"\u8bfb\u5199\u5e93","text":"\u5e93\u540d \u8bed\u8a00 \u8bf4\u660e glTF-CSharp-Loader C# \u548c<code>Interface.LoadModel(\"pathtommodel .gltf\")</code>\u4e00\u6837\u4f7f\u7528\u7b80\u5355 \u5fae\u8f6fglTF SDK C++ TinyGLTF C++11"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/#_4","title":"\u4f18\u5316","text":"<p>\u5bf9\u6a21\u578b\u8fdb\u4e00\u6b65\u4f18\u5316\u53ef\u4ee5\u4f7f\u7528\u8c37\u6b4c\u5f00\u6e90\u7684Draco\uff0c\u5927\u5e45\u52a0\u901f 3D \u6570\u636e\u7684\u7f16\u7801\u3001\u4f20\u8f93\u548c\u89e3\u7801\u3002</p> <p>gltf-pipeline\uff1ahttps://github.com/CesiumGS/gltf-pipeline\uff0c\u4f9d\u8d56NODE.JS\uff0c\u901a\u8fc7\u547d\u4ee4\u884c\u7a97\u53e3\u53ef\u4ee5\u5bf9\u6a21\u578b\u8fdb\u884c\u4f18\u5316\uff1a</p> <ol> <li>\u8f6c\u6362GLB\uff1a<code>gltf-pipeline -i NewProject.gltf -o NewProject.glb</code></li> <li>\u8f6c\u6362Draco\uff1a<code>gltf-pipeline -i NewProject.gltf -o buildDraco.gltf \u2013d</code></li> </ol> <p>\u6e90\u6587\u4ef6\u5927\u5c0f\u4e3a6M\uff0c\u538b\u7f29\u5b8c\u540e\u4e3a1M\uff0c\u538b\u7f29\u6bd4\u63a5\u8fd16:1\uff0c\u5bf9\u4e8e\u7ba1\u7ebf\u3001\u7cbe\u88c5\u4fee\u7b49mesh\u591a\u7684\u60c5\u51b5\u8fbe\u4e0d\u5230\u8fd9\u79cd\u538b\u7f29\u6bd4\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/Microsoft%20glTF%20SDK/","title":"Microsoft glTF SDK","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/Microsoft%20glTF%20SDK/#_1","title":"\u7f16\u8bd1","text":"<p>\u53ef\u80fd\u7f16\u8bd1\u4e0d\u8fc7\u7684\u95ee\u9898 <pre><code>error C2440: '': cannot convert from 'initializer list' to 'Microsoft::glTF::rapidjson::SchemaDocument'\n</code></pre></p> <p>\u89e3\u51b3\u529e\u6cd5\uff1ahttps://github.com/microsoft/glTF-SDK/issues/71</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/","title":"Cpp TinyGltf","text":"<p>\u76f8\u5173\u94fe\u63a5\uff1a</p> <ol> <li>TinyGltf github\u4ed3\u5e93</li> </ol> <p>TinyGLTF\u662f\u9488\u5bf9glTF2.0\u683c\u5f0f\u7684\u4e00\u4e2a\u8bfb\u5199\u5e93\uff0c\u5b83\u662f\u4e00\u4e2a\u57fa\u4e8eC++11\u7684\u5934\u6587\u4ef6\u5e93\u3002</p> <ol> <li>\u4f9d\u8d56Niels Lohmann's json\u5e93\uff0c\u7528\u4e8e\u89e3\u6790JSON\u6587\u4ef6\uff08\u4e5f\u53ef\u4ee5\u6362\u6210<code>RadpidJSON</code>\u3001<code>devel-picojson</code>(C++03\u5373\u53ef)\u3001sajson\u3001\u6216\u8005\u5176\u4ed6\u7684Json\u540e\u53f0\uff09</li> <li>\u4f9d\u8d56<code>stb_image.h</code>\u3001<code>stb_image_wrtie.h</code>\u7528\u4e8e\u56fe\u7247\u7684\u8bfb\u5199</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/#_1","title":"\u793a\u4f8b","text":"<p>\u7531\u4e8eTinyGltf\u53ea\u662f\u4e00\u4e2a\u5934\u6587\u4ef6\u5e93\uff0c\u6240\u4ee5\u5c06\u76f8\u5173\u7684\u5934\u6587\u4ef6\u62f7\u8d1d\u5230\u5de5\u7a0b\u4e2d\u5373\u53ef\u3002</p> <p>\u9700\u8981\u62f7\u8d1d\u7684\u6587\u4ef6\u6709\uff1a<code>stb_image.h</code>\u3001<code>stb_image_write.h</code>\u3001<code>json.hpp</code>\u3001<code>tiny_gltf.h</code></p> \u4e3b\u9898 \u4ee3\u7801 \u8bf4\u660e IO loader_example.cc \u52a0\u8f7dgltf2.0\uff0c\u5e76\u8f93\u51fa\u6240\u6709\u4fe1\u606f saver \u8bfb\u5165gltf2.0\uff0c\u518d\u8f93\u51fa\u6210gltf\u683c\u5f0f create_triangle_gltf \u521b\u5efa\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u5e76\u8f93\u51fa\u6210gltf\u7684\u683c\u5f0f \u6e32\u67d3 basic \u7b80\u5355\u7684gltf\u67e5\u770b\u5668\uff08\u6ca1\u6709pbr\u7740\u8272\u5668\uff09 raytrace \u7b80\u6613\u3001\u5c0f\u5de7\u3001\u4ec5\u5934\u6587\u4ef6\u7684\u573a\u666f\u56fe\u5f62\u5e93 \u683c\u5f0f\u9a8c\u8bc1 validator \u9a8c\u8bc1\u6587\u4ef6\u662f\u5426\u6ee1\u8db3glTF 2.0\u6807\u51c6"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/#_2","title":"\u9009\u9879","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/#_3","title":"\u52a0\u8f7d\u9009\u9879","text":"<p><code>TinyGLTF::SetPreserveimageChannels(bool onoff)</code></p> <ul> <li><code>true</code>\uff1a\u4e3a\u52a0\u8f7d\u7684\u56fe\u50cf\u4fdd\u7559\uff0c\u4e0e\u56fe\u50cf\u6587\u4ef6\u4e2d\u76f8\u540c\u7684\u56fe\u50cf\u901a\u9053</li> <li><code>false</code>\uff1a\u9ed8\u8ba4\u4e3a\u5411\u540e\u517c\u5bb9\uff08\u56fe\u50cf\u901a\u9053\u88ab\u52a0\u5bbd\u5230RGBA4\u901a\u9053\uff09</li> <li>\u6b64\u8bbe\u7f6e\u4ec5\u5728\u4f7f\u7528\u5185\u7f6e\u56fe\u50cf\u52a0\u8f7d\u5668\uff08STB\u56fe\u50cf\u52a0\u8f7d\u5668\uff09\u65f6\u6709\u6548</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/#_4","title":"\u7f16\u8bd1\u9009\u9879","text":"\u540d\u79f0 \u8bf4\u660e <code>TINYGLTF_NOEXCEPTION</code> \u5728JSON\u89e3\u6790\u4e2d\u5173\u95edC++\u5f02\u5e38\u3002You can use -fno-exceptions or by defining the symbol JSON_NOEXCEPTION and TINYGLTF_NOEXCEPTION to fully remove C++ exception codes when compiling TinyGLTF. <code>TINYGLTF_NO_STB_IMAGE</code> \u4e0d\u8981\u7528<code>stb_image</code>\u52a0\u8f7d\u56fe\u50cf\u3002\u76f8\u53cd\uff0c\u901a\u8fc7\u8bbe\u7f6e<code>TinyGLTF::SetImageLoader(LoadimageDataFunction LoadImageData, void *user_data)</code>\u56de\u8c03\u51fd\u6570\u6765\u81ea\u5b9a\u4e49\u52a0\u8f7d\u65b9\u6cd5 <code>TINYGLTF_NO_STB_IMAGE_WRITE</code> \u4e0d\u8981\u4f7f\u7528<code>stb_image_write</code>\u6765\u5199\u5165\u56fe\u50cf\u3002\u901a\u8fc7\u8bbe\u7f6e<code>TinyGLTF::SetImageWriter(WriteimageDataFunction WriteImageData, void *user_data)</code>\u56de\u8c03\u51fd\u6570\u6765\u81ea\u5b9a\u4e49\u5199\u65b9\u6cd5 <code>TINYGLTF_NO_EXTERNAL_IMAGE</code> \u4e0d\u8981\u5c1d\u8bd5\u52a0\u8f7d\u5916\u90e8\u56fe\u50cf\u6587\u4ef6\u3002\u5982\u679c\u60a8\u4e0d\u60f3\u5728glTF\u89e3\u6790\u671f\u95f4\u52a0\u8f7d\u56fe\u50cf\u6587\u4ef6\uff0c\u8fd9\u4e2a\u9009\u9879\u80fd\u5e2e\u52a9\u5230\u4f60 <code>TINYGLTF_ANDROID_LOAD_FROM_ASSETS</code> \u4ece\u6253\u5305\u7684\u5e94\u7528\u8d44\u4ea7\u4e2d\u52a0\u8f7d\u6240\u6709\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u5e38\u89c4\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u6ce8\u610f\uff0c\u4f60\u5fc5\u987b\u4e8b\u5148\u5c06\u4e00\u4e2a\u6709\u6548\u7684\u8d44\u4ea7\u7ba1\u7406\u5668\u4ece\u4f60\u7684android\u5e94\u7528\u7a0b\u5e8f\u4f20\u9012\u7ed9<code>tinygltf::asset_manager</code> <code>TINYGLTF_ENABLE_DRACO</code> \u6253\u5f00<code>Draco</code>\u538b\u7f29\u3002\u7528\u6237\u5fc5\u987b\u5728\u9879\u76ee\u6587\u4ef6\u4e2d\u63d0\u4f9b\u5305\u542b\u8def\u5f84\u548c\u94fe\u63a5\u76f8\u5e94\u7684\u5e93 <code>TINYGLTF_NO_INCLUDE_JSON</code> \u7981\u7528\u5728<code>ting_gltf.h</code>\u4e2d\u5305\u542b<code>json.hpp</code>\u3002\u56e0\u4e3a\u5b83\u4e4b\u524d\u5df2\u7ecf\u5305\u542b\u8fc7\u4e86\uff0c\u6216\u8005\u60a8\u60f3\u5728\u5305\u542b<code>tiny_gltf.h</code>\u4e4b\u524d\u4f7f\u7528\u5b83\u7684\u81ea\u5b9a\u4e49\u8def\u5f84 <code>TINYGLTF_NO_INCLUDE_RAPIDJSON</code> \u7981\u6b62\u5728<code>tiny_gltf.h</code>\u4e2d\u5305\u542b<code>RapidJson</code>\u7684\u5934\u6587\u4ef6\uff0c\u56e0\u4e3a\u5b83\u4e4b\u524d\u5df2\u7ecf\u5305\u542b\u8fc7\u4e86\uff0c\u6216\u8005\u4f60\u60f3\u5728\u5305\u542b<code>tiny_gltf.h</code>\u4e4b\u524d\u4f7f\u7528\u5b83\u7684\u81ea\u5b9a\u4e49\u8def\u5f84 <code>TINYGLTF_NO_INCLUDE_STB_IMAGE</code> \u7981\u7528\u5728<code>tiny_gltf.h</code>\u4e2d\u5305\u542b<code>stb_image.h</code>\uff0c\u56e0\u4e3a\u5b83\u4e4b\u524d\u5df2\u7ecf\u5305\u542b\u8fc7\u4e86\uff0c\u6216\u8005\u60a8\u60f3\u5728<code>#include\"tiny_gltf.h\"</code>\u4e4b\u524d\u4f7f\u7528\u81ea\u5b9a\u4e49\u8def\u5f84inlucde\u5b83 <code>TINYGLTF_NO_INCLUDE_STB_IMAGE_WRITE</code> Disable including stb_image_write.h from within tiny_gltf.h because it has been already included before or you want to include it using custom path before including tiny_gltf.h. <code>TINYGLTF_USE_RAPIDJSON</code> Use RapidJSON as a JSON parser/serializer. RapidJSON files are not included in TinyGLTF repo. Please set an include path to RapidJSON if you enable this feature. <code>TINYGLTF_USE_CPP14</code> Use C++14 feature(requires C++14 compiler). This may give better performance than C++11."},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/%E4%BD%BF%E7%94%A8tinygltf%E5%8A%A0%E8%BD%BD%E6%A8%A1%E5%9E%8B%E6%97%B6%EF%BC%8C%E6%A8%A1%E5%9E%8B%E5%81%8F%E6%9A%97/","title":"\u4f7f\u7528tinygltf\u52a0\u8f7d\u6a21\u578b\u65f6\uff0c\u6a21\u578b\u504f\u6697","text":"<p>\u5728\u52a0\u8f7d3dtiles\u65f6\uff0c\u7528tinygltf\u89e3\u6790b3dm\u4e2d\u7684glb\u7f13\u51b2\u533a\uff0c\u52a0\u8f7d\u51fa\u6765\u7684\u503e\u659c\u975e\u5e38\u6697\u3002</p> <p></p> <p>\u539f\u56e0\uff1atinygltf\u6750\u8d28\u4e2d\uff0c\u91d1\u5c5e\u5ea6\u7684\u9ed8\u8ba4\u503c\u4e3a1\uff08\u8be6\u60c5\u8bf7\u67e5\u9605pbr\u6750\u8d28\u76f8\u5173\u6587\u6863\uff09</p> <ul> <li>\u91d1\u5c5e\u5ea6\u662f\u6ca1\u6709\u6f2b\u53cd\u5c04\u7684\uff0c\u5149\u7ebf\u8fdb\u5165\u7269\u4f53\u4e4b\u540e\u4f1a\u88ab\u8fc5\u901f\u5438\u6536\uff0c\u56e0\u6b64baseColor\u5b9e\u9645\u4f1a\u4e58\u4e00\u4e2a\u9006\u91d1\u5c5e\u5ea6\uff0c\u5373<code>color = baseColor * (1-metallicFactor)</code></li> <li>\u800ctinygltf\u6750\u8d28\u7684\u9ed8\u8ba4\u91d1\u5c5e\u5ea6\u4e3a1\uff0c\u56e0\u6b64<code>color=0</code>\u3002\u53c8\u56e0\u6709\u5176\u4ed6\u9879\uff0c\u6240\u4ee5\u6574\u4f53\u6765\u8bf4\uff0c\u6e32\u67d3\u7ed3\u679c\u5f88\u6697\uff0c\u5e76\u4e0d\u4f1a\u5b8c\u5168\u9ed1</li> </ul> <pre><code>//File: tiny_gltf.h\n// pbrMetallicRoughness class defined in glTF 2.0 spec.\nstruct PbrMetallicRoughness {\nstd::vector&lt;double&gt; baseColorFactor;  // len = 4. default [1,1,1,1]\nTextureInfo baseColorTexture;\ndouble metallicFactor;   // default 1\ndouble roughnessFactor;  // default 1\nTextureInfo metallicRoughnessTexture;\nValue extras;\nExtensionMap extensions;\n// Filled when SetStoreOriginalJSONForExtrasAndExtensions is enabled.\nstd::string extras_json_string;\nstd::string extensions_json_string;\nPbrMetallicRoughness()\n: baseColorFactor(std::vector&lt;double&gt;{1.0, 1.0, 1.0, 1.0}),\nmetallicFactor(1.0),\nroughnessFactor(1.0) {}\nDEFAULT_METHODS(PbrMetallicRoughness)\nbool operator==(const PbrMetallicRoughness &amp;) const;\n};\n</code></pre> <p>\u5c06\u5b83\u7684\u9ed8\u8ba4\u503c\u6539\u4e3a0\u5373\u53ef</p> <pre><code>// pbrMetallicRoughness class defined in glTF 2.0 spec.\nstruct PbrMetallicRoughness {\ndouble metallicFactor;   // default 0\nPbrMetallicRoughness()\n: baseColorFactor(std::vector&lt;double&gt;{1.0, 1.0, 1.0, 1.0}),\nmetallicFactor(0.0),\nroughnessFactor(1.0) {}\n};\n</code></pre> <p>\u66f4\u6539\u540e\u7684\u6548\u679c</p> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/%E5%9C%A8tinygltf%E4%B8%AD%E9%9B%86%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%E5%9B%BE%E7%89%87%E8%AF%BB%E5%86%99%E5%BA%93/","title":"\u5728tinygltf\u4e2d\u96c6\u6210\u7b2c\u4e09\u65b9\u56fe\u7247\u8bfb\u5199\u5e93","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/%E5%9C%A8tinygltf%E4%B8%AD%E9%9B%86%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%E5%9B%BE%E7%89%87%E8%AF%BB%E5%86%99%E5%BA%93/#_1","title":"\u80cc\u666f","text":"<p>tinygltf\u5b98\u65b9\u4f7f\u7528stb\u505a\u56fe\u7247\u7684\u52a0\u8f7d\uff0c\u4f46\u662fstb\u652f\u6301\u7684\u56fe\u7247\u6709\u9650\uff0c\u622a\u6b622023\u5e742\u6708\uff0c\u53ea\u652f\u6301JPG, PNG, TGA, BMP, PSD, GIF, HDR, PIC\u56fe\u7247\u7684\u8bfb\u53d6\u3002\u57283dtiles\u7684\u5e94\u7528\u573a\u666f\u4e2d\uff0c\u53ef\u80fd\u4f1a\u63a5\u89e6\u5176\u4ed6\u683c\u5f0f\uff0c\u4ee5\u8fbe\u5230\u6781\u81f4\u7684\u538b\u7f29\uff0c\u4f8b\u5982webp\u3001ktx2\u7b49\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/%E5%9C%A8tinygltf%E4%B8%AD%E9%9B%86%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%E5%9B%BE%E7%89%87%E8%AF%BB%E5%86%99%E5%BA%93/#tinygltfs-custom-image-decoder-callback","title":"TinyGltf's Custom Image decoder callback","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/%E5%9C%A8tinygltf%E4%B8%AD%E9%9B%86%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%E5%9B%BE%E7%89%87%E8%AF%BB%E5%86%99%E5%BA%93/#_2","title":"\u51fd\u6570\u7533\u660e","text":"<p>TinyGltf\u63d0\u4f9b\u4e86\u56fe\u7247\u89e3\u6790\u7684\u56de\u8c03\u51fd\u6570\u3002</p> <pre><code>/// LoadImageDataFunction type. Signature for custom image loading callbacks.\n///\u5728ParseImage\u51fd\u6570\u4e2d\u8c03\u7528\ntypedef bool (*LoadImageDataFunction)(Image *, const int, std::string *,\nstd::string *, int, int,\nconst unsigned char *, int,\nvoid *user_pointer);\n/// WriteImageDataFunction type. Signature for custom image writing callbacks.\n/// The out_uri parameter becomes the URI written to the gltf and may reference\n/// a file or contain a data URI.\ntypedef bool (*WriteImageDataFunction)(const std::string *basepath,\nconst std::string *filename,\nconst Image *image, bool embedImages,\nstd::string *out_uri, void *user_pointer);\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/%E5%9C%A8tinygltf%E4%B8%AD%E9%9B%86%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%E5%9B%BE%E7%89%87%E8%AF%BB%E5%86%99%E5%BA%93/#_3","title":"\u5982\u4f55\u4f7f\u7528\uff1f","text":"<p>\u5728TinyGLTF\uff08glTF\u89e3\u6790\u5668\u4e0a\u4e0b\u6587\uff09\u7c7b\u4e2d\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u6216\u79fb\u9664 \u56fe\u7247\u8bfb\u5199 \u7684\u56de\u8c03\u51fd\u6570</p> <pre><code>/// glTF Parser/Serializer context.\nclass TinyGLTF\n{\npublic:\n/// Set callback to use for loading image data\nvoid SetImageLoader(LoadImageDataFunction LoadImageData, void *user_data);\n/// Set callback to use for writing image data\nvoid SetImageWriter(WriteImageDataFunction WriteImageData, void *user_data);\n};\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/%E5%9C%A8tinygltf%E4%B8%AD%E9%9B%86%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%E5%9B%BE%E7%89%87%E8%AF%BB%E5%86%99%E5%BA%93/#_4","title":"\u9ed8\u8ba4\u7684\u8bfb\u5199\u5668","text":"<p>\u5982\u679c\u5f15\u5165\u4e86stb_image\u5e93\uff0c\u5728TinyGLTF\uff08glTF\u89e3\u6790\u5668\u4e0a\u4e0b\u6587\uff09\u7c7b\u4e2d\uff0c\u5c31\u4f1a\u63d0\u4f9b\u521d\u59cb\u503c\u3002\u6b64\u521d\u59cb\u7684\u8bfb\u5199\u5668\uff0c\u6b63\u662f\u57fa\u4e8estb_image\u63d0\u4f9b\u7684\u3002</p> <pre><code>class TinyGltf\n{\nprivate:\nLoadImageDataFunction LoadImageData =\n#ifndef TINYGLTF_NO_STB_IMAGE\n&amp;tinygltf::LoadImageData;\n#else\nnullptr;\n#endif\nvoid *load_image_user_data_{nullptr};\nbool user_image_loader_{false};\nWriteImageDataFunction WriteImageData =\n#ifndef TINYGLTF_NO_STB_IMAGE_WRITE\n&amp;tinygltf::WriteImageData;\n#else\nnullptr;\n#endif\nvoid *write_image_user_data_{nullptr};\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/%E5%9C%A8tinygltf%E4%B8%AD%E9%9B%86%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%E5%9B%BE%E7%89%87%E8%AF%BB%E5%86%99%E5%BA%93/#loadimagedata","title":"LoadImageData","text":"<pre><code>#ifndef TINYGLTF_NO_STB_IMAGE\nbool LoadImageData(Image *image, const int image_idx, std::string *err, std::string *warn, int req_width, int req_height,\nconst unsigned char *bytes, int size, void *user_data) {\n(void)warn;\nLoadImageDataOption option;\nif (user_data) {\noption = *reinterpret_cast&lt;LoadImageDataOption *&gt;(user_data);\n}\nint w = 0, h = 0, comp = 0, req_comp = 0;\nunsigned char *data = nullptr;\n// preserve_channels true: Use channels stored in the image file.\n// false: force 32-bit textures for common Vulkan compatibility. It appears\n// that some GPU drivers do not support 24-bit images for Vulkan\nreq_comp = option.preserve_channels ? 0 : 4;\nint bits = 8;\nint pixel_type = TINYGLTF_COMPONENT_TYPE_UNSIGNED_BYTE;\n// It is possible that the image we want to load is a 16bit per channel image\n// We are going to attempt to load it as 16bit per channel, and if it worked,\n// set the image data accordingly. We are casting the returned pointer into\n// unsigned char, because we are representing \"bytes\". But we are updating\n// the Image metadata to signal that this image uses 2 bytes (16bits) per\n// channel:\nif (stbi_is_16_bit_from_memory(bytes, size)) {\ndata = reinterpret_cast&lt;unsigned char *&gt;(\nstbi_load_16_from_memory(bytes, size, &amp;w, &amp;h, &amp;comp, req_comp));\nif (data) {\nbits = 16;\npixel_type = TINYGLTF_COMPONENT_TYPE_UNSIGNED_SHORT;\n}\n}\n// at this point, if data is still NULL, it means that the image wasn't\n// 16bit per channel, we are going to load it as a normal 8bit per channel\n// image as we used to do:\n// if image cannot be decoded, ignore parsing and keep it by its path\n// don't break in this case\n// FIXME we should only enter this function if the image is embedded. If\n// image-&gt;uri references\n// an image file, it should be left as it is. Image loading should not be\n// mandatory (to support other formats)\nif (!data) data = stbi_load_from_memory(bytes, size, &amp;w, &amp;h, &amp;comp, req_comp);\nif (!data) {\n// NOTE: you can use `warn` instead of `err`\nif (err) {\n(*err) +=\n\"Unknown image format. STB cannot decode image data for image[\" +\nstd::to_string(image_idx) + \"] name = \\\"\" + image-&gt;name + \"\\\".\\n\";\n}\nreturn false;\n}\nif ((w &lt; 1) || (h &lt; 1)) {\nstbi_image_free(data);\nif (err) {\n(*err) += \"Invalid image data for image[\" + std::to_string(image_idx) +\n\"] name = \\\"\" + image-&gt;name + \"\\\"\\n\";\n}\nreturn false;\n}\nif (req_width &gt; 0) {\nif (req_width != w) {\nstbi_image_free(data);\nif (err) {\n(*err) += \"Image width mismatch for image[\" +\nstd::to_string(image_idx) + \"] name = \\\"\" + image-&gt;name +\n\"\\\"\\n\";\n}\nreturn false;\n}\n}\nif (req_height &gt; 0) {\nif (req_height != h) {\nstbi_image_free(data);\nif (err) {\n(*err) += \"Image height mismatch. for image[\" +\nstd::to_string(image_idx) + \"] name = \\\"\" + image-&gt;name +\n\"\\\"\\n\";\n}\nreturn false;\n}\n}\nif (req_comp != 0) {\n// loaded data has `req_comp` channels(components)\ncomp = req_comp;\n}\nimage-&gt;width = w;\nimage-&gt;height = h;\nimage-&gt;component = comp;\nimage-&gt;bits = bits;\nimage-&gt;pixel_type = pixel_type;\nimage-&gt;image.resize(static_cast&lt;size_t&gt;(w * h * comp) * size_t(bits / 8));\nstd::copy(data, data + w * h * comp * (bits / 8), image-&gt;image.begin());\nstbi_image_free(data);\nreturn true;\n}\n#endif\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/%E5%9C%A8tinygltf%E4%B8%AD%E9%9B%86%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%E5%9B%BE%E7%89%87%E8%AF%BB%E5%86%99%E5%BA%93/#writeimagedata","title":"WriteImageData","text":"<pre><code>#ifndef TINYGLTF_NO_STB_IMAGE_WRITE\nstatic void WriteToMemory_stbi(void *context, void *data, int size) {\nstd::vector&lt;unsigned char&gt; *buffer =\nreinterpret_cast&lt;std::vector&lt;unsigned char&gt; *&gt;(context);\nunsigned char *pData = reinterpret_cast&lt;unsigned char *&gt;(data);\nbuffer-&gt;insert(buffer-&gt;end(), pData, pData + size);\n}\nbool WriteImageData(const std::string *basepath, const std::string *filename,\nconst Image *image, bool embedImages, std::string *out_uri,\nvoid *fsPtr) {\nconst std::string ext = GetFilePathExtension(*filename);\n// Write image to temporary buffer\nstd::string header;\nstd::vector&lt;unsigned char&gt; data;\nif (ext == \"png\") {\nif ((image-&gt;bits != 8) ||\n(image-&gt;pixel_type != TINYGLTF_COMPONENT_TYPE_UNSIGNED_BYTE)) {\n// Unsupported pixel format\nreturn false;\n}\nif (!stbi_write_png_to_func(WriteToMemory_stbi, &amp;data, image-&gt;width,\nimage-&gt;height, image-&gt;component,\n&amp;image-&gt;image[0], 0)) {\nreturn false;\n}\nheader = \"data:image/png;base64,\";\n} else if (ext == \"jpg\") {\nif (!stbi_write_jpg_to_func(WriteToMemory_stbi, &amp;data, image-&gt;width,\nimage-&gt;height, image-&gt;component,\n&amp;image-&gt;image[0], 100)) {\nreturn false;\n}\nheader = \"data:image/jpeg;base64,\";\n} else if (ext == \"bmp\") {\nif (!stbi_write_bmp_to_func(WriteToMemory_stbi, &amp;data, image-&gt;width,\nimage-&gt;height, image-&gt;component,\n&amp;image-&gt;image[0])) {\nreturn false;\n}\nheader = \"data:image/bmp;base64,\";\n} else if (!embedImages) {\n// Error: can't output requested format to file\nreturn false;\n}\nif (embedImages) {\n// Embed base64-encoded image into URI\nif (data.size()) {\n*out_uri = header +\nbase64_encode(&amp;data[0], static_cast&lt;unsigned int&gt;(data.size()));\n} else {\n// Throw error?\n}\n} else {\n// Write image to disc\nFsCallbacks *fs = reinterpret_cast&lt;FsCallbacks *&gt;(fsPtr);\nif ((fs != nullptr) &amp;&amp; (fs-&gt;WriteWholeFile != nullptr)) {\nconst std::string imagefilepath = JoinPath(*basepath, *filename);\nstd::string writeError;\nif (!fs-&gt;WriteWholeFile(&amp;writeError, imagefilepath, data,\nfs-&gt;user_data)) {\n// Could not write image file to disc; Throw error ?\nreturn false;\n}\n} else {\n// Throw error?\n}\n*out_uri = *filename;\n}\nreturn true;\n}\n#endif\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/%E5%9C%A8tinygltf%E4%B8%AD%E9%9B%86%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%E5%9B%BE%E7%89%87%E8%AF%BB%E5%86%99%E5%BA%93/#loadimagedatafunctionuser_data","title":"LoadImageDataFunction\u4e2d\u7684user_data","text":"<p>\u5728\u9ed8\u8ba4\u7684\u8bfb\u53d6\u5668\uff08<code>LoadImageData</code>\uff09\u4e2d\uff0c<code>user_data</code>\u5373\u4e3a<code>LoadImageDataOption</code>\u3002\u5177\u4f53\u903b\u8f91\u53ef\u5728<code>LoadFromString</code>\u4e2d\u67e5\u770b</p> <ul> <li>\u5176\u4e2d\uff0c<code>load_image_user_data_</code>\u5728<code>TinyGLTF::SetImageLoader</code>\u51fd\u6570\u4e2d\u8bbe\u7f6e\u3002</li> </ul> <pre><code>bool TinyGLTF::LoadFromString(Model *model, std::string *err, std::string *warn,\nconst char *json_str,\nunsigned int json_str_length,\nconst std::string &amp;base_dir,\nunsigned int check_sections) {\n//...\n// 11. Parse Image\nvoid *load_image_user_data{nullptr}; //\u52a0\u8f7dImage\u65f6\u7684\u7528\u6237\u6570\u636e\nLoadImageDataOption load_image_option;\nif (user_image_loader_) {\n// Use user supplied pointer\n//\u5982\u679c\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u56fe\u7247\u52a0\u8f7d\u5668\uff0c\u4f7f\u7528\u7528\u6237\u63d0\u4f9b\u7684\u6307\u9488\nload_image_user_data = load_image_user_data_;\n} else {\n//\u5982\u679c\u662f\u9ed8\u8ba4\u7684\u52a0\u8f7d\u5668\uff0c\u5219\u4f20\u5165LoadImageDataOption\nload_image_option.preserve_channels = preserve_image_channels_;\nload_image_user_data = reinterpret_cast&lt;void *&gt;(&amp;load_image_option);\n}\n//...\n}\n</code></pre> <p><code>user_data</code>\u4e0d\u4e00\u5b9a\u8981\u8bbe\u7f6e\uff0c\u56e0\u4e3a\u5728\u9ed8\u8ba4\u52a0\u8f7d\u5668\u4e2d\uff0c\u4e5f\u4f1a\u63d0\u4f9b\u9ed8\u8ba4\u7684<code>LoadImageDataOption</code>\u3002</p> <pre><code>bool LoadImageData(Image *image, const int image_idx, std::string *err,\nstd::string *warn, int req_width, int req_height,\nconst unsigned char *bytes, int size, void *user_data) {\n(void)warn;\nLoadImageDataOption option;\nif (user_data) {\noption = *reinterpret_cast&lt;LoadImageDataOption *&gt;(user_data);\n}\n//...\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/TinyGltf/%E5%9C%A8tinygltf%E4%B8%AD%E9%9B%86%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%E5%9B%BE%E7%89%87%E8%AF%BB%E5%86%99%E5%BA%93/#webp","title":"\u793a\u4f8b\uff1a\u96c6\u6210webp","text":"<pre><code>//\u8bfb\u53d6Image\u7684\u53c2\u6570\u9009\u9879\nstruct MyLoadImageDataOption\n{\n// ==== tinygltf::LoadImageData\u6240\u9700\u53c2\u6570\nbool preserve_channels{ false };\n// ==== your options\n//todo\n} _load_image_option;\n//\u6839\u636eoptions\u83b7\u53d6Gltf\u957f\u4e0b\u6587\nstatic tinygltf::TinyGLTF _getGltfContext(MyLoadImageDataOption* option = nullptr)\n{\ntinygltf::TinyGLTF gltf_ctx;\n// Store original JSON string for `extras` and `extensions`\n//todo: \u4ece_reader_options\u4e2d\u8bfb\u53d6\nbool store_original_json_for_extras_and_extensions = false;\ngltf_ctx.SetStoreOriginalJSONForExtrasAndExtensions(store_original_json_for_extras_and_extensions);\n//\u4f7f\u7528\u81ea\u5b9a\u4e49\u8bfb\u53d6\u5668\ngltf_ctx.SetImageLoader(&amp;_myLoadImageData, option);\nreturn gltf_ctx;\n}\n/*\n *\\brief \u81ea\u5b9a\u4e49\u8bfb\u53d6\u5668\n    tiny_gltf\u9ed8\u8ba4\u7684\u8bfb\u53d6\u5668\u662f\u57fa\u4e8estb_image\u7b2c\u4e09\u65b9\u5e93\u7684\uff0c\u5b83\u652f\u6301\u7684\u683c\u5f0f\u6709\u9650\uff0c\u4e0d\u652f\u6301webp\u3001ktx2\u7b49\n */\nstatic bool _myLoadImageData(tinygltf::Image *image, const int image_idx, std::string *err, std::string *warn, int req_width, int req_height,\nconst unsigned char *bytes, int size, void *user_data)\n{\nMyLoadImageDataOption my_option;\nif (user_data) {\nmy_option = *reinterpret_cast&lt;MyLoadImageDataOption *&gt;(user_data);\n}\n//webp\n{\nbool is_webp = false;\nis_webp |= image-&gt;uri.find(\"webp\")      != std::string::npos;\nis_webp |= image-&gt;mimeType.find(\"webp\") != std::string::npos;\nif (is_webp)\n{\nreturn _myLoadImageDataWebp(image, image_idx, err, warn, req_width, req_height, bytes, size, my_option);\n}\n}\n//todo: ktx2\n//\u5176\u4ed6\u683c\u5f0f\uff0c\u8fd8\u662f\u4f7f\u7528\u9ed8\u8ba4\u7684\u8bfb\u53d6\u5668\uff08stb_image\uff09\ntinygltf::LoadImageDataOption gltf_option;\ngltf_option.preserve_channels = my_option.preserve_channels;\nreturn tinygltf::LoadImageData(image, image_idx, err, warn, req_width, req_height, bytes, size, &amp;gltf_option);\n}\nstatic bool _myLoadImageDataWebp(tinygltf::Image *image, const int image_idx, std::string *err, std::string *warn, int req_width, int req_height,\nconst unsigned char *bytes, int size, MyLoadImageDataOption option)\n{\nint bits        = 8;\nint pixel_type = TINYGLTF_COMPONENT_TYPE_UNSIGNED_BYTE;\nint comps       = 4;\nint w, h;\nuint8_t* data = WebPDecodeRGBA(bytes, size, &amp;w, &amp;h);//\u9ed8\u8ba4RGBA\nif (!data)\n{\nreturn false;\n}\nimage-&gt;width        = w;\nimage-&gt;height       = h;\nimage-&gt;component    = comps;\nimage-&gt;bits         = bits;\nimage-&gt;pixel_type   = pixel_type;\nsize_t sizeInBytes = w * h * comps;\nimage-&gt;image.resize(sizeInBytes);\nstd::copy(data, data + sizeInBytes, image-&gt;image.begin());\ndelete data;\nreturn true;\n}\n</code></pre> <p>\u4f7f\u7528 <pre><code>auto gltf_ctx = _getGltfContext(&amp;_load_image_option);\nstd::string err;\nstd::string warn;\nbool ret = gltf_ctx.LoadBinaryFromFile(&amp;_gltf_model, &amp;err, &amp;warn, gbk_path);\n</code></pre></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9/","title":"glTF\u6587\u4ef6\u538b\u7f29","text":"<p>3D\u6027\u80fd\u4f18\u5316 | \u8bf4\u4e00\u8bf4glTF\u6587\u4ef6\u538b\u7f29</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/","title":"glTF\u683c\u5f0f\u8bf4\u660e","text":"<p>glTF\u683c\u5f0f\u6709\u4e24\u79cd\u4fdd\u5b58\u65b9\u5f0f\uff0c\u4e00\u4e2a\u662fASCII\uff0c\u4e00\u4e2a\u662fbinary</p> <ol> <li>ASCII\u7684glTF\uff0c\u540e\u7f00\u540d\u4e3a<code>gltf</code>\uff0c\u7531\u4e24\u79cd\u6587\u4ef6\u6784\u6210</li> <li>glTF\u7684JSON\u6587\u4ef6</li> <li>\u5916\u90e8\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08\u9876\u70b9\u3001\u56fe\u7247\uff09</li> <li>binary\u7684glTF\uff0c\u540e\u7f00\u540d\u4e3a<code>glb</code>\uff0c\u6240\u6709\u5185\u5bb9\u90fd\u5408\u5e76\u7684\u5b58\u50a8\u5728\u4e00\u4e2aglb\u6587\u4ef6\u4e2d</li> </ol> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/#json","title":"JSON\u6587\u4ef6\u7ed3\u6784","text":"<p>glTF\u7684\u6838\u5fc3\u6587\u4ef6\u662f\u4e00\u4e2aJSON\u6587\u4ef6\uff0c\u6b64\u6587\u4ef6\u63cf\u8ff0\u4e86\u6574\u4e2a3D\u573a\u666f\u7684\u5185\u5bb9\uff0c\u5305\u62ec\u63cf\u8ff0\u573a\u666f\u7ed3\u6784\u7684\u573a\u666f\u56fe\u3002</p> <ol> <li>\u573a\u666f\u4e2d\u76843D\u5bf9\u8c61\u901a\u8fc7\u573a\u666f\u7ed3\u70b9\u5f15\u7528\u7f51\u683c\u8fdb\u884c\u5b9a\u4e49</li> <li>\u6750\u8d28\u5b9a\u4e49\u4e863D\u5bf9\u8c61\u7684\u5916\u89c2</li> <li>\u52a8\u753b\u5b9a\u4e49\u4e863D\u5bf9\u8c61\u7684\u53d8\u6362\u64cd\u4f5c\uff08\u6bd4\u5982\u9009\u62e9\u3001\u5e73\u79fb\u64cd\u4f5c\uff09</li> <li>\u8499\u76ae\u5b9a\u4e49\u4e863D\u5bf9\u8c61\u5982\u4f55\u8fdb\u884c\u9aa8\u9abc\u53d8\u6362</li> <li>\u76f8\u673a\u5b9a\u4e49\u4e86\u6e32\u67d3\u7a0b\u5e8f\u4e2d\u89c6\u9525\u4f53</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/#_1","title":"\u6587\u4ef6\u7b80\u4ecb","text":"<p>\u573a\u666f\u5bf9\u8c61\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u5b58\u50a8\u5728\u6b64JSON\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5bf9\u5e94\u7684\u6570\u7ec4\u6765\u7d22\u5f15\u8bbf\u95ee <pre><code>//\u5b9a\u4e49\u4e86\u591a\u4e2a\u7f51\u683c\u5bf9\u8c61\n\"meshes\" : [\n{ ... }\n{ ... }\n...\n],\n</code></pre> \u6570\u7ec4\u7d22\u5f15\u4e5f\u4f1a\u88ab\u7528\u6765\u5b9a\u4e49\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb <pre><code>\"nodes\": //\u573a\u666f\u7ed3\u70b9\n[\n{ \"mesh\": 0, ... }, //\u901a\u8fc7\u7f51\u683c\u7d22\u5f15\u5f15\u7528\u771f\u6b63\u7684\u7f51\u683c\u5bf9\u8c61\n{ \"mesh\": 5, ... },\n...\n}\n</code></pre></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/#_2","title":"\u9876\u7ea7\u5143\u7d20","text":"<ul> <li>scene\uff1aglTF\u683c\u5f0f\u7684\u573a\u666f\u7ed3\u6784\u63cf\u8ff0\u6761\u76ee\u3002\u5b83\u901a\u8fc7\u5f15\u7528node\u6765\u5b9a\u4e49\u573a\u666f\u56fe\u3002</li> <li>node\uff1a\u573a\u666f\u56fe\u4e2d\u7684\u4e00\u4e2a\u7ed3\u70b9\u3002\u5b83\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u53d8\u6362(\u6bd4\u5982\u65cb\u8f6c\u6216\u5e73\u79fb)\uff0c\u5f15\u7528\u66f4\u591a\u7684\u5b50\u7ed3\u70b9\u3002\u5b83\u53ef\u4ee5\u5f15\u7528\u7f51\u683c\u548c\u76f8\u673a\uff0c\u4ee5\u53ca\u63cf\u8ff0\u7f51\u683c\u53d8\u6362\u7684\u8499\u76ae\u3002</li> <li>camera\uff1a\u5b9a\u4e49\u4e86\u7528\u4e8e\u6e32\u67d3\u573a\u666f\u7684\u89c6\u9525\u4f53\u914d\u7f6e\u3002</li> <li>mesh\uff1a\u63cf\u8ff0\u4e86\u573a\u666f\u4e2d\u51fa\u73b0\u76843D\u5bf9\u8c61\u7684\u7f51\u683c\u6570\u636e\u3002\u5b83\u5f15\u7528\u7684accessor\u5bf9\u8c61\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u771f\u5b9e\u7684\u51e0\u4f55\u6570\u636e\u3002\u5b83\u5f15\u7528\u7684material\u5bf9\u8c61\u5b9a\u4e49\u4e863D\u5bf9\u8c61\u7684\u5916\u89c2\u3002</li> <li>skin\uff1a\u5b9a\u4e49\u4e86\u7528\u4e8e\u8499\u76ae\u7684\u53c2\u6570\uff0c\u53c2\u6570\u7684\u503c\u901a\u8fc7\u4e00\u4e2aaccessor\u5bf9\u8c61\u83b7\u5f97\u3002</li> <li>animation\uff1a\u63cf\u8ff0\u4e86\u4e00\u4e9b\u7ed3\u70b9\u5982\u4f55\u968f\u65f6\u95f4\u8fdb\u884c\u53d8\u6362(\u6bd4\u5982\u65cb\u8f6c\u6216\u5e73\u79fb)\u3002</li> <li>accessor\uff1a\u4e00\u4e2a\u8bbf\u95ee\u4efb\u610f\u6570\u636e\u7684\u62bd\u8c61\u6570\u636e\u6e90\u3002\u88abmesh\u3001skin\u548canimation\u5143\u7d20\u4f7f\u7528\u6765\u63d0\u4f9b\u51e0\u4f55\u6570\u636e\uff0c\u8499\u76ae\u53c2\u6570\u548c\u57fa\u4e8e\u65f6\u95f4\u7684\u52a8\u753b\u503c\u3002\u5b83\u901a\u8fc7\u5f15\u7528\u4e00\u4e2abufferView\u5bf9\u8c61\uff0c\u6765\u5f15\u7528\u5b9e\u9645\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u3002</li> <li>material\uff1a\u5305\u542b\u4e86\u5b9a\u4e493D\u5bf9\u8c61\u5916\u89c2\u7684\u53c2\u6570\u3002\u5b83\u901a\u5e38\u5f15\u7528\u4e86\u7528\u4e8e3D\u5bf9\u8c61\u6e32\u67d3\u7684texture\u5bf9\u8c61\u3002</li> <li>texture\uff1a\u5b9a\u4e49\u4e86\u4e00\u4e2asampler\u5bf9\u8c61\u548c\u4e00\u4e2aimage\u5bf9\u8c61\u3002sampler\u5bf9\u8c61\u5b9a\u4e49\u4e86image\u5bf9\u8c61\u57283D\u5bf9\u8c61\u4e0a\u7684\u5f20\u8d34\u65b9\u5f0f\u3002</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/#_3","title":"\u5f15\u7528\u5916\u90e8\u6570\u636e","text":"<p>\u4e8c\u8fdb\u5236\u6570\u636e\u901a\u5e38\u4ee5\u6587\u4ef6\u7684\u5f62\u5f0f\u5b58\u50a8\u5728\u5916\u90e8\uff0c\u5728JSON\u6587\u4ef6\u4e2d\uff0c\u901a\u8fc7\u94fe\u63a5\u8fdb\u884c\u6302\u63a5</p> <ul> <li>\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u6570\u636e\u6bd4\u59823D\u5bf9\u8c61\u7684\u51e0\u4f55\u6570\u636e\u3001\u7eb9\u7406\u6570\u636e\u7b49\u7b49</li> <li>\u8fd9\u4f7f\u5f97\u51e0\u4f55\u3001\u7eb9\u7406\u7b49\u6570\u636e\uff0c\u53ef\u4ee5\u4ee5\u975e\u5e38\u7d27\u51d1\u7684\u5f62\u5f0f\u8fdb\u884c\u5b58\u50a8\uff0c\u4e5f\u65b9\u4fbf\u7f51\u7edc\u4f20\u8f93\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5\u88ab\u6e32\u67d3\u7a0b\u5e8f\u4f7f\u7528\uff0c\u65e0\u9700\u989d\u5916\u7684\u89e3\u7801\u3001\u9884\u5904\u7406</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/#_4","title":"\u8bfb\u53d6\u548c\u7ba1\u7406\u5916\u90e8\u6570\u636e","text":"<p>\u8bfb\u53d6\u548c\u5904\u7406glTF\u683c\u5f0f\u6587\u4ef6\u4ece\u5206\u6790JSON\u7ed3\u6784\u5f00\u59cb</p> <ol> <li>\u5206\u6790JSON\u6587\u4ef6\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528buffers\u548cimages\u6570\u7ec4\u6765\u8bbf\u95ee\u5bf9\u5e94\u7684buffer\u3001image\u5bf9\u8c61</li> <li>\u6bcf\u4e2abuffer\u548cimage\u5bf9\u8c61\u5f15\u7528\u4e86\u4e00\u5757\u4e8c\u8fdb\u5236\u6570\u636e</li> </ol> <p>\u901a\u5e38\u4f1a\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u8bfb\u53d6\u5230\u5185\u5b58\u4e2d\uff0c\u4ee5\u5b83\u4eec\u5728buffers\u548cimages\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u987a\u5e8f\u8fdb\u884c\u5b58\u50a8\uff0c\u4ee5\u4fbf\u4f7f\u7528\u76f8\u540c\u7684\u7d22\u5f15\u6765\u8bbf\u95ee\u5bf9\u8c61\u6240\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\u636e</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/#buffers","title":"buffers\u4e2d\u7684\u4e8c\u8fdb\u5236\u6570\u636e","text":"<p>\u4e00\u4e2abuffer\u5305\u542b\u4e86\u4e00\u4e2a\u6307\u5411\u4e8c\u8fdb\u5236\u6570\u636e\u7684URI <pre><code>\"buffer01\": {\n\"byteLength\": 12352,\n\"type\": \"arraybuffer\",\n\"uri\": \"buffer01.bin\"\n}\n</code></pre> \u4e8c\u8fdb\u5236\u6570\u636e\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u4ecebuffer\u5bf9\u8c61\u7684URI\u5904\u8bfb\u53d6\u5230\u7684\u5185\u5b58\u5757\uff0c\u6ca1\u6709\u4efb\u4f55\u5c42\u6b21\u548c\u7ed3\u6784\u4fe1\u606f\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/#images","title":"images\u4e2d\u7684\u56fe\u50cf\u6570\u636e","text":"<p>\u4e00\u4e2aimage\u5bf9\u8c61\u53ef\u4ee5\u5f15\u7528\u4e00\u4e2a\u5916\u90e8\u56fe\u50cf\u6587\u4ef6\u6765\u4f5c\u4e3a\u8981\u6e32\u67d3\u76843D\u5bf9\u8c61\u7eb9\u7406 <pre><code>\"image01\": {\n\"uri\": \"image01.png\"\n}\n</code></pre></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/#uri","title":"\u6570\u636eURI\u4e2d\u7684\u4e8c\u8fdb\u5236\u6570\u636e","text":"<p>\u901a\u5e38\uff0cbuffer\u548cimage\u5bf9\u8c61\u7684uri\u6307\u5411\u4e86\u4e00\u4e2a\u5305\u542b\u5b9e\u9645\u6570\u636e\u7684\u6587\u4ef6\uff0c\u4f46\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728uri\u4e2d\u901a\u8fc7\u6570\u636eURI\u76f4\u63a5\u5305\u542b\u6570\u636e</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/#_5","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>The Basic Structure of glTF\uff1b\u4e2d\u6587\u7ffb\u8bd1</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/glTF%E5%9D%90%E6%A0%87%E7%B3%BB/","title":"glTF\u5750\u6807\u7cfb","text":"<p>gltf\u7684\u6a21\u578b\u5750\u6807\u7cfb\u662fY\u8f74\u5411\u4e0a\u7684\uff0c\u56e0\u6b64\u5b83\u7684\u5750\u6807\u3001\u77e9\u9635\u90fd\u662f\u57fa\u4e8e\u6b64\u5750\u6807\u7cfb\u4e0b\u7684\u3002 \u5728\u6839\u8282\u70b9\u4e0a\u52a0\u4e0a\u4e00\u4e2a\u65cb\u8f6c\u77e9\u9635\uff08\u7ed5X\u8f74\u65cb\u8f6c90\u00b0\u5373\u53ef\uff09\uff0c\u5c06\u6a21\u578b\u5750\u6807\u7cfb\u5bf9\u6807\u5230\u4e16\u754c\u5750\u6807\u7cfb\u4e0a\uff08Z\u8f74\u671d\u4e0a\uff09</p> <p>Next, for consistency with the\u00a0z-up coordinate system of 3D Tiles, glTFs must be transformed from\u00a0y-up to\u00a0z-up at runtime. This is done by rotating the model about the\u00a0x-axis by \u03c0/2 radians. Equivalently, apply the following matrix transform (shown here as row-major):</p> <p>y-up\u8f6cz-up\u7684\u77e9\u9635\uff08\u884c\u4f18\u5148\u5b58\u50a8\uff09 <pre><code>[\n1.0, 0.0,  0.0, 0.0,\n0.0, 0.0, -1.0, 0.0,\n0.0, 1.0,  0.0, 0.0,\n0.0, 0.0,  0.0, 1.0\n]\n</code></pre></p> <p>y-up\u8f6cz-up\u7684\u77e9\u9635\uff08\u5217\u4f18\u5148\u5b58\u50a8\uff09 <pre><code>[\n1.0,  0.0,  0.0, 0.0,\n0.0,  0.0,  1.0, 0.0,\n0.0, -1.0,  0.0, 0.0,\n0.0,  0.0,  0.0, 1.0\n]\n</code></pre></p> <p>\u53c2\u8003\u94fe\u63a5\uff1a https://github.com/CesiumGS/3d-tiles/tree/main/specification#y-up-to-z-up</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/glTF%E5%9D%90%E6%A0%87%E7%B3%BB/#gltf","title":"\u9644\uff1a\u67e5\u770bglTF\u5750\u6807\u7cfb\u7684\u65b9\u6cd5","text":"<p>\u67e5\u770b\u65b9\u6cd5\uff1aVSCode Gltf Tool\u5de5\u5177 &gt; \u6253\u5f00gltf\u6587\u4ef6 &gt; alt+G\u6253\u5f00\u9884\u89c8 &gt; \u8c03\u6574Position\u7684XYZ\u5373\u53ef\u53d1\u73b0XYZ</p> <p>\u6839\u8282\u70b9\u7684\u5c40\u90e8\u5750\u6807\u7cfb </p> <p>\u6bcf\u4e2a\u6839\u8282\u70b9\u7684\u504f\u79fb\u77e9\u9635\uff08\u6839\u8282\u70b9 -&gt; \u573a\u666f\u7684\u504f\u79fb\u77e9\u9635\uff09</p> <ul> <li>\u7ed5Y\u8f74\u65cb\u8f6c180\u00b0</li> <li>Z sclae -1</li> </ul> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/glTF%E5%9D%90%E6%A0%87%E7%B3%BB/#_1","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>Cesium\u4e2dgltf\u6a21\u578b\u7684\u5750\u6807\u7cfb</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/glTF%E7%9A%84%E7%9F%A9%E9%98%B5/","title":"glTF\u7684\u77e9\u9635","text":"<p>\u4eceglTF\u793a\u4f8b\u6570\u636e\u6765\u770b\uff0cgltf\u77e9\u9635\u5b58\u50a8\u662f\u5217\u4f18\u5148\uff08tx, ty, tz\u5728\u7b2c\u56db\u884c\uff09</p> <pre><code>\"matrix\": [\n0.707107, -0.707107, 0, 0,\n0.707107, 0.707107, 0, 0,\n0, 0, 1, 0,\n47.1787, -52.8213, -88.9448, 1\n]\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%A4%BA%E4%BE%8B/","title":"glTF\u793a\u4f8b","text":"<p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>glTF\u5b98\u65b9\u793a\u4f8b\u6587\u4ef6</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%A4%BA%E4%BE%8B/#gltf20","title":"glTF2.0","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%A4%BA%E4%BE%8B/#mesh","title":"\u4e00\u4e2aMesh\u591a\u4e2a\u7eb9\u7406","text":"<p>\u591a\u7eb9\u7406\u7684Cube</p> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%A4%BA%E4%BE%8B/%E6%9C%80%E5%B0%8F%E7%9A%84glTF%E6%96%87%E4%BB%B6%E2%80%94%E2%80%94%E4%B8%89%E8%A7%92%E5%BD%A2/","title":"\u6700\u5c0f\u7684glTF\u6587\u4ef6\u2014\u2014\u4e09\u89d2\u5f62","text":"<p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <ol> <li>glTF\u6559\u7a0b_MinimalGltfFile\uff1b\u4e2d\u6587\u7ffb\u8bd1</li> </ol> <p>\u672c\u6587\u4ecb\u7ecd\u4e00\u4e2a\u6700\u5c0f\u7684glTF\u6587\u4ef6\uff0c\u5b83\u63cf\u8ff0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4e09\u89d2\u5f62\u3002</p> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%A4%BA%E4%BE%8B/%E6%9C%80%E5%B0%8F%E7%9A%84glTF%E6%96%87%E4%BB%B6%E2%80%94%E2%80%94%E4%B8%89%E8%A7%92%E5%BD%A2/#modelgltf","title":"Model\uff08glTF\u6587\u4ef6\uff09","text":"<p>\u6b64\u793a\u4f8b\u53ea\u6709\u4e00\u4e2aglTF\u6587\u4ef6\u3002</p> <pre><code>{\n\"scenes\" : [\n{\n\"nodes\" : [ 0 ]\n}\n],\n\"nodes\" : [\n{\n\"mesh\" : 0\n}\n],\n\"meshes\" : [\n{\n\"primitives\" : [ {\n\"attributes\" : {\n\"POSITION\" : 1\n},\n\"indices\" : 0\n} ]\n}\n],\n\"buffers\" : [\n{\n\"uri\" : \"data:application/octet-stream;base64,AAABAAIAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAA=\",\n\"byteLength\" : 44\n}\n],\n\"bufferViews\" : [\n{\n\"buffer\" : 0,\n\"byteOffset\" : 0,\n\"byteLength\" : 6,\n\"target\" : 34963\n},\n{\n\"buffer\" : 0,\n\"byteOffset\" : 8,\n\"byteLength\" : 36,\n\"target\" : 34962\n}\n],\n\"accessors\" : [\n{\n\"bufferView\" : 0,\n\"byteOffset\" : 0,\n\"componentType\" : 5123,\n\"count\" : 3,\n\"type\" : \"SCALAR\",\n\"max\" : [ 2 ],\n\"min\" : [ 0 ]\n},\n{\n\"bufferView\" : 1,\n\"byteOffset\" : 0,\n\"componentType\" : 5126,\n\"count\" : 3,\n\"type\" : \"VEC3\",\n\"max\" : [ 1.0, 1.0, 0.0 ],\n\"min\" : [ 0.0, 0.0, 0.0 ]\n}\n],\n\"asset\" : {\n\"version\" : \"2.0\"\n}\n}\n</code></pre> <p>\u5c06\u8fd9\u4e2aglTF\u6587\u4ef6\u8bfb\u5165\u4e4b\u540e\uff0c\u4f60\u5c31\u80fd\u62ff\u5230\u4e00\u4e2aModel\u5bf9\u8c61\uff0c\u5373\u4e00\u4e2aglTF\u683c\u5f0f\u5bf9\u5e94\u4e00\u4e2aModel</p> <p>\u5728Model\u4e0b\uff0c\u5168\u90e8\u6570\u636e\u6309\u7c7b\u578b\u5b58\u50a8\u5728\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u4e2d\uff0c\u800c\u522b\u7684\u5730\u65b9\u4f7f\u7528**\u4e0b\u6807**\u6765\u7d22\u5f15\u5230\u6307\u5b9a\u6570\u636e\u3002</p> <pre><code>class Model{\nstd::vector&lt;Accessor&gt; accessors;\nstd::vector&lt;Animation&gt; animations;\nstd::vector&lt;Buffer&gt; buffers;\nstd::vector&lt;BufferView&gt; bufferViews;\nstd::vector&lt;Material&gt; materials;\nstd::vector&lt;Mesh&gt; meshes;\nstd::vector&lt;Node&gt; nodes;\nstd::vector&lt;Texture&gt; textures;\nstd::vector&lt;Image&gt; images;\nstd::vector&lt;Skin&gt; skins;\nstd::vector&lt;Sampler&gt; samplers;\nstd::vector&lt;Camera&gt; cameras;\nstd::vector&lt;Scene&gt; scenes;\nstd::vector&lt;Light&gt; lights;\n};\n</code></pre> <p>\u9664\u4e86\u4e09\u7ef4\u65b9\u9762\u7684\u4fe1\u606f\uff0cModel\u4e0b\u8fd8\u4fdd\u5b58\u4e86\u4e00\u4e9b\u5c5e\u6027\u4fe1\u606f</p> <pre><code>class Model{\nint defaultScene = -1;    //\u9ed8\u8ba4\u7684\u573a\u666f\uff08\u8fd9\u4e2a\u503c\u662f\u573a\u666f\u7684\u4e0b\u6807\uff09\nstd::vector&lt;std::string&gt; extensionsUsed;\nstd::vector&lt;std::string&gt; extensionsRequired;\nAsset asset;\nValue extras;\nExtensionMap extensions;\n// Filled when SetStoreOriginalJSONForExtrasAndExtensions is enabled.\nstd::string extras_json_string;\nstd::string extensions_json_string;\n}\n</code></pre> <p>\u5176\u4e2d<code>extras</code>\u3001<code>extensions</code>\u4e0e<code>extras_json_string</code>\u3001<code>extensions_json_string</code>\u5728\u5176\u4ed6\u6982\u5ff5\u4e2d\u4e5f\u6709\uff0c\u540e\u9762\u5c06\u4e0d\u8d58\u8ff0\u4e86\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%A4%BA%E4%BE%8B/%E6%9C%80%E5%B0%8F%E7%9A%84glTF%E6%96%87%E4%BB%B6%E2%80%94%E2%80%94%E4%B8%89%E8%A7%92%E5%BD%A2/#asset","title":"Asset","text":"<p>\u5176\u4e2dAsset\u8868\u793a\u6b64glTF\u7684\u5143\u6570\u636e\uff0c\u5305\u62ec\u7248\u672c\u3001\u521b\u5efa\u8005\u3001\u7248\u6743\u7b49\u7b49\u3002</p> <pre><code>struct Asset {\nstd::string version = \"2.0\"; \u00a0// required\nstd::string generator;\nstd::string minVersion;\nstd::string copyright;\n};\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%A4%BA%E4%BE%8B/%E6%9C%80%E5%B0%8F%E7%9A%84glTF%E6%96%87%E4%BB%B6%E2%80%94%E2%80%94%E4%B8%89%E8%A7%92%E5%BD%A2/#scenenode","title":"Scene\u4e0eNode","text":"<p><pre><code>  \"scenes\" : [\n{\n\"nodes\" : [ 0 ]\n}\n],\n\"nodes\" : [\n{\n\"mesh\" : 0\n}\n],\n</code></pre> glTF\u6807\u51c6\u5f15\u7528\u4e86\u573a\u666f\u7684\u6982\u5ff5\uff0c\u4e00\u4e2aModel\u4e0b\u5305\u542b\u4e86\u591a\u4e2aScene</p> <p>\u4e00\u4e2aScene\u5305\u542b\u4e86\u591a\u68f5\u6811\uff08\u5373\u591a\u4e2a\u6839\u8282\u70b9\uff09</p> <ul> <li>\u5176\u4e2dNode\u5b58\u50a8\u5728Model\u4e2d</li> <li>\u800cScene\u4e2d\u5b58\u50a8\u7684\u662fNode\u7684\u4e0b\u6807\uff0c\u901a\u8fc7\u4e0b\u6807\u5f15\u7528Node</li> </ul> <pre><code>class Model{    //gltf : Model = 1:1\nstd::vector&lt;Scene&gt; scenes;  //Model : Scene = 1:N\n}\nclass Scene{\nstd::vector&lt;int&gt; nodes; //Scene : Node = 1:N\uff0c\u5b58\u50a8\u7684\u662f\u4e0b\u6807\n}\n</code></pre> <p>Node\u81ea\u8eab\u662f\u4e00\u4e2a\u6811\u72b6\u7ed3\u6784\uff0c\u4e00\u4e2aNode\u5305\u542b\u591a\u4e2a\u5b50Node</p> <ul> <li>\u6240\u6709\u7684Node\u90fd\u5b58\u50a8\u5728Model\u4e2d</li> </ul> <pre><code>class Node {\nint camera;  // the index of the camera referenced by this node\nint skin;\nint mesh;\nstd::vector&lt;int&gt; children;              //\u8be5child\u5728Model.nodes\u7684\u4e0b\u6807\nstd::vector&lt;double&gt; rotation;     // length must be 0 or 4\nstd::vector&lt;double&gt; scale;        // length must be 0 or 3\nstd::vector&lt;double&gt; translation;  // length must be 0 or 3\nstd::vector&lt;double&gt; matrix;       // length must be 0 or 16\nstd::vector&lt;double&gt; weights;        // The weights of the instantiated Morph Target\n};\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%A4%BA%E4%BE%8B/%E6%9C%80%E5%B0%8F%E7%9A%84glTF%E6%96%87%E4%BB%B6%E2%80%94%E2%80%94%E4%B8%89%E8%A7%92%E5%BD%A2/#bufferbufferviewaccessor","title":"buffer\u3001bufferView\u4e0eaccessor","text":"<p>glTF\u5c06\u5b9e\u9645\u7684\u51e0\u4f55\u4fe1\u606f\uff08\u5750\u6807\u70b9\u7684xyz\uff0c\u56fe\u5143\u7d22\u5f15\uff09\u6253\u5305\u5b58\u50a8\u5728\u4e86\u5916\u90e8\u6587\u4ef6\u5f53\u4e2d\uff0c\u4ee5\u6b64\u65b9\u4fbf\u505a\u6587\u4ef6\u4f20\u8f93\u4e0e\u538b\u7f29\u5b58\u50a8\u3002</p> <p>\u4f46\u662f\uff0c\u6570\u636e\u5b58\u50a8\u5728\u5916\u90e8\u6587\u4ef6\u4e2d\uff0c\u7a0b\u5e8f\u5f88\u4e0d\u597d\u8bbf\u95ee\u3002\u56e0\u6b64\uff0cglTF\u5b9a\u4e49\u4e86accessor\u76f8\u5173\u6982\u5ff5\uff0c\u5e2e\u52a9\u6211\u4eec\u4ece\u5916\u90e8\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u8bbf\u95ee\u5230\u6211\u4eec\u60f3\u8981\u7684\u6570\u636e\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%A4%BA%E4%BE%8B/%E6%9C%80%E5%B0%8F%E7%9A%84glTF%E6%96%87%E4%BB%B6%E2%80%94%E2%80%94%E4%B8%89%E8%A7%92%E5%BD%A2/#buffer","title":"buffer","text":"<p>buffer\u5bf9\u8c61\u63cf\u8ff0\u4e86\u4e00\u4e2a\u6ca1\u6709\u4efb\u4f55\u7ed3\u6784\u548c\u5c42\u6b21\u610f\u4e49\u7684\u6570\u636e\u5757 \u5b83\u5305\u542b\u4e86\u4e00\u4e2auri\u5c5e\u6027</p> <ol> <li>\u8fd9\u4e2auri\u53ef\u4ee5\u5f15\u7528\u5916\u90e8\u7684\u6587\u4ef6</li> </ol> <pre><code>struct Buffer {\nstd::string uri;  //&lt;- \u5916\u90e8\u6587\u4ef6\nstd::vector&lt;unsigned char&gt; data;  //&lt;- \u5c06\u5916\u90e8\u6587\u4ef6\u8bfb\u5165\u540e\uff0c\u5b58\u50a8\u5728data\u4e2d\n};\n</code></pre> <ol> <li>\u5982\u679c\u6570\u636e\u91cf\u5c0f\uff0c\u6216\u8005\u4f60\u613f\u610f\uff0c\u4e5f\u53ef\u4ee5\u5c06\u6570\u636e\u76f4\u63a5\u5b58\u50a8\u5728uri\u4e2d\u3002\u6bd4\u5982\uff0c\u6b64uri\u4e2d\u5b58\u50a8\u4e8644\u5b57\u8282\u7684buffer\u6570\u636e\uff0c\u5176\u76f4\u63a5\u5b58\u50a8\u5728\u4e86json\u6587\u4ef6\u4e2d\uff0c\u5e76\u6ca1\u6709\u5b58\u50a8\u5728\u5916\u90e8 <pre><code>  \"buffers\" : [\n{\n\"uri\" : \"data:application/octet-stream;base64,AAABAAIAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAA=\",\n\"byteLength\" : 44\n}\n],\n</code></pre></li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%A4%BA%E4%BE%8B/%E6%9C%80%E5%B0%8F%E7%9A%84glTF%E6%96%87%E4%BB%B6%E2%80%94%E2%80%94%E4%B8%89%E8%A7%92%E5%BD%A2/#bufferview","title":"bufferView","text":"<p>bufferView\u7c7b\u4f3c\u4e8ebuffer\u4e2d\u7684\u4e00\u4e2a\u6570\u636e\u5757\uff0c\u5b83\u5f15\u7528\u4e86\u4e00\u4e2abuffer\u4e2d\u7684\u90e8\u5206\u6570\u636e <pre><code>struct BufferView {\nint buffer{-1};        // buffer\u7684\u4e0b\u6807\nsize_t byteOffset{0};  // \u4f4d\u79fb\u91cf\nsize_t byteLength{0};  // \u957f\u5ea6\nsize_t byteStride{0};  // minimum 4, maximum 252 (multiple of 4), default 0 =\n// understood to be tightly packed\nint target{0};  // [\"ARRAY_BUFFER\", \"ELEMENT_ARRAY_BUFFER\"] for vertex indices\n// or atttribs. Could be 0 for other data\nbool dracoDecoded{false}; //true\uff1a\u5df2\u88abdraco\u89e3\u7801\n};\n</code></pre></p> <p>\u6bd4\u5982\uff1a<code>Model.bufferViews</code></p> <ul> <li>\u6240\u6709\u7684bufferView\u90fd\u5b58\u50a8\u5728Model\u4e0b</li> <li>\u6b64Model\u5305\u542b\u4e24\u4e2abufferViews <pre><code>  \"bufferViews\" : [ //\u6b64Model\u4e2d\u5305\u542b\u4e86\u4e24\u4e2abufferView\n{   //\u7b2c\u4e00\u4e2abufferView\u3002[0, 0+6)\n\"buffer\" : 0,         //\u5f15\u7528\u4e86Model\u4e2d\u7684\u7b2c\u4e00\u4e2abuffer\u5bf9\u8c61\n\"byteOffset\" : 0,     //\u6570\u636e\u7684\u5f00\u5934\n\"byteLength\" : 6,     //\u6570\u636e\u7684\u957f\u5ea6\n\"target\" : 34963\n},\n{   //\u7b2c\u4e8c\u4e2abufferView\u3002[8, 8+36)\n\"buffer\" : 0,         //\u5f15\u7528\u4e86Model\u4e2d\u7684\u7b2c\u4e8c\u4e2abuffer\u5bf9\u8c61\n\"byteOffset\" : 8,     //\u6570\u636e\u7684\u5f00\u5934\n\"byteLength\" : 36,    //\u6570\u636e\u7684\u957f\u5ea6\n\"target\" : 34962\n}\n],\n</code></pre></li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%A4%BA%E4%BE%8B/%E6%9C%80%E5%B0%8F%E7%9A%84glTF%E6%96%87%E4%BB%B6%E2%80%94%E2%80%94%E4%B8%89%E8%A7%92%E5%BD%A2/#accessors","title":"Accessors","text":"<p>Accessor\u5bf9\u8c61\u63cf\u8ff0\u4e86bufferView\u7684\u542b\u4e49\uff0cbufferView\u7684\u6784\u4ef6\u7c7b\u578b\u3001\u6570\u636e\u7c7b\u578b\u7b49\u7b49\u3002</p> <p>\u6b64\u793a\u4f8b\u4e2d\uff0c\u6709\u4e24\u4e2aaccessors\u5bf9\u8c61 <pre><code>  \"accessors\" : [\n{   //\u9876\u70b9\u7684\u7d22\u5f15\u6570\u636e\n\"bufferView\" : 0, //\u6570\u636e\u5757\n\"byteOffset\" : 0,\n\"componentType\" : 5123,\n\"count\" : 3,\n\"type\" : \"SCALAR\",\n\"max\" : [ 2 ],\n\"min\" : [ 0 ]\n},\n{ //\u9876\u70b9\u4f4d\u7f6e\u6570\u636e\n\"bufferView\" : 1, //\u6570\u636e\u5757\n\"byteOffset\" : 0,\n\"componentType\" : 5126,\n\"count\" : 3,\n\"type\" : \"VEC3\",\n\"max\" : [ 1.0, 1.0, 0.0 ],\n\"min\" : [ 0.0, 0.0, 0.0 ]\n}\n],\n</code></pre></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F/glTF/glTF%E7%A4%BA%E4%BE%8B/%E6%9C%80%E5%B0%8F%E7%9A%84glTF%E6%96%87%E4%BB%B6%E2%80%94%E2%80%94%E4%B8%89%E8%A7%92%E5%BD%A2/#meshprimitive","title":"Mesh\u4e0ePrimitive","text":"<pre><code>  \"meshes\" : [\n{\n\"primitives\" : [ {\n\"attributes\" : {\n\"POSITION\" : 1\n},\n\"indices\" : 0\n} ]\n}\n],\n</code></pre> <p>Mesh\u63cf\u8ff0\u4e09\u7ef4\u5bf9\u8c61\u7684\u51e0\u4f55\u4fe1\u606f</p> <pre><code>struct Mesh {\nstd::vector&lt;Primitive&gt; primitives;\nstd::vector&lt;double&gt; weights;  // weights to be applied to the Morph Targets\n};\n</code></pre> <p>Mesh\u4e2d\u5305\u542b\u4e86\u591a\u4e2aPrimitive\uff0c\u6bcf\u4e2aPrimitive\u5bf9\u8c61\u63cf\u8ff0\u4e86\u4e00\u90e8\u5206mesh\u5bf9\u8c61\u7684\u51e0\u4f55\u6570\u636e</p> <ul> <li>Primitive\u610f\u4e3a\u56fe\u5143\uff0c\u4f46\u56fe\u5143\u672c\u8d28\u4e0a\u5e94\u8be5\u4e3aPoint\u3001Edge\u3001Face\uff08\u4e09\u89d2\u5f62\u3001\u56db\u8fb9\u5f62\u3001\u591a\u8fb9\u5f62\u7b49\uff09</li> <li>\u4f46glTF\u4e2d\u7684Primitive\u8c8c\u4f3c\u4e0d\u662f\u56fe\u5143\u7684\u610f\u601d\uff0c\u5b9e\u8d28\u4e0a\u662fMesh\u4e2d\u4e00\u90e8\u5206\u7f51\u683c\uff0c\u53ef\u80fd\u5305\u542b\u591a\u4e2aFace</li> </ul> <pre><code>struct Primitive {\nstd::map&lt;std::string, int&gt; attributes;\n//key:\u5c5e\u6027\u7c7b\u578b\n//value:\u8bbf\u95ee\u5668\u7684\u7d22\u5f15\nint material;  //\u6b64Primitive\u7684\u6750\u8d28\uff08\u4e5f\u662f\u5b58\u7684\u7d22\u5f15\uff09\nint indices;\n//\u7d22\u5f15\u96c6\u3002\u5b58\u7684\u662f\u8bbf\u95ee\u5668\u91cc\u7684\u4e0b\u6807\nint mode;\n//\u6a21\u5f0f\uff0c\u5f62\u5f0f\u72b9\u5982\uff1aTINYGLTF_MODE_***\nstd::vector&lt;std::map&lt;std::string, int&gt; &gt; targets;  // array of morph targets,\n// where each target is a dict with attribues in [\"POSITION, \"NORMAL\",\n// \"TANGENT\"] pointing\n// to their corresponding accessors\n};\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0cPrimitive\u4e2d\u5b58\u50a8\u4e86accessor\u7684\u7d22\u5f15\uff0c\u901a\u8fc7\u7d22\u5f15\u4f7f\u7528\u4e86\u51e0\u4f55\u6570\u636e \u5f53\u9700\u8981\u4f7f\u7528\u51e0\u4f55\u6570\u636e\u8fdb\u884c\u6e32\u67d3\u65f6\uff0c\u6e32\u67d3\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u5f15\u7528\u5173\u7cfb\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u51e0\u4f55\u6570\u636e\uff0c\u8fdb\u884c\u6e32\u67d3</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/","title":"3dtiles","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/#_1","title":"\u5f15\u8a00","text":"<p>\u6458\u81ea\uff1a3dTiles \u6570\u636e\u89c4\u8303\u8be6\u89e3</p> <p>\u65e9\u5e74\uff0c\u5730\u7406\u7684\u4e09\u7ef4\u8fd8\u5904\u4e8e\u5730\u5f62\u4e09\u7ef4\u4e0a\uff0c\u5373\u6570\u5b57\u9ad8\u7a0b\u6a21\u578b\uff08DEM\uff09\u63d0\u4f9b\u5730\u8868\u7684\u9ad8\u5ea6\u62c9\u4f38\u3002</p> <p>\u968f\u7740\u5b66\u79d1\u7684\u878d\u5408\u3001\u8ba1\u7b97\u673a\u6280\u672f\u548c\u786c\u4ef6\u7684\u66f4\u65b0\u6362\u4ee3\uff0c\u4f7f\u5f97\u6709\u6a21\u578b\u3001\u6709\u7ec6\u8282\u7684\u771f\u4e09\u7ef4\u878d\u5165\u5230GIS\u4e2d\u6210\u4e3a\u4e86\u53ef\u80fd\uff0c\u6216\u8005\u8bf4\uff0c\u8ba1\u7b97\u673a\u6280\u672f\u548c\u786c\u4ef6\u7684\u5347\u7ea7\uff0c\u7ed9GIS\u4ee5\u66f4\u5e7f\u9614\u7684\u89c6\u89d2\u89c2\u5bdf\u4e16\u754c\u3002</p> <p>\u9762\u5bf9\u5927\u89c4\u6a21\u7cbe\u7ec6\u4e09\u7ef4\u6570\u636e\u7684\u52a0\u8f7d\uff0c\u8fd8\u8981\u7167\u987e\u5230GIS\u7684\u5404\u79cd\u5750\u6807\u7cfb\u7edf\u3001\u5206\u6790\u8ba1\u7b97\uff0cgltf\u8fd9\u79cd\u5355\u4e2a\u6a21\u578b\u7684\u65b9\u6848\u663e\u5f97\u529b\u4e0d\u4ece\u5fc3\u3002</p> <p>2016\u5e74\uff0cCesium \u56e2\u961f\u501f\u9274\u4f20\u7edf2DGIS\u7684\u5730\u56fe\u89c4\u8303\u2014\u2014WMTS\uff0c\u501f\u9274\u56fe\u5f62\u5b66\u4e2d\u7684\u5c42\u6b21\u7ec6\u8282\u6a21\u578b\uff0c\u6253\u9020\u51fa\u5927\u89c4\u6a21\u7684\u4e09\u7ef4\u6570\u636e\u6807\u51c6\u2014\u2014 3d-Tiles\uff0c\u4e2d\u6587\u8bd1\u540d\uff1a\u4e09\u7ef4\u74e6\u7247\u3002</p> <ul> <li>\u5b83\u5728\u6a21\u578b\u4e0a\u5229\u7528\u4e86 gltf \u6e32\u67d3\u5feb\u7684\u7279\u70b9\uff0c\u5bf9\u5927\u89c4\u6a21\u7684\u4e09\u7ef4\u6570\u636e\u8fdb\u884c\u7ec4\u7ec7\uff0c\u5305\u62ec\u5c42\u6b21\u7ec6\u8282\u6a21\u578b\u3001\u6a21\u578b\u7684\u5c5e\u6027\u6570\u636e\u3001\u6a21\u578b\u7684\u5c42\u7ea7\u6570\u636e\u7b49\u3002</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/#3dtiles","title":"3dtiles\u5e94\u7528\u573a\u666f","text":"<p>3dtiles\u662f\u7528\u4e8e\u6d41\u5f0f\u4f20\u8f93\u5927\u89c4\u6a21\u5f02\u67843D\u5730\u7406\u7a7a\u95f4\u6570\u636e\u96c6\u7684\u5f00\u653e\u89c4\u8303\u3002</p> <ul> <li>\u4e3a\u4e86\u6269\u5c55Cesium\u7684\u5730\u5f62\u548c\u56fe\u50cf\u6d41\uff0c3D Tiles\u5c06\u7528\u4e8e\u6d41\u5f0f\u4f20\u8f933D\u5185\u5bb9\uff0c\u5305\u62ec\u5efa\u7b51\u7269\uff0c\u6811\u6728\uff0c\u70b9\u4e91\u548c\u77e2\u91cf\u6570\u636e</li> <li>\u4f8b\u5982\u6444\u5f71\u6d4b\u91cf\u30013D \u5efa\u7b51\u3001BIM/CAD\u3001\u5b9e\u4f8b\u5316\u7279\u5f81\u548c\u70b9\u4e91</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/#3dtiles_1","title":"3dtiles\u7684\u7ec4\u6210","text":"<p>3DTiles\u7531<code>tileset.json</code>\u548ctile\u7ec4\u6210\uff0c\u5176\u4e2dtile\u53ef\u4ee5\u662f.b3dm\u3001.i3dm\u3001.pnts\u3001.vctr\u548c.cmpt\u4e2d\u7684\u4efb\u4e00\u79cd\u683c\u5f0f\u6587\u4ef6\u3002</p> \u7c7b\u578b \u82f1\u6587\u540d\u79f0 \u6587\u4ef6\u540e\u7f00\u540d \u5bf9\u5e94\u5b9e\u9645\u6570\u636e \u6279\u91cf\u4e09\u7ef4\u6a21\u578b Batch 3D Model b3dm \u4f20\u7edf\u4e09\u7ef4\u5efa\u6a21\u6570\u636e\u3001BIM\u6570\u636e\u3001\u503e\u659c\u6444\u5f71\u6570\u636e \u5b9e\u4f8b\u4e09\u7ef4\u6a21\u578b Instance 3D Model i3dm \u4e00\u4e2a\u6a21\u578b\u591a\u6b21\u6e32\u67d3\u7684\u6570\u636e\uff0c\u706f\u5854\u3001\u6811\u6728\u3001\u6905\u5b50\u7b49 \u70b9\u4e91 PointCloud pnts \u70b9\u4e91\u6570\u636e \u590d\u5408\u6a21\u578b Component cmpt \u524d\u4e09\u79cd\u6570\u636e\u7684\u590d\u5408\uff08\u5141\u8bb8\u4e00\u4e2acmpt\u6587\u4ef6\u5185\u5d4c\u591a\u4e2a\u5176\u4ed6\u7c7b\u578b\u7684\u74e6\u7247\uff09"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/#3dtiles_2","title":"3dtiles\u4f18\u70b9","text":"<p>\u7b2c\u4e00\uff0c3dTiles \u7ee7\u627f\u4e86 gltf \u7684\u4f18\u70b9</p> <ul> <li>\u8d34\u5408\u56fe\u5f62\u6e32\u67d3 API \u7684\u903b\u8f91\uff0c\u8ba8 GPU \u559c\u7231\uff0cwebgl \u5bf9\u5176\u5185\u90e8\u7ec4\u7ec7\u8d77\u6765\u7684\u4e09\u7ef4\u6a21\u578b\u6570\u636e\uff0c\u4e0d\u9700\u8981\u8f6c\u6362\uff0c\u53ef\u4ee5\u76f4\u63a5\u6e32\u67d3\uff08glTF \u7684\u529f\u52b3\uff09</li> </ul> <p>\u7b2c\u4e8c\uff1a3dTiles\uff08<code>tileset.json</code>\uff09\u4e0d\u8bb0\u5f55\u6a21\u578b\u6570\u636e\uff0c\u53ea\u8bb0\u5f55\u5404\u7ea7\u201cTile\u201d\u7684\u903b\u8f91\u5173\u7cfb\uff0c\u4ee5\u53ca\u5143\u6570\u636e</p> <ul> <li>\u6240\u8c13\u7684\u6a21\u578b\u6570\u636e\uff0c\u662f\u6307\u4e09\u7ef4\u6a21\u578b\u7684\u9876\u70b9\u3001\u8d34\u56fe\u6750\u8d28\u3001\u6cd5\u7ebf\u3001\u989c\u8272\u7b49\u4fe1\u606f\u3002\u800c\u6a21\u578b\u6570\u636e\u5b58\u50a8\u5728.b3dm\u3001.i3dm\u3001.pnts\u3001.vctr\u548c.cmpt\u4e2d\u7684\u4efb\u4e00\u79cd\u683c\u5f0f\u6587\u4ef6</li> <li>\u903b\u8f91\u5173\u7cfb\u662f\u6307\uff0c\u5404\u7ea7Tile\u662f\u5982\u4f55\u5728\u7a7a\u95f4\u4e2d\u4fdd\u6301\u8fde\u7eed\u7684\uff0cLOD\u662f\u5982\u4f55\u7ec4\u7ec7\u7684</li> </ul> <p>\u7b2c\u4e09\uff1a\u74e6\u7247\u7684\u610f\u4e49</p> <ul> <li>\u7f51\u901f\u662f\u6709\u9650\u7684\uff0c\u5728\u52a0\u8f7d\u8d85\u5927\u89c4\u6a21\u7684\u4e09\u7ef4\u6a21\u578b\u6570\u636e\u65f6\uff0c\u4e0d\u53ef\u80fd\u628a\u4e00\u4e2a\u6a21\u578b\u5168\u90e8\u4e0b\u8f7d\u4e0b\u6765\u518d\u6e32\u67d3\uff0c\u90a3\u6837\u7b49\u5f85\u7684\u65f6\u95f4\u592a\u6162\u4e86\uff0c\u4f46\u662f\u4e00\u70b9\u4e00\u70b9\u51fa\u73b0\uff0c\u89c6\u91ce\u8303\u56f4\u5916\u7684\u201c\u74e6\u7247\u201d\u5219\u5e72\u8106\u5c31\u4e0d\u4e0b\u8f7d\u3001\u6e32\u67d3\uff0c\u6027\u80fd\u3001\u89c6\u89c9\u90fd\u6709\u63d0\u9ad8\u3002\u8fd9\u5c31\u662f\u74e6\u7247\u7684\u8bbe\u8ba1\u4f18\u70b9</li> <li>\u4f20\u7edf\u7684\u4e8c\u7ef4\u5730\u56fe\u74e6\u7247\uff0c\u53eb\u505a WMTS \u6216 TMS\uff0c\u8fd9\u4e2a \"T\" \u5c31\u662f Tile \u7684\u610f\u601d\u3002</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/#_2","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>3dtiles\u683c\u5f0f\u89c4\u8303-\u5b98\u65b9\u624b\u518c</li> <li>3dtiles\u6807\u51c6\u57fa\u4e8eJSON\u683c\u5f0f\u6307\u5b9a\uff0c\u8fd9\u662f\u5b83\u7684schema</li> <li>3dTiles\u7cfb\u5217\u535a\u5ba2</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/","title":"B3dm","text":"<p>\u539f\u6587\u94fe\u63a5\uff1a 1. 3dTiles \u6570\u636e\u89c4\u8303\u8be6\u89e3[4.1] b3dm\u74e6\u7247\u4e8c\u8fdb\u5236\u6570\u636e\u6587\u4ef6\u7ed3\u6784</p> <p>b3dm\uff0cbatched 3d model\uff0c\u6210\u6279\u91cf\u7684\u4e09\u7ef4\u6a21\u578b\uff0c\u5b83\u662f3dtiles\u4e2d\u74e6\u7247\u7684\u4e00\u79cd\uff08\u8fd8\u6709i3dm\u3001pnts\u3001cmpt\uff09\u3002</p> <ul> <li>\u5728b3dm\uff0c\u4e00\u4e2a\u6a21\u578b\u79f0\u4e4b\u4e3a<code>batch</code>\uff0c\u7b49\u4ef7\u4e8e\u8981\u7d20\u8868\u4e2d\u7684<code>Feature</code>\uff0cbatch\u6982\u5ff5\u5f15\u7533\u81ea\u56fe\u5f62\u7f16\u7a0b\uff0c\u610f\u601d\u662f\u201c\u4e00\u6b21\u6027\u5411\u56fe\u5f62\u5904\u7406\u5668\uff08GPU\uff09\u53d1\u9001\u7684\u6570\u636e\u201d\uff0c\u5373\u6279\u6b21</li> <li>\u4e00\u4e2a b3dm \u74e6\u7247\u6709\u591a\u5c11\u4e2a batch\uff08\u6709\u591a\u5c11\u4e2a\u8981\u7d20\uff09\uff0c\u662f\u7531\u8981\u7d20\u8868\u7684 JSON \u8868\u5934\u4e2d\u7684 BATCH_LENGTH \u5c5e\u6027\u8bb0\u5f55</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#b3dm","title":"b3dm\u6587\u4ef6\u7ed3\u6784","text":"<p>b3dm\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5176\u6587\u4ef6\u7ed3\u6784\u5982\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u57283dtiles\u7684\u773c\u4e2d\uff0c\u6a21\u578b\u79f0\u4e4b\u4e3a\u4e00\u4e2aFeature\uff0c\u6216Batch</p> <ul> <li>FeatureTable\u8981\u7d20\u8868\uff0c\u5b58\u50a8\u7684\u662f\u6a21\u578b**\u6e32\u67d3\u76f8\u5173**\u7684\u4fe1\u606f</li> <li>BatchTable\u6279\u91cf\u8868\uff0c\u5b58\u50a8\u7684\u662f\u6a21\u578b**\u5c5e\u6027\u76f8\u5173**\u7684\u4fe1\u606f</li> <li>\u800c\u6a21\u578b\u5b9e\u9645\u7684\u51e0\u4f55\u4fe1\u606f\uff0c\u901a\u8fc7glTF\u683c\u5f0f**\u5b58\u50a8\u5728glb\u5757**\u4e2d\uff0c\u5b83\u4f1a\u88ab\u5ba2\u6237\u7aef\u76f4\u63a5\u4e22\u5230GPU\u4e2d\u8fdb\u884c\u6e32\u67d3</li> </ul> <p>\u6ce8\uff1a</p> <ol> <li>\u5982\u679cglb\u6a21\u578b\u5e76\u4e0d\u9700\u8981\u5c5e\u6027\u6570\u636e\uff0c\u5373\u8981\u7d20\u8868<code>FeatureTableBinary</code>\u548c\u6279\u91cf\u8868<code>BatchTableBinary</code>\u6709\u53ef\u80fd\u662f\u7a7a\u8868</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#_1","title":"\u6587\u4ef6\u5934","text":"<p>\u6587\u4ef6\u5934\u4e00\u5171\u536028\u5b57\u8282\u3002</p> \u5c5e\u6027\u7684\u5b98\u65b9\u540d\u79f0 \u5b57\u8282\u957f \u7c7b\u578b \u542b\u4e49 magic 4 string\uff08\u6216char[4]\uff09 \u8be5\u74e6\u7247\u6587\u4ef6\u7684\u7c7b\u578b\uff0c\u5728b3dm\u4e2d\u662f \"b3dm\" version 4 uint32 \u8be5\u74e6\u7247\u7684\u7248\u672c\uff0c\u76ee\u524d\u9650\u5b9a\u662f 1. byteLength 4 uint32 \u8be5\u74e6\u7247\u6587\u4ef6\u7684\u6587\u4ef6\u5927\u5c0f\uff0c\u5355\u4f4d\uff1abyte featureTableJSONByteLength 4 uint32 \u8981\u7d20\u8868\u7684JSON\u6587\u672c\uff08\u4e8c\u8fdb\u5236\u5f62\u5f0f\uff09\u957f\u5ea6 featureTableBinaryByteLength 4 uint32 \u8981\u7d20\u8868\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u957f\u5ea6 batchTableJSONByteLength 4 uint32 \u6279\u91cf\u8868\u7684JSON\u6587\u672c\uff08\u4e8c\u8fdb\u5236\u5f62\u5f0f\uff09\u957f\u5ea6 batchTableBinaryByteLength 4 uint32 \u6279\u91cf\u8868\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u957f\u5ea6 <ul> <li>\u5176\u4e2d\uff1a<code>byteLength = 28 + featureTableJSONByteLength + featureTableBinaryByteLength + batchTableJSONByteLength + batchTableBinaryByteLength + glb\u7684\u5b57\u8282\u957f\u5ea6</code></li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#_2","title":"\u8981\u7d20\u8868\uff08\u6e32\u67d3\u76f8\u5173\u4fe1\u606f\uff09","text":"<p>\u8981\u7d20\u8868\u8bb0\u5f55\u4e86\u6574\u4e2a\u74e6\u7247**\u6e32\u67d3\u76f8\u5173\u7684\u6570\u636e**\uff0c\u800c\u4e0d\u662f\u6e32\u67d3\u6240\u9700\u7684\u6570\u636e\uff08\u6e32\u67d3\u6240\u9700\u6570\u636e\u5728<code>glb</code>\uff0c\u6bd4\u5982\u70b9\u3001\u9762\u7d22\u5f15\u3001\u6cd5\u5411\u91cf\u7b49\uff09</p> <ul> <li>b3dm\u7684\u8981\u7d20\u8868\u4e2d\u5b58\u50a8\u4e86**\u5168\u5c40\u5c5e\u6027**\u4e0e**\u8981\u7d20\u5c5e\u6027**</li> <li>\u8981\u7d20\u8868\u4f7f\u7528JSON\u683c\u5f0f\u6765\u7ec4\u7ec7\uff0c\u5e76\u4f7f\u7528\u4e8c\u8fdb\u5236\u6765\u5b58\u50a8\uff08\u672a\u4f7f\u7528\u660e\u6587\u5b58\u50a8\uff09</li> <li>\u5982\u679c\u67d0\u4e9b\u6570\u636e\u7684\u6570\u636e\u91cf\u5f88\u5927\uff0c\u5219\u53ef\u4ee5\u8003\u8651\u5b58\u50a8\u6210\u4e8c\u8fdb\u5236\u6570\u636e\u5305\uff0c\u4fdd\u5b58\u5728FeatureTableBinary\u5757\u4e2d\uff0c\u5728FeatureTableJson\u4e2d\u4f7f\u7528\u5916\u94fe\u7684\u65b9\u5f0f\u5f15\u7528\u5230JSON\u4e2d</li> </ul> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u7b26\u54083dtiles\u7684\u8bbe\u8ba1\u601d\u60f3\uff0ctileset.json\u4e5f\u662f\u5982\u6b64\u3002 \u4e0etileset.json\u4e0d\u540c\u7684\u662f\uff0c\u8981\u7d20\u8868\u4f7f\u7528bypeOffset\u6765\u5f15\u7528\u4e8c\u8fdb\u5236\u5757\uff0c\u800ctileset.json\u901a\u8fc7uri\u6765\u5f15\u7528\u4e8c\u8fdb\u5236\u5757</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#_3","title":"\u5185\u5bb9","text":"<p>\u8981\u7d20\u8868\u5305\u542b\u5168\u5c40\u5c5e\u6027\u3001\u8981\u7d20\u5c5e\u6027\u7b49\u5185\u5bb9\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#_4","title":"\u5168\u5c40\u5c5e\u6027","text":"<p>\u5728b3dm\uff0c\u8981\u7d20\u8868\u6709\u4ee5\u4e0b\u5168\u5c40\u5c5e\u6027\uff1a</p> \u5c5e\u6027\u540d \u5c5e\u6027\u6570\u636e\u7c7b\u578b \u5c5e\u6027\u63cf\u8ff0 \u662f\u5426\u5fc5\u987b\u5b58\u5728 BATCH_LENGTH uint32 \u5f53\u524d\u74e6\u7247\u6587\u4ef6\u5185\u4e09\u7ef4\u6a21\u578b\uff08BATCH\u3001\u8981\u7d20\uff09\u7684\u4e2a\u6570 yes RTC_CENTER float32[3] \u5982\u679c\u6a21\u578b\u7684\u5750\u6807\u662f\u76f8\u5bf9\u5750\u6807\uff0c\u90a3\u4e48\u76f8\u5bf9\u5750\u6807\u7684\u4e2d\u5fc3\u5373\u6b64 no <ul> <li>\u5982\u679cglb\u6a21\u578b\u5e76\u4e0d\u9700\u8981\u5c5e\u6027\u6570\u636e\uff0c\u5373\u8981\u7d20\u8868\u548c\u6279\u91cf\u8868\u6709\u53ef\u80fd\u662f\u7a7a\u8868\uff0c\u90a3\u4e48<code>BATCH_LENGTH</code>\u7684\u503c\u5e94\u8bbe\u4e3a 0\u3002</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#_5","title":"\u8981\u7d20\u5c5e\u6027","text":"<p>\u56e0\u8981\u7d20\u5c5e\u6027\u662f\u6307\u6e32\u67d3\u76f8\u5173\u7684\u5c5e\u6027\u3002\u800cb3dm\u6ca1\u6709\u8981\u7d20\u5c5e\u6027\uff0c\u56e0\u4e3a\u4e0e\u6e32\u67d3\u76f8\u5173\u7684\u5c5e\u6027\uff0c\u90fd\u5b58\u50a8\u5728\u4e86glb\u5f53\u4e2d\u3002 \u4f46\u5728i3dm\u3001pnts\u8fd9\u4e24\u79cd\u74e6\u7247\u5f53\u4e2d\uff0c\u8981\u7d20\u5c5e\u6027\u5c31\u975e\u5e38\u591a\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#_6","title":"\u7ed3\u6784","text":"<p>\u8981\u7d20\u8868\u5305\u542bFeatureTableJson\u4e0eFeatureTableBinary\u4e24\u4e2a\u6570\u636e\u5757\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#featuretablejson","title":"FeatureTableJson","text":"<p>FeatureTable\u91c7\u7528JSON\u683c\u5f0f\u7ec4\u7ec7\uff0c\u4f7f\u7528\u4e8c\u8fdb\u5236\u6765\u5b58\u50a8\u3002</p> <p>\u4f8b\u5982\uff0c\u8fd9\u662f\u4ece\u4e00\u4e2ab3dm\u6587\u4ef6\u4e2d\u89e3\u6790\u51fa\u6765\u7684FeatureTableJson</p> <ul> <li>\u8bf4\u660e\u6b64b3dm\u74e6\u7247\u67094\u4e2a\u6a21\u578b\uff084\u4e2a\u8981\u7d20\u3001\u62164\u4e2aBATCH\uff09\uff0c\u8fd94\u4e2a<code>batchId</code>\u4e3a0\u30011\u30012\u30013 <pre><code>{\n\"BATCH_LENGTH\": 4\n}\n</code></pre></li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#featuretablebinary","title":"FeatureTableBinary","text":"<p>FeatureTableBinary\u8981\u7d20\u8868\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u3002 \u5982\u679cFeatureTableJson\u4e2d\u67d0\u4e9b\u6570\u636e\u7684\u6570\u636e\u91cf\u8fc7\u5927\uff0c\u53ef\u7528\u4e8c\u8fdb\u5236\u6765\u5b58\u50a8\u3002\u5728JSON\u4e2d\u901a\u8fc7\u5916\u94fe\u7684\u65b9\u5f0f\u6302\u63a5\u3002</p> <p>\u4f46\u5728b3dm\u74e6\u7247\u4e2d\uff0c\u6ca1\u6709FeatureTableBinary\u3002\u56e0\u4e3a<code>BATCH_LENGTH</code>\u548c<code>RTC_CENTER</code>\u6570\u636e\u91cf\u90fd\u4e0d\u5927\u3002 \u4f46\u5728i3dm\u548cpnts\u7c7b\u522b\u7684\u74e6\u7247\u4e2d\uff0c\u8981\u7d20\u8868\u5c31\u5177\u6709\u5927\u91cf\u7684FeatureTableBinary\uff0c\u5176FeatureTableJson\u4e5f\u4f1a\u5f15\u7528\u5927\u91cf\u7684\u4e8c\u8fdb\u5236\u4f53\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#_7","title":"\u6279\u91cf\u8868\uff08\u5c5e\u6027\u4fe1\u606f\uff09","text":"<p>\u6279\u91cf\u8868\u8bb0\u5f55\u7684\u662f\u6bcf\u4e2a\u6a21\u578b\u7684\u5c5e\u6027\u4fe1\u606f\uff0c\u4ee5\u53ca\u6269\u5c55\u6570\u636e\u3002</p> <p>\u4e0e\u8981\u7d20\u8868\u7684\u7ba1\u7406\u65b9\u5f0f\u76f8\u540c\uff0c\u6279\u91cf\u8868\u4ee5JSON\u683c\u5f0f\u8fdb\u884c\u7ec4\u7ec7\uff0c\u5e76\u4ee5\u4e8c\u8fdb\u5236\u7684\u5f62\u5f0f\u5b58\u50a8\uff08\u672a\u4f7f\u7528\u660e\u6587\u6765\u5b58\u50a8\uff09\u3002 \u800c\u8981\u7d20\u8868JSON\u4e2d\u8fc7\u4e8e\u5e9e\u5927\u7684\u6570\u636e\u5c06\u5b58\u50a8\u5728<code>BatchTableBinary</code>\u5757\u4e2d\uff0c\u5728JSON\u4e2d\u4ee5\u5916\u94fe\u7684\u5f62\u5f0f\u5f15\u7528\u8fdb\u6765\u3002</p> <p>\u8981\u7d20\u8868\u4e0e\u6279\u91cf\u8868\u7684\u552f\u4e00\u8054\u7cfb\u662f<code>BATCH_LENGTH</code>\u3002\u8981\u7d20\u8868\u4e2d\u8bb0\u5f55\u4e86\u6709\u591a\u5c11\u4e2a\u6a21\u578b\uff0c\u90a3\u4e48\u6279\u91cf\u8868\u6bcf\u4e2a\u5c5e\u6027\u5c31\u6709\u591a\u5c11\u4e2a\u503c\u3002</p> <ul> <li>\u5728i3dm\u4e2d\u53eb<code>INSTANCE_LENGTH</code></li> <li>\u5728pnts\u4e2d\u53eb<code>POINTS_LENGTH</code></li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#batchtablejson","title":"BatchTableJson","text":"<p>\u8fd9\u662f\u4e00\u4efdb3dm\u7684\u660e\u6587BatchTableJson\uff08\u5df2\u4ece\u4e8c\u8fdb\u5236\u4e2d\u89e3\u6790\u51fa\u6765\uff09</p> <ul> <li>\u5176\u4e2d\u6709\u4e24\u4e2a\u5c5e\u6027<code>height</code>\u4e0e<code>geographic</code>\uff0c\u6309\u5b57\u9762\u7406\u89e3\uff0c\u5373\u6a21\u578b\u7684\u9ad8\u5ea6\u503c\u4e0e\u5730\u7406\u5750\u6807\u503c <pre><code>{\n\"height\" : {\n\"byteOffset\" : 0,                       //\u5c5e\u6027\u503c\u5728BatchTableBinary\u5f00\u5934\u7684\u5730\u65b9\uff08\u53730-39\uff09\n\"componentType\" : \"FLOAT\",  //\u5c5e\u6027\u503c\u7c7b\u578b\u4e3afloat\n\"type\" : \"SCALAR\"                       //\u5c5e\u6027\u7684\u5143\u7d20\u7c7b\u578b\u4e3aSCALAR\n},   \"geographic\" : {\n\"byteOffset\" : 40,                  //\u5c5e\u6027\u503c\u5728BatchTableBinary+40\u7684\u5730\u65b9\uff08\u537340-\u5c3e\uff09\n\"componentType\" : \"DOUBLE\", //\u5c5e\u6027\u503c\u7c7b\u578b\u4e3adouble\n\"type\" : \"VEC3\"                         //\u5c5e\u6027\u7684\u5143\u7d20\u7c7b\u578b\u4e3avec3\n},\n}\n</code></pre> \u5c5e\u6027\u503c\u662f\u4ee5\u4e8c\u8fdb\u5236\u5757\u7684\u5f62\u5f0f\u5b58\u50a8\u5728<code>BatchTableBinary</code>\u533a\u57df\u5f53\u4e2d\u3002\u6240\u4ee5\u6bcf\u4e2a\u5c5e\u6027\u90fd\u5177\u6709\u4e00\u4e2a<code>byteOffset</code>\u4fe1\u606f\uff0c\u6765\u6807\u8bc6\u6b64\u5c5e\u6027\u7684\u5c5e\u6027\u503c\u5728\u4e8c\u8fdb\u5236\u5757\u7684\u54ea\u4e2a\u5b57\u8282\u5f00\u59cb\u5b58\u50a8\u3002</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#batchtablebinary","title":"BatchTableBinary","text":"<p>BatchTableBinary\u5b58\u50a8\u7740\u5c5e\u6027\u503c\uff0c\u6bcf\u4e2a\u5c5e\u6027\u503c\u662f\u6309\u987a\u5e8f\u5b58\u50a8\u7684\u3002</p> <p>\u67e5\u770b\u672c\u6570\u636e\u7684FeatureTableJson\uff0c\u53ef\u77e5<code>BATCH_LENGTH</code>\u503c\u4e3a10\uff0c\u8fd9\u8bf4\u660e\u6b64b3dm\u74e6\u7247\u670910\u4e2a\u6a21\u578b\u3002</p> <ul> <li>\u5bf9\u4e8e<code>height</code>\u5c5e\u6027\uff0c\u5176\u5c5e\u6027\u7c7b\u578b\u4e3a\u6807\u91cf\uff0c\u5176\u503c\u7c7b\u578b\u4e3afloat\uff0c\u4e00\u5171\u670910\u4e2a\u6a21\u578b\uff0c\u90a3\u4e48<code>height</code>\u5c5e\u6027\u503c\u5c31\u536040\u4e2abyte</li> <li>\u800c<code>geographic</code>\u5c5e\u6027\u7684\u603b\u957f=<code>componentType\u5927\u5c0f</code> * <code>BATCH_LENGTH</code> * <code>type\u7684\u4e2a\u6570</code> = 8byte * 10 * 3 = 240byte</li> </ul> <p></p> <p>\u56e0\u6b64\uff0c\u8fd9\u4efd\u6570\u636e\u7684BatchTableBinary\u7684\u4e8c\u8fdb\u5236\u5927\u5c0f\u4e3a280byte\u3002\u5373<code>batchTableBinaryByteLength</code>=280\uff0c<code>batchTableBinaryByteLength</code>\u5176\u5b9e\u5728\u6587\u4ef6\u5934\u4e2d\u4e5f\u6709\u5b58\u50a8\u3002</p> <p>BatchTableBinary\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f60\u5b8c\u5168\u53ef\u4ee5\u4e0d\u9700\u8981BatchTableBinary\uff0c\u800c\u628a\u6240\u6709\u7684\u5c5e\u6027\u503c\u90fd\u5199\u5728<code>BatchTableJson</code>\u5f53\u4e2d\uff0c\u4f46JSON\u683c\u5f0f\u6bd4\u6309\u987a\u5e8f\u5b58\u50a8\u6765\u8bf4\uff0c\u66f4\u6d6a\u8d39\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u4e3aJSON\u683c\u5f0f\u6709\u8bf8\u5982<code>[]</code>\u3001<code>:</code>\u3001<code>\"\"</code>\u7b49\u63cf\u8ff0\u7b26\u3002 \u800c\u8003\u8651\u52303dtiles\u7684\u7f51\u7edc\u4f20\u8f93\uff0c\u65453dtiles\u8bbe\u8ba1\u5982\u6b64\u3002</p> <p>\u4f46\u5bf9\u4e8e\u7c7b\u578b\u662f<code>object</code>\u3001<code>string</code>\u3001<code>bool</code>\u7c7b\u578b\uff0c\u5219\u5fc5\u987b\u5b58\u50a8\u4e8eJSON\u4e2d\uff0c\u56e0\u4e3a\u4e8c\u8fdb\u5236\u53ea\u80fd\u5b58\u6807\u91cf\u3001234\u7ef4\u5411\u91cf\u7684\u6570\u5b57\u6570\u636e\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#glb","title":"\u5185\u5d4c\u7684glb","text":"<p>b3dm\u5c06\u6a21\u578b\u51e0\u4f55\u76f8\u5173\u7684\u6570\u636e\u6253\u5305\u5b58\u50a8\u4e3a\u4e86glTF\u683c\u5f0f\uff0c\u56e0glTF\u662f\u9762\u5411GPU\u8bbe\u8ba1\u7684\u6570\u636e\u683c\u5f0f\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u63d0\u4f9b\u7ed9GPU\u8fdb\u884c\u6e32\u67d3\u3002\u56e0\u6b64\uff0c3dtiles\u91c7\u7528\u4e86glTF\u683c\u5f0f\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#_8","title":"\u5b57\u8282\u5bf9\u9f50\u4e0e\u7f16\u7801\u7aef\u5e8f","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#json8","title":"JSON\u5c3e\u5df48\u5b57\u8282\u5bf9\u9f50","text":"<p>FeatureTableJSON\u3001BatchTableJSON\u7684\u4e8c\u8fdb\u5236\u5757\uff0c\u6700\u540e\u4e00\u4e2a\u5b57\u8282\u76f8\u5bf9\u4e8e\u6574\u4e2ab3dm\u6587\u4ef6\u6765\u8bf4\uff0c**\u504f\u79fb\u91cf\u5fc5\u987b\u662f8\u7684\u500d\u6570\u3002**\u5982\u679c\u4e0d\u591f\uff0c\u5fc5\u987b\u7528\u4e8c\u8fdb\u5236\u7a7a\u683c\uff08<code>0x20</code>\uff09\u586b\u591f</p> <ul> <li>\u56e0\u6587\u4ef6\u5934\u4e00\u5b9a\u662f28byte\uff0c\u5219<code>28 + FeatureTableJson\u7684\u957f\u5ea6</code>\u4e00\u5b9a\u8981\u80fd\u6574\u96648\u3002<code>28 + FeatureTableJson\u7684\u957f\u5ea6 + BatchTableJson\u7684\u957f\u5ea6</code>\u4e5f\u4e00\u5b9a\u8981\u80fd\u88ab8\u6574\u9664\u3002</li> </ul> <p>\u4e3a\u4ec0\u4e48<code>FeatureTableJSON</code>\u7684\u8d77\u59cb\u504f\u79fb\u91cf\u4e0d\u8981\u6c42\u662f8byte\u5bf9\u9f50</p> <ul> <li>\u56e0\u4e3a<code>FeatureTableJSON</code>\u4e4b\u524d\u6709\u4e00\u4e2a\u6587\u4ef6\u5934\uff0c\u5176\u7a7a\u95f4\u4e00\u5b9a\u662f28byte\u3002\u5982\u679c\u89818byte\u5bf9\u9f50\uff0c\u5c31\u8fd8\u8981\u586b\u51454byte\uff0c\u90a3\u4e48\u6bcf\u4efd\u6587\u4ef6\u90fd\u4f1a\u6d6a\u8d394byte</li> </ul> <p>\u76f8\u5173\u6587\u7ae0\uff1a</p> <ol> <li>FeatureTable\u7684padding</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#8","title":"\u6570\u636e\u4f53\u5934\u5c3e8\u5b57\u8282\u5bf9\u9f50","text":"<p>\u4f8b\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c<code>height</code>\u5c5e\u6027\u503c\u7684\u4e8c\u8fdb\u5236\u5757\u3001<code>geographic</code>\u5c5e\u6027\u503c\u7684\u4e8c\u8fdb\u5236\u5757\u90fd\u53ef\u79f0\u4e3a**\u6570\u636e\u4f53**\u3002</p> <p>FeatureTableBinary\u3001BatchTableBinary\u4e2d\u7684\u6570\u636e\u4f53\u9996\u4f4d\u5fc5\u987b\u662f8\u5bf9\u9f50\uff0c\u5982\u679c\u4e0d\u591f\uff0c\u53ef\u4ee5\u7528\u4efb\u610f\u7a7a\u767d\u5b57\u8282\u586b\u5145\u3002</p> <ul> <li>\u9996\u4e2a\u5b57\u8282\u76f8\u5bf9\u4e8eb3dm\u6587\u4ef6\u7684\u5b57\u8282\u504f\u79fb\u91cf\uff08\u5934\uff09\uff0c\u5fc5\u987b\u662f8\u7684\u500d\u6570\uff1b</li> <li>\u7ed3\u675f\u5b57\u8282\u7684\u5b57\u8282\u504f\u79fb\u91cf\uff08\u5c3e\uff09\uff0c\u4e5f\u5fc5\u987b\u662f8\u7684\u500d\u6570</li> </ul> <p>\u6bd4\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c<code>height</code>\u5c5e\u6027\u503c\u7684\u4e8c\u8fdb\u5236\u5757\u9996\u4f4d\u5fc5\u987b\u662f8\u5b57\u8282\u5bf9\u9f50\uff1b<code>geographic</code>\u5c5e\u6027\u503c\u7684\u4e8c\u8fdb\u5236\u5757\u4e5f\u5fc5\u987b\u662f8\u5b57\u8282\u5bf9\u9f50</p> <ol> <li><code>height</code>\u5c5e\u6027\u662f\u5728<code>BatchTableJson</code>\u4e4b\u540e\uff0c\u800c<code>BatchTableJson</code>\u7684\u672b\u5c3e\u662f\u8981\u6c428byte\u5bf9\u9f50\u7684\uff0c\u6240\u4ee5<code>height</code>\u7684\u5f00\u5934\u80af\u5b9a\u662f\u6ee1\u8db38byte\u5bf9\u9f50\u7684\u3002\u800c<code>height</code>\u5c5e\u6027\u503c\u4e8c\u8fdb\u5236\u5927\u5c0f\u662f40\uff0c40/8=5\uff0c\u6240\u4ee5\u672b\u5c3e\u662f8\u5b57\u8282\u5bf9\u9f50</li> <li>\u4f46\u662f\u5047\u8bbe<code>height</code>\u7684\u7c7b\u578b\u662f\u6807\u91cf\uff0c\u5176\u5c5e\u6027\u503c\u7c7b\u578b\u662f<code>byte</code>\uff0c\u4e00\u5171\u670910\u4e2a\u6a21\u578b\uff0c\u90a3\u4e48<code>height</code>\u5c5e\u6027\u503c\u4e8c\u8fdb\u5236\u5757\u7684\u5927\u5c0f\u662f10\u3002\u5047\u8bbe<code>BatchTalbeJson</code>\u7684\u5927\u5c0f\u4e3a800\u3002\u90a3\u4e0b\u4e00\u4e2a\u5c5e\u6027\uff08<code>geographic</code>\uff09\u7684\u8d77\u59cb\u4f4d\u7f6e\u4e3a810\uff0c\u6b64\u65f6\u4e0d\u662f8\u5bf9\u9f50\uff0c\u90a3\u5c31\u8981\u5728<code>height</code>\u5c5e\u6027\u503c\u4e8c\u8fdb\u5236\u5757\u540e\u586b\u5145\u4efb\u610f8\u4e2a\u5b57\u8282\uff0c\u51d1\u9f50816</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#_9","title":"\u7f16\u7801\u7aef\u5e8f","text":"<p>\u8981\u7d20\u8868\u3001\u6279\u91cf\u8868\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u65e0\u8bba\u662fJSON\u8fd8\u662f\u6570\u636e\u4f53\uff0c\u5747\u4f7f\u7528**\u5c0f\u7aef\u5e8f\u7f16\u7801\uff08LittleEndian\uff09**\u3002</p> <p>endian\u5b57\u8282\u5b58\u653e\u6b21\u5e8f\u3002\u6bd4\u5982\u5b57\u82820111\u6709\u4e24\u79cd\u5b58\u653e\u65b9\u5f0f\uff1a0111\u548c1110\u3002</p> <ul> <li>LITTLE-ENDIAN\uff08\u5c0f\u5b57\u8282\u5e8f\u3001\u4f4e\u5b57\u8282\u5e8f\uff09\uff0c\u5373**\u4f4e\u4f4d\u5b57\u8282**\u6392\u653e\u5728\u5185\u5b58\u7684**\u4f4e\u5730\u5740\u7aef**\uff0c\u9ad8\u4f4d\u5b57\u8282**\u6392\u653e\u5728\u5185\u5b58\u7684**\u9ad8\u5730\u5740\u7aef</li> <li>BIG-ENDIAN\uff08\u5927\u5b57\u8282\u5e8f\u3001\u9ad8\u5b57\u8282\u5e8f\uff09\u5219\u76f8\u53cd</li> </ul> <p>\u603b\u4e4b\uff0c\u4f4e\u5b57\u8282\u5e8f\u4f4e\u5728\u4f4e\uff0c\u9ad8\u5728\u9ad8\uff1b\u9ad8\u5b57\u8282\u5e8f\u9ad8\u5728\u4f4e\uff0c\u4f4e\u5728\u9ad8\u3002</p> <p>\u4e0d\u540c\u8bed\u8a00\u3001\u4e0d\u540c\u573a\u666f\uff0c\u7f16\u7801\u7aef\u5e8f\u4f1a\u4e0d\u540c</p> <ul> <li>C\u4e0e\u5e73\u53f0\u6709\u5173\uff0cJava\u4f7f\u7528Big-Endian</li> <li>TCP/IP\u5404\u5c42\u534f\u8bae Big-Endian \u5c06\u5b57\u8282\u5e8f\u5b9a\u4e49\u4e3aBig-Endian\uff0c\u56e0\u6b64TCP/IP\u534f\u8bae\u4e2d\u4f7f\u7528\u7684\u5b57\u8282\u5e8f\u901a\u5e38\u79f0\u4e4b\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f</li> </ul> <p>\u800c3dtiles\u4f7f\u7528\u7684\u662f**\u5c0f\u7aef\u5e8f\u7f16\u7801\uff08LittleEndian\uff09**\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/b3dm/#extensionsextras","title":"\u6269\u5c55\u6570\u636e\uff08extensions\uff09\u4e0e\u989d\u5916\u8865\u5145\u4fe1\u606f\uff08extras\uff09","text":"<p>\u65e0\u8bba\u662f\u8981\u7d20\u8868\uff0c\u8fd8\u662f\u6279\u91cf\u8868\uff0c\u90fd\u5141\u8bb8\u5728JSON\u4e2d\u5b58\u50a8\u6269\u5c55\u6570\u636e\uff0c\u4ee5\u6269\u5145\u5f53\u524d\u74e6\u7247\u6a21\u578b\u7684\u529f\u80fd\uff0c\u800c\u5e76\u4e0d\u662f\u5355\u4e00\u7684\u4e00\u4e2a\u4e00\u4e2a\u6a21\u578b\u987a\u5e8f\u5b58\u50a8\u5728\u74e6\u7247\u6587\u4ef6\u3001glb\u4e2d\u3002</p> <p>\u8be6\u7ec6\u5185\u5bb9\u53ef\u67e5\u770b\uff1ahttps://www.cnblogs.com/onsummer/p/14886996.html</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/geometricError/","title":"geometricError","text":"<p>geometricError\u5c31\u662f\u4e00\u4e2a\u5bf9\u8c61\u5916\u5305\u7403\u7684\u76f4\u5f84\uff0c\u4f1a\u6839\u636e\u76f8\u673a\u4f4d\u7f6e\u8ba1\u7b97\u6295\u5f71\u5c4f\u5e55\u6240\u7ad9\u7684\u50cf\u7d20\u5927\u5c0f</p> <p>\u51e0\u4f55\u5ea6\u91cf\u8bef\u5dee\uff0cGeometric Error\uff0c\u7b80\u79f0 GE\uff0c\u662f\u8ba1\u7b97\u673a\u56fe\u5f62\u56fe\u50cf\u5b66\u9886\u57df\u4e2d\u7528\u6765\u63cf\u8ff0\u8ba1\u7b97\u673a\u7ed8\u5236\u7684\u8fd1\u4f3c\u51e0\u4f55\u6a21\u578b\u4e0e\u7406\u60f3\u4e4b\u95f4\u8fd1\u4f3c\u7a0b\u5ea6\u7684\u4e00\u79cd\u5ea6\u91cf\u8bef\u5dee\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/geometricError/#_1","title":"\u793a\u4f8b","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/geometricError/#get_geometric_error","title":"get_geometric_error","text":"<p>https://github.com/fanvanzh/3dtiles osgb23dtile.cpp</p> <pre><code>struct TileBox\n{\nstd::vector&lt;double&gt; max;\nstd::vector&lt;double&gt; min;\nvoid extend(double ratio) {\nratio /= 2;\ndouble x = max[0] - min[0];\ndouble y = max[1] - min[1];\ndouble z = max[2] - min[2];\nmax[0] += x * ratio;\nmax[1] += y * ratio;\nmax[2] += z * ratio;\nmin[0] -= x * ratio;\nmin[1] -= y * ratio;\nmin[2] -= z * ratio;\n}\n};\ndouble get_geometric_error(TileBox&amp; bbox)\n{\nif (bbox.max.empty() || bbox.min.empty())\n{\nLOG_E(\"bbox is empty!\");\nreturn 0;\n}\ndouble max_err = std::max((bbox.max[0] - bbox.min[0]),(bbox.max[1] - bbox.min[1]));\nmax_err = std::max(max_err, (bbox.max[2] - bbox.min[2]));\nreturn max_err / 20.0;\n//     const double pi = std::acos(-1);\n//     double round = 2 * pi * 6378137.0 / 128.0;\n//     return round / std::pow(2.0, lvl );\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/geometricError/#_2","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>Cesium3DTile\u4e2d\u7684getScreenSpaceError\u65b9\u6cd5\u53ca\u516c\u5f0f\u5206\u6790</li> <li>Geometric Error\u4e0eScreen Space Error</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/","title":"3dtiles\u76f8\u5173\u5de5\u5177","text":"\u5de5\u5177\u540d \u8bf4\u660e fanvanzh/3dtiles \u529f\u80fd\uff1aosgb-&gt;3dtiles; shapefile-&gt;3dtiles; fbx-&gt;3dtiles\u4ea7\u54c1\u5f62\u5f0f\uff1aC++\u5e93\uff1bexe scially/Cesium3DTilesConverter \u5728fanvanzh/3dtiles\u57fa\u7840\u4e0a\u91cd\u6784\u7684\u7248\u672c b3dm-tile-cs C#\u5e93\uff1b\u529f\u80fd\uff1ab3dm &lt;-&gt; glb gltf-b3dm-convertor JS\u5e93\uff1b\u529f\u80fd\uff1agltf -&gt; b3dm 3d tile content inspector"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/fanvanzh-3dtiles/","title":"Fanvanzh 3dtiles","text":"<p>\u6e90\u4ee3\u7801\uff1ahttps://github.com/fanvanzh/3dtiles</p> <p>\u9879\u76ee\u8bf4\u660e\uff1a3dtiles\u683c\u5f0f\u8f6c\u6362\u5668</p> <ol> <li>\u7531C++\u5b50\u5de5\u7a0b\u63d0\u4f9b\u57fa\u7840\u7684\u51fd\u6570\uff0c\u6700\u7ec8\u7531rust\u7ec4\u88c5\u5e76\u7f16\u5199CUI</li> <li>C++\u4ee3\u7801\u4f9d\u8d56osg\u3001gdal\u3001nlohmann json\u3001stb_image\u4e0etiny_gltf</li> <li>\u4f5c\u8005\u4e0d\u662f\u4e13\u4e1a\u641e\u4e09\u7ef4GIS\uff0c\u56e0\u5076\u5c14\u9700\u8981\u5c55\u793a3D Tiles\uff0c\u4e00\u65f6\u627e\u4e0d\u5230\u5de5\u5177\uff0c\u4e8e\u662f\u6709\u4e86\u8fd9\u4e2a\u5de5\u5177</li> </ol> <p>\u4f7f\u7528\u8bb0\u5f55</p> <ol> <li>\u6253\u5f00<code>vs/vs/sln</code>\uff0c\u5207\u6362\u81f3release\u3001x64\u5373\u53ef\u7f16\u8bd1\u6210\u529f\uff0c\u751f\u6210\u4e863dtile.dll</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/fanvanzh-3dtiles/#_1","title":"\u6e90\u7801\u9605\u8bfb","text":"<p>src\u76ee\u5f55\uff0c\u5305\u542b</p> <ul> <li>C++\u4ee3\u7801</li> <li>rust\u4ee3\u7801</li> </ul> <p>C++\u4ee3\u7801</p> <ul> <li><code>extern.h</code> </li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/fanvanzh-3dtiles/#_2","title":"\u8c03\u8bd5","text":"<p>\u76f8\u5173\u6587\u6863\uff1aHow-to-build</p> <ol> <li>\u4e0b\u8f7dpre-build\u7248\u672c\uff1ahttps://github.com/fanvanzh/3dtiles/releases/download/v0.4/3dtile.zip</li> <li>\u5c06pre-build\u7248\u672c\u89e3\u538b</li> <li>\u6253\u5f00<code>vs/vs.sln</code>\uff0c\u5207\u6362\u81f3debug\u4e0ex64</li> <li>\u53f3\u952e3dtile &gt; \u5c5e\u6027 &gt; \u8c03\u8bd5 &gt; \u547d\u4ee4 &gt; \u8f93\u5165<code>E:\\web3d\\3dtiles\\vs\\x64\\Debug\\3dtile.exe</code></li> <li>\u6253\u65ad\u70b9\uff0c\u8fd0\u884c\u5373\u53ef</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/3dtiles/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/fanvanzh-3dtiles/#_3","title":"\u7f16\u8bd1","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/","title":"CityGML","text":"<p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>https://www.ogc.org/standards/citygml</li> </ol> <p>\u57ce\u5e02\u5730\u7406\u6807\u8bb0\u8bed\u8a00CityGML\uff08City Geography Markup Launguage\uff09\u662f\u4e00\u79cd\u7528\u6765\u8868\u73b0\u57ce\u5e02\u4e09\u7ef4\u5bf9\u8c61\u7684\u901a\u7528\u4fe1\u606f\u6a21\u578b\u3002</p> <ul> <li>\u5b83\u662f\u4e00\u79cd\u57fa\u4e8eXML\u7684\u5f00\u653e\u6570\u636e\u6a21\u578b</li> <li>\u7528\u6765\u5b58\u50a8\u548c\u4ea4\u6362\u4e09\u7ef4\u57ce\u5e02\u6a21\u578b</li> <li>CityGML \u5728 Geography Markup Language 3 (GML3)\u7684\u57fa\u7840\u4e0a\u5b9e\u73b0\u3002GML3 \u662f Open Geospatial Consortium (OGC)\u548c ISO TC211 \u8054\u5408\u8d77\u8349\u7684\u53ef\u6269\u5c55\u7684\u7a7a\u95f4\u4fe1\u606f\u4ea4\u6362\u56fd\u9645\u6807\u51c6</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#_1","title":"\u7b80\u4ecb","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#xml","title":"\u57fa\u4e8eXML","text":"<p>CityGML \u4ee5 XML \u4f5c\u4e3a\u5b58\u50a8\u548c\u4ea4\u6362\u7684\u6570\u636e\u683c\u5f0f\uff0c\u5176\u6587\u6863\u9075\u5faa XML \u89c4\u8303\u3002 XML\u7ed3\u6784\u901a\u5e38\u7528**\u67b6\u6784\u6587\u4ef6(.xsd)\u548c\u5b9e\u4f8b\u6587\u4ef6(.xml)**\u8868\u793a\uff0c\u524d\u8005\u5b9a\u4e49\u6a21\u578b\u89c4\u5219\uff0c\u540e\u8005\u5305\u542b\u5177\u4f53\u6570\u636e\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#_2","title":"\u5386\u53f2","text":"<ol> <li>\u4ece2002\u5e74\u8d77Special Interest Group 3D (SIG 3D)\u7684\u6210\u5458\u4eec\u5c31\u5f00\u59cb\u5f00\u53d1CityGML\uff0c\u8fd9\u4e2a\u7ec4\u7ec7\u7531\u5fb7\u56fd\u7684 Geodata Infrastructure North-Rhine Westphalia (GDI NRW)\u53d1\u8d77</li> <li>2009 \u5e74 8 \u6708\uff0cCityGML \u4f1a\u6210\u4e3a OGC \u7684\u6807\u51c6</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#sig3d","title":"SIG3D\u7ec4\u7ec7","text":"<p>SIG3D \u662f\u4e00\u4e2a\u5f00\u653e\u7684\u7ec4\u7ec7\uff0c\u5305\u542b\u4e86\u8d85\u8fc7 70 \u5bb6\u516c\u53f8\u3001\u653f\u5e9c\u673a\u6784\u3001\u7814\u7a76\u673a\u6784\u7b49\uff0c\u81f4\u529b\u4e8e 3D \u6a21\u578b\u4e92\u64cd\u4f5c\u53ca\u53ef\u89c6\u5316\u65b9\u9762\u7684\u6280\u672f\u5f00\u53d1\u548c\u5546\u4e1a\u62d3\u5c55\u3002SIG3D \u6700\u8fd1\u7684\u53e6\u5916\u4e00\u4e2a\u5de5\u4f5c\u6210\u679c\u662f Web 3D Service\uff08W3DS\uff09\u8349\u6848\uff0c\u5373\u4e92\u8054\u7f51\u4e09\u7ef4\u670d\u52a1\u7684\u6807\u51c6\uff0c\u5df2\u7ecf\u8fdb\u5165\u4e86OGC \u7684\u8ba8\u8bba\u9636\u6bb5(OGC Doc.No. 05-002)</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#_3","title":"\u76ee\u7684","text":"<p>\u5f00\u53d1 CityGML \u7684\u76ee\u7684\u5c31\u662f\u8981\u5f97\u5230\u4e00\u4e2a\u80fd\u591f\u5728**\u4e0d\u540c\u5e94\u7528\u4e4b\u95f4\u5171\u4eab\u7684\u901a\u7528\u6a21\u578b**\uff0c\u7528\u4e8e\u5b9a\u4e49\u57fa\u672c\u5b9e\u4f53\u3001\u5c5e\u6027\u53ca\u5176\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> <ul> <li>\u683c\u5916\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4e86\u964d\u4f4e\u4e09\u7ef4\u57ce\u5e02\u6a21\u578b\u7684\u7ef4\u62a4\u6210\u672c\uff0c\u4f7f\u5f97\u5c06\u540c\u4e00\u4efd\u6570\u636e\u51fa\u552e\u7ed9\u4e0d\u540c\u7684\u5e94\u7528\u9886\u57df\u6210\u4e3a\u53ef\u80fd\u3002\u76ee\u6807\u5e94\u7528\u9886\u57df\u5305\u62ec\uff1a\u57ce\u5e02\u89c4\u5212\u3001\u5efa\u7b51\u8bbe\u8ba1\u3001\u89c2\u5149\u65c5\u6e38\u3001\u73af\u5883\u4eff\u771f\u3001\u7535\u4fe1\u3001\u707e\u96be\u7ba1\u7406\u3001\u56fd\u5bb6\u5b89\u5168\u3001\u8f66\u8f86\u53ca\u6b65\u884c\u5bfc\u822a\u3001\u8bad\u7ec3\u6a21\u62df\u7b49</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#_4","title":"\u4f5c\u7528","text":"<p>\u4f20\u7edf\u7684\u4e09\u7ef4 GIS \u4e3b\u8981\u9762\u5411\u53ef\u89c6\u5316\uff0c\u5404\u4e2a\u7cfb\u7edf\u4f7f\u7528\u5404\u81ea\u4e13\u6709\u7684\u6570\u636e\u683c\u5f0f\uff0c\u7cfb\u7edf\u95f4\u6570\u636e\u5171\u4eab\u56f0\u96be\uff0c\u96be\u4ee5\u5b9e\u73b0\u4e92\u64cd\u4f5c\u3002CityGML \u7684\u63a8\u51fa\u4e3b\u8981\u662f\u4e3a\u4e86\u514b\u670d\u4f20\u7edf\u4e09\u7ef4 GIS \u7684\u5f0a\u7aef\u3002</p> <p>CityGML \u4f5c\u4e3a\u4e00\u79cd\u6807\u51c6\u7684\u5efa\u6a21\u8bed\u8a00</p> <ul> <li>\u89e3\u51b3\u4e86\u4e09\u7ef4GIS \u7f3a\u4e4f\u6a21\u578b\u6807\u51c6\u7684\u95ee\u9898\uff0c\u4f7f\u5f97\u5404\u4e2a\u7cfb\u7edf\u95f4\u4e92\u64cd\u4f5c\u5b9e\u73b0\u6210\u4e3a\u53ef\u80fd</li> <li>\u6b64\u5916 CityGML\u662f\u4e00\u79cd\u57fa\u4e8e XML \u683c\u5f0f\u7684\u6570\u636e\u4ea4\u6362\u6807\u51c6\uff0c\u4fbf\u4e8e\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\uff0c\u8fd9\u6837\u5c31\u4f7f\u5f97\u5927\u89c4\u6a21\u6570\u636e\u7684\u4e09\u7ef4 GIS \u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u670d\u52a1\u5b9e\u65f6\u83b7\u53d6\u6570\u636e</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#_5","title":"\u7279\u70b9","text":"<p>CityGML \u5b9a\u4e49\u4e86\u57ce\u5e02\u4e2d\u7684\u5927\u90e8\u5206\u5730\u7406\u5bf9\u8c61\u7684\u5206\u7c7b\u53ca\u5176\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u800c\u4e14\u5145\u5206\u5730\u8003\u8651\u4e86\u533a\u57df\u6a21\u578b\u7684\u51e0\u4f55\u3001\u62d3\u6251\u3001\u8bed\u4e49\u3001\u5916\u89c2\u5c5e\u6027\u7b49\u3002</p> <ul> <li>\u5176\u4e2d\u5305\u62ec\u4e86\u4e3b\u9898\u5206\u7c7b\u4e4b\u95f4\u7684\u5c42\u6b21\u3001\u805a\u5408\u3001\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb\u3001\u7a7a\u95f4\u5c5e\u6027\u7b49\u3002</li> <li>\u8fd9\u4e9b\u4e13\u9898\u4fe1\u606f\u4e0d\u4ec5\u4ec5\u662f\u4e00\u79cd\u56fe\u5f62\u4ea4\u6362\u683c\u5f0f\uff0c\u800c\u4e14\u5141\u8bb8\u5c06\u865a\u62df 3D \u57ce\u5e02\u6a21\u578b\u90e8\u7f72\u5230\u5404\u79cd\u4e0d\u540c\u5e94\u7528\u4e2d\u7684\u590d\u6742\u5206\u6790\u4efb\u52a1\uff0c\u4f8b\u5982\u4eff\u771f\u3001\u57ce\u5e02\u6570\u636e\u6316\u6398\u3001\u8bbe\u65bd\u7ba1\u7406\u3001\u4e3b\u9898\u67e5\u8be2\u7b49\u3002</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#lod","title":"\u4e94\u5c42LOD\u6a21\u578b","text":"<p>CityGML \u652f\u6301\u4e94\u79cd\u4e0d\u540c\u7684 LOD\uff08\u7ec6\u8282\u5c42\u6b21\uff09\u6a21\u578b</p> <ol> <li>LOD0 \u662f\u6700\u7c97\u7cd9\u7684\u5c42\u6b21\uff0c\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a 2.5 \u7ef4\u7684\u5730\u5f62\u6a21\u578b\uff0c\u8986\u76d6\u4e0a\u9065\u611f\u5f71\u50cf\u6216\u56fe\u7247</li> <li>LOD1 \u662f\u6307\u6ca1\u6709\u5c4b\u9876\u7684\u201c\u697c\u5757\u201d\u6a21\u578b\uff08block model\uff09</li> <li>LOD2 \u662f\u6307\u5305\u542b\u7eb9\u7406\u548c\u5c4b\u9876\u7684\u7c97\u6a21\uff0c\u690d\u88ab\u5728\u8fd9\u5c42\u4e5f\u53ef\u4ee5\u8868\u793a</li> <li>LOD3 \u662f\u6307\u5305\u542b\u66f4\u9ad8\u5206\u8fa8\u7387\u7eb9\u7406\u548c\u66f4\u591a\u7ec6\u8282\u7684\u5efa\u7b51\u7269\u6a21\u578b\u3001\u66f4\u7cbe\u7ec6\u7684\u690d\u88ab\u6a21\u578b\u4ee5\u53ca\u4ea4\u901a\u8fd0\u8f93\u6a21\u578b</li> <li>LOD4 \u662f\u6700\u8be6\u7ec6\u7684\u5c42\u6b21\uff0c\u5b83\u5728 LOD3\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86 3D \u7269\u4f53\u7684\u5185\u90e8\u7ed3\u6784\uff0c\u5982\u5efa\u7b51\u7269\u4e2d\u7684\u697c\u68af\u3001\u8fc7\u9053\u3001\u5bb6\u5177\u7b49</li> </ol> <p></p> <p>\u6bcf\u4e2a\u5efa\u7b51\u7269\u90fd\u53ef\u4ee5\u7528\u4e0d\u540c\u7684 LOD\uff08\u5c42\u6b21\u7ec6\u8282\uff09\u6765\u63cf\u8ff0\uff0c\u4e0d\u540c\u7684\u5c42\u6b21\u7ec6\u8282\u5176\u6a21\u578b\u8868\u793a\u5404\u6709\u4e0d\u540c\u3002</p> <ul> <li>\u5982\uff0c\u5bf9\u4e8e LOD4 \u6a21\u578b\uff0c\u5efa\u7b51\u7269\u7531\u591a\u4e2a\u623f\u95f4\u7ec4\u6210\uff0c\u5404\u4e2a\u623f\u95f4\u53c8\u7531\u4e0d\u540c\u7684\u5899\u9762\u3001\u5c4b\u9876\u7b49\u7ec4\u6210\u3002</li> <li>\u540c\u65f6 CityGML \u662f\u4e00\u79cd\u8bed\u4e49\u4e0e\u51e0\u4f55\u534f\u540c\u8868\u793a\u7684\u6a21\u578b\uff0c\u4ee5\u4e0a\u63cf\u8ff0\u7684\u6a21\u578b\u7ec4\u6210\u90fd\u6709\u5176\u5bf9\u5e94\u7684\u51e0\u4f55\u8868\u793a\uff0c\u5982\uff1a  BuildingPart\uff08\u5efa\u7b51\u7269\u90e8\u5206\uff09\u5bf9\u5e94 CompositeSolids\uff08\u7ec4\u5408\u51e0\u4f55\u4f53\uff09\u3001Room\uff08\u623f\u95f4\uff09\u5bf9\u5e94 Solid\uff08\u51e0\u4f55\u5b9e\u4f53\uff09\u3001WallSurface\uff08\u5899\u9762\uff09\u5bf9\u5e94 CompositeSurface\uff08\u7ec4\u5408\u8868\u9762\uff09\u7b49\u3002</li> </ul> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#_6","title":"\u8bed\u4e49/\u51e0\u4f55\u534f\u540c\u8868\u793a\u6a21\u578b","text":"<p>CityGML \u6a21\u578b\u8bbe\u8ba1\u7684\u4e00\u4e2a\u91cd\u8981\u539f\u5219\u5c31\u662f\u8bed\u4e49\u3001\u51e0\u4f55\u6a21\u578b\u7684\u534f\u540c\u3002\u5728\u8bed\u4e49\u5c42\u9762\u4e0a\u8bf4\uff0c\u771f\u5b9e\u4e16\u754c\u5b9e\u4f53\u90fd\u662f\u901a\u8fc7\u5982\u5efa\u7b51\u7269\u3001\u5899\u9762\u3001\u623f\u5c4b\u7b49\u8981\u7d20\u8fdb\u884c\u63cf\u8ff0\uff0c\u540c\u65f6\u8fd9\u4e9b\u63cf\u8ff0\u4e2d\u4e5f\u5305\u542b\u4e86\u8981\u7d20\u95f4\u7684\u5173\u7cfb\uff0c\u56e0\u6b64\u8981\u7d20\u95f4\u7684\u5173\u7cfb\u53ea\u80fd\u5728\u8bed\u4e49\u5c42\u9762\u4e0a\u8868\u8ff0\uff0c\u4e0d\u6d89\u53ca\u51e0\u4f55\u62d3\u6251\u4fe1\u606f\u3002\u800c\u5728\u7a7a\u95f4\u5c42\u9762\u4e0a\uff0c\u7269\u4f53\u662f\u901a\u8fc7\u7a7a\u95f4\u4f4d\u7f6e\u548c\u8303\u56f4\u7b49\u4fe1\u606f\u63cf\u8ff0\u7684\u3002CityGML \u5305\u542b\u4e86\u8bed\u4e49\u3001\u51e0\u4f55\u4e24\u65b9\u9762\u7684\u4fe1\u606f\uff0c\u5e76\u4e14\u8bed\u4e49\u3001\u51e0\u4f55\u4e4b\u95f4\u662f\u76f8\u4e92\u8054\u7cfb\u7684\uff0c\u5bf9\u540c\u4e00\u4e2a\u6a21\u578b\u534f\u540c\u8868\u793a\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#citygml","title":"CityGML\u7684\u6a21\u5757","text":"<p>CityGML \u91c7\u7528\u6a21\u5757\u5316\u6784\u5efa\u601d\u60f3\uff0c\u7531\u4e00\u4e2a\u6838\u5fc3\u6a21\u5757\u548c\u5341\u4e00\u4e2a\u6269\u5c55\u6a21\u5757\u7ec4\u6210</p> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#application-domain-extensions-ade","title":"\u5e94\u7528\u9886\u57df\u6269\u5c55\uff08Application Domain Extensions, ADE\uff09","text":"<p>\u5e94\u7528\u9886\u57df\u6269\u5c55\uff08Application Domain Extensions, ADE\uff09\uff0c\u5141\u8bb8\u5bf9\u73b0\u6709\u6a21\u578b\u8fdb\u884c\u6269\u5c55\u3002\u8fd9\u4e9b\u6269\u5c55\u5305\u62ec\u5bf9\u73b0\u6709\u7684 CityGML \u5bf9\u8c61\u5b9a\u4e49\u65b0\u7684\u5c5e\u6027\u4ee5\u53ca\u5efa\u7acb\u65b0\u7684\u5bf9\u8c61\u6a21\u578b\u3002ADE \u88ab\u5b9a\u4e49\u4e3a\u62e5\u6709\u81ea\u8eab\u547d\u540d\u7a7a\u95f4\u7684 XML  Schema\uff0c\u8fd9\u6837\u7684\u597d\u5904\u662f\u53ef\u4ee5\u6b63\u5f0f\u5730\u5bf9CityGML \u8fdb\u884c\u6269\u5c55\u3002ADE \u53ef\u4ee5\u88ab\u7279\u6b8a\u5e94\u7528\u9886\u57df\u611f\u5174\u8da3\u7684\u4fe1\u606f\u8005\u5b9a\u4e49\uff0c\u5e76\u4e14\u53ef\u4ee5\u5bf9\u540c\u4e00\u4e2a\u6570\u636e\u96c6\u5b9a\u4e49\u591a\u4e2a ADE\u3002 </p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#_7","title":"\u590d\u6742\u6027","text":"<p>CityGML \u4f5c\u4e3a\u4e09\u7ef4\u57ce\u5e02\u6a21\u578b\u7684\u6807\u8bb0\u8bed\u8a00\uff0c\u5177\u6709\u975e\u5e38\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u7684\u590d\u6742\u6027\u4f53\u73b0\u5728\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#_8","title":"\u7528\u5927\u91cf\u7684\u8bed\u4e49\u6a21\u578b\u6765\u8868\u793a\u57ce\u5e02\u62d3\u6251\u5bf9\u8c61","text":"<p>CityGML \u7528\u5927\u91cf\u7684\u8bed\u4e49\u6a21\u578b\u6765\u8868\u793a\u57ce\u5e02\u62d3\u6251\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u6a21\u578b\u5404\u81ea\u5177\u6709\u4e0d\u540c\u7684\u7ed3\u6784\uff0c\u8868\u73b0\u5728\u7ec4\u6210\u8fd9\u4e9b\u6a21\u578b\u7684\u8981\u7d20\u4e4b\u95f4\u4e0d\u540c\u7684\u7ec4\u5408\u3001\u805a\u5408\u5173\u7cfb\u3001\u8981\u7d20\u5177\u6709\u4e0d\u540c\u7684\u5c5e\u6027\u7b49\u3002\u6ca1\u6709\u4e00\u4e2a\u6807\u51c6\u7684\u8bed\u4e49\u6a21\u578b\u4f7f\u5f97\u5404\u4e2a\u8bed\u4e49\u6a21\u578b\u80fd\u9075\u5faa\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#_9","title":"\u4ece\u5355\u4e2a\u8bed\u4e49\u6a21\u578b\u7684\u5c42\u9762\u6765\u770b","text":"<p>\u4ece\u5355\u4e2a\u8bed\u4e49\u6a21\u578b\u7684\u5c42\u9762\u6765\u770b\u3002\u9996\u5148\uff0c\u8bed\u4e49\u6a21\u578b\u57fa\u4e8e\u7ee7\u627f\u3001\u7ec4\u5408\u7684\u7ed3\u6784\uff0c\u6709\u53ef\u80fd\u5bfc\u81f4\u5f88\u6df1\u7684\u8fde\u7ed3\u6df1\u5ea6\uff1b\u5176\u6b21\uff0c\u4e00\u4e2a\u6a21\u578b\u6709\u591a\u4e2a\u7ec6\u8282\u5c42\u6b21\uff0c\u9700\u8981\u7ef4\u62a4\u5b83\u4eec\u4e4b\u95f4\u7684\u94fe\u63a5\uff1b\u7b2c\u4e09\uff0c\u4e00\u4e2a\u6a21\u578b\u53ef\u80fd\u540c\u65f6\u7528\u591a\u79cd\u51e0\u4f55\u6a21\u578b\u8868\u793a\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#_10","title":"\u4ece\u5355\u4e2a\u51e0\u4f55\u6a21\u578b\u5c42\u9762\u6765\u770b","text":"<p>\u4ece\u5355\u4e2a\u51e0\u4f55\u6a21\u578b\u5c42\u9762\u6765\u770b\u3002CityGML \u7684\u51e0\u4f55\u6a21\u578b\u8bed\u4e49\u6a21\u578b\u662f\u534f\u540c\u7684\uff0c\u56e0\u6b64\u4e5f\u5177\u6709\u590d\u6742\u7684\u7ee7\u627f\u548c\u7ec4\u5408\u5173\u7cfb\uff0c\u800c\u4e14\u5404\u4e2a\u7ec4\u5408\u5143\u7d20\u53ef\u80fd\u8fd8\u8d4b\u4e88\u4e0d\u540c\u7684\u5916\u89c2\u7eb9\u7406\u548c\u6750\u8d28\u4fe1\u606f\u7b49\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/CityGML/#_11","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u8bb8\u5a07\u9f99. \u57fa\u4e8eCityGML\u7684\u4e09\u7ef4GIS\u5173\u952e\u6280\u672f\u7814\u7a76[D]. \u56fd\u9632\u79d1\u5b66\u6280\u672f\u5927\u5b66, 2010.</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/NetCDF/","title":"NetCDF","text":"<p>NetCDF (Network Common Data Form\uff0c\u7f51\u7edc\u901a\u7528\u6570\u636e\u683c\u5f0f)\u662f\u4e00\u7ec4\u8f6f\u4ef6\u5e93\u548c\u72ec\u7acb\u4e8e\u673a\u5668\u7684\u6570\u636e\u683c\u5f0f</p> <ul> <li>\u652f\u6301\u9762\u5411\u6570\u7ec4\u7684\u79d1\u5b66\u6570\u636e\u7684\u521b\u5efa\u3001\u8bbf\u95ee\u4e0e\u5171\u4eab</li> <li>\u5b83\u4e5f\u662f\u5171\u4eab\u79d1\u5b66\u6570\u636e\u7684\u793e\u533a\u6807\u51c6</li> <li>netcdf\u6587\u4ef6\u5f00\u59cb\u7684\u76ee\u7684\u662f\u7528\u4e8e\u5b58\u50a8\u6c14\u8c61\u79d1\u5b66\u4e2d\u7684\u6570\u636e\uff0c\u73b0\u5728\u5df2\u7ecf\u6210\u4e3a\u8bb8\u591a\u6570\u636e\u91c7\u96c6\u8f6f\u4ef6\u7684\u751f\u6210\u6587\u4ef6\u7684\u683c\u5f0f</li> <li>\u9879\u76ee\u4e3b\u9875\u7531University Corporation for Atmospheric Research (UCAR)\u7684Unidata\u9879\u76ee\u6258\u7ba1</li> </ul> <p>\u76f8\u5173\u7f51\u7ad9</p> <ol> <li>NetCDF\u7528\u6237\u6307\u5357</li> <li>Network Common Data Form (NetCDF)</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/NetCDF/#_1","title":"\u6587\u4ef6\u5185\u5bb9","text":"<p>\u4ece\u6570\u5b66\u4e0a\u6765\u8bf4\uff0cnetcdf\u5b58\u50a8\u7684\u6570\u636e\u5c31\u662f\u4e00\u4e2a\u591a\u81ea\u53d8\u91cf\u7684\u5355\u503c\u51fd\u6570\u3002</p> <ul> <li>\u7528\u516c\u5f0f\u6765\u8bf4\u5c31\u662ff(x,y,z,\u2026)=value, \u51fd\u6570\u7684\u81ea\u53d8\u91cfx,y,z\u7b49\u5728netcdf\u4e2d\u53eb\u505a\u7ef4(dimension)\u6216\u5750\u6807\u8f74(axix)</li> <li>\u51fd\u6570\u503cvalue\u5728netcdf\u4e2d\u53eb\u505a\u53d8\u91cf(Variables)</li> <li>\u800c\u81ea\u53d8\u91cf\u548c\u51fd\u6570\u503c\u5728\u7269\u7406\u5b66\u4e0a\u7684\u4e00\u4e9b\u6027\u8d28\uff0c\u6bd4\u5982\u8ba1\u91cf\u5355\u4f4d(\u91cf\u7eb2)\u3001\u7269\u7406\u5b66\u540d\u79f0\u7b49\u7b49\uff0c\u5728netcdf\u4e2d\u5c31\u53eb\u5c5e\u6027(Attributes)</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/NetCDF/#_2","title":"\u53d8\u91cf","text":"<p>netcdf\u4e2d\u7684\u53d8\u91cf\u5c31\u662f\u4e00\u4e2aN\u7ef4\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u7ef4\u6570\u5c31\u662f\u5b9e\u9645\u95ee\u9898\u4e2d\u7684\u81ea\u53d8\u91cf\u4e2a\u6570\uff0c\u6570\u7ec4\u7684\u503c\u5c31\u662f\u89c2\u6d4b\u5f97\u5230\u7684\u7269\u7406\u503c\u3002\u53d8\u91cf\uff08\u6570\u7ec4\u503c\uff09\u5728netcdf\u4e2d\u7684\u5b58\u50a8\u7c7b\u578b\u6709\u516d\u79cd\uff0cascii\u5b57\u7b26(char) ,\u5b57\u8282(byte), \u77ed\u6574\u578b(short), \u6574\u578b(int), \u6d6e\u70b9(float), \u53cc\u7cbe\u5ea6(double)\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/NetCDF/#_3","title":"\u7ef4","text":"<p>\u4e00\u4e2a\u7ef4\u5bf9\u5e94\u7740\u51fd\u6570\u4e2d\u7684\u67d0\u4e2a\u81ea\u53d8\u91cf\uff0c\u6216\u8005\u8bf4\u51fd\u6570\u56fe\u8c61\u4e2d\u7684\u4e00\u4e2a\u5750\u6807\u8f74\uff0c\u5728\u7ebf\u6027\u4ee3\u6570\u4e2d\u5c31\u662f\u4e00\u4e2aN\u7ef4\u5411\u91cf\u7684\u4e00\u4e2a\u5206\u91cf\uff08\u8fd9\u4e5f\u662f\u7ef4\u8fd9\u4e2a\u540d\u79f0\u7684\u7531\u6765\uff09\u3002</p> <p>\u5728netcdf\u4e2d\uff0c\u4e00\u4e2a\u7ef4\u5177\u6709\u4e00\u4e2a\u540d\u5b57\u548c\u8303\u56f4\uff08\u6216\u8005\u8bf4\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u6570\u5b66\u4e0a\u6240\u8bf4\u7684\u5b9a\u4e49\u57df\uff0c\u53ef\u4ee5\u662f\u79bb\u6563\u7684\u70b9\u96c6\u5408\u6216\u8005\u8fde\u7eed\u7684\u533a\u95f4\uff09\u3002\u5728netcdf\u4e2d,\u7ef4\u7684\u957f\u5ea6\u57fa\u672c\u90fd\u662f\u6709\u9650\u7684\uff0c\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u5177\u6709\u65e0\u9650\u957f\u5ea6\u7684\u7ef4\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/NetCDF/#_4","title":"\u5c5e\u6027","text":"<p>\u5c5e\u6027\u5bf9\u53d8\u91cf\u503c\u548c\u7ef4\u7684\u5177\u4f53\u7269\u7406\u542b\u4e49\u7684\u6ce8\u91ca\u6216\u8005\u8bf4\u89e3\u91ca\u3002\u56e0\u4e3a\u53d8\u91cf\u548c\u7ef4\u5728netcdf\u4e2d\u90fd\u53ea\u662f\u65e0\u91cf\u7eb2\u7684\u6570\u5b57\uff0c\u8981\u60f3\u8ba9\u4eba\u4eec\u660e\u767d\u8fd9\u4e9b\u6570\u5b57\u7684\u5177\u4f53\u542b\u4e49\uff0c\u5c31\u5f97\u9760\u5c5e\u6027\u8fd9\u4e2a\u5bf9\u8c61\u4e86\u3002 \u5728netcdf\u4e2d\uff0c\u5c5e\u6027\u7531\u4e00\u4e2a\u5c5e\u6027\u540d\u548c\u4e00\u4e2a\u5c5e\u6027\u503c\uff08\u4e00\u822c\u4e3a\u5b57\u7b26\u4e32\uff09\u7ec4\u6210\u3002</p> <p>\u6bd4\u5982\uff0c\u5728\u67d0\u4e2acdl\u6587\u4ef6(cdl\u6587\u4ef6\u7684\u5177\u4f53\u683c\u5f0f\u5728\u4e0b\u4e00\u8282\u4e2d\u8bb2\u8ff0)\u4e2d\u6709\u8fd9\u6837\u7684\u4ee3\u7801\u6bb5</p> <ul> <li>\u524d\u9762\u7684temperature\u662f\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\u53d8\u91cf\uff08Variable\uff09\uff0c\u5373\u6e29\u5ea6</li> <li>\u5192\u53f7\u540e\u9762\u7684units\u5c31\u662f\u5c5e\u6027\u540d\uff0c\u8868\u793a\u7269\u7406\u5355\u4f4d\uff0c=\u540e\u9762\u7684\u5c31\u662funits\u8fd9\u4e2a\u5c5e\u6027\u7684\u503c\uff0c\u4e3a\u201ccelsius\u201d \uff0c\u5373\u6444\u6c0f\u5ea6</li> <li>\u6574\u4e2a\u4e00\u884c\u4ee3\u7801\u7684\u610f\u601d\u5c31\u662f\u6e29\u5ea6\u8fd9\u4e2a\u7269\u7406\u91cf\u7684\u5355\u4f4d\u4e3acelsius\uff0c\u5f88\u597d\u7406\u89e3\u3002 <pre><code>temperature:units = \"celsius\";\n</code></pre></li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/NetCDF/#cdl","title":"CDL\u7ed3\u6784","text":"<p>CDL\u5168\u79f0\u4e3anetwork Common data form Description Language\uff0c\u5b83\u662f\u7528\u6765\u63cf\u8ff0netcdf\u6587\u4ef6\u7684\u7ed3\u6784\u7684\u4e00\u79cd\u8bed\u6cd5\u683c\u5f0f\u3002</p> <p>\u793a\u4f8b\uff1anetcdf\u6559\u7a0b 2.1  The simple xy Example</p> <ol> <li>\u7ef4\uff0c\u4ee5<code>dimensions:</code>\u5f00\u5934\uff0c\u5b9a\u4e49\u4e86xy\u4e24\u4e2a\u8f74\uff0c\u5e76\u6807\u660e\u4e86\u4e2a\u6570</li> <li>\u53d8\u91cf\uff0c\u4ee5<code>variables:</code>\u5f00\u5934\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4ee5x\u8f74\u548cy\u8f74\u4e3a\u81ea\u53d8\u91cf\u7684\u51fd\u6570data\uff0c\u6570\u5b66\u516c\u5f0f\u5c31\u662ff(x,y)=data</li> <li>\u6570\u636e\u7684\u5b9a\u4e49\uff0c\u4ee5<code>data:</code>\u5f00\u5934\uff0c<code>data=...</code>\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u7684\u6570\u7ec4\uff08\u4e00\u5171\u6709\u4e24\u884c\uff09</li> <li>x=0, y=0\uff0cdata=f(x,y)=0</li> <li>x=0, y=1, data=f(x,y)=1</li> <li>x=5,y=11, data=f(x,y)=71 <pre><code>netcdf simple_xy {\ndimensions:\nx = 6 ;\ny = 12 ;\nvariables:\nint data(x, y) ;\ndata:\ndata =\n0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\n12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\n24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71 ;\n}\n</code></pre></li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/NetCDF/#_5","title":"\u683c\u5f0f\u8bf4\u660e","text":"<p>NetCDF \u5e93\u652f\u6301 NetCDF \u6587\u4ef6\u7684\u591a\u79cd\u4e0d\u540c\u4e8c\u8fdb\u5236\u683c\u5f0f\uff1a</p> <ul> <li>Classic\u683c\u5f0f\u5728\u7b2c\u4e00\u4e2a NetCDF \u7248\u672c\u4e2d\u4f7f\u7528\uff0c\u5e76\u4e14\u4ecd\u7136\u662f\u6587\u4ef6\u521b\u5efa\u7684\u9ed8\u8ba4\u683c\u5f0f\u3002</li> <li>64 \u4f4d\u504f\u79fb\u683c\u5f0f\u662f\u5728 3.6.0 \u7248\u672c\u4e2d\u5f15\u5165\u7684\uff0c\u5b83\u652f\u6301\u66f4\u5927\u7684\u53d8\u91cf\u548c\u6587\u4ef6\u5927\u5c0f\u3002</li> <li>NetCDF-4/HDF5 \u683c\u5f0f\u662f\u5728 4.0 \u7248\u672c\u4e2d\u5f15\u5165\u7684\uff1b\u5b83\u662f HDF5 \u6570\u636e\u683c\u5f0f\uff0c\u6709\u4e00\u4e9b\u9650\u5236\u3002</li> <li>HDF4 SD \u683c\u5f0f\u652f\u6301\u53ea\u8bfb\u8bbf\u95ee\u3002</li> <li>\u652f\u6301 CDF5 \u683c\u5f0f\uff0c\u4e0e parallel-netcdf \u9879\u76ee\u534f\u8c03\u3002</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/NetCDF/#unidata","title":"Unidata","text":"<p>Unidata\u7a0b\u5e8f\u4e2d\u5fc3\u652f\u6301\u548c\u7ef4\u62a4C\u3001C++\u3001Java\u548cForton\u7684NetCDF\u7f16\u7a0b\u63a5\u53e3\u3002\u5b83\u7684\u7f16\u7a0b\u63a5\u53e3\u4e5f\u53ef\u7528\u4e8ePython\u3001IDL\u3001Matlab\u3001R\u3001Ruby\u548cPerl\u7b49\u8bed\u8a00\u3002 \u53ef\u53c2\u8003\u94fe\u63a5\uff1aunidata netcdf \u4ed3\u5e93\u5730\u5740\uff1ahttps://github.com/Unidata/netcdf-cxx4</p> <p>\u7f16\u7a0b\u63a5\u53e3\u7684\u4f18\u70b9\uff1a</p> <ul> <li>Self-Describing\uff1a\u5305\u542b\u5143\u6570\u636e\uff0c\u4ee5\u5bf9\u81ea\u5df1\u8fdb\u884c\u63cf\u8ff0</li> <li>Portable\uff1a\u8ba1\u7b97\u673a\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684\u65b9\u5f0f\u5b58\u50a8\u6574\u6570\u3001\u5b57\u7b26\u548c\u6d6e\u70b9\u6570\u6765\u8bbf\u95eeNetCDF\u6587\u4ef6</li> <li>Scalable\uff1a\u53ef\u4ee5\u901a\u8fc7NetCDF\u63a5\u53e3\u6709\u6548\u5730\u8bbf\u95ee\u5404\u79cd\u683c\u5f0f\u7684\u5927\u578b\u6570\u636e\u96c6\u7684\u5c0f\u5b50\u96c6\uff0c\u751a\u81f3\u53ef\u4ee5\u4ece\u8fdc\u7a0b\u670d\u52a1\u5668\u8bbf\u95ee</li> <li>Appendable\uff1a\u53ef\u4ee5\u5c06\u6570\u636e\u9644\u52a0\u5230\u7ed3\u6784\u4e2d\uff0c\u800c\u65e0\u9700\u590d\u5236\u6570\u636e\u96c6\u6216\u91cd\u65b0\u5b9a\u4e49\u5176\u7ed3\u6784</li> <li>Sharable\uff1a\u4e00\u4e2a\u5199\u5165\u5668\u548c\u591a\u4e2a\u8bfb\u53d6\u5668\u53ef\u540c\u65f6\u8bbf\u95ee\u4e00\u4e2aNetCDF\u6587\u4ef6</li> <li>Archivable\uff1a\u652f\u6301\u65e9\u671fNetCDF\u683c\u5f0f</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/NetCDF/#_6","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>Network Common Data Form (NetCDF)</li> <li>wiki NetCDF</li> <li>NC\u6587\u4ef6\u8bfb\u5199\u65b9\u5f0f</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/m3d/","title":"m3d","text":"<p>\u76f8\u5173\u6587\u7ae0</p> <ol> <li>\u6807\u51c6\u5f15\u9886 \u9ad8\u8d28\u53d1\u5c55\uff01\u89e3\u8bfb\u300a\u5168\u7a7a\u95f4\u4e09\u7ef4\u6a21\u578b\u6570\u636e\u683c\u5f0f\u53ca\u670d\u52a1\u63a5\u53e3\u89c4\u8303\u300b\uff08M3D\uff09 (qq.com)</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/","title":"OSGB\u683c\u5f0f","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/#_1","title":"\u793a\u4f8b","text":"<pre><code>Data\n    - Tile_+000_+000\n        - Tile_+000_+000.osgb\n        - Tile_+000_+000_L17_0.osgb\n        - Tile_+000_+000_L18_00.osgb\n        - \u2026\u2026\n    - Tile_+000_+001\n    - \u2026\u2026\nmetadata.osgb\nmetadata.xml\n</code></pre> <ol> <li>Data\u4e3a\u6570\u636e\u76ee\u5f55\uff0c\u5b83\u5305\u542b\u4e86\u5f88\u591a\u74e6\u7247\u6570\u636e\u3002\u4e00\u4e2a\u74e6\u7247\u662f\u4e00\u4e2aLOD\u6811\u5f62\u7ed3\u6784</li> <li>\u4e00\u4e2a\u74e6\u7247\u4e0b\u5305\u542b\u4e86\u5f88\u591a\u540e\u7f00\u4e3aosgb\u7684\u6587\u4ef6\uff0c\u5176\u6587\u4ef6\u540d\u7684\u524d\u7f00Tile_+000_+000\u548c\u76ee\u5f55\u540d\u79f0\u4e00\u6837\u3002\u540e\u7f00_L17_0\u4ee3\u8868\u5176LOD\u7b49\u7ea7</li> <li><code>`./metadata.osgb</code>\u4e0b\u662f\u4e00\u4e2a\u7d22\u5f15\u6587\u4ef6\uff0c\u5185\u90e8\u94fe\u63a5\u4e86<code>./Data/xx</code>\u4e0b\u7684LOD\u8282\u70b9</li> <li>metadata.xml\u5185\u5305\u542b\u4e86\u6b64\u6570\u636e\u7684\u5750\u6807\u7cfb\u3001\u539f\u70b9\u4fe1\u606f</li> </ol> <p>\u7528\u6237\u4e00\u822c\u9009\u62e9Data/\u76ee\u5f55\u4f5c\u4e3a\u8f93\u5165</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/#osgb","title":"OSGB\u7248\u672c\u95ee\u9898","text":"<p>\u7b2c\u4e00\u8282\uff1aosgb\u5404\u7248\u672c\u4e4b\u95f4\u7684\u8f6c\u6362\uff082.20\u76f4\u64ad\u56de\u653e\uff09_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/","title":"osgb\u683c\u5f0f\u76f8\u5173\u5de5\u5177","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/#osgconv","title":"osgconv","text":"<p>osgconv\u662fOSG\u81ea\u5e26\u7684\u6570\u636e\u8f6c\u6362\u5de5\u5177\uff0c\u53ef\u4ee5\u5c06osgb\uff08\u4e8c\u8fdb\u5236\uff09\u8f6c\u6210osgt\u6216osg\uff08\u6587\u672c\u5f62\u5f0f\uff09\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/#dasviewer","title":"DasViewer","text":"<p>https://www.daspatial.com/cn/dasviewer</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/osgconv/","title":"Osgconv","text":"<p>OSG C++\u7f16\u8bd1\u4e4b\u540e\uff0c\u4f1a\u5728bin\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2aosgconv.exe\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/osgconv/#_1","title":"\u793a\u4f8b","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/osgconv/#_2","title":"\u683c\u5f0f\u8f6c\u6362","text":"<pre><code>M:\\02install\\OpenSceneGraph-3.6.5-VC2022-64-Release\\bin\\osgconv.exe xxx.osgb xxx.osg\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/osgconv/#_3","title":"\u5bfc\u51fa\u7eb9\u7406","text":"<pre><code>osgconv.exe xxx.osgb xxx.osg -O OutputTextureFiles\n</code></pre> <p>osgb\u5185\u90e8\u7684Texuture\uff0c\u4e00\u822c\u90fd\u4f1a\u5305\u542b\u4e00\u4e2a\u8def\u5f84\uff0c\u800cosgconv\u5b83\u76f4\u63a5\u662f\u4fdd\u5b58\u5230\u90a3\u4e2a\u8def\u5f84\u4e0b\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/osgconv/#_4","title":"\u6279\u91cf\u5904\u7406","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/osgconv/#_5","title":"\u6279\u91cf\u683c\u5f0f\u8f6c\u6362","text":"<p>\u793a\u4f8b\uff1a\u8f93\u5165\u4e00\u4e2a\u503e\u659c\u6570\u636e\u7684<code>Data</code>\u76ee\u5f55\uff0c\u6279\u91cf\u8f6c\u6210<code>obj</code>\uff0c \u5e76\u4fdd\u6301\u539f\u6709\u76ee\u5f55\u7ed3\u6784</p> <pre><code>import os\nimport subprocess\nosgconv_exe = r\"M:\\02install\\OpenSceneGraph-3.6.5-VC2022-64-Release\\bin\\osgconv.exe\"\n#\u8f93\u5165\u76ee\u5f55\nworkspace = r\"F:\\data\\osgb\\3D\\Data\\Tile_+000_+000\"\n#\u8f93\u51fa\u76ee\u5f55\nout_dir = r\"F:\\data\\osgb\\osg_tree_demo\\Tile_+000_+000\"\n#\u626b\u63cf\u7684\u683c\u5f0f\nin_ext = \"osgb\" \n#\u8f93\u51fa\u7684\u683c\u5f0f          \nout_ext = \"osg\"\n#\u5176\u4ed6\u9009\u9879   \noptions = f\"-O OutputTextureFiles={out_dir}\"\ndef mk_outputdir(path):\nfolder = None\nif os.path.isdir(path):\nfolder = path\nelse:\nfolder = os.path.dirname(path)\nif os.path.exists(folder):\nreturn\nos.makedirs(folder)\nfor parent,dirnames,filenames in os.walk(workspace):\nfor file in filenames:\nin_fp = os.path.join(parent, file)\nif not in_fp.endswith(in_ext):\ncontinue\nrelative_dir = parent.replace(workspace, \"\")\nout_fp = f\"{out_dir}{relative_dir}\\\\{file}\"\nout_fn, old_ext = os.path.splitext(out_fp)\nout_fp = f\"{out_fn}.{out_ext}\"\nmk_outputdir(out_fp)\n# subprocess.call([\"osgconv.exe\",in_fp, out_fp])\nsubprocess.call(f\"{osgconv_exe} {in_fp} {out_fp} {options}\")\n# print(f\"[Done] {in_fp} -&gt; {out_fp}\" )\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/osgconv/#_6","title":"\u6e90\u7801\u5206\u6790","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/osgconv/#-o","title":"-O\u9009\u9879","text":"<p>\u5c06<code>-O</code>\u4f20\u5165\u7684\u5b57\u7b26\u4e32str\uff0c\u5148\u6309\u7167\u7a7a\u683c\uff08'  '\uff09\u5206\u5272\uff0c\u518d\u6309\u7167\u7b49\u53f7\uff08'='\uff09\u5206\u5272\uff0c\u7136\u540e\u5b58\u5165<code>PluginStringDataMap _pluginStringData;</code>\u5f53\u4e2d\u3002\u5230\u6bcf\u4e2a\u63d2\u4ef6\u4e2d\uff0c\u518d\u5177\u4f53\u4f7f\u7528\uff08\u53c2\u8003\uff1a<code>osgDB::ReaderWriter::Options</code>\uff09</p> <p>\u53ef\u4ee5\u5728\u63d2\u4ef6\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u67e5\u770b\uff0c\u6b64\u63d2\u4ef6\u652f\u6301\u54ea\u4e9b\u53c2\u6570</p> <p></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/osgconv/#_7","title":"\u63d2\u4ef6\u53c2\u6570","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/osgconv/#obj","title":"Obj\u53c2\u6570","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/osgconv/#ply","title":"Ply\u53c2\u6570","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/osgconv/#stl","title":"STL\u8bfb\u53d6\u53c2\u6570","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/osgconv/#dae","title":"DAE\u8bfb\u53d6\u53c2\u6570","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/osgb/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/osgconv/#3ds","title":"3ds\u8bfb\u53d6\u53c2\u6570","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/4-3DGIS%E7%9B%B8%E5%85%B3%E6%A0%BC%E5%BC%8F/spk%20i3s/","title":"Esri Spk i3s","text":"<p>Esri\u91c7\u7528\u7684spk i3s\u6807\u51c6\uff08Indexed 3D Scene\uff09,\u662fEsri\u63a8\u51fa\u7684\u5f00\u653e\u6807\u51c6\u3002I3S\u6807\u51c6\u4f5c\u4e3a\u5f00\u653e\u7684\u6807\u51c6\u5df2\u7ecf\u5f97\u5230\u4e86\u5e02\u9762\u4e0a\u4e3b\u6d41\u7684\u503e\u659c\u6444\u5f71\u6d4b\u91cf\u5efa\u6a21\u8f6f\u4ef6\u7684\u652f\u6301\uff0c\u5982Bentley\u7684 ContextCapture\uff08\u56fd\u5185\u7b80\u79f0\u4e3aSmart 3D\uff09\u3001Pix4D\u3001Vricon\uff0c\u8fd9\u4e9b\u8f6f\u4ef6\u5747\u652f\u6301\u57fa\u4e8eI3S\u6807\u51c6\u7684\u6570\u636e\u683c\u5f0fSPK\u7684\u5bfc\u51fa\uff0c\u751f\u6210\u7684SPK\u683c\u5f0f\u7684\u6a21\u578b\u53ef\u901a\u8fc7ArcGIS Pro\u4e0a\u4f20\u5230Portal\u4e0a\u5e76\u53d1\u5e03\u6210\u4e09\u7ef4\u670d\u52a1\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/5-%E9%97%AD%E6%BA%90%E8%AF%BB%E5%86%99%E5%BA%93/ODA%28dwg%2Cdgn%2Crvt%29/","title":"ODA(dwg\u3001dgn\u3001rvt\u8bfb\u5199\u5e93)","text":"<p>\u5f00\u653e\u8bbe\u8ba1\u8054\u76df\uff08ODA\uff0cOpen Design Alliance\uff09\uff0c\u4e3a\u5f00\u53d1\u5de5\u7a0b\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u9ad8\u7ea7\u5de5\u5177\u5305</p> <ul> <li>\u8be5\u8054\u76df\u7684\u4ea7\u54c1\u7ec4\u5408\u5305\u62ec\u53ef\u5728\u6240\u6709\u5e38\u89c1\u684c\u9762\u3001\u79fb\u52a8\u548c\u7f51\u7edc\u5e73\u53f0\u4e0a\u8fd0 \u884c\u7684\u4e92\u64cd\u4f5c\u6027\u3001\u53ef\u89c6\u5316\u3001\u53d1\u5e03\u548c CAD \u7f16\u8f91\u89e3\u51b3\u65b9\u6848</li> <li>\u5728\u7f8e\u56fd\u6ce8\u518c\u7684\u975e\u8425\u5229\u7ec4\u7ec7\uff08\u4f46\u4e3b\u8981\u5de5\u4f5c\u4eba\u5458\u5728\u4fc4\u7f57\u65af\uff09\uff0c\u5728\u5176\u6210\u5458\u7684\u8d21\u732e\u4e0b\uff0c\u521b\u5efa\u548c\u7ef4\u62a4\u5141\u8bb8 CAD \u7684\u8f6f\u4ef6\u7ec4\u4ef6\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u8bbf\u95ee\u5c01\u95ed\u7684\u884c\u4e1a\u683c\u5f0f\uff0c\u4f8b\u5982.dwg\uff08\u4e3b\u8981\u7684AutoCAD\u6587\u4ef6\u683c\u5f0f\uff09\u3001.dgn\uff08\u4e3b\u8981\u7684MicroStation\u6587\u4ef6\u683c\u5f0f\uff09\u548c .rvt\uff08\u4e3b\u8981\u7684Autodesk Revit\u6587\u4ef6\u683c\u5f0f\uff09\u3002\u8be5\u8054\u76df\u4ece\u4e8b 100% \u5408\u6cd5\uff08\u7531\u7f8e\u56fd\u6cd5\u9662\u652f\u6301\uff09\u7684\u5c01\u95ed\u683c\u5f0f\u9006\u5411\u5de5\u7a0b\uff0c\u6d88\u9664\u4e86\u963b\u788d CAD \u884c\u4e1a\u53d1\u5c55\u7684\u4eba\u4e3a\u969c\u788d\uff0c\u4f7f\u5176\u5c3d\u53ef\u80fd\u5f00\u653e</li> </ul> <p>\u6536\u8d39\u60c5\u51b5\uff1aPricing | Open Design Alliance</p> <ul> <li>SDK\uff1a\u7b2c\u4e00\u5e743000\u7f8e\u91d1\uff0c\u4ee5\u540e\u6bcf\u5e742250\u7f8e\u91d1</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/","title":"Assimp\u6a21\u578b\u8bfb\u5199\u5e93","text":"<p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>\u5b98\u65b9\u6587\u6863</li> <li>\u7528Assimp\u52a0\u8f7d\u6a21\u578b</li> <li>\u4f7f\u7528\u6848\u4f8b-\u5bfc\u5165\u5bfc\u51fa</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/#_1","title":"\u7b80\u4ecb","text":"<p>Assimp\u662f**Open Asset Import Library**\uff08\u5f00\u653e\u7684\u8d44\u4ea7\u5bfc\u5165\u5e93-\uff09\u7684\u7f29\u5199\uff0c\u80fd\u591f\u5bfc\u5165\u5f88\u591a\u79cd\u4e0d\u540c\u7684\u6a21\u578b\u6587\u4ef6\u683c\u5f0f\uff08\u4e5f\u652f\u6301\u5bfc\u51fa\u90e8\u5206\u683c\u5f0f\uff09\uff0c\u5b83\u4f1a\u5c06\u6240\u6709\u7684\u6a21\u578b\u6570\u636e\u52a0\u8f7d\u81f3Assimp\u7684\u901a\u7528\u6570\u636e\u7ed3\u6784\u4e2d\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/#_2","title":"\u652f\u6301\u5bfc\u5165\u7684\u683c\u5f0f","text":"<ul> <li>Autodesk ( .fbx )</li> <li>Collada ( .dae )</li> <li>glTF ( .gltf, .glb )</li> <li>Blender 3D ( .blend )</li> <li>3ds Max 3DS ( .3ds )</li> <li>3ds Max ASE ( .ase )</li> <li>Wavefront Object ( .obj )</li> <li>Industry Foundation Classes (IFC/Step) ( .ifc )</li> <li>XGL ( .xgl,.zgl )</li> <li>Stanford Polygon Library ( .ply )</li> <li>*AutoCAD DXF ( .dxf )</li> <li>LightWave ( .lwo )</li> <li>LightWave Scene ( .lws )</li> <li>Modo ( .lxo )</li> <li>Stereolithography ( .stl )</li> <li>DirectX X ( .x )</li> <li>AC3D ( .ac )</li> <li>Milkshape 3D ( .ms3d )</li> <li> <ul> <li>TrueSpace ( .cob,.scn )</li> </ul> </li> <li>Biovision BVH ( .bvh )</li> <li> <ul> <li>CharacterStudio Motion ( .csm )</li> </ul> </li> <li>Ogre XML ( .xml )</li> <li>Irrlicht Mesh ( .irrmesh )</li> <li> <ul> <li>Irrlicht Scene ( .irr )</li> </ul> </li> <li>Quake I ( .mdl )</li> <li>Quake II ( .md2 )</li> <li>Quake III Mesh ( .md3 )</li> <li>Quake III Map/BSP ( .pk3 )</li> <li> <ul> <li>Return to Castle Wolfenstein ( .mdc )</li> </ul> </li> <li>Doom 3 ( .md5* )</li> <li>*Valve Model ( .smd,.vta )</li> <li>*Open Game Engine Exchange ( .ogex )</li> <li>*Unreal ( .3d )</li> <li>BlitzBasic 3D ( .b3d )</li> <li>Quick3D ( .q3d,.q3s )</li> <li>Neutral File Format ( .nff )</li> <li>Sense8 WorldToolKit ( .nff )</li> <li>Object File Format ( .off )</li> <li>PovRAY Raw ( .raw )</li> <li>Terragen Terrain ( .ter )</li> <li>3D GameStudio (3DGS) ( .mdl )</li> <li>3D GameStudio (3DGS) Terrain ( .hmp )</li> <li>Izware Nendo ( .ndo )</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/#_3","title":"\u652f\u6301\u5bfc\u51fa\u7684\u683c\u5f0f","text":"<pre><code>Assimp::Exporter exporter;\nfor (int i = 0; i &lt; exporter.GetExportFormatCount(); ++i) {\ncout &lt;&lt; \"\u7b2c\" &lt;&lt; i &lt;&lt; \"\u79cd\u683c\u5f0f\uff1a\" &lt;&lt; endl;\nconst aiExportFormatDesc* fmt_desc = exporter.GetExportFormatDescription(i);\ncout &lt;&lt; fmt_desc-&gt;id &lt;&lt; endl;\ncout &lt;&lt; fmt_desc-&gt;fileExtension &lt;&lt; endl;\ncout &lt;&lt; fmt_desc-&gt;description &lt;&lt; endl;\ncout &lt;&lt; endl;\n}\n</code></pre> <ul> <li>Collada ( .dae )</li> <li>Wavefront Object ( .obj )</li> <li>Stereolithography ( .stl )</li> <li>Stanford Polygon Library ( .ply )</li> </ul>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/IO%E8%83%BD%E5%8A%9B%E6%B5%8B%E8%AF%95/","title":"IO\u80fd\u529b\u6d4b\u8bd5","text":"<p>\u867d\u7136\u8bf4\uff0cAssimp\u80fd\u652f\u6301\u8fd9\u4e48\u591a\u683c\u5f0f\uff0c\u4f46\u652f\u6301\u7684\u7c92\u5ea6\u3001\u5b8c\u6574\u5ea6\uff0c\u8fd8\u662f\u8981\u6d4b\u8bd5\u7684\u3002</p> <p>\u6784\u5efa\u5de5\u7a0b\uff1a\u76f4\u63a5\u7528CMake\uff0c\u6784\u5efaVS\u7684\u5de5\u7a0b\u5373\u53ef\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/IO%E8%83%BD%E5%8A%9B%E6%B5%8B%E8%AF%95/#_1","title":"\u6d4b\u8bd5\u65b9\u6cd5","text":"<p>assimp_cmd\u5b50\u9879\u76ee\u63d0\u4f9b\u4e86\u57fa\u7840\u7684\u8bfb\u5199\u793a\u4f8b\uff0c\u901a\u8fc7\u547d\u4ee4\u884c\u8c03\u7528\u5373\u53ef\u8c03\u8bd5</p> <p>\u6d4b\u8bd5\u4f8b\u5b50\uff1a</p> <ol> <li>\u5c06assimp_cmd\u8bbe\u7f6e\u4e3a\u542f\u52a8\u9879</li> <li>\u53f3\u952eassimp_cmd &gt; \u5c5e\u6027 &gt; \u8c03\u8bd5 &gt; \u547d\u4ee4\u53c2\u6570\uff0c\u8f93\u5165<code>info D:\\test\\assimp-5.0.1\\data\\assimp-mdb\\model-db\\Obj\\Wuson\\WusonOBJ.obj</code></li> <li>\u8fd0\u884c\u5373\u53ef\u8c03\u8bd5</li> </ol> <p>\u6d4b\u8bd5\u6570\u636e\uff1a\u5728\u4ee5\u4e0b\u6587\u4ef6\u76ee\u5f55\u4e2d\u6709\u5f88\u591a\u6a21\u578b\u6587\u4ef6</p> <ol> <li>assimp-5.0.1\\data\\assimp-mdb\\model-db</li> <li>assimp-5.0.1\\test\\models</li> </ol> <p>\u53c2\u6570\u8bf4\u660e\uff1a <pre><code>const char* AICMD_MSG_HELP = \"assimp &lt;verb&gt; &lt;parameters&gt;\\n\\n\"\n\" verbs:\\n\"\n\" \\tinfo       - Quick file stats\\n\"\n\" \\tlistext    - List all known file extensions available for import\\n\"\n\" \\tknowext    - Check whether a file extension is recognized by Assimp\\n\"\n#ifndef ASSIMP_BUILD_NO_EXPORT\n\" \\texport     - Export a file to one of the supported output formats\\n\"\n\" \\tlistexport - List all supported export formats\\n\"\n\" \\texportinfo - Show basic information on a specific export format\\n\"\n#endif\n\" \\textract    - Extract embedded texture images\\n\"\n\" \\tdump       - Convert models to a binary or textual dump (ASSBIN/ASSXML)\\n\"\n\" \\tcmpdump    - Compare dumps created using \\'assimp dump &lt;file&gt; -s ...\\'\\n\"\n\" \\tversion    - Display Assimp version\\n\"\n\"\\n Use \\'assimp &lt;verb&gt; --help\\' for detailed help on a command.\\n\"\n;\n</code></pre></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/IO%E8%83%BD%E5%8A%9B%E6%B5%8B%E8%AF%95/#objfbx","title":"\u5bfc\u5165OBJ\uff0c\u8f93\u51fafbx","text":"<pre><code>export D:\\test\\assimp-5.0.1\\data\\assimp-mdb\\model-db\\Obj\\Wuson\\WusonOBJ.obj  --format=FBX\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/IO%E8%83%BD%E5%8A%9B%E6%B5%8B%E8%AF%95/#ifc","title":"IFC\u6d4b\u8bd5","text":"<p>\u5bfc\u5165IFC\uff0c\u8f93\u51fafbx <code>export D:\\test\\assimp-5.0.1\\data\\assimp-mdb\\model-db\\ifc\\1.ifc --format=FBX</code></p> <p>\u62a5\u9519\u4fe1\u606f <pre><code>ERROR: Failed to load file: (entity #25) type error reading literal field - expected argument 8 to IfcSpatialStructureElement to be a `IfcElementCompositionEnum`\n</code></pre></p> <ul> <li>\u53c2\u8003\u6587\u7ae0\uff1ahttps://www.steptools.com/stds/ifc/html/t_ifcelementcompositionenum.html</li> </ul> <p>\u6d4b\u8bd5\u6570\u636e\u4e2d1.ifc\uff0c9.ifc\u6bd4\u8f83\u590d\u6742\uff0c\u90fd\u662f\u4e0a\u9762\u7684\u62a5\u9519\u3002 \u5bf9\u4e8e\u7b80\u5355\u7684wall.ifc\uff0c\u6ca1\u6709 <code>IfcSpatialStructureElement</code>\u6216 <code>IfcElementCompositionEnum</code>\u6784\u4ef6\u7c7b\u7684\uff0c\u5c31\u53ef\u4ee5\u8bfb\u53d6\u6210\u529f</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/IO%E8%83%BD%E5%8A%9B%E6%B5%8B%E8%AF%95/#gltf","title":"gltf\u6d4b\u8bd5","text":"<p>\u521d\u6b65\u6d4b\u8bd5\u8bfb\u5199\u6b63\u5e38</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/%E5%AF%BC%E5%85%A5%E5%8F%82%E6%95%B0/","title":"\u5bfc\u5165\u53c2\u6570","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/%E5%AF%BC%E5%85%A5%E5%8F%82%E6%95%B0/#_1","title":"\u53c2\u6570","text":"<p>assimp\u63d0\u4f9b\u7684\u9009\u9879\u3002\u5177\u4f53\u7684\u7528\u6237\u770b\u5177\u4f53\u53c2\u6570\u7684\u5907\u6ce8</p> <pre><code>    // -ptv \u00a0 \u00a0--pretransform-vertices  \uff1f\n    // -gsn \u00a0 \u00a0--gen-smooth-normals  \u4e3a\u7f51\u683c\u4e2d\u7684\u6240\u6709\u9876\u70b9\u751f\u6210\u5e73\u6ed1\u6cd5\u7ebf\u3002\n    // -gn \u00a0 \u00a0 --gen-normals  \u4e3a\u6240\u6709\u7f51\u683c\u7684\u6240\u6709\u9762\u751f\u6210\u6cd5\u7ebf\u3002\n    // -cts \u00a0 \u00a0--calc-tangent-space  \u81ea\u52a8\u8ba1\u7b97\u5207\u7ebf\u548c\u526f\u6cd5\u7ebf\n    // -jiv \u00a0 \u00a0--join-identical-vertices  \u81ea\u52a8\u5408\u5e76\u76f8\u540c\u7684\u9876\u70b9\n    // -rrm \u00a0 \u00a0--remove-redundant-materials  \u641c\u7d22\u591a\u4f59\u7684/\u6ca1\u6709\u53c2\u8003\u7684\u6750\u6599\u5e76\u5220\u9664\u5b83\u4eec\u3002\n    // -fd \u00a0 \u00a0 --find-degenerates \u8fd9\u4e00\u6b65\u641c\u7d22\u6240\u6709\u7f51\u683c\u7684\u9000\u5316\u539f\u8bed\uff0c\u5e76\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u9002\u5f53\u7684\u7ebf\u6216\u70b9\u3002\n    // -slm \u00a0 \u00a0--split-large-meshes  \u5c06\u5927\u7684\u7f51\u683c\u5206\u5272\u6210\u8f83\u5c0f\u7684\u5b50\u7f51\u683c\u3002\n    // -lbw \u00a0 \u00a0--limit-bone-weights \u5c06\u540c\u65f6\u5f71\u54cd\u5355\u4e2a\u9876\u70b9\u7684\u9aa8\u9abc\u6570\u91cf\u9650\u5236\u4e3a\u6700\u5927\u503c\u3002\n    // -vds \u00a0 \u00a0--validate-data-structure \u9a8c\u8bc1\u5bfc\u5165\u7684\u573a\u666f\u6570\u636e\u7ed3\u6784\u3002\n*\u786e\u4fdd\u6240\u6709\u7d22\u5f15\u6709\u6548\uff0c\u6240\u6709\u52a8\u753b\u548c\n    // -icl \u00a0 \u00a0--improve-cache-locality  \u91cd\u65b0\u6392\u5e8f\u4e09\u89d2\u5f62\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u9876\u70b9\u7f13\u5b58\u5c40\u90e8\u6027\u3002\n    // -sbpt \u00a0 --sort-by-ptype \u5c06\u4e0d\u540c\u56fe\u5143\u653e\u7f6e\u5230\u4e0d\u540c\u7684\u6a21\u578b\u4e2d\u53bb\uff0c\u56fe\u7247\u7c7b\u578b\u53ef\u80fd\u662f\u70b9\u3001\u76f4\u7ebf\u3001\u4e09\u89d2\u5f62\u7b49\n    // -lh \u00a0 \u00a0 --convert-to-lh  \u8f93\u51fa\u6570\u636e\u5339\u914dDirect3D\u7684\u7ea6\u5b9a:\u5de6\u65cb\u51e0\u4f55\uff0cUV\u5750\u6807\u7684\u5de6\u4e0a\u89d2\u539f\u70b9\uff0c\u6700\u540e\u987a\u65f6\u9488\u9762\u987a\u5e8f\uff0c\u9002\u5408CCW\u5254\u9664\u3002\n    // -fuv \u00a0 \u00a0--flip-uv   \u8fd9\u4e00\u6b65\u6cbf\u7740y\u8f74\u7ffb\u8f6c\u6240\u6709\u7684UV\u5750\u6807\uff0c\u5e76\u76f8\u5e94\u5730\u8c03\u6574\u6750\u8d28\u8bbe\u7f6e\u548cbitangents\u3002\n    // -fwo \u00a0 \u00a0--flip-winding-order  \uff1f\u987a\u65f6\u9488\n    // -tuv \u00a0 \u00a0--transform-uv-coords  \uff1f\n    // -guv \u00a0 \u00a0--gen-uvcoords  \uff1f \n\n    // -fid \u00a0 \u00a0--find-invalid-data \u8fd9\u4e00\u6b65\u641c\u7d22\u6240\u6709\u7f51\u683c\u7684\u65e0\u6548\u6570\u636e\uff0c\u5982\u96f6\u6cd5\u5411\u91cf\u6216\u65e0\u6548\u7684UV cocord\uff0c\u5e76\u5220\u9664/\u4fee\u590d\u5b83\u4eec\u3002\u8fd9\u662f\u4e3a\u4e86\u6d88\u9664\u4e00\u4e9b\u5e38\u89c1\u7684\u5bfc\u51fa\u9519\u8bef\u3002\n\n    // -fixn \u00a0 --fix normals  \u8fd9\u4e00\u6b65\u8bd5\u56fe\u786e\u5b9a\u54ea\u4e9b\u7f51\u683c\u7684\u6cd5\u5411\u91cf\u662f\u9762\u5411\u5185\u7684\uff0c\u5e76\u5c06\u5b83\u4eec\u53cd\u8f6c\u3002\n\n    // -tri \u00a0 \u00a0--triangulate\n\n    // -fi \u00a0 \u00a0 --find-instances  \u8fd9\u4e2a\u6b65\u9aa4\u641c\u7d22\u91cd\u590d\u7684\u7f51\u683c\uff0c\u5e76\u7528\u5bf9\u7b2c\u4e00\u4e2a\u7f51\u683c\u7684\u5f15\u7528\u66ff\u6362\u5b83\u4eec\u3002\n\n    // -og \u00a0 \u00a0 --optimize-graph   \uff1f\n\n    // -om \u00a0 \u00a0 --optimize-meshes \u51cf\u5c11\u7f51\u683c\u6570\u91cf\u7684\u540e\u5904\u7406\u6b65\u9aa4\u3002\n\n    // -db \u00a0 \u00a0 --debone\n\n    // -sbc \u00a0 \u00a0--split-by-bone-count\n\n    // -gs \u00a0 \u00a0--global-scale \u8fd9\u4e00\u6b65\u5c06\u6267\u884c\u6a21\u578b\u7684\u5168\u5c40scale\u3002\n\n    //\n\n    // -c&lt;file&gt; --config-file=&lt;file&gt;\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/%E5%AF%BC%E5%85%A5%E5%8F%82%E6%95%B0/#_2","title":"\u9ed8\u8ba4\u53c2\u6570","text":"<pre><code>// use default configurations\nif (!strncmp( param + ofs, \"full\", 4 )) {\nfill.ppFlags |= aiProcessPreset_TargetRealtime_MaxQuality;\n} else if (!strncmp( param + ofs, \"default\", 7 )) {\nfill.ppFlags |= aiProcessPreset_TargetRealtime_Quality;\n} else if (! strncmp( param +ofs,\"fast\",4)) {\nfill.ppFlags |= aiProcessPreset_TargetRealtime_Fast;\n}\n</code></pre>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/%E6%A1%86%E6%9E%B6/","title":"\u6846\u67b6","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/%E6%A1%86%E6%9E%B6/#_1","title":"\u6587\u4ef6\u7ed3\u6784","text":"<p><pre><code>    /code       Source code\n/contrib    Third-party libraries\n/doc        Documentation (doxysource and pre-compiled docs)\n/include    Public header C and C++ header files\n/scripts    Scripts used to generate the loading code for some formats\n/port       Ports to other languages and scripts to maintain those.\n/test       Unit- and regression tests, test suite of models\n/tools      Tools (old assimp viewer, command line `assimp`)\n/samples    A small number of samples to illustrate possible\nuse cases for Assimp\n/data       \u6d4b\u8bd5\u6570\u636e\n</code></pre> \u6e90\u4ee3\u7801\u7ed3\u6784 <pre><code>    code/Common     The base implementation for importers and the infrastructure\ncode/PostProcessing The post-processing steps\ncode/&lt;FormatName&gt;   Implementation for import and export for the format\n</code></pre></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/%E6%A1%86%E6%9E%B6/#_2","title":"\u7c7b\u56fe","text":"<ol> <li>aiScene\uff1a\u573a\u666f\u4e0b\u6240\u6709\u7684Mesh\u3001Material\u90fd\u5b58\u5728scene\u4e2d</li> <li>\u5176\u4ed6\u4e2d\u5b58\u7684\u90fd\u662faiScene\u4e0b\u7684\u7d22\u5f15</li> </ol> <p>\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb</p> <ol> <li>aiScene:aiNode = 1:1</li> <li>aiNode:aiNode = 1:n aiNode\u672c\u8eab\u662f\u6811\u5f62\u7ed3\u6784</li> <li>aiNode:aiMesh = 1:n \u4e00\u4e2anode\u4e2d\u6709\u591a\u4e2amesh</li> <li>aiMesh:aiFace = 1:n \u4e00\u4e2amesh\u4e2d\u6709\u591a\u4e2aFace</li> </ol> <p>Face\u8868\u793a\u6e32\u67d3\u4e2d\u7684\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u5f62\u72b6\u5355\u5143\uff0c\u5373\u56fe\u5143\uff08\u5982\u70b9\u3001\u7ebf\u3001\u4e09\u89d2\u9762\u7247\u3001\u591a\u8fb9\u5f62\u9762\u7247\uff09 Mesh\u8868\u793a\u4e09\u7ef4\u4e2d\u6700\u5c0f\u7684\u5355\u5143</p> <ol> <li>\u53ef\u4ee5\u548cFace\u540c\u7b49\u7ea7\uff0c\u5982\u70b9\u3001\u4e09\u89d2\u5f62\u3001\u5171\u9762\u7684\u591a\u8fb9\u5f62</li> <li>\u53ef\u4ee5\u662fFace\u7684\u96c6\u5408\uff0c\u5982\u591a\u70b9\u3001\u591a\u4e2a\u4e09\u89d2\u5f62\u3001\u591a\u4e2a\u591a\u8fb9\u5f62\uff08\u4e00\u4e2a\u591a\u8fb9\u5f62\u5185\u7684\u70b9\u662f\u5171\u9762\u7684\uff09</li> <li>\u5728\u653e\u5927\uff0c\u4e5f\u53ef\u4ee5\u662f\u56db\u9762\u4f53\u3001\u6b63\u65b9\u4f53\u3001\u5706\u67f1\u7b49\u4e09\u7ef4\u7684\u6700\u5c0f\u5355\u5143</li> </ol> <p>Node\u7c7b\u4f3c\u4e8eModel\uff0c\u8fd9\u4e2a\u6a21\u578b\u800c\u4e14\u53ef\u4ee5\u662f\u5c5e\u6027\u7ed3\u6784\u7684\uff0c\u5982\u6b64\u53ef\u4ee5\u62bd\u8c61\u8868\u793aLOD\u7684\u60c5\u51b5 Scene\u5373\u573a\u666f\u6982\u5ff5\uff0c\u5176\u4e2d\u6709\u56fe\u4e2d\u63d0\u53ca\u7684\u5c5e\u6027\uff0c\u751a\u81f3\u8fd8\u6709\u5149\u7167\u3001\u6444\u50cf\u673a\u7b49</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/%E6%A1%86%E6%9E%B6/#_3","title":"\u6570\u636e\u7ed3\u6784","text":"<p>Assimp\u5bfc\u5165\u6a21\u578b\u7684\u65f6\u5019\uff0c\u5b83\u901a\u5e38\u4f1a\u5c06\u6574\u4e2a\u6a21\u578b\u52a0\u8f7d\u5230\u4e00\u4e2a\u573a\u666f(Scene)\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5305\u542b\u4e86\u5bfc\u5165\u6a21\u578b\u7684\u6240\u6709\u6570\u636e\u3002</p> <p></p> <ol> <li><code>Scene</code>\u573a\u666f\uff1a\u67093\u4e2a\u6210\u5458\uff0c\u5206\u522b\u662f<code>mRootNode</code>\uff08\u573a\u666f\u7684\u6839\u8282\u70b9\uff09\u3001<code>mMeshes</code>\uff08\u573a\u666f\u4e2d\u6240\u6709\u7f51\u683cMesh\uff09\u3001<code>mMaterials</code>\uff08\u573a\u666f\u4e2d\u7684\u6240\u6709\u6750\u8d28\uff09\u3002</li> <li><code>Node</code>\u8282\u70b9\uff1a\u7ed3\u70b9\u6709\u4e24\u4e2a\u5c5e\u6027\u2460<code>mChildren</code>\u6307\u5411\u591a\u4e2a\u81ea\u5df1\uff0c\u8868\u793a\u6b64\u7ed3\u70b9\u4e0b\u8fd8\u6709\u591a\u4e2a\u5b50\u7ed3\u70b9\uff0c\u4e0e\u5b50\u8282\u70b9\u662f\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\uff1b\u2461<code>mMeshes</code>\u6307\u5411\u591a\u4e2aMesh\uff0c\u6307\u51fa\u54ea\u4e9bMesh\u5c5e\u4e8e\u8be5\u7ed3\u70b9\u3002\u5728Scene\u573a\u666f\u4e0b\u6302\u8f7d\u4e86\u4e00\u4e2a\u6839\u8282\u70b9<code>mRootNode</code>\uff0c\u6839\u8282\u70b9\u4e0b\u8fd8\u6709\u5f88\u591a\u4e2a\u7ed3\u70b9\u3002</li> <li><code>Mesh</code>\u7f51\u683c\uff1aMesh\u5305\u542b\u9876\u70b9\u96c6<code>mVertices</code>\u3001\u9876\u70b9\u7684\u6cd5\u5411\u91cf\u96c6<code>mNormals</code>\u3001\u7eb9\u7406\u5750\u6807\u96c6<code>mTextureCoords</code>\uff0c\u9762\u96c6\u5408<code>mFaces</code>\uff0c\u8fd8\u6709\u4e00\u4e2a\u662f\u6750\u8d28\u7d22\u5f15<code>mMaterialIndex</code>\uff0c\u6307\u5411\u6b64\u7f51\u683c\u7684\u6750\u8d28</li> <li><code>Material</code>\u6750\u8d28</li> <li><code>Face</code>\u9762\u3002\u4e00\u4e2aFace\u8868\u793a\u4e00\u4e2a\u7269\u4f53\u7684\u6e32\u67d3\u56fe\u5143\uff08primitive\uff09</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/%E6%A1%86%E6%9E%B6/#_4","title":"\u5176\u4ed6","text":"<p>\u5c5e\u6027\u6302\u5728aiNode\u91cc</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/%E7%BC%96%E8%AF%91/","title":"\u7f16\u8bd1","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/%E7%BC%96%E8%AF%91/#linux","title":"linux\u7f16\u8bd1","text":"<p>\u4ee5ubuntu\u4e3a\u4f8b\u3002</p> <p>\u4e00\u3001\u5b89\u88c5\u7cfb\u7edf\u5e93 <pre><code>sudo apt-get install libassimp-dev\nsudo apt-get install libassipm3\nsudo apt-egt install assimp-utils\n</code></pre></p> <p>\u4e8c\u3001\u7f16\u8bd1 \u627e\u5230release\u7248\u672c\uff1ahttps://github.com/assimp/assimp/releases/tag/v5.1.4 <pre><code>sudo apt-get install cmake\nwget https://github.com/assimp/assimp/archive/refs/tags/v5.1.4.tar.gz\ntar -zxvf v5.1.4.tar.gz\ncd assimp-5.1.4/\nmkdir build\ncd build\ncmake -DCMAKE_INSTALL_PREFIX=/home/cm/codes/Tools/3rdlib_linux/assimp ..\nmake \nsudo make install\n</code></pre></p> <p>\u4f7f\u7528\uff1a <pre><code>g++ *** -lassimp\n</code></pre></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/%E7%BC%96%E8%AF%91/#windows","title":"Windows\u7f16\u8bd1","text":"<ol> <li>\u7528Cmake\u6784\u5efa\u6210VS\u5de5\u7a0b</li> <li>\u7f16\u8bd1\u5373\u53ef</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Assimp%E6%A8%A1%E5%9E%8B%E8%AF%BB%E5%86%99%E5%BA%93/%E7%A4%BA%E4%BE%8B/%E8%AF%BB%E6%A8%A1%E5%9E%8B%E6%96%87%E4%BB%B6/","title":"\u8bfb\u6a21\u578b\u6587\u4ef6","text":"<p>\u7b80\u5355\u8bfb\u53d6obj\u5e76\u6253\u5370\u6240\u6709\u5185\u5bb9\uff1a <pre><code>#include&lt;iostream&gt;\n#include&lt;string&gt;\n#include&lt;vector&gt;\n#include &lt;assimp/Importer.hpp&gt;\n#include &lt;assimp/scene.h&gt;\n#include &lt;assimp/postprocess.h&gt;\nusing namespace std;\nbool processMaterial(aiMaterial* matPtr, const aiScene* sceneObjPtr, const aiTextureType textureType)\n{\nif(!matPtr || !sceneObjPtr)\n{\nreturn false;\n}\nif(matPtr-&gt;GetTextureCount(textureType) &lt;= 0)\n{\n///\u83b7\u5f97\u8be5\u7c7b\u578b\u7684\u6750\u8d28\u4e2a\u6570\nreturn true;\n}\nfor(size_t i = 0; i &lt; matPtr-&gt;GetTextureCount(textureType); ++i)\n{\naiString textPath;\naiReturn retStatus = matPtr-&gt;GetTexture(textureType, i, &amp;textPath);\nif(retStatus != aiReturn_SUCCESS || textPath.length == 0)\n{\nstd::cerr &lt;&lt; \"Warning, load texture type=\" &lt;&lt; textureType\n&lt;&lt; \"index= \" &lt;&lt; i &lt;&lt; \" failed with return value= \"\n&lt;&lt; retStatus &lt;&lt; std::endl;\ncontinue;\n}\ncout &lt;&lt; \"\u6750\u8d28\u8def\u5f84\" &lt;&lt; textPath.C_Str() &lt;&lt; endl;\n}\nreturn true;\n}\nbool processMesh(const aiMesh* meshPtr, const aiScene* sceneObjPtr)\n{\nif(!meshPtr || !sceneObjPtr)\n{\nreturn false;\n}\n// \u4eceMesh\u5f97\u5230\u9876\u70b9\u6570\u636e\u3001\u6cd5\u5411\u91cf\u3001\u7eb9\u7406\u6570\u636e\ncout &lt;&lt; \"===== Mesh: \" &lt;&lt; meshPtr-&gt;mName.C_Str() &lt;&lt; \"=====\" &lt;&lt; endl;\ncout &lt;&lt; \"\u9876\u70b9\u4e2a\u6570\\t\" &lt;&lt; meshPtr-&gt;mNumVertices &lt;&lt; endl;\nfor(size_t i = 0; i&lt;meshPtr-&gt;mNumVertices; ++i)  //\u53ea\u8f93\u51fa5\u4e2a\u8bf4\u660e\u60c5\u51b5\n{\nif(i &gt; 2)\n{\ncout &lt;&lt; \"\\t...\" &lt;&lt; endl;\nbreak;\n}\n// \u83b7\u53d6\u9876\u70b9\u4f4d\u7f6e\nif(meshPtr-&gt;HasPositions())\n{\ncout &lt;&lt; \"\u9876\u70b9\u5750\u6807(\";\ncout &lt;&lt; meshPtr-&gt;mVertices[i].x &lt;&lt; ',';\ncout &lt;&lt; meshPtr-&gt;mVertices[i].y &lt;&lt; ',';\ncout &lt;&lt; meshPtr-&gt;mVertices[i].z &lt;&lt; \")\\t\";\n}\n// \u83b7\u53d6\u7eb9\u7406\u6570\u636e \u76ee\u524d\u53ea\u5904\u74060\u53f7\u7eb9\u7406\nif(meshPtr-&gt;HasTextureCoords(0))\n{\ncout &lt;&lt; \"\u7eb9\u7406\u5750\u6807(\";\ncout &lt;&lt; meshPtr-&gt;mTextureCoords[0][i].x &lt;&lt; ',';\ncout &lt;&lt; meshPtr-&gt;mTextureCoords[0][i].y &lt;&lt; \")\\t\";\n}\nelse\n{\ncout &lt;&lt; \"\u65e0\u7eb9\u7406\u5750\u6807\\t\";\n}\n// \u83b7\u53d6\u6cd5\u5411\u91cf\u6570\u636e\nif(meshPtr-&gt;HasNormals())\n{\ncout &lt;&lt; \"\u6cd5\u5411\u91cf(\";\ncout &lt;&lt; meshPtr-&gt;mNormals[i].x &lt;&lt; ',';\ncout &lt;&lt; meshPtr-&gt;mNormals[i].y &lt;&lt; ',';\ncout &lt;&lt; meshPtr-&gt;mNormals[i].z &lt;&lt; \")\\t\";;\n}\nelse\n{\ncout &lt;&lt; \"\u65e0\u6cd5\u5411\u91cf\\t\";\n}\ncout &lt;&lt; endl;\n}\ncout &lt;&lt; endl;\n// \u83b7\u53d6\u7d22\u5f15\u6570\u636e\ncout &lt;&lt; \"Face\u4e2a\u6570\\t\" &lt;&lt; meshPtr-&gt;mNumFaces &lt;&lt; endl;\nfor(size_t i = 0; i &lt; meshPtr-&gt;mNumFaces; ++i)\n{\nif(i &gt; 2)\n{\ncout &lt;&lt; \"\\t...\" &lt;&lt; endl;\nbreak;\n}\naiFace face = meshPtr-&gt;mFaces[i];\nif(face.mNumIndices != 3)  //\u5728\u5bfc\u5165\u65f6\u8bbe\u7f6e\u4e86aiProcess_Triangulate\u53c2\u6570\n{\n//\u6ca1\u6709\u6b63\u5e38\u4e09\u89d2\u5316\uff0c\u6a21\u578b\u51fa\u9519\uff01\nstd::cerr &lt;&lt; \"Error:Model::processMesh, mesh not transformed to triangle mesh.\" &lt;&lt; std::endl;\nreturn false;\n}\nfor(size_t j = 0; j &lt; face.mNumIndices; ++j)\n{\ncout &lt;&lt; face.mIndices[j] &lt;&lt; '\\t';\n}\ncout &lt;&lt; endl;\n}\ncout &lt;&lt; endl;\n// \u83b7\u53d6\u7eb9\u7406\u6570\u636e\ncout &lt;&lt; \"= Mesh\u7684\u6750\u8d28: \" &lt;&lt; meshPtr-&gt;mName.C_Str() &lt;&lt; \"=====\" &lt;&lt; endl;\nif(meshPtr-&gt;mMaterialIndex &gt;= 0)\n{\naiMaterial* materialPtr = sceneObjPtr-&gt;mMaterials[meshPtr-&gt;mMaterialIndex];\n// \u83b7\u53d6diffuse\u7c7b\u578b\nprocessMaterial(materialPtr, sceneObjPtr, aiTextureType_DIFFUSE);\n// \u83b7\u53d6specular\u7c7b\u578b\nprocessMaterial(materialPtr, sceneObjPtr, aiTextureType_SPECULAR);\n}\nreturn true;\n}\nbool processNode(const aiNode* node, const aiScene* sceneObjPtr)\n{\nif(!node || !sceneObjPtr)\n{\nreturn false;\n}\n// \u81ea\u8eab\u7ed3\u70b9\u7684\u4fe1\u606f\ncout &lt;&lt; \"======= Node: \" &lt;&lt; node-&gt;mName.C_Str() &lt;&lt; \"=======\" &lt;&lt; endl;\ncout &lt;&lt; \"\u8be5\u7ed3\u70b9Mesh\u4e2a\u6570\\t\" &lt;&lt; node-&gt;mNumMeshes &lt;&lt; endl;\ncout &lt;&lt; \"\u8be5\u7ed3\u70b9\u7684\u5b69\u5b50\u4e2a\u6570\uff08\u5373\u8be5\u7ed3\u70b9\u7684aiNode\u7684\u4e2a\u6570\uff09\" &lt;&lt; node-&gt;mNumChildren &lt;&lt; endl;\nfor(size_t i = 0; i&lt;node-&gt;mNumMeshes; ++i)\n{\nif(i &gt; 2)\n{\ncout &lt;&lt; \"\\t...\" &lt;&lt; endl;\nbreak;\n}\nunsigned int meshIndex = node-&gt;mMeshes[i];  ///node\u4e2d\u5b58\u7684\u662fmesh\u7684\u7d22\u5f15\nconst aiMesh* meshPtr = sceneObjPtr-&gt;mMeshes[meshIndex]; ///\u6240\u6709\u7684mesh\u90fd\u5b58\u5728aiScene\u4e2d\uff0c\u6240\u4ee5\u8981\u5728\u5176\u4e2d\u83b7\u53d6\nif(meshPtr)  ///\u5982\u679c\u6709\u8be5mesh\n{\nprocessMesh(meshPtr, sceneObjPtr); //\u5904\u7406\u8be5mesh\n}\n}\ncout &lt;&lt; endl;\n// \u5b69\u5b50\u7ed3\u70b9\u7684\u4fe1\u606f\nfor(size_t i = 0; i &lt; node-&gt;mNumChildren; ++i)\n{\nprocessNode(node-&gt;mChildren[i], sceneObjPtr);\n}\nreturn true;\n}\n/*!\n * \\brief:   printNodeTree  \u6253\u5370aiNode\u7684\u5c42\u7ea7\u5173\u7cfb\uff08\u5148\u6839\u904d\u5386\u6811\uff09\n *\n * \\param:   node           node\u7ed3\u70b9\n * \\param:   sceneObjPtr    aiScene\u573a\u666f\u4fe1\u606f\n * \\param:   level          \u5c42\u7ea7\uff0c\u7b2c\u4e00\u5c42\u4e3a1\n * \\returns: void\n * \\author:  wangqi\n * \\date:    2020/08/26 14:36\n *\n * TODO:\n *\n */\nvoid printNodeTree(const aiNode* node, const aiScene* sceneObjPtr, int level)\n{\nif(!node || !sceneObjPtr)  ///\u904d\u5386\u7ed3\u675f\n{\nreturn;\n}\nif (level == 1) ///\u8868\u5934\n{\ncout &lt;&lt; \"\u5c42\u6570\\tNode\u540d\u79f0\\t\u7236\u4eb2\\tMesh\u4e2a\u6570\\t\u5b69\u5b50\u7ed3\u70b9\u7684\u4e2a\u6570\" &lt;&lt; endl;\n}\n//\u8282\u70b9\u4fe1\u606f\ncout &lt;&lt; level &lt;&lt; '\\t';  ///\u6b64\u8282\u70b9\u7684\u5c42\u7ea7\ncout &lt;&lt; node-&gt;mName.C_Str() &lt;&lt; '\\t'; ///\u6b64\u8282\u70b9\u7684\u540d\u5b57\nstd::string parent_name = node-&gt;mParent == nullptr ? \"\u65e0\" : node-&gt;mParent-&gt;mName.C_Str(); cout &lt;&lt; parent_name &lt;&lt; '\\t'; ///\u7236\u4eb2\u7684\u540d\u79f0 \ncout &lt;&lt; node-&gt;mNumMeshes &lt;&lt; '\\t'; ///\u8282\u70b9\u4e2a\u6570\ncout &lt;&lt; node-&gt;mNumChildren &lt;&lt; endl; ///\u5b69\u5b50\u4e2a\u6570\n// \u5904\u7406\u5b69\u5b50\u7ed3\u70b9\nfor(size_t i = 0; i &lt; node-&gt;mNumChildren; ++i)\n{\nprintNodeTree(node-&gt;mChildren[i], sceneObjPtr, level+1);\n}\n}\nint main()\n{\n// \u52a0\u8f7d\nstring filePath = \"D:/codes/Tools/GLAL/testdata/njnz/F316.obj\";\nAssimp::Importer importer;\nconst aiScene* sceneObjPtr = importer.ReadFile(filePath,\naiProcess_Triangulate | aiProcess_FlipUVs);\nif(!sceneObjPtr\n|| sceneObjPtr-&gt;mFlags == AI_SCENE_FLAGS_INCOMPLETE\n|| !sceneObjPtr-&gt;mRootNode)\n{\nstd::cerr &lt;&lt; \"Error:Model::loadModel, description: \"\n&lt;&lt; importer.GetErrorString() &lt;&lt; std::endl;\nreturn false;\n}\ncout &lt;&lt; \"========== aiScene\u8868\u793a\u4e00\u4e2a\u573a\u666f ==========\" &lt;&lt; endl;\ncout &lt;&lt; \"\u573a\u666f\u540d\u79f0\uff08\u5373\u6587\u4ef6\u540d\uff09\\t\" &lt;&lt; sceneObjPtr-&gt;GetShortFilename(filePath.c_str()) &lt;&lt; endl;\ncout &lt;&lt; \"\u573a\u666f\u4e2dMesh\u7684\u6570\u91cf\\t\" &lt;&lt; sceneObjPtr-&gt;mNumMeshes &lt;&lt; endl;\ncout &lt;&lt; \"\u573a\u666f\u4e2dmaterial\u7684\u6570\u91cf\\t\" &lt;&lt; sceneObjPtr-&gt;mNumMaterials &lt;&lt; endl;\ncout &lt;&lt; \"\u573a\u666f\u4e2dtextures\u7684\u6570\u91cf\\t\" &lt;&lt; sceneObjPtr-&gt;mNumTextures &lt;&lt; endl;\n///\u9664\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u573a\u666f\u4e2d\u8fd8\u6709\u5149\u7167\u3001\u6444\u50cf\u673a\u7b49\ncout &lt;&lt; \"\u6b64\u573a\u666f\u662f\u5426\u6709\u706f\u5149\u6570\u636e\\t\" &lt;&lt; sceneObjPtr-&gt;HasLights() &lt;&lt; endl;\ncout &lt;&lt; \"\u6b64\u573a\u666f\u662f\u5426\u6709\u6444\u50cf\u673a\\t\" &lt;&lt; sceneObjPtr-&gt;HasCameras() &lt;&lt; endl;\ncout &lt;&lt; \"\u6b64\u573a\u666f\u662f\u5426\u6709\u52a8\u753b\\t\" &lt;&lt; sceneObjPtr-&gt;HasAnimations() &lt;&lt; endl;\ncout &lt;&lt; endl &lt;&lt; \"========== aiNode\u5176\u5b9e\u8868\u793a\u4e00\u4e2aModel\uff0caiNode\u672c\u8eab\u662f\u6811\u5f62\u7ed3\u6784\uff08\u5373Model\u4e0e\u5b50Model=1:n\u7684\u5173\u7cfb\uff09 ==========\" &lt;&lt; endl;\ncout &lt;&lt; \"//\u4ee5\u4e0b\u6253\u5370aiNode\u4e4b\u95f4\u7684\u6811\u5f62\u5173\u7cfb\" &lt;&lt; endl;\nprintNodeTree(sceneObjPtr-&gt;mRootNode, sceneObjPtr, 1); //\u8f93\u51faaiNode\u7684\u6811\u5f62\u7ed3\u6784\ncout &lt;&lt; endl &lt;&lt; \"========== \u9012\u5f52\u904d\u5386\u6bcf\u4e2aNode\uff0c\u5e76\u8f93\u51fa\u4fe1\u606f ==========\" &lt;&lt; endl;\nif(!processNode(sceneObjPtr-&gt;mRootNode, sceneObjPtr))\n{\nstd::cerr &lt;&lt; \"Error:Model::loadModel, process node failed.\" &lt;&lt; std::endl;\nreturn false;\n}\nreturn 0;\n}\n</code></pre></p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Draco%E6%A8%A1%E5%9E%8B%E5%8E%8B%E7%BC%A9%E5%BA%93/","title":"Draco\u6a21\u578b\u538b\u7f29\u5e93","text":""},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Draco%E6%A8%A1%E5%9E%8B%E5%8E%8B%E7%BC%A9%E5%BA%93/#_1","title":"\u76f8\u5173\u94fe\u63a5","text":"<ol> <li>google/draco</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Draco%E6%A8%A1%E5%9E%8B%E5%8E%8B%E7%BC%A9%E5%BA%93/#_2","title":"\u7b80\u4ecb","text":"<p>Draco\u662f\u7528\u4e8e\u538b\u7f29\u548c\u89e3\u538b\u7f29 3D\u51e0\u4f55\u7f51\u683c\u548c\u70b9\u4e91 \u7684\u5e93\uff0c\u65e8\u5728\u6539\u55843D\u56fe\u5f62\u7684\u5b58\u50a8\u548c\u4f20\u8f93\uff0c\u5927\u5e45\u52a0\u901f 3D \u6570\u636e\u7684\u7f16\u7801\u3001\u4f20\u8f93\u548c\u89e3\u7801</p> <ul> <li>\u8c37\u6b4cChrome \u56e2\u961f\u57282017\u5e741\u6708\u53d1\u5e03</li> <li>\u5f00\u6e90\u7b97\u6cd5\u7684\u9996\u8981\u5e94\u7528\u5bf9\u8c61\u662f\u6d4f\u89c8\u5668</li> <li>\u8c37\u6b4c\u63d0\u4f9b\u4e86\u5b83\u7684\u4e24\u4e2a\u7248\u672c\uff1a JavaScript \u548c C++</li> </ul> <p>Draco \u53ef\u4ee5\u88ab\u7528\u6765\u538b\u7f29 mesh \u548c\u70b9\u4e91\u6570\u636e\u3002\u5b83\u8fd8\u652f\u6301\u538b\u7f29\u70b9\uff08 compressing points\uff09\uff0c\u8fde\u63a5\u4fe1\u606f\uff0c\u7eb9\u7406\u534f\u8c03\uff0c\u989c\u8272\u4fe1\u606f\uff0c\u6cd5\u7ebf\u4ee5\u53ca\u5176\u4ed6\u4e0e\u51e0\u4f55\u76f8\u5173\u7684\u901a\u7528\u5c5e\u6027\u3002</p>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/3-%E4%B8%89%E7%BB%B4%E6%A0%BC%E5%BC%8F/9-%E5%85%B6%E4%BB%96/Draco%E6%A8%A1%E5%9E%8B%E5%8E%8B%E7%BC%A9%E5%BA%93/#_3","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>Draco\u5e93\u7b80\u6790</li> </ol>"},{"location":"H-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/4-GIS/shapefile%E6%A0%BC%E5%BC%8F/%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/","title":"\u76f8\u5173\u5de5\u5177","text":"<p>json\u8f6cshp\u5728\u7ebf\u7f51\u7ad9\uff1ahttps://mapshaper.org/</p>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/github%E6%89%98%E7%AE%A1%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/","title":"Github\u6258\u7ba1\u9759\u6001\u7f51\u7ad9","text":"","tags":["github","blog"]},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/github%E6%89%98%E7%AE%A1%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/#_1","title":"\u4e2a\u4eba\u535a\u5ba2","text":"<ol> <li>\u521b\u5efa\u4ed3\u5e93\uff0c\u540d\u4e3a<code>&lt;\u7528\u6237\u540d&gt;.github.io</code></li> <li>\u4e0a\u4f20\u535a\u5ba2\u63a8\u9001\u5230\u4e00\u4e2a\u5206\u652f\u4e0a</li> <li>\u5728\u4ed3\u5e93\u7f51\u9875\u4e0a\uff0c\u627e\u5230Settings &gt; Pages &gt; \u6307\u5b9a\u5206\u652f</li> <li>\u7f51\u5740\uff1a<code>&lt;\u7528\u6237\u540d&gt;.github.io</code></li> </ol>","tags":["github","blog"]},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/github%E6%89%98%E7%AE%A1%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/#_2","title":"\u9759\u6001\u7f51\u7ad9","text":"<p>\u4e0d\u4ec5\u80fd\u6258\u7ba1\u535a\u5ba2\uff0c\u5176\u4ed6\u9759\u6001\u7f51\u7ad9\u90fd\u53ef\u4ee5\u3002 \u64cd\u4f5c\u6b65\u9aa4\u76f8\u540c\u3002\u53ea\u4e0d\u8fc7\uff0c\u8bbf\u95ee\u7684\u5730\u5740\u4e0d\u592a\u4e00\u6837\uff1a<code>&lt;\u7528\u6237\u540d&gt;.github.io/&lt;\u4ed3\u5e93\u540d&gt;</code></p>","tags":["github","blog"]},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/","title":"Mkdocs","text":"<p>\u76f8\u5173\u94fe\u63a5\uff1a</p> <ol> <li>mkdocs\u4e2d\u6587\u6587\u6863</li> <li>MkDocs Themes</li> <li>mkdocs\u6e90\u4ee3\u7801</li> </ol> <p>\u53c2\u8003\u6587\u7ae0</p> <ol> <li>Mkdocs \u914d\u7f6e\u548c\u4f7f\u7528 | \u98de\u6c61\u718a\u535a\u5ba2 (xncoding.com)</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/#_1","title":"\u7f16\u5199\u6587\u6863","text":"<ol> <li>\u6587\u6863\u5199\u5728<code>.\\docs</code>\u6587\u4ef6\u5939\u4e0b</li> <li>\u7f16\u5199\u9996\u9875<code>.\\docs\\index.md</code></li> <li>\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\uff0c\u521b\u5efamkdocs\u914d\u7f6e\u6587\u4ef6<code>mkdocs.yml</code></li> <li><code>mkdocs serve</code>\u672c\u5730\u8c03\u8bd5</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/#_2","title":"\u90e8\u7f72","text":""},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/#github","title":"Github","text":"<ol> <li>\u8fd0\u884c<code>mkdocs gh-deploy</code>\u547d\u4ee4\uff0c\u5de5\u5177\u4f1a\u5c06\u76f8\u5e94\u5185\u5bb9\u63a8\u9001\u5230<code>gh-pages</code>\u5206\u652f\u4e0a</li> <li>\u5728Github\u9879\u76ee\u8bbe\u7f6e\u4e2d\uff0c\u5728GitPage\u4e2d\u9009\u62e9<code>gh-pages</code>\u5206\u652f</li> <li>\u901a\u8fc7<code>https://&lt;user-name&gt;.github.io/&lt;project-name&gt;</code>\u8bbf\u95ee</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/#gitee","title":"Gitee","text":"<ol> <li><code>mkdocs build</code>\u751f\u6210\u9759\u6001\u6587\u4ef6\uff0c\u4f4d\u4e8e<code>.\\site</code></li> <li>\u63a8\u9001<code>.\\mkdocs.yml</code>\u3001<code>.\\docs\\*</code>\u3001<code>.\\site\\*</code>\u5230\u4ed3\u5e93\u5f53\u4e2d</li> <li>\u5f00\u542fGiteePages\u670d\u52a1\uff0c\u9009\u62e9\u5bf9\u5e94\u5206\u652f</li> <li>\u901a\u8fc7<code>https://&lt;user-name&gt;.gitee.io/&lt;project-name&gt;</code>\u8bbf\u95ee</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/#gitee_1","title":"Gitee","text":"<p>\u53c2\u8003\u94fe\u63a5\uff1a</p> <ol> <li>\u4f7f\u7528Gitlab Pages\u53d1\u5e03Obsidian\u7b14\u8bb0</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/hook/","title":"mkdocs hook","text":"<p>hook\u94a9\u5b50\uff0c\u53ef\u4ee5\u4e3a\u6211\u4eec\u62e6\u622amkdocs\u7684\u811a\u672c\u4ee3\u7801\uff0c\u5b9e\u73b0\u4e00\u4e9b\u529f\u80fd\u3002</p> <p>\u53c2\u8003\u6587\u6863</p> <ol> <li>hooks - MkDocs</li> <li>mkdocs\u4e8b\u4ef6</li> </ol> <p>\u793a\u4f8b</p> <ol> <li>OI Wiki</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/","title":"Index","text":"<p>Links</p> <ul> <li>mkdocs-material</li> <li>Markdown\u6837\u5f0f</li> </ul> <p>\u5e94\u7528\u6848\u4f8b</p> <ul> <li>https://kitware.github.io/vtk-examples/site/</li> <li>OI Wiki</li> </ul> <p>\u53c2\u8003\u6587\u7ae0</p> <ol> <li>\u9759\u6001\u7f51\u7ad9\u6846\u67b6mkdocs+material\u5b66\u4e60\u7b14\u8bb0 - \u5b09\u620f\u5b9e\u9a8c\u5ba4 (xiiigame.com)</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/#_1","title":"\u63d0\u793a\u6846","text":"<p>\u914d\u7f6e <pre><code>markdown_extensions:\n- admonition\n- pymdownx.details\n- pymdownx.superfences\ntheme:\nicon:\nadmonition:\nnote: octicons/tag-16\nabstract: octicons/checklist-16\ninfo: octicons/info-16\ntip: octicons/squirrel-16\nsuccess: octicons/check-16\nquestion: octicons/question-16\nwarning: octicons/alert-16\nfailure: octicons/x-circle-16\ndanger: octicons/zap-16\nbug: octicons/bug-16\nexample: octicons/beaker-16\nquote: octicons/quote-16\n</code></pre></p> <p>\u793a\u4f8b</p> <p>\u8fd9\u662f note \u7c7b\u578b\u7684\u63d0\u793a\u6846</p> <p>\u63d0\u793a\uff1a\u66f4\u591a\u7cbe\u5f69\u5185\u5bb9\u8bb0\u5f97\u5173\u6ce8\u6211\u554a</p> <pre><code>!!! note \"\u8fd9\u662f note \u7c7b\u578b\u7684\u63d0\u793a\u6846\"\n\u63d0\u793a\uff1a\u66f4\u591a\u7cbe\u5f69\u5185\u5bb9\u8bb0\u5f97\u5173\u6ce8\u6211\u554a\n\n!!! success \"\u8fd9\u662f success \u7c7b\u578b\u7684\u63d0\u793a\u6846\"\n\u6210\u529f\uff01\n\n!!! failure \"\u8fd9\u662f failure \u7c7b\u578b\u7684\u63d0\u793a\u6846\"\n\u5931\u8d25\uff01\n\n!!! bug \"\u8fd9\u662f bug \u7c7b\u578b\u7684\u63d0\u793a\u6846\"\n\u53d1\u73b0\u4e00\u4e2a bug\uff0c\u8bf7\u5c3d\u5feb\u4fee\u590d\uff01\n</code></pre> <p>\u63d0\u793a\u6846\u6298\u53e0\uff1a<code>!!!</code>\u6539\u6210<code>???</code>\u5373\u53ef</p>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/#_2","title":"\u6570\u5b66\u516c\u5f0f","text":"<p>\u53c2\u8003\u6587\u6863\uff1aMathJax - Material for MkDocs (squidfunk.github.io)</p> <p>\u6dfb\u52a0\u4ee3\u7801</p> <ol> <li> <p><code>./docs/javascripts/mathjax.js</code> <pre><code>window.MathJax = {\ntex: {\ninlineMath: [[\"\\\\(\", \"\\\\)\"]],\ndisplayMath: [[\"\\\\[\", \"\\\\]\"]],\nprocessEscapes: true,\nprocessEnvironments: true\n},\noptions: {\nignoreHtmlClass: \".*|\",\nprocessHtmlClass: \"arithmatex\"\n}\n};\ndocument$.subscribe(() =&gt; { MathJax.typesetPromise()\n})\n</code></pre></p> </li> <li> <p><code>./mkdocs.yml</code> <pre><code>markdown_extensions:\n- pymdownx.arithmatex:\ngeneric: true\nextra_javascript:\n- javascripts/mathjax.js\n- https://polyfill.io/v3/polyfill.min.js?features=es6\n- https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\n</code></pre></p> </li> </ol> <p>\u4f7f\u7528</p> <ol> <li>\u5757\uff1a<code>$$...$$</code>\u3001<code>\\[...\\]</code></li> <li>\u884c\uff1a<code>$...$</code>\u3001<code>\\(...\\)</code></li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/#_3","title":"\u793a\u4f8b","text":""},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/#_4","title":"\u666e\u901a\u6587\u6863","text":"<p><code>mkdocs.yml</code></p> <pre><code>site_name: \u5b66\u4e60Cherno\u7684OpenGL\u8bfe\u7a0b\nsite_url: https://geodoer.gitee.com/learn-cherno-open-gl\ntheme:\nname: material\npalette:\nscheme: slate\nlanguage: \"zh\"\nfeatures:\n- navigation.instant  #\u5373\u65f6\u52a0\u8f7d\uff08\u65e0\u9700\u5b8c\u5168\u52a0\u8f7d\u9875\u9762\uff0c\u5373\u53ef\u6253\u5f00\u7f51\u7ad9\uff09\n- navigation.tracking #\u951a\u70b9\u8ddf\u8e2a\n- navigation.footer   #\u4e0a\u4e00\u9875\u3001\u4e0b\u4e00\u9875\n# - navigation.tabs     #\u5c06\u4e00\u7ea7\u76ee\u5f55\u751f\u6210\u9009\u9879\u5361\n- navigation.tabs.sticky  #\u9ecf\u6027\n- navigation.indexes      #\u5b50\u76ee\u5f55\u4e0b\u7684index.md\u4f1a\u5728\u5206\u533a\u9879\u4e2d\u663e\u793a\uff08\u4f7f\u7528title\u4fee\u6539\u6807\u9898\uff0c\u4e0d\u7136\u4f1a\u6807\u9898\u4f1a\u663e\u793a\u6210index\uff09\n- toc.follow              #\u76ee\u5f55\u951a\u70b9\u8ddf\u968f\n- navigation.top          #\u5411\u4e0a\u6eda\u65f6\uff0c\u63d0\u4f9b\"\u56de\u5230\u9876\u90e8\"\u7684\u6309\u94ae\n#\u8c03\u8272\u677f\uff08\u5207\u6362\u4e3b\u9898\uff09\npalette:\n- scheme: default\ntoggle:\nicon: material/brightness-7 name: Switch to dark mode\n- scheme: slate\ntoggle:\nicon: material/brightness-4\nname: Switch to light mode\n#\u63d2\u4ef6\nplugins:\n- tags\n- search\n#md\u6587\u6863\u7684\u6269\u5c55\nmarkdown_extensions:\n- abbr\n- admonition\n- attr_list\n- def_list\n- footnotes\n- md_in_html\n- toc:\npermalink: true\n- pymdownx.arithmatex:\ngeneric: true\n- pymdownx.betterem:\nsmart_enable: all\n- pymdownx.caret\n- pymdownx.details\n- pymdownx.emoji:\nemoji_generator: !!python/name:materialx.emoji.to_svg\nemoji_index: !!python/name:materialx.emoji.twemoji\n- pymdownx.highlight:\nanchor_linenums: true\n- pymdownx.inlinehilite\n- pymdownx.keys\n- pymdownx.magiclink:\nrepo_url_shorthand: true\nuser: squidfunk\nrepo: mkdocs-material\n- pymdownx.mark\n- pymdownx.smartsymbols\n- pymdownx.superfences:\ncustom_fences:\n- name: mermaid\nclass: mermaid\nformat: !!python/name:pymdownx.superfences.fence_code_format\n- pymdownx.tabbed:\nalternate_style: true\n- pymdownx.tasklist:\ncustom_checkbox: true\n- pymdownx.tilde\n</code></pre>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E6%89%A9%E5%B1%95%E4%B8%BB%E9%A2%98/","title":"\u6269\u5c55\u4e3b\u9898","text":"<p>\u5982\u679c\u9700\u8981\u6dfb\u52a0\u3001\u4fee\u6539\u3001\u5220\u9664HTML\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u4e0d\u9700\u8981fork material\u7684\u4ed3\u5e93\uff0cmkdocs\u63d0\u4f9b\u6269\u5c55\u4e3b\u9898\u7684\u529f\u80fd\u3002</p>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E6%89%A9%E5%B1%95%E4%B8%BB%E9%A2%98/#_1","title":"\u521b\u5efa\u6587\u4ef6\u5939","text":"<p>\u5728\u6839\u76ee\u5f55\u4e0a\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>custom_theme</code>\u7684\u6587\u4ef6\u5939\uff0c\u7528\u4e8e\u5b58\u653e\u81ea\u5b9a\u4e49\u7684\u4e3b\u9898\u6587\u4ef6</p> <p>\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e0a\u52a0\u4e0a</p> <pre><code>theme:\nname: material\ncustom_dir: overrides\n</code></pre> <p>\u6b64\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\uff0c\u8981\u4e0e\u4e3b\u9898\u76ee\u5f55\u4e2d\u5b58\u653e\u7684\u8def\u5f84\u4e00\u6837</p> <pre><code>.\n\u251c\u2500 .icons/                             # Bundled icon sets\n\u251c\u2500 assets/\n\u2502  \u251c\u2500 images/                          # Images and icons\n\u2502  \u251c\u2500 javascripts/                     # JavaScript files\n\u2502  \u2514\u2500 stylesheets/                     # Style sheets\n\u251c\u2500 partials/\n\u2502  \u251c\u2500 integrations/                    # Third-party integrations\n\u2502  \u2502  \u251c\u2500 analytics/                    # Analytics integrations\n\u2502  \u2502  \u2514\u2500 analytics.html                # Analytics setup\n\u2502  \u251c\u2500 languages/                       # Translation languages\n\u2502  \u251c\u2500 actions.html                     # Actions\n\u2502  \u251c\u2500 comments.html                    # Comment system (empty by default)\n\u2502  \u251c\u2500 consent.html                     # Consent\n\u2502  \u251c\u2500 content.html                     # Page content\n\u2502  \u251c\u2500 copyright.html                   # Copyright and theme information\n\u2502  \u251c\u2500 feedback.html                    # Was this page helpful?\n\u2502  \u251c\u2500 footer.html                      # Footer bar\n\u2502  \u251c\u2500 header.html                      # Header bar\n\u2502  \u251c\u2500 icons.html                       # Custom icons\n\u2502  \u251c\u2500 language.html                    # Translation setup\n\u2502  \u251c\u2500 logo.html                        # Logo in header and sidebar\n\u2502  \u251c\u2500 nav.html                         # Main navigation\n\u2502  \u251c\u2500 nav-item.html                    # Main navigation item\n\u2502  \u251c\u2500 pagination.html                  # Pagination (used for blog)\n\u2502  \u251c\u2500 post.html                        # Blog post excerpt\n\u2502  \u251c\u2500 search.html                      # Search interface\n\u2502  \u251c\u2500 social.html                      # Social links\n\u2502  \u251c\u2500 source.html                      # Repository information\n\u2502  \u251c\u2500 source-file.html                 # Source file information\n\u2502  \u251c\u2500 tabs.html                        # Tabs navigation\n\u2502  \u251c\u2500 tabs-item.html                   # Tabs navigation item\n\u2502  \u251c\u2500 tags.html                        # Tags\n\u2502  \u251c\u2500 toc.html                         # Table of contents\n\u2502  \u2514\u2500 toc-item.html                    # Table of contents item\n\u251c\u2500 404.html                            # 404 error page\n\u251c\u2500 base.html                           # Base template\n\u251c\u2500 blog.html                           # Blog index page\n\u251c\u2500 blog-archive.html                   # Blog archive index page\n\u251c\u2500 blog-category.html                  # Blog category index page\n\u251c\u2500 blog-post.html                      # Blog post page\n\u2514\u2500 main.html                           # Default page\n</code></pre>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E6%89%A9%E5%B1%95%E4%B8%BB%E9%A2%98/#_2","title":"\u53c2\u8003\u6587\u7ae0","text":"<ol> <li>\u6269\u5c55\u4e3b\u9898</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E7%A4%BA%E4%BE%8B/","title":"\u793a\u4f8b","text":"<p>Links</p> <ul> <li>mkdocs-material</li> <li>Markdown\u6837\u5f0f</li> </ul> <p>\u5e94\u7528\u6848\u4f8b</p> <ul> <li>https://kitware.github.io/vtk-examples/site/</li> </ul>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E7%A4%BA%E4%BE%8B/#_1","title":"\u63d0\u793a\u6846","text":"<p>\u914d\u7f6e <pre><code>markdown_extensions:\n- admonition\n- pymdownx.details\n- pymdownx.superfences\ntheme:\nicon:\nadmonition:\nnote: octicons/tag-16\nabstract: octicons/checklist-16\ninfo: octicons/info-16\ntip: octicons/squirrel-16\nsuccess: octicons/check-16\nquestion: octicons/question-16\nwarning: octicons/alert-16\nfailure: octicons/x-circle-16\ndanger: octicons/zap-16\nbug: octicons/bug-16\nexample: octicons/beaker-16\nquote: octicons/quote-16\n</code></pre></p> <p>\u793a\u4f8b</p> <p>\u8fd9\u662f note \u7c7b\u578b\u7684\u63d0\u793a\u6846</p> <p>\u63d0\u793a\uff1a\u66f4\u591a\u7cbe\u5f69\u5185\u5bb9\u8bb0\u5f97\u5173\u6ce8\u6211\u554a</p> <pre><code>!!! note \"\u8fd9\u662f note \u7c7b\u578b\u7684\u63d0\u793a\u6846\"\n\u63d0\u793a\uff1a\u66f4\u591a\u7cbe\u5f69\u5185\u5bb9\u8bb0\u5f97\u5173\u6ce8\u6211\u554a\n\n!!! success \"\u8fd9\u662f success \u7c7b\u578b\u7684\u63d0\u793a\u6846\"\n\u6210\u529f\uff01\n\n!!! failure \"\u8fd9\u662f failure \u7c7b\u578b\u7684\u63d0\u793a\u6846\"\n\u5931\u8d25\uff01\n\n!!! bug \"\u8fd9\u662f bug \u7c7b\u578b\u7684\u63d0\u793a\u6846\"\n\u53d1\u73b0\u4e00\u4e2a bug\uff0c\u8bf7\u5c3d\u5feb\u4fee\u590d\uff01\n</code></pre> <p>\u63d0\u793a\u6846\u6298\u53e0\uff1a<code>!!!</code>\u6539\u6210<code>???</code>\u5373\u53ef</p>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E7%A4%BA%E4%BE%8B/#_2","title":"\u6570\u5b66\u516c\u5f0f","text":"<p>\u53c2\u8003\u6587\u6863\uff1aMathJax - Material for MkDocs (squidfunk.github.io)</p> <p>\u6dfb\u52a0\u4ee3\u7801</p> <ol> <li> <p><code>./docs/javascripts/mathjax.js</code> <pre><code>window.MathJax = {\ntex: {\ninlineMath: [[\"\\\\(\", \"\\\\)\"]],\ndisplayMath: [[\"\\\\[\", \"\\\\]\"]],\nprocessEscapes: true,\nprocessEnvironments: true\n},\noptions: {\nignoreHtmlClass: \".*|\",\nprocessHtmlClass: \"arithmatex\"\n}\n};\ndocument$.subscribe(() =&gt; { MathJax.typesetPromise()\n})\n</code></pre></p> </li> <li> <p><code>./mkdocs.yml</code> <pre><code>markdown_extensions:\n- pymdownx.arithmatex:\ngeneric: true\nextra_javascript:\n- javascripts/mathjax.js\n- https://polyfill.io/v3/polyfill.min.js?features=es6\n- https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\n</code></pre></p> </li> </ol> <p>\u4f7f\u7528</p> <ol> <li>\u5757\uff1a<code>$$...$$</code>\u3001<code>\\[...\\]</code></li> <li>\u884c\uff1a<code>$...$</code>\u3001<code>\\(...\\)</code></li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E7%A4%BA%E4%BE%8B/#_3","title":"\u793a\u4f8b","text":""},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E7%A4%BA%E4%BE%8B/#_4","title":"\u666e\u901a\u6587\u6863","text":"<p><code>mkdocs.yml</code></p> <pre><code>site_name: \u5b66\u4e60Cherno\u7684OpenGL\u8bfe\u7a0b\nsite_url: https://geodoer.gitee.com/learn-cherno-open-gl\ntheme:\nname: material\npalette:\nscheme: slate\nlanguage: \"zh\"\nfeatures:\n- navigation.instant  #\u5373\u65f6\u52a0\u8f7d\uff08\u65e0\u9700\u5b8c\u5168\u52a0\u8f7d\u9875\u9762\uff0c\u5373\u53ef\u6253\u5f00\u7f51\u7ad9\uff09\n- navigation.tracking #\u951a\u70b9\u8ddf\u8e2a\n- navigation.footer   #\u4e0a\u4e00\u9875\u3001\u4e0b\u4e00\u9875\n# - navigation.tabs     #\u5c06\u4e00\u7ea7\u76ee\u5f55\u751f\u6210\u9009\u9879\u5361\n- navigation.tabs.sticky  #\u9ecf\u6027\n- navigation.indexes      #\u5b50\u76ee\u5f55\u4e0b\u7684index.md\u4f1a\u5728\u5206\u533a\u9879\u4e2d\u663e\u793a\uff08\u4f7f\u7528title\u4fee\u6539\u6807\u9898\uff0c\u4e0d\u7136\u4f1a\u6807\u9898\u4f1a\u663e\u793a\u6210index\uff09\n- toc.follow              #\u76ee\u5f55\u951a\u70b9\u8ddf\u968f\n- navigation.top          #\u5411\u4e0a\u6eda\u65f6\uff0c\u63d0\u4f9b\"\u56de\u5230\u9876\u90e8\"\u7684\u6309\u94ae\n#\u8c03\u8272\u677f\uff08\u5207\u6362\u4e3b\u9898\uff09\npalette:\n- scheme: default\ntoggle:\nicon: material/brightness-7 name: Switch to dark mode\n- scheme: slate\ntoggle:\nicon: material/brightness-4\nname: Switch to light mode\n#\u63d2\u4ef6\nplugins:\n- tags\n- search\n#md\u6587\u6863\u7684\u6269\u5c55\nmarkdown_extensions:\n- abbr\n- admonition\n- attr_list\n- def_list\n- footnotes\n- md_in_html\n- toc:\npermalink: true\n- pymdownx.arithmatex:\ngeneric: true\n- pymdownx.betterem:\nsmart_enable: all\n- pymdownx.caret\n- pymdownx.details\n- pymdownx.emoji:\nemoji_generator: !!python/name:materialx.emoji.to_svg\nemoji_index: !!python/name:materialx.emoji.twemoji\n- pymdownx.highlight:\nanchor_linenums: true\n- pymdownx.inlinehilite\n- pymdownx.keys\n- pymdownx.magiclink:\nrepo_url_shorthand: true\nuser: squidfunk\nrepo: mkdocs-material\n- pymdownx.mark\n- pymdownx.smartsymbols\n- pymdownx.superfences:\ncustom_fences:\n- name: mermaid\nclass: mermaid\nformat: !!python/name:pymdownx.superfences.fence_code_format\n- pymdownx.tabbed:\nalternate_style: true\n- pymdownx.tasklist:\ncustom_checkbox: true\n- pymdownx.tilde\n</code></pre>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/","title":"mkdocs-material\u96c6\u6210\u8bc4\u8bba\u7cfb\u7edf","text":""},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/#giscus","title":"giscus","text":"<p>\u53c2\u8003\u6587\u7ae0</p> <ol> <li>\u6dfb\u52a0\u8bc4\u8bba\u7cfb\u7edf</li> <li>giscus</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/#_1","title":"\u5b89\u88c5","text":"<p>\u8bbf\u95eegiscus\uff0c\u5728\u4f60\u7684Github\u8d26\u6237\u4e2d\u5b89\u88c5\uff0c\u5e76\u6388\u4e88\u6743\u9650</p>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/#_2","title":"\u914d\u7f6e\u5e76\u83b7\u5f97\u4ee3\u7801","text":"<p>\u8bbf\u95eegiscus\u7f51\u7ad9\uff0c\u5e76\u901a\u8fc7\u7f51\u7ad9\u4e0a\u7684\u914d\u7f6e\u5de5\u5177\u751f\u6210\u4ee3\u7801\u6bb5\u3002\u590d\u5236\u6b64\u4ee3\u7801\u6bb5\uff0c\u4e0b\u9762\u7684\u6b65\u9aa4\u8981\u7528</p> <p>\u5982 <pre><code>&lt;script\nsrc=\"https://giscus.app/client.js\"\ndata-repo=\"&lt;username&gt;/&lt;repository&gt;\"\ndata-repo-id=\"...\"\ndata-category=\"...\"\ndata-category-id=\"...\"\ndata-mapping=\"pathname\"\ndata-reactions-enabled=\"1\"\ndata-emit-metadata=\"1\"\ndata-theme=\"light\"\ndata-lang=\"en\"\ncrossorigin=\"anonymous\"\nasync\n&gt;\n&lt;/script&gt;\n</code></pre></p>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/#commentshtml","title":"comments.html\u7684\u5185\u5bb9","text":"<p>\u5c06\u4e0a\u4e00\u6b65\u7684\u4ee3\u7801\u6bb5\u590d\u5236\u5230\u4e0b\u9762\u7684\u6307\u5b9a\u4f4d\u7f6e</p> <pre><code>{% if page.meta.comments %}\n  &lt;h2 id=\"__comments\"&gt;{{ lang.t(\"meta.comments\") }}&lt;/h2&gt;\n&lt;!-- Insert generated snippet here --&gt;\n&lt;!-- \u5728\u8fd9\u91cc\u7c98\u8d34\u521a\u624d\u83b7\u5f97\u4ee3\u7801\u6bb5 --&gt;\n&lt;!-- ... --&gt;\n&lt;!-- Synchronize Giscus theme with palette --&gt;\n&lt;script&gt;\nvar giscus = document.querySelector(\"script[src*=giscus]\")\n/* Set palette on initial load */\nvar palette = __md_get(\"__palette\")\nif (palette &amp;&amp; typeof palette.color === \"object\") {\nvar theme = palette.color.scheme === \"slate\" ? \"dark\" : \"light\"\ngiscus.setAttribute(\"data-theme\", theme) }\n/* Register event handlers after documented loaded */\ndocument.addEventListener(\"DOMContentLoaded\", function() {\nvar ref = document.querySelector(\"[data-md-component=palette]\")\nref.addEventListener(\"change\", function() {\nvar palette = __md_get(\"__palette\")\nif (palette &amp;&amp; typeof palette.color === \"object\") {\nvar theme = palette.color.scheme === \"slate\" ? \"dark\" : \"light\"\n/* Instruct Giscus to change theme */\nvar frame = document.querySelector(\".giscus-frame\")\nframe.contentWindow.postMessage(\n{ giscus: { setConfig: { theme } } },\n\"https://giscus.app\"\n)\n}\n})\n})\n&lt;/script&gt;\n{% endif %}\n</code></pre>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/#commentshtml_1","title":"\u4f7f\u7528\u81ea\u5df1\u7684comments.html","text":"<p>\u5728<code>mkdocs-material</code>\u4e2d\u5df2\u7ecf\u6709\u4e86<code>comments.html</code>\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684<code>comments.html</code>\uff0c\u4ee5\u8986\u76d6\u5b83\u3002\u8fd9\u5176\u5b9e\u662f\u6269\u5c55\u4e3b\u9898\u7684\u5185\u5bb9</p>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/#_3","title":"\u4f7f\u7528\u8bc4\u8bba","text":""},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/#_4","title":"\u4e00\u4e2a\u9875\u9762\u5355\u72ec\u6dfb\u52a0","text":"<p>\u5728\u6bcf\u4e2a\u6587\u6863\u5934\u524d\u6dfb\u52a0<code>comments: true</code> <pre><code>---\ncomments: true\n---\n\n# Document title\n...\n</code></pre></p>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/mkdocs-material/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/#_5","title":"\u6240\u6709\u9875\u9762","text":"<p>\u5728<code>mkdocs.yml</code>\u7684\u63d2\u4ef6\u4e2d\u6dfb\u52a0 <pre><code>plugins:\n  - comments\n</code></pre></p>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/%E5%91%BD%E4%BB%A4/","title":"mkdocs\u547d\u4ee4","text":""},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/%E5%91%BD%E4%BB%A4/#gh_deploy","title":"gh_deploy","text":"<p>\u6e90\u4ee3\u7801\uff1agh_deploy\u547d\u4ee4</p>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/%E7%BD%91%E7%AB%99%E7%BB%9F%E8%AE%A1/","title":"mkdocs\u7f51\u7ad9\u7edf\u8ba1","text":""},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/%E7%BD%91%E7%AB%99%E7%BB%9F%E8%AE%A1/#js","title":"js\u6587\u4ef6","text":"<p>\u5b58\u50a8\u5230<code>assets/js/busuanzi.pure.mini.js</code></p> <pre><code>var bszCaller,bszTag;!function(){var c,d,e,a=!1,b=[];ready=function(c){return a||\"interactive\"===document.readyState||\"complete\"===document.readyState?c.call(document):b.push(function(){return c.call(this)}),this},d=function(){for(var a=0,c=b.length;c&gt;a;a++)b[a].apply(document);b=[]},e=function(){a||(a=!0,d.call(window),document.removeEventListener?document.removeEventListener(\"DOMContentLoaded\",e,!1):document.attachEvent&amp;&amp;(document.detachEvent(\"onreadystatechange\",e),window==window.top&amp;&amp;(clearInterval(c),c=null)))},document.addEventListener?document.addEventListener(\"DOMContentLoaded\",e,!1):document.attachEvent&amp;&amp;(document.attachEvent(\"onreadystatechange\",function(){/loaded|complete/.test(document.readyState)&amp;&amp;e()}),window==window.top&amp;&amp;(c=setInterval(function(){try{a||document.documentElement.doScroll(\"left\")}catch(b){return}e()},5)))}(),bszCaller={fetch:function(a,b){var c=\"BusuanziCallback_\"+Math.floor(1099511627776*Math.random());window[c]=this.evalCall(b),a=a.replace(\"=BusuanziCallback\",\"=\"+c),scriptTag=document.createElement(\"SCRIPT\"),scriptTag.type=\"text/javascript\",scriptTag.defer=!0,scriptTag.src=a,scriptTag.referrerPolicy=\"no-referrer-when-downgrade\",document.getElementsByTagName(\"HEAD\")[0].appendChild(scriptTag)},evalCall:function(a){return function(b){ready(function(){try{a(b),scriptTag.parentElement.removeChild(scriptTag)}catch(c){bszTag.hides()}})}}},bszCaller.fetch(\"//busuanzi.ibruce.info/busuanzi?jsonpCallback=BusuanziCallback\",function(a){bszTag.texts(a),bszTag.shows()}),bszTag={bszs:[\"site_pv\",\"page_pv\",\"site_uv\"],texts:function(a){this.bszs.map(function(b){var c=document.getElementById(\"busuanzi_value_\"+b);c&amp;&amp;(c.innerHTML=a[b])})},hides:function(){this.bszs.map(function(a){var b=document.getElementById(\"busuanzi_container_\"+a);b&amp;&amp;(b.style.display=\"none\")})},shows:function(){this.bszs.map(function(a){var b=document.getElementById(\"busuanzi_container_\"+a);b&amp;&amp;(b.style.display=\"inline\")})}};\n</code></pre>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/mkdocs/%E7%BD%91%E7%AB%99%E7%BB%9F%E8%AE%A1/#_1","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>MkDocs\u5b9e\u73b0\u7f51\u7ad9\u8bbf\u95ee\u7edf\u8ba1</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/obsidian/","title":"obsidian","text":"<p>\u76f8\u5173\u6587\u7ae0</p> <ol> <li>Obsidian-\u63d2\u4ef6\u63a8\u8350</li> <li>Obsidian \u6559\u5b66</li> </ol> <p>\u63a8\u8350\u63d2\u4ef6</p> <ol> <li>https://github.com/joethei/obsidian-plantuml</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/obsidian/#tips","title":"tips","text":"<p>\u590d\u5236\u4e0d\u6362\u884c\uff1actrl+shift+v</p>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/obsidian/obsidian%E5%8F%91%E5%B8%83%E6%88%90%E7%BD%91%E7%AB%99/","title":"Obsidian\u53d1\u5e03\u6210\u7f51\u7ad9","text":""},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/obsidian/obsidian%E5%8F%91%E5%B8%83%E6%88%90%E7%BD%91%E7%AB%99/#obsidian-publish","title":"Obsidian publish","text":"<p>\u5730\u5740\uff1ahttps://obsidian.md/publish</p> <p>\u6536\u8d39\uff1a20$ \u6bcf\u6708\uff0c192$ \u6bcf\u5e74\uff0c7\u5929\u5185\u8f7b\u677e\u9000\u6b3e</p> <p>\u4f18\u70b9\uff1a\u652f\u6301Obsidian\u7684\u8bb8\u591a\u7279\u6027\uff0c\u517c\u5bb9\u826f\u597d</p> <p>\u6548\u679c</p> <p></p>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/obsidian/obsidian%E5%8F%91%E5%B8%83%E6%88%90%E7%BD%91%E7%AB%99/#hexoobsidian","title":"Hexo+Obsidian","text":"<p>\u76f8\u5173\u94fe\u63a5\uff1aHexo + Obsidian + Git \u5b8c\u7f8e\u7684\u535a\u5ba2\u90e8\u7f72\u4e0e\u7f16\u8f91\u65b9\u6848</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u4f7f\u7528hexo-auto-category\u63d2\u4ef6\uff0c\u6839\u636e\u76ee\u5f55\u7ed3\u6784\u751f\u6210categories\u4fe1\u606f</p> <p>\u7f3a\u70b9\uff1a</p> <ol> <li>\u90e8\u7f72\u524d\u5c31\u9700\u8981\u5c06markdown\u751f\u6210html\u6587\u4ef6\uff0c\u518d\u53d1\u5e03\uff0c\u4f1a\u751f\u6210\u4e00\u5806<code>*.html</code>\u6587\u4ef6\uff0c\u6c61\u67d3\u4ed3\u5e93</li> <li>\u867d\u7136\u6709category\u67e5\u770b\u7f51\u9875\uff0c\u4f46\u67e5\u770b\u67d0\u5206\u7c7b\u6587\u7ae0\u65f6\u8fd8\u9700\u8981\u8df3\u8f6c\u65b0\u7684\u9875\u9762\uff0c\u5f88\u4e0d\u65b9\u4fbf\u3002\u5e0c\u671b\u6709\u7c7b\u4f3c\u4e8e\u6587\u4ef6\u6d4f\u89c8\u5668\u7684\u6811\u72b6\u7ed3\u6784\uff0c\u5e76\u4e14\u6587\u7ae0\u4e5f\u5728\u540c\u4e00\u4e2a\u9875\u9762\u4e0a\uff0c\u65e0\u9700\u8df3\u8f6c</li> <li>\u6ca1\u6709Obsidian\u7684\u5176\u4ed6\u7279\u6027\uff0c\u5982\u6587\u6863\u7684\u53cc\u5411\u94fe\u63a5</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/obsidian/obsidian%E5%8F%91%E5%B8%83%E6%88%90%E7%BD%91%E7%AB%99/#docsify","title":"docsify","text":"<p>\u76f8\u5173\u94fe\u63a5\uff1a</p> <ol> <li>docsify\u5b98\u65b9\u6587\u6863</li> <li>\u4f7f\u7528docsify\u751f\u6210\u9879\u76ee\u6587\u6863</li> </ol> <p>\u4f18\u70b9\uff1a\u9002\u5408\u8f7b\u91cf\u7ea7\u6587\u6863</p> <p>\u7f3a\u70b9\uff1a</p> <ol> <li>\u5728\u7f51\u7ad9\u8fd0\u884c\u65f6\u624d\u5c06mardown\u6587\u6863\u6e32\u67d3\uff0c\u5e76\u672a\u50cfhexo\u4e8b\u5148\u8f6c\u6362\u6210HTML\uff0c\u8fd9\u4f1a\u9020\u6210\u767e\u5ea6\u7b49\u641c\u7d22\u5f15\u64ce\u53ea\u4f1a\u6536\u5f55\u9996\u9875\uff0c\u5176\u4ed6\u9875\u9762\u4e00\u4e2a\u90fd\u4e0d\u4f1a\u6536\u5f55</li> <li>docsify\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u8bf4\u660e\u4e66\u7f51\u7ad9\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u4f46\u662f\u6bcf\u4e00\u4e2amd\u6587\u4ef6\u6bcf\u6b21\u90fd\u8981\u81ea\u5df1\u4e0a\u4f20\uff0c\u76ee\u5f55\u4e5f\u8981\u81ea\u5df1\u6539\u5199\uff0c\u5e76\u4e0d\u662f\u5f88\u65b9\u4fbf</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/obsidian/obsidian%E5%8F%91%E5%B8%83%E6%88%90%E7%BD%91%E7%AB%99/#mkdocs","title":"mkdocs","text":"<p>mkdocs\u662f\u5c06markdown\u6587\u6863\u8f6c\u6210</p> <p>\u76f8\u5173\u94fe\u63a5</p> <ol> <li>\u4f7f\u7528Gitlab Pages\u53d1\u5e03Obsidian\u7b14\u8bb0</li> <li>mkdocs\u4e2d\u6587\u6587\u6863</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/obsidian/obsidian%E5%8F%91%E5%B8%83%E6%88%90%E7%BD%91%E7%AB%99/#blot","title":"Blot","text":"<p>Blot\uff1a\u535a\u5ba2\u5e73\u53f0\uff0c\u5c06\u6587\u4ef6\u5939\u8f6c\u6362\u6210\u535a\u5ba2\u3002</p> <p>\u6536\u8d39\uff1a$4\u6bcf\u6708</p> <p>\u76f8\u5173\u94fe\u63a5\uff1aWhy I\u2019m no longer using Obsidian Publish</p>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/obsidian/obsidian%E5%8F%91%E5%B8%83%E6%88%90%E7%BD%91%E7%AB%99/#webpage-html-export","title":"Webpage HTML export\u63d2\u4ef6","text":"<p>\u53c2\u8003\u94fe\u63a5</p> <ol> <li>Obsidian web online\u5c55\u793a\uff0cOB\u79d2\u53d8\u7f51\u9875\u53d1\u5e03\u5668_\u54d4\u54e9\u54d4\u54e9_bilibili</li> <li>\u793a\u4f8b\u5e93\u5728\u7ebf\u5c55\u793a\u5730\u5740: https://cuman.pptest.com.cn/</li> </ol>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E5%BD%95%E5%B1%8F%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/gif/","title":"gif","text":"<p>gifcam</p>"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E7%BC%96%E7%A8%8B%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/vim/%E5%BF%AB%E6%8D%B7%E9%94%AE/","title":"VIM\u5feb\u6377\u952e","text":""},{"location":"Z-%E5%B7%A5%E5%85%B7/%E7%BC%96%E7%A8%8B%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/vim/%E5%BF%AB%E6%8D%B7%E9%94%AE/#_1","title":"\u9009\u4e2d","text":"\u5feb\u6377\u952e \u8bf4\u660e <code>ve</code> <code>v</code>\u53ef\u89c6\u5316\uff1b<code>e</code>\u9009\u4e2d\u4e00\u4e2a\u5355\u8bcd"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E7%BC%96%E7%A8%8B%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/vim/%E5%BF%AB%E6%8D%B7%E9%94%AE/#_2","title":"\u7f16\u8f91","text":"\u5feb\u6377\u952e \u8bf4\u660e <code>shift+v</code>, \u9009\u62e9\u591a\u884c, <code>&gt;</code>\u6216<code>&lt;</code> \u5bf9\u591a\u884c\u8fdb\u884cTable\u7f29\u8fdb \u6309\u4f4f<code>alt</code> +\u4e0a\u4e0b\u5de6\u53f3 \u79fb\u52a8\u9f20\u6807\u6240\u5728\u884c"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E7%BC%96%E7%A8%8B%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/vim/%E5%BF%AB%E6%8D%B7%E9%94%AE/#_3","title":"\u79fb\u52a8","text":"\u5feb\u6377\u952e \u8bf4\u660e \u884c\u5185,\u5355\u8bcd <code>w</code> \u53f3\u79fb\uff0c\u5355\u8bcd\u9996 <code>b</code> \u5de6\u79fb\uff0c\u5355\u8bcd\u9996 <code>e</code> \u53f3\u79fb\uff0c\u5355\u8bcd\u5c3e <code>nw</code> , <code>nb</code> n\u8868\u793a\u6570\u5b57 \u884c\u5185,\u5b57\u7b26 <code>fx</code> \u672c\u884c\uff0c\u4e0b\u4e00\u4e2a<code>x</code>\u5b57\u7b26 \u884c\u5185,\u4e00\u884c <code>0</code> or <code>^</code> \u884c\u9996 <code>$</code> \u884c\u5c3e <code>n$</code> n\u884c\u884c\u5c3e \u8de8\u884c <code>gg</code> \u6587\u4ef6\u5934 <code>G</code> \u6587\u4ef6\u5c3e <code>nG</code> \u7b2cn\u884c <code>:n</code> \u7b2cn\u884c\uff08\u7f16\u8f91\u6a21\u5f0f\uff09 \u5339\u914d\u53f7 <code>%</code> \u627e\u5230\u5f53\u524d\u5b57\u7b26\u7684\u5339\u914d\u53f7\u3002\u5339\u914d\u7b26\u6709<code>[]</code>,<code>{}</code>,<code>()</code> <code>shift</code>+<code>ctrl</code>+\u4e0a\u3001\u4e0b \u8df3\u524d\u3001\u540e\u540c\u540d\u5355\u8bcd"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E7%BC%96%E7%A8%8B%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/vim/%E5%BF%AB%E6%8D%B7%E9%94%AE/#_4","title":"\u63d2\u5165","text":"\u5feb\u6377\u952e \u8bf4\u660e <code>esc</code> &gt; <code>o</code> \u5411\u4e0b\u63d2\u5165\u4e00\u884c <code>esc</code> &gt; <code>i</code> \u5149\u6807\u524d <code>esc</code> &gt; <code>a</code> \u5149\u6807\u540e"},{"location":"Z-%E5%B7%A5%E5%85%B7/%E7%BC%96%E7%A8%8B%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/vim/%E5%BF%AB%E6%8D%B7%E9%94%AE/#_5","title":"\u5220\u9664","text":"\u5feb\u6377\u952e \u8bf4\u660e <code>esc</code> &gt; <code>dd</code> \u5220\u9664\u4e00\u884c <code>esc</code> &gt; <code>5dd</code> \u5220\u9664\u5149\u6807\u4e0b\u97625\u884c <code>esc</code> &gt; <code>3,5d</code> \u5220\u96643\u52305\u884c1. <code>.</code>\u5f53\u524d\u884c2. <code>$</code>\u6700\u540e\u4e00\u884c3. <code>%</code>\u6240\u6709\u884c <code>esc</code> &gt; <code>%d</code> \u5220\u9664\u6240\u6709\u884c"}]}